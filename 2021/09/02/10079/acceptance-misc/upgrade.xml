<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1 (Python 3.6.9 on linux)" generated="20210902 02:42:08.745" rpa="false" schemaversion="2">
<suite id="s1" name="upgrade">
<suite id="s1-s1" name="0.5.0-1.1.0">
<suite id="s1-s1-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s1-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:33:48.220" level="INFO">${random} = 06230</msg>
<status status="PASS" starttime="20210902 02:33:48.219" endtime="20210902 02:33:48.220"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:33:48.223" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-06230 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:33:51.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:33:51.898" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:48.222" endtime="20210902 02:33:51.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:33:51.899" level="INFO"/>
<status status="PASS" starttime="20210902 02:33:51.899" endtime="20210902 02:33:51.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:33:51.900" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:33:51.899" endtime="20210902 02:33:51.900"/>
</kw>
<status status="PASS" starttime="20210902 02:33:48.221" endtime="20210902 02:33:51.900"/>
</kw>
<msg timestamp="20210902 02:33:51.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:33:48.221" endtime="20210902 02:33:51.900"/>
</kw>
<msg timestamp="20210902 02:33:51.901" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:48.220" endtime="20210902 02:33:51.901"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:33:51.901" endtime="20210902 02:33:51.901"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:33:48.219" endtime="20210902 02:33:51.901"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:33:48.178" endtime="20210902 02:33:51.902"/>
</suite>
<suite id="s1-s1-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s1-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:33:35.332" level="INFO">Running command 'ozone sh volume create old-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:33:37.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:33:37.677" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:35.331" endtime="20210902 02:33:37.677"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:33:37.678" level="INFO"/>
<status status="PASS" starttime="20210902 02:33:37.677" endtime="20210902 02:33:37.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:33:37.679" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:33:37.678" endtime="20210902 02:33:37.679"/>
</kw>
<status status="PASS" starttime="20210902 02:33:35.331" endtime="20210902 02:33:37.679"/>
</kw>
<msg timestamp="20210902 02:33:37.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:33:35.330" endtime="20210902 02:33:37.679"/>
</kw>
<msg timestamp="20210902 02:33:37.680" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:35.330" endtime="20210902 02:33:37.680"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:33:37.680" endtime="20210902 02:33:37.680"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:33:37.683" level="INFO">Running command 'ozone sh bucket create /old-volume/old-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:33:39.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:33:39.709" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:37.682" endtime="20210902 02:33:39.709"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:33:39.710" level="INFO"/>
<status status="PASS" starttime="20210902 02:33:39.709" endtime="20210902 02:33:39.710"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:33:39.711" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:33:39.710" endtime="20210902 02:33:39.711"/>
</kw>
<status status="PASS" starttime="20210902 02:33:37.681" endtime="20210902 02:33:39.711"/>
</kw>
<msg timestamp="20210902 02:33:39.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:33:37.681" endtime="20210902 02:33:39.711"/>
</kw>
<msg timestamp="20210902 02:33:39.711" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:37.680" endtime="20210902 02:33:39.712"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:33:39.712" endtime="20210902 02:33:39.712"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:33:39.717" level="INFO">Running command 'ozone sh key put /old-volume/old-bucket/old-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:33:44.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:33:44.600" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:39.715" endtime="20210902 02:33:44.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:33:44.601" level="INFO"/>
<status status="PASS" starttime="20210902 02:33:44.600" endtime="20210902 02:33:44.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:33:44.601" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:33:44.601" endtime="20210902 02:33:44.601"/>
</kw>
<status status="PASS" starttime="20210902 02:33:39.713" endtime="20210902 02:33:44.602"/>
</kw>
<msg timestamp="20210902 02:33:44.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:33:39.713" endtime="20210902 02:33:44.602"/>
</kw>
<msg timestamp="20210902 02:33:44.602" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:33:39.712" endtime="20210902 02:33:44.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:33:44.602" endtime="20210902 02:33:44.603"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:33:35.329" endtime="20210902 02:33:44.603"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210902 02:33:35.287" endtime="20210902 02:33:44.604"/>
</suite>
<suite id="s1-s1-s3" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:35:03.061" level="INFO">Running command 'ozone sh volume create new-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:35:05.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:35:05.609" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:03.058" endtime="20210902 02:35:05.609"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:35:05.610" level="INFO"/>
<status status="PASS" starttime="20210902 02:35:05.610" endtime="20210902 02:35:05.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:35:05.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:35:05.611" endtime="20210902 02:35:05.611"/>
</kw>
<status status="PASS" starttime="20210902 02:35:03.057" endtime="20210902 02:35:05.612"/>
</kw>
<msg timestamp="20210902 02:35:05.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:35:03.057" endtime="20210902 02:35:05.612"/>
</kw>
<msg timestamp="20210902 02:35:05.612" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:03.056" endtime="20210902 02:35:05.612"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:35:05.612" endtime="20210902 02:35:05.613"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:35:05.617" level="INFO">Running command 'ozone sh bucket create /new-volume/new-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:35:07.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:35:07.843" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:05.614" endtime="20210902 02:35:07.843"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:35:07.845" level="INFO"/>
<status status="PASS" starttime="20210902 02:35:07.844" endtime="20210902 02:35:07.845"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:35:07.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:35:07.845" endtime="20210902 02:35:07.845"/>
</kw>
<status status="PASS" starttime="20210902 02:35:05.614" endtime="20210902 02:35:07.846"/>
</kw>
<msg timestamp="20210902 02:35:07.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:35:05.613" endtime="20210902 02:35:07.846"/>
</kw>
<msg timestamp="20210902 02:35:07.846" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:05.613" endtime="20210902 02:35:07.846"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:35:07.846" endtime="20210902 02:35:07.847"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:35:07.851" level="INFO">Running command 'ozone sh key put /new-volume/new-bucket/new-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:35:12.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:35:12.745" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:07.849" endtime="20210902 02:35:12.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:35:12.746" level="INFO"/>
<status status="PASS" starttime="20210902 02:35:12.745" endtime="20210902 02:35:12.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:35:12.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:35:12.747" endtime="20210902 02:35:12.747"/>
</kw>
<status status="PASS" starttime="20210902 02:35:07.848" endtime="20210902 02:35:12.747"/>
</kw>
<msg timestamp="20210902 02:35:12.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:35:07.848" endtime="20210902 02:35:12.748"/>
</kw>
<msg timestamp="20210902 02:35:12.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:07.847" endtime="20210902 02:35:12.748"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:35:12.748" endtime="20210902 02:35:12.748"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:35:03.055" endtime="20210902 02:35:12.749"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210902 02:35:03.003" endtime="20210902 02:35:12.750"/>
</suite>
<suite id="s1-s1-s4" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:35:16.434" level="INFO">${random} = 36269</msg>
<status status="PASS" starttime="20210902 02:35:16.433" endtime="20210902 02:35:16.434"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:35:16.439" level="INFO">Running command 'ozone sh key get /new-volume/new-bucket/new-key /tmp/key-36269 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:35:20.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:35:20.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:16.436" endtime="20210902 02:35:20.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:35:20.510" level="INFO"/>
<status status="PASS" starttime="20210902 02:35:20.510" endtime="20210902 02:35:20.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:35:20.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:35:20.511" endtime="20210902 02:35:20.512"/>
</kw>
<status status="PASS" starttime="20210902 02:35:16.435" endtime="20210902 02:35:20.512"/>
</kw>
<msg timestamp="20210902 02:35:20.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:35:16.435" endtime="20210902 02:35:20.512"/>
</kw>
<msg timestamp="20210902 02:35:20.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:35:16.434" endtime="20210902 02:35:20.512"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:35:20.513" endtime="20210902 02:35:20.513"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:35:16.432" endtime="20210902 02:35:20.513"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:35:16.381" endtime="20210902 02:35:20.515"/>
</suite>
<suite id="s1-s1-s5" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:34:54.616" level="INFO">${random} = 78093</msg>
<status status="PASS" starttime="20210902 02:34:54.616" endtime="20210902 02:34:54.616"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:34:54.622" level="INFO">Running command 'ozone sh key get /old-volume/old-bucket/old-key /tmp/key-78093 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:34:59.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:34:59.261" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:34:54.618" endtime="20210902 02:34:59.261"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:34:59.263" level="INFO"/>
<status status="PASS" starttime="20210902 02:34:59.262" endtime="20210902 02:34:59.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:34:59.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:34:59.263" endtime="20210902 02:34:59.264"/>
</kw>
<status status="PASS" starttime="20210902 02:34:54.618" endtime="20210902 02:34:59.264"/>
</kw>
<msg timestamp="20210902 02:34:59.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:34:54.617" endtime="20210902 02:34:59.264"/>
</kw>
<msg timestamp="20210902 02:34:59.264" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:34:54.617" endtime="20210902 02:34:59.264"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:34:59.265" endtime="20210902 02:34:59.265"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:34:54.615" endtime="20210902 02:34:59.265"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:34:54.562" endtime="20210902 02:34:59.267"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="31627"/>
</suite>
<suite id="s1-s2" name="1.0.0-1.1.0">
<suite id="s1-s2-s1" name="Validate" source="/opt/ozone/smoketest/upgrade/validate.robot">
<test id="s1-s2-s1-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:36:57.378" level="INFO">${random} = 02334</msg>
<status status="PASS" starttime="20210902 02:36:57.378" endtime="20210902 02:36:57.378"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:36:57.381" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-02334 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:37:01.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:37:01.124" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:57.380" endtime="20210902 02:37:01.124"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:37:01.125" level="INFO"/>
<status status="PASS" starttime="20210902 02:37:01.125" endtime="20210902 02:37:01.125"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:37:01.126" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:37:01.125" endtime="20210902 02:37:01.126"/>
</kw>
<status status="PASS" starttime="20210902 02:36:57.379" endtime="20210902 02:37:01.126"/>
</kw>
<msg timestamp="20210902 02:37:01.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:36:57.379" endtime="20210902 02:37:01.126"/>
</kw>
<msg timestamp="20210902 02:37:01.127" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:57.379" endtime="20210902 02:37:01.127"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:37:01.127" endtime="20210902 02:37:01.127"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:36:57.377" endtime="20210902 02:37:01.127"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:36:57.335" endtime="20210902 02:37:01.128"/>
</suite>
<suite id="s1-s2-s2" name="Generate" source="/opt/ozone/smoketest/upgrade/generate.robot">
<test id="s1-s2-s2-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:36:44.298" level="INFO">Running command 'ozone sh volume create old1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:36:46.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:36:46.595" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:44.296" endtime="20210902 02:36:46.595"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:36:46.596" level="INFO"/>
<status status="PASS" starttime="20210902 02:36:46.596" endtime="20210902 02:36:46.596"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:36:46.597" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:36:46.596" endtime="20210902 02:36:46.597"/>
</kw>
<status status="PASS" starttime="20210902 02:36:44.296" endtime="20210902 02:36:46.597"/>
</kw>
<msg timestamp="20210902 02:36:46.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:36:44.296" endtime="20210902 02:36:46.597"/>
</kw>
<msg timestamp="20210902 02:36:46.598" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:44.295" endtime="20210902 02:36:46.598"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:36:46.598" endtime="20210902 02:36:46.598"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:36:46.601" level="INFO">Running command 'ozone sh bucket create /old1-volume/old1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:36:48.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:36:48.758" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:46.600" endtime="20210902 02:36:48.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:36:48.760" level="INFO"/>
<status status="PASS" starttime="20210902 02:36:48.759" endtime="20210902 02:36:48.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:36:48.760" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:36:48.760" endtime="20210902 02:36:48.760"/>
</kw>
<status status="PASS" starttime="20210902 02:36:46.599" endtime="20210902 02:36:48.761"/>
</kw>
<msg timestamp="20210902 02:36:48.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:36:46.599" endtime="20210902 02:36:48.761"/>
</kw>
<msg timestamp="20210902 02:36:48.761" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:46.598" endtime="20210902 02:36:48.761"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:36:48.761" endtime="20210902 02:36:48.761"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:36:48.766" level="INFO">Running command 'ozone sh key put /old1-volume/old1-bucket/old1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:36:53.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:36:53.570" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:48.765" endtime="20210902 02:36:53.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:36:53.571" level="INFO"/>
<status status="PASS" starttime="20210902 02:36:53.570" endtime="20210902 02:36:53.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:36:53.572" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:36:53.571" endtime="20210902 02:36:53.572"/>
</kw>
<status status="PASS" starttime="20210902 02:36:48.762" endtime="20210902 02:36:53.572"/>
</kw>
<msg timestamp="20210902 02:36:53.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:36:48.762" endtime="20210902 02:36:53.572"/>
</kw>
<msg timestamp="20210902 02:36:53.572" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210902 02:36:48.762" endtime="20210902 02:36:53.573"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:36:53.573" endtime="20210902 02:36:53.573"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:36:44.294" endtime="20210902 02:36:53.573"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210902 02:36:44.253" endtime="20210902 02:36:53.574"/>
</suite>
<suite id="s1-s2-s3" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s3-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:23.074" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210902 02:38:23.073" endtime="20210902 02:38:23.074"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:23.075" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:23.074" endtime="20210902 02:38:23.075"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:23.076" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:23.075" endtime="20210902 02:38:23.076"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:23.076" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:23.076" endtime="20210902 02:38:23.076"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:23.078" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:23.078" level="INFO">${version_file_contents} = #Thu Sep 02 02:37:47 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630550246164
clusterID=4808725c-6785-4546-be9a-2675c1188bcf
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210902 02:38:23.077" endtime="20210902 02:38:23.078"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:23.079" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:23.078" endtime="20210902 02:38:23.079"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:23.079" endtime="20210902 02:38:23.079"/>
</kw>
<status status="PASS" starttime="20210902 02:38:23.077" endtime="20210902 02:38:23.079"/>
</kw>
<status status="PASS" starttime="20210902 02:38:23.076" endtime="20210902 02:38:23.079"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:23.073" endtime="20210902 02:38:23.080"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:23.018" endtime="20210902 02:38:23.081"/>
</suite>
<suite id="s1-s2-s4" name="Finalize" source="/opt/hadoop/smoketest/upgrade/finalize.robot">
<test id="s1-s2-s4-t1" name="Finalize SCM">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210902 02:39:17.594" endtime="20210902 02:39:17.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin scm finalizeupgrade</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:39:17.600" level="INFO">Running command 'ozone admin scm finalizeupgrade 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:40:45.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:40:45.959" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210902 02:39:17.597" endtime="20210902 02:40:45.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:40:45.960" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210902 02:40:45.960" endtime="20210902 02:40:45.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:40:45.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:40:45.961" endtime="20210902 02:40:45.962"/>
</kw>
<status status="PASS" starttime="20210902 02:39:17.596" endtime="20210902 02:40:45.962"/>
</kw>
<msg timestamp="20210902 02:40:45.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:39:17.596" endtime="20210902 02:40:45.962"/>
</kw>
<msg timestamp="20210902 02:40:45.963" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed d...</msg>
<status status="PASS" starttime="20210902 02:39:17.595" endtime="20210902 02:40:45.963"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:40:45.963" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
Finalization started.
  Existing pipelines and containers will be closed during Upgrade.
  New pipelines creation will remain frozen until Upgrade is finalized.
No onFinalize work defined for feature: SCM_HA.
Finalization is done.
Finalization is done.
Exiting...
Finalization of Storage Container Manager's metadata upgrade finished.</msg>
<status status="PASS" starttime="20210902 02:40:45.963" endtime="20210902 02:40:45.964"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:39:17.594" endtime="20210902 02:40:45.964"/>
</test>
<test id="s1-s2-s4-t2" name="Finalize OMs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210902 02:40:45.965" endtime="20210902 02:40:45.966"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone admin om finalizeupgrade -id %{OM_SERVICE_ID}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:40:45.971" level="INFO">Running command 'ozone admin om finalizeupgrade -id omservice 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:40:48.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:40:48.728" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210902 02:40:45.968" endtime="20210902 02:40:48.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:40:48.729" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210902 02:40:48.728" endtime="20210902 02:40:48.729"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:40:48.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:40:48.730" endtime="20210902 02:40:48.730"/>
</kw>
<status status="PASS" starttime="20210902 02:40:45.967" endtime="20210902 02:40:48.731"/>
</kw>
<msg timestamp="20210902 02:40:48.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:40:45.967" endtime="20210902 02:40:48.731"/>
</kw>
<msg timestamp="20210902 02:40:48.731" level="INFO">${result} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteExceptio...</msg>
<status status="PASS" starttime="20210902 02:40:45.966" endtime="20210902 02:40:48.731"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${result}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:40:48.732" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.
com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.createNotLeaderException(OzoneManagerRatisUtils.java:421)
	at org.apache.hadoop.ozone.om.ratis.utils.OzoneManagerRatisUtils.checkLeaderStatus(OzoneManagerRatisUtils.java:407)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.checkLeaderStatus(OzoneManagerProtocolServerSideTranslatorPB.java:240)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:135)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:123)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server.processCall(ProtobufRpcEngine.java:466)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:574)
	at org.apache.hadoop.ipc.ProtobufRpcEngine2$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine2.java:552)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1093)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1035)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:963)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1878)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2966)
, while invoking $Proxy20.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
Upgrade has already been finalized.
Exiting...</msg>
<status status="PASS" starttime="20210902 02:40:48.732" endtime="20210902 02:40:48.732"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:40:45.965" endtime="20210902 02:40:48.732"/>
</test>
<doc>Finalize Upgrade of OMs and SCM</doc>
<status status="PASS" starttime="20210902 02:39:17.542" endtime="20210902 02:40:48.735"/>
</suite>
<suite id="s1-s2-s5" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s5-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:40:52.758" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210902 02:40:52.757" endtime="20210902 02:40:52.758"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:40:52.759" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:40:52.758" endtime="20210902 02:40:52.759"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:40:52.759" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:40:52.759" endtime="20210902 02:40:52.759"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:40:52.760" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210902 02:40:52.759" endtime="20210902 02:40:52.760"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:40:52.761" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:40:52.761" level="INFO">${version_file_contents} = #Thu Sep 02 02:39:25 UTC 2021
cTime=1630550160029
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
nodeType=SCM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31f
layoutVersion=2
</msg>
<status status="PASS" starttime="20210902 02:40:52.761" endtime="20210902 02:40:52.761"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:40:52.762" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210902 02:40:52.762" endtime="20210902 02:40:52.762"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:40:52.762" endtime="20210902 02:40:52.763"/>
</kw>
<status status="PASS" starttime="20210902 02:40:52.760" endtime="20210902 02:40:52.763"/>
</kw>
<status status="PASS" starttime="20210902 02:40:52.760" endtime="20210902 02:40:52.763"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:40:52.756" endtime="20210902 02:40:52.763"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:40:52.703" endtime="20210902 02:40:52.764"/>
</suite>
<suite id="s1-s2-s6" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s6-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:40:56.675" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210902 02:40:56.674" endtime="20210902 02:40:56.675"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:40:56.675" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:40:56.675" endtime="20210902 02:40:56.675"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:40:56.676" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:40:56.676" endtime="20210902 02:40:56.676"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:40:56.677" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210902 02:40:56.676" endtime="20210902 02:40:56.677"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:40:56.678" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:40:56.678" level="INFO">${version_file_contents} = #Thu Sep 02 02:39:36 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630550246164
clusterID=4808725c-6785-4546-be9a-2675c1188bcf
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210902 02:40:56.678" endtime="20210902 02:40:56.678"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:40:56.679" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210902 02:40:56.678" endtime="20210902 02:40:56.679"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:40:56.679" endtime="20210902 02:40:56.680"/>
</kw>
<status status="PASS" starttime="20210902 02:40:56.677" endtime="20210902 02:40:56.680"/>
</kw>
<status status="PASS" starttime="20210902 02:40:56.677" endtime="20210902 02:40:56.680"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:40:56.673" endtime="20210902 02:40:56.680"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:40:56.619" endtime="20210902 02:40:56.681"/>
</suite>
<suite id="s1-s2-s7" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s7-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:00.588" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210902 02:41:00.588" endtime="20210902 02:41:00.588"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:00.589" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:41:00.589" endtime="20210902 02:41:00.589"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:41:00.590" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:41:00.589" endtime="20210902 02:41:00.590"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:41:00.590" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210902 02:41:00.590" endtime="20210902 02:41:00.590"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:41:00.592" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:41:00.592" level="INFO">${version_file_contents} = #Thu Sep 02 02:39:36 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630550246660
clusterID=32186fa8-0419-4479-8dbb-6580587c9c01
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210902 02:41:00.591" endtime="20210902 02:41:00.592"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:41:00.593" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210902 02:41:00.592" endtime="20210902 02:41:00.593"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:00.593" endtime="20210902 02:41:00.593"/>
</kw>
<status status="PASS" starttime="20210902 02:41:00.591" endtime="20210902 02:41:00.593"/>
</kw>
<status status="PASS" starttime="20210902 02:41:00.590" endtime="20210902 02:41:00.593"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:00.587" endtime="20210902 02:41:00.594"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:41:00.533" endtime="20210902 02:41:00.594"/>
</suite>
<suite id="s1-s2-s8" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s8-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:04.529" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210902 02:41:04.528" endtime="20210902 02:41:04.529"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:04.529" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:41:04.529" endtime="20210902 02:41:04.529"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:41:04.530" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:41:04.530" endtime="20210902 02:41:04.530"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:41:04.531" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210902 02:41:04.530" endtime="20210902 02:41:04.531"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:41:04.532" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:41:04.532" level="INFO">${version_file_contents} = #Thu Sep 02 02:39:36 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630550245697
clusterID=d6ee6734-6352-4f2c-9071-74a07ebbbaa4
nodeType=DATANODE
layoutVersion=2
</msg>
<status status="PASS" starttime="20210902 02:41:04.531" endtime="20210902 02:41:04.532"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:41:04.533" level="INFO">${version_line} = layoutVersion=2</msg>
<status status="PASS" starttime="20210902 02:41:04.532" endtime="20210902 02:41:04.533"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:04.533" endtime="20210902 02:41:04.534"/>
</kw>
<status status="PASS" starttime="20210902 02:41:04.531" endtime="20210902 02:41:04.534"/>
</kw>
<status status="PASS" starttime="20210902 02:41:04.531" endtime="20210902 02:41:04.534"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:04.527" endtime="20210902 02:41:04.534"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:41:04.475" endtime="20210902 02:41:04.535"/>
</suite>
<suite id="s1-s2-s9" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s9-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:08.463" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210902 02:41:08.462" endtime="20210902 02:41:08.463"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:08.463" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:41:08.463" endtime="20210902 02:41:08.464"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:41:08.464" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:41:08.464" endtime="20210902 02:41:08.464"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:41:08.465" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210902 02:41:08.464" endtime="20210902 02:41:08.465"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:41:08.466" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:41:08.466" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:17 UTC 2021
cTime=1630550160923
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
omUuid=60d5bcde-2ef1-4e2e-adab-8a564fbd58c2
nodeType=OM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31...</msg>
<status status="PASS" starttime="20210902 02:41:08.466" endtime="20210902 02:41:08.466"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:41:08.467" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:41:08.466" endtime="20210902 02:41:08.467"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:08.467" endtime="20210902 02:41:08.468"/>
</kw>
<status status="PASS" starttime="20210902 02:41:08.465" endtime="20210902 02:41:08.468"/>
</kw>
<status status="PASS" starttime="20210902 02:41:08.465" endtime="20210902 02:41:08.468"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:08.461" endtime="20210902 02:41:08.468"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:41:08.406" endtime="20210902 02:41:08.469"/>
</suite>
<suite id="s1-s2-s10" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s10-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:12.339" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210902 02:41:12.338" endtime="20210902 02:41:12.339"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:12.339" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:41:12.339" endtime="20210902 02:41:12.339"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:41:12.340" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:41:12.340" endtime="20210902 02:41:12.340"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:41:12.340" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210902 02:41:12.340" endtime="20210902 02:41:12.341"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:41:12.342" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:41:12.343" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:17 UTC 2021
cTime=1630550160623
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
omUuid=70d91a3b-09f1-4213-89e2-ba80e7a14e80
nodeType=OM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31...</msg>
<status status="PASS" starttime="20210902 02:41:12.342" endtime="20210902 02:41:12.343"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:41:12.343" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:41:12.343" endtime="20210902 02:41:12.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:12.343" endtime="20210902 02:41:12.344"/>
</kw>
<status status="PASS" starttime="20210902 02:41:12.341" endtime="20210902 02:41:12.344"/>
</kw>
<status status="PASS" starttime="20210902 02:41:12.341" endtime="20210902 02:41:12.344"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:12.337" endtime="20210902 02:41:12.344"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:41:12.281" endtime="20210902 02:41:12.346"/>
</suite>
<suite id="s1-s2-s11" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s11-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:16.233" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210902 02:41:16.233" endtime="20210902 02:41:16.234"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:41:16.234" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:41:16.234" endtime="20210902 02:41:16.234"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:41:16.235" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:41:16.234" endtime="20210902 02:41:16.235"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:41:16.235" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210902 02:41:16.235" endtime="20210902 02:41:16.235"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:41:16.237" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:41:16.237" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:16 UTC 2021
cTime=1630550159879
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
omUuid=b4fd1bcc-8921-475a-ba0d-d9dd388443d1
nodeType=OM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31...</msg>
<status status="PASS" starttime="20210902 02:41:16.236" endtime="20210902 02:41:16.237"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:41:16.238" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:41:16.237" endtime="20210902 02:41:16.238"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:16.238" endtime="20210902 02:41:16.238"/>
</kw>
<status status="PASS" starttime="20210902 02:41:16.236" endtime="20210902 02:41:16.239"/>
</kw>
<status status="PASS" starttime="20210902 02:41:16.236" endtime="20210902 02:41:16.239"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:16.232" endtime="20210902 02:41:16.239"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:41:16.172" endtime="20210902 02:41:16.240"/>
</suite>
<suite id="s1-s2-s12" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s12-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:41:20.121" level="INFO">${random} = 19492</msg>
<status status="PASS" starttime="20210902 02:41:20.120" endtime="20210902 02:41:20.121"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:41:20.126" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-19492 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:41:24.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:41:24.583" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:20.123" endtime="20210902 02:41:24.583"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:41:24.585" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:24.584" endtime="20210902 02:41:24.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:41:24.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:41:24.585" endtime="20210902 02:41:24.586"/>
</kw>
<status status="PASS" starttime="20210902 02:41:20.122" endtime="20210902 02:41:24.586"/>
</kw>
<msg timestamp="20210902 02:41:24.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:41:20.122" endtime="20210902 02:41:24.586"/>
</kw>
<msg timestamp="20210902 02:41:24.586" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:20.121" endtime="20210902 02:41:24.586"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:24.587" endtime="20210902 02:41:24.587"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:20.120" endtime="20210902 02:41:24.587"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:41:20.068" endtime="20210902 02:41:24.589"/>
</suite>
<suite id="s1-s2-s13" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s13-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:41:28.424" level="INFO">${random} = 19650</msg>
<status status="PASS" starttime="20210902 02:41:28.424" endtime="20210902 02:41:28.424"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:41:28.430" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-19650 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:41:32.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:41:32.674" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:28.426" endtime="20210902 02:41:32.674"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:41:32.675" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:32.674" endtime="20210902 02:41:32.675"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:41:32.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:41:32.675" endtime="20210902 02:41:32.676"/>
</kw>
<status status="PASS" starttime="20210902 02:41:28.426" endtime="20210902 02:41:32.676"/>
</kw>
<msg timestamp="20210902 02:41:32.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:41:28.425" endtime="20210902 02:41:32.676"/>
</kw>
<msg timestamp="20210902 02:41:32.677" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:28.425" endtime="20210902 02:41:32.677"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:32.677" endtime="20210902 02:41:32.677"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:28.423" endtime="20210902 02:41:32.677"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:41:28.370" endtime="20210902 02:41:32.679"/>
</suite>
<suite id="s1-s2-s14" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s14-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:26.977" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210902 02:38:26.976" endtime="20210902 02:38:26.977"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:26.978" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:26.977" endtime="20210902 02:38:26.978"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:26.978" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:26.978" endtime="20210902 02:38:26.978"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:26.979" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:26.979" endtime="20210902 02:38:26.979"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:26.980" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:26.981" level="INFO">${version_file_contents} = #Thu Sep 02 02:37:47 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630550246660
clusterID=32186fa8-0419-4479-8dbb-6580587c9c01
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210902 02:38:26.980" endtime="20210902 02:38:26.981"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:26.981" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:26.981" endtime="20210902 02:38:26.981"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:26.981" endtime="20210902 02:38:26.982"/>
</kw>
<status status="PASS" starttime="20210902 02:38:26.980" endtime="20210902 02:38:26.982"/>
</kw>
<status status="PASS" starttime="20210902 02:38:26.979" endtime="20210902 02:38:26.982"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:26.976" endtime="20210902 02:38:26.982"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:26.923" endtime="20210902 02:38:26.983"/>
</suite>
<suite id="s1-s2-s15" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s15-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:41:36.538" level="INFO">Running command 'ozone sh volume create new2-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:41:39.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:41:39.097" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:36.534" endtime="20210902 02:41:39.097"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:41:39.098" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:39.098" endtime="20210902 02:41:39.099"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:41:39.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:41:39.099" endtime="20210902 02:41:39.099"/>
</kw>
<status status="PASS" starttime="20210902 02:41:36.533" endtime="20210902 02:41:39.100"/>
</kw>
<msg timestamp="20210902 02:41:39.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:41:36.533" endtime="20210902 02:41:39.100"/>
</kw>
<msg timestamp="20210902 02:41:39.100" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:36.532" endtime="20210902 02:41:39.100"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:39.100" endtime="20210902 02:41:39.101"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:41:39.105" level="INFO">Running command 'ozone sh bucket create /new2-volume/new2-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:41:41.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:41:41.490" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:39.103" endtime="20210902 02:41:41.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:41:41.491" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:41.490" endtime="20210902 02:41:41.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:41:41.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:41:41.491" endtime="20210902 02:41:41.492"/>
</kw>
<status status="PASS" starttime="20210902 02:41:39.102" endtime="20210902 02:41:41.492"/>
</kw>
<msg timestamp="20210902 02:41:41.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:41:39.102" endtime="20210902 02:41:41.492"/>
</kw>
<msg timestamp="20210902 02:41:41.492" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:39.101" endtime="20210902 02:41:41.493"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:41.493" endtime="20210902 02:41:41.493"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:41:41.507" level="INFO">Running command 'ozone sh key put /new2-volume/new2-bucket/new2-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:41:46.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:41:46.312" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:41.495" endtime="20210902 02:41:46.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:41:46.314" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:46.313" endtime="20210902 02:41:46.314"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:41:46.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:41:46.314" endtime="20210902 02:41:46.314"/>
</kw>
<status status="PASS" starttime="20210902 02:41:41.494" endtime="20210902 02:41:46.315"/>
</kw>
<msg timestamp="20210902 02:41:46.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:41:41.494" endtime="20210902 02:41:46.315"/>
</kw>
<msg timestamp="20210902 02:41:46.315" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:41.493" endtime="20210902 02:41:46.315"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:46.316" endtime="20210902 02:41:46.316"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:36.531" endtime="20210902 02:41:46.316"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210902 02:41:36.479" endtime="20210902 02:41:46.317"/>
</suite>
<suite id="s1-s2-s16" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s16-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:41:50.216" level="INFO">${random} = 23436</msg>
<status status="PASS" starttime="20210902 02:41:50.215" endtime="20210902 02:41:50.216"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:41:50.221" level="INFO">Running command 'ozone sh key get /new2-volume/new2-bucket/new2-key /tmp/key-23436 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:41:54.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:41:54.599" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:50.217" endtime="20210902 02:41:54.599"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:41:54.600" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:54.599" endtime="20210902 02:41:54.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:41:54.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:41:54.600" endtime="20210902 02:41:54.601"/>
</kw>
<status status="PASS" starttime="20210902 02:41:50.217" endtime="20210902 02:41:54.601"/>
</kw>
<msg timestamp="20210902 02:41:54.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:41:50.217" endtime="20210902 02:41:54.601"/>
</kw>
<msg timestamp="20210902 02:41:54.601" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:41:50.216" endtime="20210902 02:41:54.601"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:41:54.602" endtime="20210902 02:41:54.602"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:41:50.214" endtime="20210902 02:41:54.602"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:41:50.162" endtime="20210902 02:41:54.605"/>
</suite>
<suite id="s1-s2-s17" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s17-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:30.940" level="INFO">Length is 38</msg>
<status status="PASS" starttime="20210902 02:38:30.939" endtime="20210902 02:38:30.940"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:30.941" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:30.940" endtime="20210902 02:38:30.941"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:30.941" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:30.941" endtime="20210902 02:38:30.941"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:30.942" level="INFO" html="true">File '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;' contains 165 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:30.942" endtime="20210902 02:38:30.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:30.943" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/dnlayoutversion/VERSION"&gt;/data/metadata/dnlayoutversion/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:30.944" level="INFO">${version_file_contents} = #Thu Sep 02 02:37:47 UTC 2021
firstUpgradeActionLayoutVersion=2
cTime=1630550245697
clusterID=d6ee6734-6352-4f2c-9071-74a07ebbbaa4
nodeType=DATANODE
layoutVersion=0
</msg>
<status status="PASS" starttime="20210902 02:38:30.943" endtime="20210902 02:38:30.944"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:30.945" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:30.944" endtime="20210902 02:38:30.945"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:30.945" endtime="20210902 02:38:30.945"/>
</kw>
<status status="PASS" starttime="20210902 02:38:30.943" endtime="20210902 02:38:30.945"/>
</kw>
<status status="PASS" starttime="20210902 02:38:30.942" endtime="20210902 02:38:30.946"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:30.938" endtime="20210902 02:38:30.946"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:30.880" endtime="20210902 02:38:30.947"/>
</suite>
<suite id="s1-s2-s18" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s18-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:34.799" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210902 02:38:34.799" endtime="20210902 02:38:34.799"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:34.800" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:34.799" endtime="20210902 02:38:34.800"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:34.800" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:34.800" endtime="20210902 02:38:34.801"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:34.801" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:34.801" endtime="20210902 02:38:34.801"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:34.802" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:34.803" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:17 UTC 2021
cTime=1630550160923
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
omUuid=60d5bcde-2ef1-4e2e-adab-8a564fbd58c2
nodeType=OM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31...</msg>
<status status="PASS" starttime="20210902 02:38:34.802" endtime="20210902 02:38:34.803"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:34.803" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:34.803" endtime="20210902 02:38:34.803"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:34.803" endtime="20210902 02:38:34.804"/>
</kw>
<status status="PASS" starttime="20210902 02:38:34.802" endtime="20210902 02:38:34.804"/>
</kw>
<status status="PASS" starttime="20210902 02:38:34.801" endtime="20210902 02:38:34.804"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:34.798" endtime="20210902 02:38:34.804"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:34.746" endtime="20210902 02:38:34.805"/>
</suite>
<suite id="s1-s2-s19" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s19-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:38.605" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210902 02:38:38.604" endtime="20210902 02:38:38.605"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:38.605" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:38.605" endtime="20210902 02:38:38.605"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:38.606" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:38.605" endtime="20210902 02:38:38.606"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:38.606" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:38.606" endtime="20210902 02:38:38.606"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:38.608" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:38.608" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:17 UTC 2021
cTime=1630550160623
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
omUuid=70d91a3b-09f1-4213-89e2-ba80e7a14e80
nodeType=OM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31...</msg>
<status status="PASS" starttime="20210902 02:38:38.607" endtime="20210902 02:38:38.608"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:38.609" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:38.608" endtime="20210902 02:38:38.609"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:38.609" endtime="20210902 02:38:38.609"/>
</kw>
<status status="PASS" starttime="20210902 02:38:38.607" endtime="20210902 02:38:38.609"/>
</kw>
<status status="PASS" starttime="20210902 02:38:38.607" endtime="20210902 02:38:38.609"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:38.603" endtime="20210902 02:38:38.610"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:38.551" endtime="20210902 02:38:38.610"/>
</suite>
<suite id="s1-s2-s20" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s20-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:42.504" level="INFO">Length is 33</msg>
<status status="PASS" starttime="20210902 02:38:42.503" endtime="20210902 02:38:42.504"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:42.504" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:42.504" endtime="20210902 02:38:42.504"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:42.505" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:42.505" endtime="20210902 02:38:42.505"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:42.506" level="INFO" html="true">File '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;' contains 218 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:42.505" endtime="20210902 02:38:42.506"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:42.507" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/om/current/VERSION"&gt;/data/metadata/om/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:42.507" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:16 UTC 2021
cTime=1630550159879
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
omUuid=b4fd1bcc-8921-475a-ba0d-d9dd388443d1
nodeType=OM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31...</msg>
<status status="PASS" starttime="20210902 02:38:42.507" endtime="20210902 02:38:42.507"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:42.508" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:42.507" endtime="20210902 02:38:42.508"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:42.508" endtime="20210902 02:38:42.509"/>
</kw>
<status status="PASS" starttime="20210902 02:38:42.506" endtime="20210902 02:38:42.509"/>
</kw>
<status status="PASS" starttime="20210902 02:38:42.506" endtime="20210902 02:38:42.509"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:42.502" endtime="20210902 02:38:42.509"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:42.449" endtime="20210902 02:38:42.510"/>
</suite>
<suite id="s1-s2-s21" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s21-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:38:46.358" level="INFO">${random} = 34829</msg>
<status status="PASS" starttime="20210902 02:38:46.357" endtime="20210902 02:38:46.358"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:38:46.363" level="INFO">Running command 'ozone sh key get /old1-volume/old1-bucket/old1-key /tmp/key-34829 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:38:50.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:38:50.790" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:46.360" endtime="20210902 02:38:50.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:38:50.792" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:50.791" endtime="20210902 02:38:50.792"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:38:50.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:38:50.792" endtime="20210902 02:38:50.793"/>
</kw>
<status status="PASS" starttime="20210902 02:38:46.359" endtime="20210902 02:38:50.793"/>
</kw>
<msg timestamp="20210902 02:38:50.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:38:46.359" endtime="20210902 02:38:50.793"/>
</kw>
<msg timestamp="20210902 02:38:50.794" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:46.358" endtime="20210902 02:38:50.794"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:50.794" endtime="20210902 02:38:50.794"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:46.356" endtime="20210902 02:38:50.794"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:38:46.302" endtime="20210902 02:38:50.796"/>
</suite>
<suite id="s1-s2-s22" name="Generate" source="/opt/hadoop/smoketest/upgrade/generate.robot">
<test id="s1-s2-s22-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh volume create ${PREFIX}-volume</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:38:54.649" level="INFO">Running command 'ozone sh volume create new1-volume 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:38:57.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:38:57.395" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:54.645" endtime="20210902 02:38:57.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:38:57.397" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:57.396" endtime="20210902 02:38:57.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:38:57.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:38:57.397" endtime="20210902 02:38:57.398"/>
</kw>
<status status="PASS" starttime="20210902 02:38:54.645" endtime="20210902 02:38:57.398"/>
</kw>
<msg timestamp="20210902 02:38:57.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:38:54.645" endtime="20210902 02:38:57.399"/>
</kw>
<msg timestamp="20210902 02:38:57.399" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:54.644" endtime="20210902 02:38:57.399"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:57.399" endtime="20210902 02:38:57.399"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh bucket create /${PREFIX}-volume/${PREFIX}-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:38:57.407" level="INFO">Running command 'ozone sh bucket create /new1-volume/new1-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:39:00.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:39:00.058" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:57.403" endtime="20210902 02:39:00.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:39:00.059" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:00.058" endtime="20210902 02:39:00.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:39:00.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:39:00.059" endtime="20210902 02:39:00.060"/>
</kw>
<status status="PASS" starttime="20210902 02:38:57.402" endtime="20210902 02:39:00.060"/>
</kw>
<msg timestamp="20210902 02:39:00.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:38:57.400" endtime="20210902 02:39:00.060"/>
</kw>
<msg timestamp="20210902 02:39:00.060" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:38:57.400" endtime="20210902 02:39:00.060"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:39:00.061" endtime="20210902 02:39:00.061"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key put /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:39:00.065" level="INFO">Running command 'ozone sh key put /new1-volume/new1-bucket/new1-key /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:39:05.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:39:05.670" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:00.063" endtime="20210902 02:39:05.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:39:05.671" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:05.670" endtime="20210902 02:39:05.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:39:05.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:39:05.671" endtime="20210902 02:39:05.672"/>
</kw>
<status status="PASS" starttime="20210902 02:39:00.062" endtime="20210902 02:39:05.672"/>
</kw>
<msg timestamp="20210902 02:39:05.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:39:00.062" endtime="20210902 02:39:05.672"/>
</kw>
<msg timestamp="20210902 02:39:05.673" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:00.061" endtime="20210902 02:39:05.673"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:39:05.673" endtime="20210902 02:39:05.673"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:54.643" endtime="20210902 02:39:05.673"/>
</test>
<doc>Generate data</doc>
<status status="PASS" starttime="20210902 02:38:54.590" endtime="20210902 02:39:05.675"/>
</suite>
<suite id="s1-s2-s23" name="Validate" source="/opt/hadoop/smoketest/upgrade/validate.robot">
<test id="s1-s2-s23-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210902 02:39:09.522" level="INFO">${random} = 22959</msg>
<status status="PASS" starttime="20210902 02:39:09.521" endtime="20210902 02:39:09.522"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>ozone sh key get /${PREFIX}-volume/${PREFIX}-bucket/${PREFIX}-key /tmp/key-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210902 02:39:09.530" level="INFO">Running command 'ozone sh key get /new1-volume/new1-bucket/new1-key /tmp/key-22959 2&gt;&amp;1'.</msg>
<msg timestamp="20210902 02:39:13.788" level="INFO">${rc} = 0</msg>
<msg timestamp="20210902 02:39:13.788" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:09.524" endtime="20210902 02:39:13.788"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210902 02:39:13.790" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:13.789" endtime="20210902 02:39:13.790"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210902 02:39:13.790" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210902 02:39:13.790" endtime="20210902 02:39:13.791"/>
</kw>
<status status="PASS" starttime="20210902 02:39:09.524" endtime="20210902 02:39:13.791"/>
</kw>
<msg timestamp="20210902 02:39:13.791" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210902 02:39:09.523" endtime="20210902 02:39:13.791"/>
</kw>
<msg timestamp="20210902 02:39:13.791" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" starttime="20210902 02:39:09.522" endtime="20210902 02:39:13.791"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:39:13.792" endtime="20210902 02:39:13.792"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:39:09.521" endtime="20210902 02:39:13.792"/>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" starttime="20210902 02:39:09.467" endtime="20210902 02:39:13.794"/>
</suite>
<suite id="s1-s2-s24" name="Check-Mlv" source="/opt/hadoop/smoketest/upgrade/check-mlv.robot">
<test id="s1-s2-s24-t1" name="Check MLV">
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION_FILE}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:19.134" level="INFO">Length is 34</msg>
<status status="PASS" starttime="20210902 02:38:19.133" endtime="20210902 02:38:19.134"/>
</kw>
<kw name="Should Not Be Empty" library="BuiltIn">
<arg>${VERSION}</arg>
<doc>Verifies that the given item is not empty.</doc>
<msg timestamp="20210902 02:38:19.135" level="INFO">Length is 1</msg>
<status status="PASS" starttime="20210902 02:38:19.134" endtime="20210902 02:38:19.135"/>
</kw>
<kw name="File Should Exist" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails unless the given ``path`` points to an existing file.</doc>
<msg timestamp="20210902 02:38:19.135" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' exists.</msg>
<status status="PASS" starttime="20210902 02:38:19.135" endtime="20210902 02:38:19.135"/>
</kw>
<kw name="File Should Not Be Empty" library="OperatingSystem">
<arg>${VERSION_FILE}</arg>
<doc>Fails if the specified directory is empty.</doc>
<msg timestamp="20210902 02:38:19.136" level="INFO" html="true">File '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;' contains 175 bytes.</msg>
<status status="PASS" starttime="20210902 02:38:19.136" endtime="20210902 02:38:19.136"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Check version</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Check version">
<kw name="Get File" library="OperatingSystem">
<var>${version_file_contents}</var>
<arg>${VERSION_FILE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20210902 02:38:19.137" level="INFO" html="true">Getting file '&lt;a href="file:///data/metadata/scm/current/VERSION"&gt;/data/metadata/scm/current/VERSION&lt;/a&gt;'.</msg>
<msg timestamp="20210902 02:38:19.137" level="INFO">${version_file_contents} = #Thu Sep 02 02:36:00 UTC 2021
cTime=1630550160029
clusterID=CID-9d01c916-ad01-4934-b21e-856158244209
nodeType=SCM
scmUuid=8122ba88-6d94-4c4c-8bf4-caeb2c99e31f
layoutVersion=0
</msg>
<status status="PASS" starttime="20210902 02:38:19.137" endtime="20210902 02:38:19.138"/>
</kw>
<kw name="Catenate" library="BuiltIn">
<var>${version_line}</var>
<arg>SEPARATOR=</arg>
<arg>${version_prefix}</arg>
<arg>${VERSION}</arg>
<doc>Catenates the given items together and returns the resulted string.</doc>
<msg timestamp="20210902 02:38:19.138" level="INFO">${version_line} = layoutVersion=0</msg>
<status status="PASS" starttime="20210902 02:38:19.138" endtime="20210902 02:38:19.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${version_file_contents}</arg>
<arg>${version_line}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210902 02:38:19.138" endtime="20210902 02:38:19.139"/>
</kw>
<status status="PASS" starttime="20210902 02:38:19.136" endtime="20210902 02:38:19.139"/>
</kw>
<status status="PASS" starttime="20210902 02:38:19.136" endtime="20210902 02:38:19.139"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210902 02:38:19.133" endtime="20210902 02:38:19.139"/>
</test>
<doc>Check Metadata layout version present in a version file.</doc>
<status status="PASS" starttime="20210902 02:38:19.081" endtime="20210902 02:38:19.140"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="148192"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="179819"/>
</suite>
<statistics>
<total>
<stat pass="30" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="30" fail="0" skip="0" id="s1" name="upgrade">upgrade</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="0.5.0-1.1.0">upgrade.0.5.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s1" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="Generate">upgrade.0.5.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s4" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s5" name="Validate">upgrade.0.5.0-1.1.0.Validate</stat>
<stat pass="25" fail="0" skip="0" id="s1-s2" name="1.0.0-1.1.0">upgrade.1.0.0-1.1.0</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s1" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="Finalize">upgrade.1.0.0-1.1.0.Finalize</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s5" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s6" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s7" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s8" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s9" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s10" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s11" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s12" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s13" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s14" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s15" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s16" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s17" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s18" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s19" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s20" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s21" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s22" name="Generate">upgrade.1.0.0-1.1.0.Generate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s23" name="Validate">upgrade.1.0.0-1.1.0.Validate</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s24" name="Check-Mlv">upgrade.1.0.0-1.1.0.Check-Mlv</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
