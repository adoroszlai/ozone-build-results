<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.1.1 (Python 3.6.9 on linux)" generated="20210918 13:50:33.767" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:54.516" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:54.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:54.519" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:00:54.512" endtime="20210918 13:00:54.519"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:54.520" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:00:54.520" endtime="20210918 13:00:54.520"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:54.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:54.521" endtime="20210918 13:00:54.521"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.511" endtime="20210918 13:00:54.522"/>
</kw>
<msg timestamp="20210918 13:00:54.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:54.511" endtime="20210918 13:00:54.522"/>
</kw>
<msg timestamp="20210918 13:00:54.522" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210918 13:00:54.510" endtime="20210918 13:00:54.523"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:54.528" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:54.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:54.536" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:00:54.526" endtime="20210918 13:00:54.536"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:54.537" level="INFO"/>
<status status="PASS" starttime="20210918 13:00:54.536" endtime="20210918 13:00:54.537"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:54.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:54.537" endtime="20210918 13:00:54.537"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.525" endtime="20210918 13:00:54.538"/>
</kw>
<msg timestamp="20210918 13:00:54.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:54.524" endtime="20210918 13:00:54.538"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.523" endtime="20210918 13:00:54.538"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.523" endtime="20210918 13:00:54.539"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.510" endtime="20210918 13:00:54.539"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.509" endtime="20210918 13:00:54.539"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:54.543" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:54.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:54.691" level="INFO">${output} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210918 13:00:54.540" endtime="20210918 13:00:54.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:54.692" level="INFO">HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 483

HTTP/1.1 200 OK
Date: Sat, 18 Sep 2021 13:00:54 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCm6JwliDvlXjg9N49vhKCNHXOp8GZg8bvNnoIUVqSsLbeyZz0eKmGuwe6gs76hYonAp5YZ+s5RPhvMcHjuKkHCEC5
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1632006054677&amp;s=4K46Otb4imKLJx7u20qdUtZbPMlKdeGHUURsyRlpVcM="; Path=/; HttpOnly
Last-Modified: Sat, 18 Sep 2021 12:45:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210918 13:00:54.691" endtime="20210918 13:00:54.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:54.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:54.692" endtime="20210918 13:00:54.693"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.540" endtime="20210918 13:00:54.693"/>
</kw>
<msg timestamp="20210918 13:00:54.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:54.540" endtime="20210918 13:00:54.693"/>
</kw>
<msg timestamp="20210918 13:00:54.694" level="INFO">${result} = HTTP/1.1 401 Authentication required
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
...</msg>
<status status="PASS" starttime="20210918 13:00:54.539" endtime="20210918 13:00:54.694"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:00:54.694" endtime="20210918 13:00:54.695"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:00:54.508" endtime="20210918 13:00:54.695"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:54.704" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:54.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:54.711" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:00:54.701" endtime="20210918 13:00:54.711"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:54.714" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:00:54.712" endtime="20210918 13:00:54.714"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:54.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:54.714" endtime="20210918 13:00:54.715"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.701" endtime="20210918 13:00:54.716"/>
</kw>
<msg timestamp="20210918 13:00:54.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:54.700" endtime="20210918 13:00:54.716"/>
</kw>
<msg timestamp="20210918 13:00:54.717" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:00:54.700" endtime="20210918 13:00:54.717"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:00:54.720" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:00:54.717" endtime="20210918 13:00:54.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:54.729" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:54.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:54.739" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:00:54.724" endtime="20210918 13:00:54.739"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:54.741" level="INFO"/>
<status status="PASS" starttime="20210918 13:00:54.740" endtime="20210918 13:00:54.741"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:54.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:54.741" endtime="20210918 13:00:54.742"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.723" endtime="20210918 13:00:54.742"/>
</kw>
<msg timestamp="20210918 13:00:54.742" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:54.722" endtime="20210918 13:00:54.742"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.721" endtime="20210918 13:00:54.743"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.720" endtime="20210918 13:00:54.743"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.699" endtime="20210918 13:00:54.743"/>
</kw>
<status status="PASS" starttime="20210918 13:00:54.699" endtime="20210918 13:00:54.743"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:54.748" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:05:54.699" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:00:54.745" endtime="20210918 13:05:54.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:05:54.699" endtime="20210918 13:05:54.699"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:05:54.699" endtime="20210918 13:05:54.700"/>
</kw>
<status status="FAIL" starttime="20210918 13:00:54.744" endtime="20210918 13:05:54.700"/>
</kw>
<msg timestamp="20210918 13:05:54.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:00:54.744" endtime="20210918 13:05:54.700"/>
</kw>
<status status="FAIL" starttime="20210918 13:00:54.743" endtime="20210918 13:05:54.701"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210918 13:05:54.701" endtime="20210918 13:05:54.701"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:05:54.701" endtime="20210918 13:05:54.702"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210918 13:00:54.698" endtime="20210918 13:05:54.702">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210918 13:00:54.477" endtime="20210918 13:05:54.704"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:05:54.720" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:05:57.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:05:57.398" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210918 13:05:54.717" endtime="20210918 13:05:57.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:05:57.399" level="INFO">om</msg>
<status status="PASS" starttime="20210918 13:05:57.398" endtime="20210918 13:05:57.399"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:05:57.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:05:57.399" endtime="20210918 13:05:57.400"/>
</kw>
<status status="PASS" starttime="20210918 13:05:54.716" endtime="20210918 13:05:57.401"/>
</kw>
<msg timestamp="20210918 13:05:57.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:05:54.716" endtime="20210918 13:05:57.401"/>
</kw>
<msg timestamp="20210918 13:05:57.401" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210918 13:05:54.715" endtime="20210918 13:05:57.401"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:05:57.402" endtime="20210918 13:05:57.402"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:05:57.409" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:00.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:00.506" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210918 13:05:57.405" endtime="20210918 13:06:00.506"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:00.511" level="INFO">om</msg>
<status status="PASS" starttime="20210918 13:06:00.507" endtime="20210918 13:06:00.511"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:00.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:00.512" endtime="20210918 13:06:00.513"/>
</kw>
<status status="PASS" starttime="20210918 13:05:57.404" endtime="20210918 13:06:00.513"/>
</kw>
<msg timestamp="20210918 13:06:00.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:05:57.404" endtime="20210918 13:06:00.514"/>
</kw>
<msg timestamp="20210918 13:06:00.515" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210918 13:05:57.403" endtime="20210918 13:06:00.515"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:00.515" endtime="20210918 13:06:00.516"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:05:54.713" endtime="20210918 13:06:00.516"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:00.532" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:02.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:02.619" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:06:00.525" endtime="20210918 13:06:02.619"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:02.620" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:06:02.619" endtime="20210918 13:06:02.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:02.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:02.620" endtime="20210918 13:06:02.621"/>
</kw>
<status status="PASS" starttime="20210918 13:06:00.524" endtime="20210918 13:06:02.621"/>
</kw>
<msg timestamp="20210918 13:06:02.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:00.524" endtime="20210918 13:06:02.622"/>
</kw>
<msg timestamp="20210918 13:06:02.622" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210918 13:06:00.523" endtime="20210918 13:06:02.622"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:02.623" endtime="20210918 13:06:02.623"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:02.635" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:04.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:04.602" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:06:02.625" endtime="20210918 13:06:04.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:04.603" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:06:04.603" endtime="20210918 13:06:04.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:04.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:04.604" endtime="20210918 13:06:04.604"/>
</kw>
<status status="PASS" starttime="20210918 13:06:02.624" endtime="20210918 13:06:04.604"/>
</kw>
<msg timestamp="20210918 13:06:04.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:02.624" endtime="20210918 13:06:04.605"/>
</kw>
<msg timestamp="20210918 13:06:04.605" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210918 13:06:02.623" endtime="20210918 13:06:04.605"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:04.605" endtime="20210918 13:06:04.606"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:06:00.522" endtime="20210918 13:06:04.606"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:04.614" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:07.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:07.806" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210918 13:06:04.611" endtime="20210918 13:06:07.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:07.808" level="INFO">om</msg>
<status status="PASS" starttime="20210918 13:06:07.807" endtime="20210918 13:06:07.808"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:07.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:07.808" endtime="20210918 13:06:07.809"/>
</kw>
<status status="PASS" starttime="20210918 13:06:04.611" endtime="20210918 13:06:07.809"/>
</kw>
<msg timestamp="20210918 13:06:07.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:04.610" endtime="20210918 13:06:07.809"/>
</kw>
<msg timestamp="20210918 13:06:07.810" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210918 13:06:04.609" endtime="20210918 13:06:07.810"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:07.810" endtime="20210918 13:06:07.810"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:07.811" endtime="20210918 13:06:07.811"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:07.815" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:09.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:09.488" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210918 13:06:07.813" endtime="20210918 13:06:09.488"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:09.489" level="INFO">om</msg>
<status status="PASS" starttime="20210918 13:06:09.488" endtime="20210918 13:06:09.490"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:09.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:09.490" endtime="20210918 13:06:09.491"/>
</kw>
<status status="PASS" starttime="20210918 13:06:07.812" endtime="20210918 13:06:09.491"/>
</kw>
<msg timestamp="20210918 13:06:09.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:07.812" endtime="20210918 13:06:09.491"/>
</kw>
<msg timestamp="20210918 13:06:09.491" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210918 13:06:07.811" endtime="20210918 13:06:09.492"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:09.492" endtime="20210918 13:06:09.492"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:09.492" endtime="20210918 13:06:09.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:06:04.608" endtime="20210918 13:06:09.493"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:09.498" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:11.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:06:11.769" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210918 13:06:09.496" endtime="20210918 13:06:11.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:11.770" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210918 13:06:11.770" endtime="20210918 13:06:11.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:11.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:11.771" endtime="20210918 13:06:11.771"/>
</kw>
<msg timestamp="20210918 13:06:11.772" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210918 13:06:09.496" endtime="20210918 13:06:11.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:11.772" endtime="20210918 13:06:11.772"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:11.776" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:14.519" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:06:14.520" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210918 13:06:11.773" endtime="20210918 13:06:14.520"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:14.522" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210918 13:06:14.521" endtime="20210918 13:06:14.522"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:14.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:14.522" endtime="20210918 13:06:14.523"/>
</kw>
<msg timestamp="20210918 13:06:14.523" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210918 13:06:11.773" endtime="20210918 13:06:14.523"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:06:14.524" endtime="20210918 13:06:14.524"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:06:09.495" endtime="20210918 13:06:14.524"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210918 13:05:54.707" endtime="20210918 13:06:14.526"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210918 13:06:14.548" level="INFO">${random} = 97941</msg>
<status status="PASS" starttime="20210918 13:06:14.547" endtime="20210918 13:06:14.548"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:06:14.550" level="INFO">${source} = 97941-source</msg>
<status status="PASS" starttime="20210918 13:06:14.548" endtime="20210918 13:06:14.550"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:06:14.552" level="INFO">${target} = 97941-target</msg>
<status status="PASS" starttime="20210918 13:06:14.551" endtime="20210918 13:06:14.552"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:14.555" level="INFO">Running command 'ozone sh volume create 97941-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:22.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:22.244" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:06:14.553" endtime="20210918 13:06:22.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:22.245" level="INFO"/>
<status status="PASS" starttime="20210918 13:06:22.245" endtime="20210918 13:06:22.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:22.246" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:22.246" endtime="20210918 13:06:22.246"/>
</kw>
<status status="PASS" starttime="20210918 13:06:14.553" endtime="20210918 13:06:22.247"/>
</kw>
<msg timestamp="20210918 13:06:22.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:14.553" endtime="20210918 13:06:22.247"/>
</kw>
<status status="PASS" starttime="20210918 13:06:14.552" endtime="20210918 13:06:22.248"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:22.252" level="INFO">Running command 'ozone sh volume create 97941-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:30.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:30.083" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:06:22.249" endtime="20210918 13:06:30.083"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:30.085" level="INFO"/>
<status status="PASS" starttime="20210918 13:06:30.084" endtime="20210918 13:06:30.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:30.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:30.085" endtime="20210918 13:06:30.086"/>
</kw>
<status status="PASS" starttime="20210918 13:06:22.249" endtime="20210918 13:06:30.087"/>
</kw>
<msg timestamp="20210918 13:06:30.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:22.248" endtime="20210918 13:06:30.087"/>
</kw>
<status status="PASS" starttime="20210918 13:06:22.248" endtime="20210918 13:06:30.088"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:30.096" level="INFO">Running command 'ozone sh bucket create 97941-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:06:38.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:06:38.189" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:06:30.094" endtime="20210918 13:06:38.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:06:38.191" level="INFO"/>
<status status="PASS" starttime="20210918 13:06:38.190" endtime="20210918 13:06:38.191"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:06:38.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:06:38.191" endtime="20210918 13:06:38.192"/>
</kw>
<status status="PASS" starttime="20210918 13:06:30.092" endtime="20210918 13:06:38.193"/>
</kw>
<msg timestamp="20210918 13:06:38.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:30.090" endtime="20210918 13:06:38.194"/>
</kw>
<status status="PASS" starttime="20210918 13:06:30.089" endtime="20210918 13:06:38.194"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:06:38.199" level="INFO">Running command 'ozone sh key put 97941-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:09:50.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:09:50.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:06:38.196" endtime="20210918 13:09:50.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:09:50.094" level="INFO"/>
<status status="PASS" starttime="20210918 13:09:50.092" endtime="20210918 13:09:50.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:09:50.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:09:50.094" endtime="20210918 13:09:50.095"/>
</kw>
<status status="PASS" starttime="20210918 13:06:38.196" endtime="20210918 13:09:50.095"/>
</kw>
<msg timestamp="20210918 13:09:50.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:06:38.195" endtime="20210918 13:09:50.096"/>
</kw>
<status status="PASS" starttime="20210918 13:06:38.194" endtime="20210918 13:09:50.096"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:09:50.101" level="INFO">Running command 'ozone sh bucket create 97941-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:09:57.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:09:57.856" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:09:50.097" endtime="20210918 13:09:57.856"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:09:57.857" level="INFO"/>
<status status="PASS" starttime="20210918 13:09:57.856" endtime="20210918 13:09:57.857"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:09:57.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:09:57.858" endtime="20210918 13:09:57.858"/>
</kw>
<status status="PASS" starttime="20210918 13:09:50.097" endtime="20210918 13:09:57.859"/>
</kw>
<msg timestamp="20210918 13:09:57.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:09:50.097" endtime="20210918 13:09:57.859"/>
</kw>
<status status="PASS" starttime="20210918 13:09:50.096" endtime="20210918 13:09:57.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:09:57.865" level="INFO">Running command 'ozone sh bucket link 97941-source/readable-bucket 97941-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:03.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:03.897" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:09:57.862" endtime="20210918 13:10:03.897"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:03.899" level="INFO"/>
<status status="PASS" starttime="20210918 13:10:03.898" endtime="20210918 13:10:03.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:03.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:03.900" endtime="20210918 13:10:03.901"/>
</kw>
<status status="PASS" starttime="20210918 13:09:57.862" endtime="20210918 13:10:03.902"/>
</kw>
<msg timestamp="20210918 13:10:03.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:09:57.861" endtime="20210918 13:10:03.903"/>
</kw>
<status status="PASS" starttime="20210918 13:09:57.860" endtime="20210918 13:10:03.903"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:03.909" level="INFO">Running command 'ozone sh bucket link 97941-source/readable-bucket 97941-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:10.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:10.694" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:10:03.906" endtime="20210918 13:10:10.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:10.696" level="INFO"/>
<status status="PASS" starttime="20210918 13:10:10.695" endtime="20210918 13:10:10.696"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:10.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:10.696" endtime="20210918 13:10:10.698"/>
</kw>
<status status="PASS" starttime="20210918 13:10:03.905" endtime="20210918 13:10:10.699"/>
</kw>
<msg timestamp="20210918 13:10:10.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:03.904" endtime="20210918 13:10:10.699"/>
</kw>
<status status="PASS" starttime="20210918 13:10:03.903" endtime="20210918 13:10:10.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:10.705" level="INFO">Running command 'ozone sh bucket link 97941-source/unreadable-bucket 97941-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:17.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:17.800" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:10:10.702" endtime="20210918 13:10:17.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:17.804" level="INFO"/>
<status status="PASS" starttime="20210918 13:10:17.803" endtime="20210918 13:10:17.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:17.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:17.805" endtime="20210918 13:10:17.806"/>
</kw>
<status status="PASS" starttime="20210918 13:10:10.702" endtime="20210918 13:10:17.807"/>
</kw>
<msg timestamp="20210918 13:10:17.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:10.701" endtime="20210918 13:10:17.808"/>
</kw>
<status status="PASS" starttime="20210918 13:10:10.700" endtime="20210918 13:10:17.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:17.816" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 97941-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:25.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:25.860" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:17.812" endtime="20210918 13:10:25.860"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:25.862" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:25.860" endtime="20210918 13:10:25.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:25.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:25.862" endtime="20210918 13:10:25.863"/>
</kw>
<status status="PASS" starttime="20210918 13:10:17.811" endtime="20210918 13:10:25.864"/>
</kw>
<msg timestamp="20210918 13:10:25.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:17.811" endtime="20210918 13:10:25.864"/>
</kw>
<status status="PASS" starttime="20210918 13:10:17.809" endtime="20210918 13:10:25.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:25.871" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 97941-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:33.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:33.252" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:25.868" endtime="20210918 13:10:33.253"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:33.254" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:33.253" endtime="20210918 13:10:33.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:33.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:33.255" endtime="20210918 13:10:33.255"/>
</kw>
<status status="PASS" starttime="20210918 13:10:25.867" endtime="20210918 13:10:33.257"/>
</kw>
<msg timestamp="20210918 13:10:33.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:25.866" endtime="20210918 13:10:33.257"/>
</kw>
<status status="PASS" starttime="20210918 13:10:25.865" endtime="20210918 13:10:33.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:33.268" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 97941-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:40.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:40.036" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:33.265" endtime="20210918 13:10:40.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:40.038" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:40.037" endtime="20210918 13:10:40.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:40.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:40.039" endtime="20210918 13:10:40.039"/>
</kw>
<status status="PASS" starttime="20210918 13:10:33.263" endtime="20210918 13:10:40.039"/>
</kw>
<msg timestamp="20210918 13:10:40.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:33.262" endtime="20210918 13:10:40.040"/>
</kw>
<status status="PASS" starttime="20210918 13:10:33.258" endtime="20210918 13:10:40.040"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:40.046" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 97941-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:47.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:47.828" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:40.043" endtime="20210918 13:10:47.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:47.831" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:47.829" endtime="20210918 13:10:47.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:47.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:47.831" endtime="20210918 13:10:47.833"/>
</kw>
<status status="PASS" starttime="20210918 13:10:40.042" endtime="20210918 13:10:47.834"/>
</kw>
<msg timestamp="20210918 13:10:47.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:40.041" endtime="20210918 13:10:47.834"/>
</kw>
<status status="PASS" starttime="20210918 13:10:40.040" endtime="20210918 13:10:47.835"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:47.844" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 97941-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:54.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:54.232" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:47.839" endtime="20210918 13:10:54.232"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:54.233" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:10:54.233" endtime="20210918 13:10:54.234"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:54.235" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:54.234" endtime="20210918 13:10:54.235"/>
</kw>
<status status="PASS" starttime="20210918 13:10:47.838" endtime="20210918 13:10:54.236"/>
</kw>
<msg timestamp="20210918 13:10:54.236" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:47.837" endtime="20210918 13:10:54.236"/>
</kw>
<status status="PASS" starttime="20210918 13:10:47.835" endtime="20210918 13:10:54.236"/>
</kw>
<status status="PASS" starttime="20210918 13:06:30.089" endtime="20210918 13:10:54.237"/>
</kw>
<status status="PASS" starttime="20210918 13:06:30.088" endtime="20210918 13:10:54.237"/>
</kw>
<status status="PASS" starttime="20210918 13:06:14.547" endtime="20210918 13:10:54.237"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:54.245" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:54.247" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:54.247" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:10:54.242" endtime="20210918 13:10:54.248"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:54.249" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:10:54.248" endtime="20210918 13:10:54.249"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:54.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:54.249" endtime="20210918 13:10:54.251"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.241" endtime="20210918 13:10:54.251"/>
</kw>
<msg timestamp="20210918 13:10:54.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:54.241" endtime="20210918 13:10:54.252"/>
</kw>
<msg timestamp="20210918 13:10:54.252" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:10:54.240" endtime="20210918 13:10:54.252"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:10:54.255" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:10:54.253" endtime="20210918 13:10:54.255"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:54.260" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:10:54.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:10:54.298" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:10:54.258" endtime="20210918 13:10:54.298"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:10:54.300" level="INFO"/>
<status status="PASS" starttime="20210918 13:10:54.299" endtime="20210918 13:10:54.300"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:10:54.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:10:54.300" endtime="20210918 13:10:54.300"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.257" endtime="20210918 13:10:54.301"/>
</kw>
<msg timestamp="20210918 13:10:54.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:54.257" endtime="20210918 13:10:54.301"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.256" endtime="20210918 13:10:54.301"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.255" endtime="20210918 13:10:54.301"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.239" endtime="20210918 13:10:54.301"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.239" endtime="20210918 13:10:54.301"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:10:54.306" level="INFO">Running command 'ozone sh bucket link 97941-source/no-such-bucket 97941-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:11:00.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:11:00.224" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:10:54.303" endtime="20210918 13:11:00.224"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:11:00.225" level="INFO"/>
<status status="PASS" starttime="20210918 13:11:00.225" endtime="20210918 13:11:00.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:11:00.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:11:00.226" endtime="20210918 13:11:00.226"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.303" endtime="20210918 13:11:00.226"/>
</kw>
<msg timestamp="20210918 13:11:00.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:10:54.302" endtime="20210918 13:11:00.227"/>
</kw>
<status status="PASS" starttime="20210918 13:10:54.302" endtime="20210918 13:11:00.227"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:11:00.232" level="INFO">Running command 'ozone sh key list 97941-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:11:08.031" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:11:08.031" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210918 13:11:00.228" endtime="20210918 13:11:08.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:11:08.032" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210918 13:11:08.031" endtime="20210918 13:11:08.032"/>
</kw>
<msg timestamp="20210918 13:11:08.033" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210918 13:11:00.227" endtime="20210918 13:11:08.033"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:11:08.033" endtime="20210918 13:11:08.033"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:10:54.237" endtime="20210918 13:11:08.034"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:11:08.043" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:11:08.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:11:08.050" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:11:08.040" endtime="20210918 13:11:08.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:11:08.051" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:11:08.050" endtime="20210918 13:11:08.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:11:08.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:11:08.051" endtime="20210918 13:11:08.052"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.039" endtime="20210918 13:11:08.052"/>
</kw>
<msg timestamp="20210918 13:11:08.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:11:08.039" endtime="20210918 13:11:08.053"/>
</kw>
<msg timestamp="20210918 13:11:08.053" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:11:08.038" endtime="20210918 13:11:08.053"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:11:08.054" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:11:08.053" endtime="20210918 13:11:08.054"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:11:08.062" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:11:08.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:11:08.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:11:08.058" endtime="20210918 13:11:08.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:11:08.074" level="INFO"/>
<status status="PASS" starttime="20210918 13:11:08.072" endtime="20210918 13:11:08.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:11:08.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:11:08.075" endtime="20210918 13:11:08.076"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.057" endtime="20210918 13:11:08.076"/>
</kw>
<msg timestamp="20210918 13:11:08.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:11:08.057" endtime="20210918 13:11:08.077"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.056" endtime="20210918 13:11:08.077"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.055" endtime="20210918 13:11:08.077"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.037" endtime="20210918 13:11:08.078"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.036" endtime="20210918 13:11:08.078"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:11:08.084" level="INFO">Running command 'ozone sh bucket link 97941-source/bucket1 97941-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:11:14.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:11:14.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:11:08.081" endtime="20210918 13:11:14.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:11:14.049" level="INFO"/>
<status status="PASS" starttime="20210918 13:11:14.048" endtime="20210918 13:11:14.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:11:14.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:11:14.049" endtime="20210918 13:11:14.050"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.080" endtime="20210918 13:11:14.050"/>
</kw>
<msg timestamp="20210918 13:11:14.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:11:08.080" endtime="20210918 13:11:14.050"/>
</kw>
<status status="PASS" starttime="20210918 13:11:08.078" endtime="20210918 13:11:14.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:11:14.055" level="INFO">Running command 'ozone sh bucket create 97941-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:11:21.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:11:21.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:11:14.053" endtime="20210918 13:11:21.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:11:21.088" level="INFO"/>
<status status="PASS" starttime="20210918 13:11:21.088" endtime="20210918 13:11:21.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:11:21.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:11:21.090" endtime="20210918 13:11:21.091"/>
</kw>
<status status="PASS" starttime="20210918 13:11:14.052" endtime="20210918 13:11:21.091"/>
</kw>
<msg timestamp="20210918 13:11:21.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:11:14.052" endtime="20210918 13:11:21.091"/>
</kw>
<status status="PASS" starttime="20210918 13:11:14.051" endtime="20210918 13:11:21.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:11:21.097" level="INFO">Running command 'ozone sh key put 97941-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:13:08.036" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:11:21.094" endtime="20210918 13:13:08.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:13:08.037" endtime="20210918 13:13:08.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:13:08.038" endtime="20210918 13:13:08.038"/>
</kw>
<status status="FAIL" starttime="20210918 13:11:21.093" endtime="20210918 13:13:08.038"/>
</kw>
<msg timestamp="20210918 13:13:08.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:11:21.093" endtime="20210918 13:13:08.038"/>
</kw>
<status status="FAIL" starttime="20210918 13:11:21.092" endtime="20210918 13:13:08.039"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210918 13:13:08.039" endtime="20210918 13:13:08.039"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210918 13:11:08.035" endtime="20210918 13:13:08.039">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:13:08.047" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:13:08.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:13:08.051" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:13:08.044" endtime="20210918 13:13:08.051"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:13:08.053" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:13:08.052" endtime="20210918 13:13:08.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:13:08.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:13:08.055" endtime="20210918 13:13:08.055"/>
</kw>
<status status="PASS" starttime="20210918 13:13:08.044" endtime="20210918 13:13:08.056"/>
</kw>
<msg timestamp="20210918 13:13:08.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:13:08.044" endtime="20210918 13:13:08.056"/>
</kw>
<msg timestamp="20210918 13:13:08.056" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:13:08.043" endtime="20210918 13:13:08.056"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:13:08.057" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:13:08.057" endtime="20210918 13:13:08.058"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:13:08.064" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:13:08.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:13:08.075" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:13:08.061" endtime="20210918 13:13:08.075"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:13:08.077" level="INFO"/>
<status status="PASS" starttime="20210918 13:13:08.076" endtime="20210918 13:13:08.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:13:08.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:13:08.077" endtime="20210918 13:13:08.079"/>
</kw>
<status status="PASS" starttime="20210918 13:13:08.060" endtime="20210918 13:13:08.079"/>
</kw>
<msg timestamp="20210918 13:13:08.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:13:08.060" endtime="20210918 13:13:08.079"/>
</kw>
<status status="PASS" starttime="20210918 13:13:08.059" endtime="20210918 13:13:08.080"/>
</kw>
<status status="PASS" starttime="20210918 13:13:08.058" endtime="20210918 13:13:08.080"/>
</kw>
<status status="PASS" starttime="20210918 13:13:08.042" endtime="20210918 13:13:08.080"/>
</kw>
<status status="PASS" starttime="20210918 13:13:08.042" endtime="20210918 13:13:08.080"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:13:08.088" level="INFO">Running command 'ozone sh key put 97941-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:08.042" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:13:08.083" endtime="20210918 13:15:08.042"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:15:08.043" endtime="20210918 13:15:08.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:15:08.044" endtime="20210918 13:15:08.044"/>
</kw>
<status status="FAIL" starttime="20210918 13:13:08.082" endtime="20210918 13:15:08.044"/>
</kw>
<msg timestamp="20210918 13:15:08.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:13:08.082" endtime="20210918 13:15:08.045"/>
</kw>
<status status="FAIL" starttime="20210918 13:13:08.081" endtime="20210918 13:15:08.045"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210918 13:15:08.046" endtime="20210918 13:15:08.046"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210918 13:13:08.041" endtime="20210918 13:15:08.047">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:08.056" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:08.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:08.061" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:15:08.054" endtime="20210918 13:15:08.061"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:08.063" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:15:08.062" endtime="20210918 13:15:08.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:08.064" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:08.064" endtime="20210918 13:15:08.064"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.053" endtime="20210918 13:15:08.065"/>
</kw>
<msg timestamp="20210918 13:15:08.065" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:08.051" endtime="20210918 13:15:08.065"/>
</kw>
<msg timestamp="20210918 13:15:08.065" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:15:08.050" endtime="20210918 13:15:08.065"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:15:08.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:15:08.065" endtime="20210918 13:15:08.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:08.074" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:08.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:08.087" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:15:08.070" endtime="20210918 13:15:08.087"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:08.090" level="INFO"/>
<status status="PASS" starttime="20210918 13:15:08.088" endtime="20210918 13:15:08.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:08.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:08.091" endtime="20210918 13:15:08.092"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.069" endtime="20210918 13:15:08.093"/>
</kw>
<msg timestamp="20210918 13:15:08.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:08.068" endtime="20210918 13:15:08.093"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.067" endtime="20210918 13:15:08.094"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.066" endtime="20210918 13:15:08.094"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.050" endtime="20210918 13:15:08.095"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.049" endtime="20210918 13:15:08.095"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:08.101" level="INFO">Running command 'ozone sh key list 97941-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:14.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:14.497" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210918 13:15:08.098" endtime="20210918 13:15:14.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:14.498" level="INFO">key1</msg>
<status status="PASS" starttime="20210918 13:15:14.497" endtime="20210918 13:15:14.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:14.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:14.499" endtime="20210918 13:15:14.500"/>
</kw>
<status status="PASS" starttime="20210918 13:15:08.097" endtime="20210918 13:15:14.500"/>
</kw>
<msg timestamp="20210918 13:15:14.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:08.096" endtime="20210918 13:15:14.500"/>
</kw>
<msg timestamp="20210918 13:15:14.501" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210918 13:15:08.095" endtime="20210918 13:15:14.501"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:14.505" level="INFO">Running command 'ozone sh key list 97941-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:22.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:22.093" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210918 13:15:14.503" endtime="20210918 13:15:22.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:22.094" level="INFO">key1</msg>
<status status="PASS" starttime="20210918 13:15:22.094" endtime="20210918 13:15:22.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:22.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:22.095" endtime="20210918 13:15:22.096"/>
</kw>
<status status="PASS" starttime="20210918 13:15:14.502" endtime="20210918 13:15:22.096"/>
</kw>
<msg timestamp="20210918 13:15:22.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:14.502" endtime="20210918 13:15:22.096"/>
</kw>
<msg timestamp="20210918 13:15:22.096" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210918 13:15:14.501" endtime="20210918 13:15:22.096"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:15:22.097" endtime="20210918 13:15:22.097"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:22.097" endtime="20210918 13:15:22.098"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210918 13:15:22.099" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210918 13:15:22.098" endtime="20210918 13:15:22.099"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210918 13:15:08.048" endtime="20210918 13:15:22.099">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:22.110" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:22.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:22.115" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:15:22.107" endtime="20210918 13:15:22.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:22.117" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:15:22.115" endtime="20210918 13:15:22.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:22.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:22.117" endtime="20210918 13:15:22.118"/>
</kw>
<status status="PASS" starttime="20210918 13:15:22.106" endtime="20210918 13:15:22.119"/>
</kw>
<msg timestamp="20210918 13:15:22.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:22.106" endtime="20210918 13:15:22.119"/>
</kw>
<msg timestamp="20210918 13:15:22.120" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:15:22.105" endtime="20210918 13:15:22.120"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:15:22.122" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:15:22.121" endtime="20210918 13:15:22.122"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:22.129" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:22.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:22.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:15:22.126" endtime="20210918 13:15:22.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:22.143" level="INFO"/>
<status status="PASS" starttime="20210918 13:15:22.142" endtime="20210918 13:15:22.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:22.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:22.143" endtime="20210918 13:15:22.144"/>
</kw>
<status status="PASS" starttime="20210918 13:15:22.125" endtime="20210918 13:15:22.144"/>
</kw>
<msg timestamp="20210918 13:15:22.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:22.125" endtime="20210918 13:15:22.145"/>
</kw>
<status status="PASS" starttime="20210918 13:15:22.123" endtime="20210918 13:15:22.145"/>
</kw>
<status status="PASS" starttime="20210918 13:15:22.122" endtime="20210918 13:15:22.145"/>
</kw>
<status status="PASS" starttime="20210918 13:15:22.103" endtime="20210918 13:15:22.145"/>
</kw>
<status status="PASS" starttime="20210918 13:15:22.102" endtime="20210918 13:15:22.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:22.151" level="INFO">Running command 'ozone sh key delete 97941-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:29.426" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:15:29.426" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210918 13:15:22.148" endtime="20210918 13:15:29.426"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:29.429" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210918 13:15:29.428" endtime="20210918 13:15:29.429"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:29.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210918 13:15:29.431" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210918 13:15:29.430" endtime="20210918 13:15:29.432"/>
</kw>
<status status="FAIL" starttime="20210918 13:15:22.147" endtime="20210918 13:15:29.433"/>
</kw>
<msg timestamp="20210918 13:15:29.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:15:22.147" endtime="20210918 13:15:29.433"/>
</kw>
<status status="FAIL" starttime="20210918 13:15:22.146" endtime="20210918 13:15:29.434"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210918 13:15:29.435" endtime="20210918 13:15:29.435"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:15:29.435" endtime="20210918 13:15:29.435"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210918 13:15:22.101" endtime="20210918 13:15:29.436">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:29.448" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:29.453" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:29.453" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:15:29.445" endtime="20210918 13:15:29.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:29.456" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:15:29.455" endtime="20210918 13:15:29.456"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:29.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:29.457" endtime="20210918 13:15:29.457"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.445" endtime="20210918 13:15:29.458"/>
</kw>
<msg timestamp="20210918 13:15:29.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:29.444" endtime="20210918 13:15:29.458"/>
</kw>
<msg timestamp="20210918 13:15:29.458" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:15:29.444" endtime="20210918 13:15:29.459"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:15:29.460" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:15:29.459" endtime="20210918 13:15:29.460"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:29.468" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:29.477" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:29.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:15:29.465" endtime="20210918 13:15:29.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:29.479" level="INFO"/>
<status status="PASS" starttime="20210918 13:15:29.479" endtime="20210918 13:15:29.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:29.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:29.480" endtime="20210918 13:15:29.481"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.464" endtime="20210918 13:15:29.481"/>
</kw>
<msg timestamp="20210918 13:15:29.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:29.464" endtime="20210918 13:15:29.482"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.461" endtime="20210918 13:15:29.482"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.460" endtime="20210918 13:15:29.482"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.442" endtime="20210918 13:15:29.483"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.439" endtime="20210918 13:15:29.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:29.488" level="INFO">Running command 'ozone sh bucket list 97941-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:37.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:37.036" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210918 13:15:29.485" endtime="20210918 13:15:37.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:37.037" level="INFO">{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:59.913Z",
  "modificationTime" : "2021-09-18T13:10:59.913Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:17.726Z",
  "modificationTime" : "2021-09-18T13:10:54.067Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:11:13.991Z",
  "modificationTime" : "2021-09-18T13:11:13.991Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:03.813Z",
  "modificationTime" : "2021-09-18T13:10:47.663Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:10.442Z",
  "modificationTime" : "2021-09-18T13:10:10.442Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210918 13:15:37.036" endtime="20210918 13:15:37.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:37.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:37.037" endtime="20210918 13:15:37.038"/>
</kw>
<status status="PASS" starttime="20210918 13:15:29.485" endtime="20210918 13:15:37.038"/>
</kw>
<msg timestamp="20210918 13:15:37.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:29.484" endtime="20210918 13:15:37.039"/>
</kw>
<msg timestamp="20210918 13:15:37.039" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210918 13:15:29.483" endtime="20210918 13:15:37.039"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:37.039" endtime="20210918 13:15:37.041"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:37.041" endtime="20210918 13:15:37.043"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:15:29.437" endtime="20210918 13:15:37.044"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:37.056" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:37.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:37.060" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:15:37.053" endtime="20210918 13:15:37.060"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:37.062" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:15:37.061" endtime="20210918 13:15:37.062"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:37.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:37.062" endtime="20210918 13:15:37.063"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.052" endtime="20210918 13:15:37.063"/>
</kw>
<msg timestamp="20210918 13:15:37.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:37.052" endtime="20210918 13:15:37.064"/>
</kw>
<msg timestamp="20210918 13:15:37.064" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:15:37.051" endtime="20210918 13:15:37.064"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:15:37.066" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:15:37.065" endtime="20210918 13:15:37.066"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:37.072" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:37.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:37.080" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:15:37.070" endtime="20210918 13:15:37.080"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:37.083" level="INFO"/>
<status status="PASS" starttime="20210918 13:15:37.081" endtime="20210918 13:15:37.083"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:37.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:37.083" endtime="20210918 13:15:37.084"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.069" endtime="20210918 13:15:37.085"/>
</kw>
<msg timestamp="20210918 13:15:37.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:37.068" endtime="20210918 13:15:37.086"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.067" endtime="20210918 13:15:37.086"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.066" endtime="20210918 13:15:37.086"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.051" endtime="20210918 13:15:37.087"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.049" endtime="20210918 13:15:37.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:37.092" level="INFO">Running command 'ozone sh bucket info 97941-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:44.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:44.101" level="INFO">${output} = {
  "volumeName" : "97941-target",
  "bucketName" : "link1",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-18T13:11:13.991Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210918 13:15:37.090" endtime="20210918 13:15:44.101"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:44.103" level="INFO">{
  "volumeName" : "97941-target",
  "bucketName" : "link1",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-18T13:11:13.991Z",
  "modificationTime" : "2021-09-18T13:11:13.991Z"
}</msg>
<status status="PASS" starttime="20210918 13:15:44.102" endtime="20210918 13:15:44.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:44.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:44.104" endtime="20210918 13:15:44.105"/>
</kw>
<status status="PASS" starttime="20210918 13:15:37.089" endtime="20210918 13:15:44.105"/>
</kw>
<msg timestamp="20210918 13:15:44.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:37.088" endtime="20210918 13:15:44.105"/>
</kw>
<msg timestamp="20210918 13:15:44.106" level="INFO">${result} = {
  "volumeName" : "97941-target",
  "bucketName" : "link1",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "bucket1",
  "creationTime" : "2021-09-18T13:11:13.991Z",
  "modificationTime" : "202...</msg>
<status status="PASS" starttime="20210918 13:15:37.087" endtime="20210918 13:15:44.106"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${source}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.106" endtime="20210918 13:15:44.107"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>bucket1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.107" endtime="20210918 13:15:44.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${target}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.109" endtime="20210918 13:15:44.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.110" endtime="20210918 13:15:44.111"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>modificationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.111" endtime="20210918 13:15:44.112"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.113" endtime="20210918 13:15:44.114"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>metadata</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:15:44.114" endtime="20210918 13:15:44.115"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:15:37.045" endtime="20210918 13:15:44.116"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:44.130" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:44.137" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:44.137" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:15:44.126" endtime="20210918 13:15:44.137"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:44.140" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:15:44.138" endtime="20210918 13:15:44.140"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:44.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:44.141" endtime="20210918 13:15:44.142"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.124" endtime="20210918 13:15:44.143"/>
</kw>
<msg timestamp="20210918 13:15:44.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:44.124" endtime="20210918 13:15:44.143"/>
</kw>
<msg timestamp="20210918 13:15:44.144" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:15:44.122" endtime="20210918 13:15:44.144"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:15:44.145" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:15:44.144" endtime="20210918 13:15:44.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:44.152" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:44.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:44.163" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:15:44.150" endtime="20210918 13:15:44.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:44.164" level="INFO"/>
<status status="PASS" starttime="20210918 13:15:44.163" endtime="20210918 13:15:44.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:44.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:44.165" endtime="20210918 13:15:44.166"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.149" endtime="20210918 13:15:44.167"/>
</kw>
<msg timestamp="20210918 13:15:44.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:44.148" endtime="20210918 13:15:44.168"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.147" endtime="20210918 13:15:44.168"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.146" endtime="20210918 13:15:44.168"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.121" endtime="20210918 13:15:44.168"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.119" endtime="20210918 13:15:44.168"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:44.173" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 97941-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:51.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:51.861" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:15:44.171" endtime="20210918 13:15:51.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:51.863" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:15:51.862" endtime="20210918 13:15:51.863"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:51.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:51.863" endtime="20210918 13:15:51.864"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.170" endtime="20210918 13:15:51.865"/>
</kw>
<msg timestamp="20210918 13:15:51.865" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:44.170" endtime="20210918 13:15:51.865"/>
</kw>
<status status="PASS" starttime="20210918 13:15:44.169" endtime="20210918 13:15:51.866"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:51.873" level="INFO">Running command 'ozone sh bucket getacl 97941-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:15:58.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:15:58.976" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210918 13:15:51.869" endtime="20210918 13:15:58.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:15:58.978" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210918 13:15:58.977" endtime="20210918 13:15:58.978"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:15:58.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:15:58.978" endtime="20210918 13:15:58.979"/>
</kw>
<status status="PASS" starttime="20210918 13:15:51.868" endtime="20210918 13:15:58.979"/>
</kw>
<msg timestamp="20210918 13:15:58.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:51.867" endtime="20210918 13:15:58.979"/>
</kw>
<msg timestamp="20210918 13:15:58.979" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210918 13:15:51.867" endtime="20210918 13:15:58.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:15:58.980" endtime="20210918 13:15:58.980"/>
</kw>
<status status="PASS" starttime="20210918 13:15:51.866" endtime="20210918 13:15:58.981"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:15:58.986" level="INFO">Running command 'ozone sh bucket getacl 97941-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:05.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:05.152" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:15:58.984" endtime="20210918 13:16:05.152"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:05.154" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:05.152" endtime="20210918 13:16:05.155"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:05.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:05.155" endtime="20210918 13:16:05.155"/>
</kw>
<status status="PASS" starttime="20210918 13:15:58.984" endtime="20210918 13:16:05.156"/>
</kw>
<msg timestamp="20210918 13:16:05.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:15:58.984" endtime="20210918 13:16:05.156"/>
</kw>
<msg timestamp="20210918 13:16:05.156" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210918 13:15:58.983" endtime="20210918 13:16:05.156"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:16:05.156" endtime="20210918 13:16:05.157"/>
</kw>
<status status="PASS" starttime="20210918 13:15:58.981" endtime="20210918 13:16:05.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:05.161" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 97941-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:10.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:10.491" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:16:05.159" endtime="20210918 13:16:10.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:10.492" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:16:10.491" endtime="20210918 13:16:10.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:10.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:10.492" endtime="20210918 13:16:10.493"/>
</kw>
<status status="PASS" starttime="20210918 13:16:05.158" endtime="20210918 13:16:10.493"/>
</kw>
<msg timestamp="20210918 13:16:10.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:05.158" endtime="20210918 13:16:10.494"/>
</kw>
<status status="PASS" starttime="20210918 13:16:05.157" endtime="20210918 13:16:10.494"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:10.501" level="INFO">Running command 'ozone sh bucket getacl 97941-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:17.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:17.823" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:10.497" endtime="20210918 13:16:17.823"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:17.826" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:17.825" endtime="20210918 13:16:17.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:17.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:17.826" endtime="20210918 13:16:17.829"/>
</kw>
<status status="PASS" starttime="20210918 13:16:10.497" endtime="20210918 13:16:17.833"/>
</kw>
<msg timestamp="20210918 13:16:17.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:10.496" endtime="20210918 13:16:17.835"/>
</kw>
<msg timestamp="20210918 13:16:17.835" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210918 13:16:10.495" endtime="20210918 13:16:17.835"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:16:17.836" endtime="20210918 13:16:17.836"/>
</kw>
<status status="PASS" starttime="20210918 13:16:10.494" endtime="20210918 13:16:17.836"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:17.867" level="INFO">Running command 'ozone sh bucket getacl 97941-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:24.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:24.470" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210918 13:16:17.852" endtime="20210918 13:16:24.470"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:24.472" level="INFO">READ</msg>
<status status="PASS" starttime="20210918 13:16:24.471" endtime="20210918 13:16:24.472"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:24.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:24.473" endtime="20210918 13:16:24.474"/>
</kw>
<status status="PASS" starttime="20210918 13:16:17.851" endtime="20210918 13:16:24.474"/>
</kw>
<msg timestamp="20210918 13:16:24.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:17.849" endtime="20210918 13:16:24.475"/>
</kw>
<msg timestamp="20210918 13:16:24.475" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210918 13:16:17.840" endtime="20210918 13:16:24.475"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:16:24.476" endtime="20210918 13:16:24.477"/>
</kw>
<status status="PASS" starttime="20210918 13:16:17.837" endtime="20210918 13:16:24.477"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:15:44.117" endtime="20210918 13:16:24.477"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:24.489" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:24.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:24.496" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:16:24.486" endtime="20210918 13:16:24.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:24.499" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:16:24.497" endtime="20210918 13:16:24.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:24.500" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:24.499" endtime="20210918 13:16:24.500"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.485" endtime="20210918 13:16:24.501"/>
</kw>
<msg timestamp="20210918 13:16:24.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:24.485" endtime="20210918 13:16:24.501"/>
</kw>
<msg timestamp="20210918 13:16:24.501" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:16:24.484" endtime="20210918 13:16:24.501"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:16:24.503" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:16:24.502" endtime="20210918 13:16:24.503"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:24.508" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:24.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:24.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:24.506" endtime="20210918 13:16:24.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:24.550" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:24.549" endtime="20210918 13:16:24.550"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:24.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:24.550" endtime="20210918 13:16:24.551"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.505" endtime="20210918 13:16:24.552"/>
</kw>
<msg timestamp="20210918 13:16:24.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:24.505" endtime="20210918 13:16:24.552"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.504" endtime="20210918 13:16:24.552"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.503" endtime="20210918 13:16:24.552"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.483" endtime="20210918 13:16:24.553"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.481" endtime="20210918 13:16:24.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:24.558" level="INFO">Running command 'ozone sh bucket link 97941-source/bucket2 97941-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:31.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:31.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:24.555" endtime="20210918 13:16:31.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:31.835" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:31.834" endtime="20210918 13:16:31.835"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:31.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:31.836" endtime="20210918 13:16:31.838"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.554" endtime="20210918 13:16:31.840"/>
</kw>
<msg timestamp="20210918 13:16:31.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:24.554" endtime="20210918 13:16:31.840"/>
</kw>
<status status="PASS" starttime="20210918 13:16:24.553" endtime="20210918 13:16:31.842"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:31.847" level="INFO">Running command 'ozone sh bucket create 97941-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:39.123" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:16:39.123" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210918 13:16:31.843" endtime="20210918 13:16:39.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:39.124" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210918 13:16:39.124" endtime="20210918 13:16:39.124"/>
</kw>
<msg timestamp="20210918 13:16:39.125" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210918 13:16:31.843" endtime="20210918 13:16:39.125"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:16:39.125" endtime="20210918 13:16:39.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:39.130" level="INFO">Running command 'ozone sh bucket create 97941-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:44.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:44.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:39.127" endtime="20210918 13:16:44.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:44.445" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:44.444" endtime="20210918 13:16:44.445"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:44.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:44.445" endtime="20210918 13:16:44.446"/>
</kw>
<status status="PASS" starttime="20210918 13:16:39.127" endtime="20210918 13:16:44.446"/>
</kw>
<msg timestamp="20210918 13:16:44.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:39.126" endtime="20210918 13:16:44.447"/>
</kw>
<status status="PASS" starttime="20210918 13:16:39.126" endtime="20210918 13:16:44.447"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:44.450" level="INFO">Running command 'ozone sh bucket link 97941-source/bucket1 97941-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:51.279" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:16:51.279" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210918 13:16:44.448" endtime="20210918 13:16:51.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:51.280" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210918 13:16:51.280" endtime="20210918 13:16:51.281"/>
</kw>
<msg timestamp="20210918 13:16:51.281" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210918 13:16:44.447" endtime="20210918 13:16:51.281"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:16:51.281" endtime="20210918 13:16:51.282"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:16:24.480" endtime="20210918 13:16:51.282"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:51.288" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:51.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:51.292" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:16:51.286" endtime="20210918 13:16:51.292"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:51.293" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:16:51.292" endtime="20210918 13:16:51.293"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:51.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:51.293" endtime="20210918 13:16:51.295"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.285" endtime="20210918 13:16:51.295"/>
</kw>
<msg timestamp="20210918 13:16:51.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:51.285" endtime="20210918 13:16:51.296"/>
</kw>
<msg timestamp="20210918 13:16:51.296" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:16:51.284" endtime="20210918 13:16:51.296"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:16:51.297" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:16:51.296" endtime="20210918 13:16:51.297"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:51.302" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:51.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:51.308" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:51.300" endtime="20210918 13:16:51.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:51.309" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:51.308" endtime="20210918 13:16:51.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:51.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:51.309" endtime="20210918 13:16:51.310"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.299" endtime="20210918 13:16:51.310"/>
</kw>
<msg timestamp="20210918 13:16:51.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:51.299" endtime="20210918 13:16:51.310"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.298" endtime="20210918 13:16:51.311"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.297" endtime="20210918 13:16:51.311"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.284" endtime="20210918 13:16:51.311"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.283" endtime="20210918 13:16:51.311"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:51.315" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:51.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:51.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:51.314" endtime="20210918 13:16:51.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:51.320" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:51.319" endtime="20210918 13:16:51.320"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:51.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:51.320" endtime="20210918 13:16:51.321"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.313" endtime="20210918 13:16:51.321"/>
</kw>
<msg timestamp="20210918 13:16:51.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:51.313" endtime="20210918 13:16:51.321"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.312" endtime="20210918 13:16:51.322"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:51.326" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:51.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:51.328" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:16:51.324" endtime="20210918 13:16:51.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:51.329" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:16:51.329" endtime="20210918 13:16:51.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:51.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:51.329" endtime="20210918 13:16:51.330"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.323" endtime="20210918 13:16:51.330"/>
</kw>
<msg timestamp="20210918 13:16:51.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:51.323" endtime="20210918 13:16:51.330"/>
</kw>
<msg timestamp="20210918 13:16:51.331" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:16:51.323" endtime="20210918 13:16:51.331"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:16:51.332" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:16:51.331" endtime="20210918 13:16:51.332"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:51.336" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:51.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:51.343" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:51.334" endtime="20210918 13:16:51.343"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:51.344" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:51.343" endtime="20210918 13:16:51.344"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:51.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:51.344" endtime="20210918 13:16:51.345"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.333" endtime="20210918 13:16:51.345"/>
</kw>
<msg timestamp="20210918 13:16:51.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:51.333" endtime="20210918 13:16:51.345"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.332" endtime="20210918 13:16:51.346"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.332" endtime="20210918 13:16:51.346"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.322" endtime="20210918 13:16:51.346"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.322" endtime="20210918 13:16:51.346"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:51.349" level="INFO">Running command 'ozone sh key list 97941-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:58.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:58.340" level="INFO">${output} = {
  "volumeName" : "97941-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-18T13:06:44.999Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210918 13:16:51.347" endtime="20210918 13:16:58.340"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:58.342" level="INFO">{
  "volumeName" : "97941-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-18T13:06:44.999Z",
  "modificationTime" : "2021-09-18T13:09:48.970Z",
  "replicationConfig" : {
    "replicationFactor" : "THREE",
    "requiredNodes" : 3,
    "replicationType" : "RATIS"
  },
  "replicationFactor" : 3,
  "replicationType" : "RATIS"
}</msg>
<status status="PASS" starttime="20210918 13:16:58.341" endtime="20210918 13:16:58.343"/>
</kw>
<msg timestamp="20210918 13:16:58.343" level="INFO">${result} = {
  "volumeName" : "97941-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-09-18T13:06:44.999Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210918 13:16:51.346" endtime="20210918 13:16:58.343"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:16:58.343" endtime="20210918 13:16:58.344"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.312" endtime="20210918 13:16:58.344"/>
</kw>
<status status="PASS" starttime="20210918 13:16:51.311" endtime="20210918 13:16:58.344"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:16:51.283" endtime="20210918 13:16:58.345"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:58.353" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:58.358" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:58.358" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:16:58.350" endtime="20210918 13:16:58.358"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:58.360" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:16:58.359" endtime="20210918 13:16:58.360"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:58.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:58.360" endtime="20210918 13:16:58.361"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.349" endtime="20210918 13:16:58.361"/>
</kw>
<msg timestamp="20210918 13:16:58.361" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:58.349" endtime="20210918 13:16:58.361"/>
</kw>
<msg timestamp="20210918 13:16:58.362" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:16:58.348" endtime="20210918 13:16:58.362"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:16:58.363" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:16:58.362" endtime="20210918 13:16:58.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:58.370" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:58.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:58.381" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:58.368" endtime="20210918 13:16:58.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:58.382" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:58.382" endtime="20210918 13:16:58.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:58.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:58.383" endtime="20210918 13:16:58.383"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.367" endtime="20210918 13:16:58.384"/>
</kw>
<msg timestamp="20210918 13:16:58.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:58.367" endtime="20210918 13:16:58.384"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.366" endtime="20210918 13:16:58.384"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.364" endtime="20210918 13:16:58.385"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.347" endtime="20210918 13:16:58.385"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.347" endtime="20210918 13:16:58.385"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:58.391" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:58.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:58.396" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:58.389" endtime="20210918 13:16:58.396"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:58.397" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:58.396" endtime="20210918 13:16:58.397"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:58.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:58.397" endtime="20210918 13:16:58.398"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.388" endtime="20210918 13:16:58.399"/>
</kw>
<msg timestamp="20210918 13:16:58.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:58.388" endtime="20210918 13:16:58.399"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.387" endtime="20210918 13:16:58.399"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:58.405" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:58.409" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:58.409" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:16:58.402" endtime="20210918 13:16:58.409"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:58.411" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:16:58.410" endtime="20210918 13:16:58.411"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:58.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:58.411" endtime="20210918 13:16:58.412"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.401" endtime="20210918 13:16:58.412"/>
</kw>
<msg timestamp="20210918 13:16:58.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:58.401" endtime="20210918 13:16:58.412"/>
</kw>
<msg timestamp="20210918 13:16:58.413" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:16:58.401" endtime="20210918 13:16:58.413"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:16:58.414" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:16:58.413" endtime="20210918 13:16:58.414"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:58.420" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:16:58.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:16:58.429" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:16:58.417" endtime="20210918 13:16:58.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:16:58.432" level="INFO"/>
<status status="PASS" starttime="20210918 13:16:58.431" endtime="20210918 13:16:58.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:16:58.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:16:58.433" endtime="20210918 13:16:58.435"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.416" endtime="20210918 13:16:58.436"/>
</kw>
<msg timestamp="20210918 13:16:58.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:16:58.416" endtime="20210918 13:16:58.436"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.415" endtime="20210918 13:16:58.437"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.414" endtime="20210918 13:16:58.437"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.400" endtime="20210918 13:16:58.438"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.400" endtime="20210918 13:16:58.438"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:16:58.443" level="INFO">Running command 'ozone sh key list 97941-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:03.411" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:17:03.411" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 97941-target unreadable-link null</msg>
<status status="PASS" starttime="20210918 13:16:58.440" endtime="20210918 13:17:03.411"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:03.413" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 97941-target unreadable-link null</msg>
<status status="PASS" starttime="20210918 13:17:03.412" endtime="20210918 13:17:03.413"/>
</kw>
<msg timestamp="20210918 13:17:03.414" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 97941-target unreadable-link null</msg>
<status status="PASS" starttime="20210918 13:16:58.438" endtime="20210918 13:17:03.414"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:17:03.414" endtime="20210918 13:17:03.415"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.386" endtime="20210918 13:17:03.415"/>
</kw>
<status status="PASS" starttime="20210918 13:16:58.385" endtime="20210918 13:17:03.415"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:16:58.345" endtime="20210918 13:17:03.415"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:03.428" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:03.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:03.434" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:17:03.425" endtime="20210918 13:17:03.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:03.435" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:17:03.434" endtime="20210918 13:17:03.435"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:03.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:03.436" endtime="20210918 13:17:03.437"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.422" endtime="20210918 13:17:03.437"/>
</kw>
<msg timestamp="20210918 13:17:03.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:03.420" endtime="20210918 13:17:03.438"/>
</kw>
<msg timestamp="20210918 13:17:03.438" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:17:03.419" endtime="20210918 13:17:03.438"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:17:03.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:17:03.439" endtime="20210918 13:17:03.440"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:03.447" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:03.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:03.457" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:03.444" endtime="20210918 13:17:03.457"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:03.459" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:03.458" endtime="20210918 13:17:03.459"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:03.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:03.459" endtime="20210918 13:17:03.460"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.443" endtime="20210918 13:17:03.461"/>
</kw>
<msg timestamp="20210918 13:17:03.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:03.442" endtime="20210918 13:17:03.461"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.441" endtime="20210918 13:17:03.461"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.440" endtime="20210918 13:17:03.461"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.419" endtime="20210918 13:17:03.462"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.418" endtime="20210918 13:17:03.462"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:03.470" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:03.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:03.475" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:03.467" endtime="20210918 13:17:03.475"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:03.477" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:03.476" endtime="20210918 13:17:03.477"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:03.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:03.477" endtime="20210918 13:17:03.478"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.466" endtime="20210918 13:17:03.479"/>
</kw>
<msg timestamp="20210918 13:17:03.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:03.465" endtime="20210918 13:17:03.479"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.464" endtime="20210918 13:17:03.479"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:03.486" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:03.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:03.493" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:17:03.484" endtime="20210918 13:17:03.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:03.495" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:17:03.494" endtime="20210918 13:17:03.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:03.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:03.496" endtime="20210918 13:17:03.496"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.483" endtime="20210918 13:17:03.497"/>
</kw>
<msg timestamp="20210918 13:17:03.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:03.482" endtime="20210918 13:17:03.497"/>
</kw>
<msg timestamp="20210918 13:17:03.498" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:17:03.481" endtime="20210918 13:17:03.498"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:17:03.499" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:17:03.498" endtime="20210918 13:17:03.499"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:03.507" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:03.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:03.517" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:03.504" endtime="20210918 13:17:03.517"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:03.518" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:03.517" endtime="20210918 13:17:03.518"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:03.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:03.518" endtime="20210918 13:17:03.519"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.503" endtime="20210918 13:17:03.520"/>
</kw>
<msg timestamp="20210918 13:17:03.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:03.503" endtime="20210918 13:17:03.520"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.500" endtime="20210918 13:17:03.520"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.500" endtime="20210918 13:17:03.520"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.480" endtime="20210918 13:17:03.521"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.480" endtime="20210918 13:17:03.521"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:03.527" level="INFO">Running command 'ozone sh bucket info 97941-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:11.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:11.346" level="INFO">${output} = {
  "volumeName" : "97941-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-18T13:10:17.726Z...</msg>
<status status="PASS" starttime="20210918 13:17:03.524" endtime="20210918 13:17:11.346"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:11.348" level="INFO">{
  "volumeName" : "97941-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-18T13:10:17.726Z",
  "modificationTime" : "2021-09-18T13:10:54.067Z"
}</msg>
<status status="PASS" starttime="20210918 13:17:11.347" endtime="20210918 13:17:11.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:11.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:11.348" endtime="20210918 13:17:11.349"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.524" endtime="20210918 13:17:11.350"/>
</kw>
<msg timestamp="20210918 13:17:11.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:03.523" endtime="20210918 13:17:11.351"/>
</kw>
<msg timestamp="20210918 13:17:11.353" level="INFO">${result} = {
  "volumeName" : "97941-target",
  "bucketName" : "link-to-unreadable-bucket",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "unreadable-bucket",
  "creationTime" : "2021-09-18T13:10:17.726Z...</msg>
<status status="PASS" starttime="20210918 13:17:03.521" endtime="20210918 13:17:11.353"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:17:11.353" endtime="20210918 13:17:11.354"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:17:11.354" endtime="20210918 13:17:11.355"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:11.360" level="INFO">Running command 'ozone sh key list 97941-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:18.685" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:17:18.685" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 97941-source unreadable-bucket </msg>
<status status="PASS" starttime="20210918 13:17:11.357" endtime="20210918 13:17:18.685"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:18.686" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 97941-source unreadable-bucket </msg>
<status status="PASS" starttime="20210918 13:17:18.685" endtime="20210918 13:17:18.686"/>
</kw>
<msg timestamp="20210918 13:17:18.687" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 97941-source unreadable-bucket </msg>
<status status="PASS" starttime="20210918 13:17:11.355" endtime="20210918 13:17:18.687"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:17:18.687" endtime="20210918 13:17:18.687"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.463" endtime="20210918 13:17:18.687"/>
</kw>
<status status="PASS" starttime="20210918 13:17:03.462" endtime="20210918 13:17:18.687"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:17:03.416" endtime="20210918 13:17:18.688"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:18.701" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:18.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:18.707" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:17:18.698" endtime="20210918 13:17:18.707"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:18.708" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:17:18.707" endtime="20210918 13:17:18.708"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:18.709" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:18.708" endtime="20210918 13:17:18.709"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.696" endtime="20210918 13:17:18.709"/>
</kw>
<msg timestamp="20210918 13:17:18.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:18.695" endtime="20210918 13:17:18.710"/>
</kw>
<msg timestamp="20210918 13:17:18.710" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:17:18.694" endtime="20210918 13:17:18.710"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:17:18.712" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:17:18.711" endtime="20210918 13:17:18.712"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:18.719" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:18.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:18.728" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:18.716" endtime="20210918 13:17:18.728"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:18.730" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:18.729" endtime="20210918 13:17:18.730"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:18.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:18.730" endtime="20210918 13:17:18.731"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.715" endtime="20210918 13:17:18.732"/>
</kw>
<msg timestamp="20210918 13:17:18.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:18.714" endtime="20210918 13:17:18.732"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.713" endtime="20210918 13:17:18.732"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.712" endtime="20210918 13:17:18.732"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.692" endtime="20210918 13:17:18.733"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.691" endtime="20210918 13:17:18.733"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:18.737" level="INFO">Running command 'ozone sh bucket link 97941-target/loop1 97941-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:25.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:25.627" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:18.735" endtime="20210918 13:17:25.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:25.628" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:25.628" endtime="20210918 13:17:25.628"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:25.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:25.629" endtime="20210918 13:17:25.629"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.734" endtime="20210918 13:17:25.630"/>
</kw>
<msg timestamp="20210918 13:17:25.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:18.734" endtime="20210918 13:17:25.630"/>
</kw>
<status status="PASS" starttime="20210918 13:17:18.733" endtime="20210918 13:17:25.630"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:25.635" level="INFO">Running command 'ozone sh bucket link 97941-target/loop2 97941-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:33.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:33.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:25.632" endtime="20210918 13:17:33.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:33.036" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:33.035" endtime="20210918 13:17:33.036"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:33.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:33.037" endtime="20210918 13:17:33.038"/>
</kw>
<status status="PASS" starttime="20210918 13:17:25.632" endtime="20210918 13:17:33.038"/>
</kw>
<msg timestamp="20210918 13:17:33.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:25.631" endtime="20210918 13:17:33.039"/>
</kw>
<status status="PASS" starttime="20210918 13:17:25.631" endtime="20210918 13:17:33.040"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:33.046" level="INFO">Running command 'ozone sh bucket link 97941-target/loop3 97941-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:40.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:40.560" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:33.043" endtime="20210918 13:17:40.560"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:40.561" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:40.560" endtime="20210918 13:17:40.561"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:40.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:40.561" endtime="20210918 13:17:40.562"/>
</kw>
<status status="PASS" starttime="20210918 13:17:33.041" endtime="20210918 13:17:40.562"/>
</kw>
<msg timestamp="20210918 13:17:40.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:33.041" endtime="20210918 13:17:40.562"/>
</kw>
<status status="PASS" starttime="20210918 13:17:33.040" endtime="20210918 13:17:40.562"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:40.566" level="INFO">Running command 'ozone sh key list 97941-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:47.692" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:17:47.693" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210918 13:17:40.563" endtime="20210918 13:17:47.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:47.694" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210918 13:17:47.693" endtime="20210918 13:17:47.695"/>
</kw>
<msg timestamp="20210918 13:17:47.695" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210918 13:17:40.563" endtime="20210918 13:17:47.695"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:17:47.695" endtime="20210918 13:17:47.696"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:17:18.688" endtime="20210918 13:17:47.696"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:47.708" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:47.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:47.714" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:17:47.706" endtime="20210918 13:17:47.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:47.715" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:17:47.715" endtime="20210918 13:17:47.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:47.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:47.715" endtime="20210918 13:17:47.716"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.705" endtime="20210918 13:17:47.717"/>
</kw>
<msg timestamp="20210918 13:17:47.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:47.704" endtime="20210918 13:17:47.717"/>
</kw>
<msg timestamp="20210918 13:17:47.717" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:17:47.703" endtime="20210918 13:17:47.718"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:17:47.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:17:47.718" endtime="20210918 13:17:47.719"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:47.724" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:47.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:47.733" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:47.721" endtime="20210918 13:17:47.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:47.734" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:47.733" endtime="20210918 13:17:47.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:47.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:47.734" endtime="20210918 13:17:47.735"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.721" endtime="20210918 13:17:47.735"/>
</kw>
<msg timestamp="20210918 13:17:47.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:47.720" endtime="20210918 13:17:47.735"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.720" endtime="20210918 13:17:47.736"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.719" endtime="20210918 13:17:47.736"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.700" endtime="20210918 13:17:47.736"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.699" endtime="20210918 13:17:47.736"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:47.740" level="INFO">Running command 'ozone sh bucket link 97941-source/bucket1 97941-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:17:55.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:17:55.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:17:47.738" endtime="20210918 13:17:55.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:17:55.328" level="INFO"/>
<status status="PASS" starttime="20210918 13:17:55.327" endtime="20210918 13:17:55.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:17:55.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:17:55.328" endtime="20210918 13:17:55.329"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.737" endtime="20210918 13:17:55.329"/>
</kw>
<msg timestamp="20210918 13:17:55.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:17:47.737" endtime="20210918 13:17:55.330"/>
</kw>
<status status="PASS" starttime="20210918 13:17:47.736" endtime="20210918 13:17:55.330"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:17:55.334" level="INFO">Running command 'ozone sh key put 97941-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:19:47.699" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:17:55.332" endtime="20210918 13:19:47.699"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:19:47.700" endtime="20210918 13:19:47.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:19:47.700" endtime="20210918 13:19:47.700"/>
</kw>
<status status="FAIL" starttime="20210918 13:17:55.331" endtime="20210918 13:19:47.700"/>
</kw>
<msg timestamp="20210918 13:19:47.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:17:55.331" endtime="20210918 13:19:47.701"/>
</kw>
<status status="FAIL" starttime="20210918 13:17:55.330" endtime="20210918 13:19:47.701"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210918 13:19:47.701" endtime="20210918 13:19:47.701"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210918 13:17:47.698" endtime="20210918 13:19:47.702">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:19:47.709" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:19:47.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:19:47.715" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:19:47.707" endtime="20210918 13:19:47.715"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:19:47.717" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:19:47.716" endtime="20210918 13:19:47.717"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:19:47.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:19:47.717" endtime="20210918 13:19:47.718"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.706" endtime="20210918 13:19:47.719"/>
</kw>
<msg timestamp="20210918 13:19:47.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:19:47.706" endtime="20210918 13:19:47.719"/>
</kw>
<msg timestamp="20210918 13:19:47.719" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:19:47.705" endtime="20210918 13:19:47.719"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:19:47.720" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:19:47.719" endtime="20210918 13:19:47.720"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:19:47.726" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:19:47.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:19:47.735" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:19:47.724" endtime="20210918 13:19:47.735"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:19:47.736" level="INFO"/>
<status status="PASS" starttime="20210918 13:19:47.735" endtime="20210918 13:19:47.736"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:19:47.737" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:19:47.737" endtime="20210918 13:19:47.738"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.723" endtime="20210918 13:19:47.738"/>
</kw>
<msg timestamp="20210918 13:19:47.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:19:47.722" endtime="20210918 13:19:47.739"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.721" endtime="20210918 13:19:47.739"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.720" endtime="20210918 13:19:47.739"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.705" endtime="20210918 13:19:47.740"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.704" endtime="20210918 13:19:47.740"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:19:47.747" level="INFO">Running command 'ozone sh bucket delete 97941-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:19:55.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:19:55.469" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:19:47.743" endtime="20210918 13:19:55.469"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:19:55.470" level="INFO"/>
<status status="PASS" starttime="20210918 13:19:55.469" endtime="20210918 13:19:55.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:19:55.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:19:55.470" endtime="20210918 13:19:55.471"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.742" endtime="20210918 13:19:55.471"/>
</kw>
<msg timestamp="20210918 13:19:55.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:19:47.742" endtime="20210918 13:19:55.471"/>
</kw>
<status status="PASS" starttime="20210918 13:19:47.741" endtime="20210918 13:19:55.472"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:19:55.475" level="INFO">Running command 'ozone sh bucket list 97941-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:04.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:04.048" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T...</msg>
<status status="PASS" starttime="20210918 13:19:55.473" endtime="20210918 13:20:04.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:04.051" level="INFO">{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:16:44.241Z",
  "modificationTime" : "2021-09-18T13:16:44.241Z",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:59.913Z",
  "modificationTime" : "2021-09-18T13:10:59.913Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:17.726Z",
  "modificationTime" : "2021-09-18T13:10:54.067Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:16:31.721Z",
  "modificationTime" : "2021-09-18T13:16:31.721Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:17:55.163Z",
  "modificationTime" : "2021-09-18T13:17:55.163Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:17:40.488Z",
  "modificationTime" : "2021-09-18T13:17:40.488Z",
  "sourceVolume" : "97941-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:17:25.446Z",
  "modificationTime" : "2021-09-18T13:17:25.446Z",
  "sourceVolume" : "97941-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:17:32.974Z",
  "modificationTime" : "2021-09-18T13:17:32.974Z",
  "sourceVolume" : "97941-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:03.813Z",
  "modificationTime" : "2021-09-18T13:10:47.663Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}
{
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T13:10:10.442Z",
  "modificationTime" : "2021-09-18T13:10:10.442Z",
  "sourceVolume" : "97941-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1,
  "bucketLayout" : "LEGACY"
}</msg>
<status status="PASS" starttime="20210918 13:20:04.049" endtime="20210918 13:20:04.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:04.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:04.051" endtime="20210918 13:20:04.052"/>
</kw>
<status status="PASS" starttime="20210918 13:19:55.473" endtime="20210918 13:20:04.053"/>
</kw>
<msg timestamp="20210918 13:20:04.053" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:19:55.472" endtime="20210918 13:20:04.053"/>
</kw>
<msg timestamp="20210918 13:20:04.054" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "97941-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-09-18T...</msg>
<status status="PASS" starttime="20210918 13:19:55.472" endtime="20210918 13:20:04.054"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:20:04.054" endtime="20210918 13:20:04.055"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:04.060" level="INFO">Running command 'ozone sh key list 97941-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:11.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:11.915" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210918 13:20:04.058" endtime="20210918 13:20:11.916"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:11.917" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210918 13:20:11.916" endtime="20210918 13:20:11.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:11.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:11.917" endtime="20210918 13:20:11.918"/>
</kw>
<status status="PASS" starttime="20210918 13:20:04.057" endtime="20210918 13:20:11.918"/>
</kw>
<msg timestamp="20210918 13:20:11.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:04.056" endtime="20210918 13:20:11.918"/>
</kw>
<msg timestamp="20210918 13:20:11.919" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210918 13:20:04.055" endtime="20210918 13:20:11.919"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:20:11.919" endtime="20210918 13:20:11.920"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:19:47.702" endtime="20210918 13:20:11.920"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210918 13:06:14.529" endtime="20210918 13:20:11.922"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210918 13:20:11.962" level="INFO">${random} = 24467</msg>
<status status="PASS" starttime="20210918 13:20:11.961" endtime="20210918 13:20:11.962"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:20:11.963" level="INFO">${prefix} = 24467</msg>
<status status="PASS" starttime="20210918 13:20:11.962" endtime="20210918 13:20:11.963"/>
</kw>
<status status="PASS" starttime="20210918 13:20:11.961" endtime="20210918 13:20:11.963"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:11.972" level="INFO">Running command 'ozone sh volume info /24467-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:18.831" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:20:18.831" level="INFO">${output} = VOLUME_NOT_FOUND Volume 24467-rpcbasic is not found</msg>
<status status="PASS" starttime="20210918 13:20:11.969" endtime="20210918 13:20:18.831"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:18.833" level="INFO">VOLUME_NOT_FOUND Volume 24467-rpcbasic is not found</msg>
<status status="PASS" starttime="20210918 13:20:18.832" endtime="20210918 13:20:18.833"/>
</kw>
<msg timestamp="20210918 13:20:18.834" level="INFO">${result} = VOLUME_NOT_FOUND Volume 24467-rpcbasic is not found</msg>
<status status="PASS" starttime="20210918 13:20:11.968" endtime="20210918 13:20:18.834"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:20:18.834" endtime="20210918 13:20:18.835"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:18.841" level="INFO">Running command 'ozone sh volume create /24467-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:26.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:26.326" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:20:18.838" endtime="20210918 13:20:26.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:26.327" level="INFO"/>
<status status="PASS" starttime="20210918 13:20:26.326" endtime="20210918 13:20:26.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:26.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:26.328" endtime="20210918 13:20:26.330"/>
</kw>
<status status="PASS" starttime="20210918 13:20:18.837" endtime="20210918 13:20:26.331"/>
</kw>
<msg timestamp="20210918 13:20:26.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:18.836" endtime="20210918 13:20:26.331"/>
</kw>
<msg timestamp="20210918 13:20:26.332" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210918 13:20:18.835" endtime="20210918 13:20:26.332"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:20:26.332" endtime="20210918 13:20:26.332"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:26.339" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="24467-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:35.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:35.591" level="INFO">${output} = {
  "metadata": {},
  "name": "24467-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:20:26.336" endtime="20210918 13:20:35.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:35.592" level="INFO">{
  "metadata": {},
  "name": "24467-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:20:26.234Z",
  "modificationTime": "2021-09-18T13:20:26.234Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:20:35.591" endtime="20210918 13:20:35.592"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:35.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:35.592" endtime="20210918 13:20:35.593"/>
</kw>
<status status="PASS" starttime="20210918 13:20:26.334" endtime="20210918 13:20:35.593"/>
</kw>
<msg timestamp="20210918 13:20:35.593" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:26.334" endtime="20210918 13:20:35.594"/>
</kw>
<msg timestamp="20210918 13:20:35.594" level="INFO">${result} = {
  "metadata": {},
  "name": "24467-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:20:26.333" endtime="20210918 13:20:35.594"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:20:35.594" endtime="20210918 13:20:35.595"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:35.600" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="24467-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:43.870" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:43.871" level="INFO">${output} = {
  "metadata": {},
  "name": "24467-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:20:35.597" endtime="20210918 13:20:43.871"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:43.872" level="INFO">{
  "metadata": {},
  "name": "24467-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:20:26.234Z",
  "modificationTime": "2021-09-18T13:20:26.234Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:20:43.871" endtime="20210918 13:20:43.872"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:43.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:43.873" endtime="20210918 13:20:43.874"/>
</kw>
<status status="PASS" starttime="20210918 13:20:35.596" endtime="20210918 13:20:43.875"/>
</kw>
<msg timestamp="20210918 13:20:43.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:35.595" endtime="20210918 13:20:43.875"/>
</kw>
<msg timestamp="20210918 13:20:43.875" level="INFO">${result} = {
  "metadata": {},
  "name": "24467-rpcbasic",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:20:35.595" endtime="20210918 13:20:43.875"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:20:43.876" endtime="20210918 13:20:43.876"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:43.882" level="INFO">Running command 'ozone sh volume setquota /24467-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:50.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:50.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:20:43.879" endtime="20210918 13:20:50.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:50.939" level="INFO"/>
<status status="PASS" starttime="20210918 13:20:50.938" endtime="20210918 13:20:50.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:50.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:50.940" endtime="20210918 13:20:50.940"/>
</kw>
<status status="PASS" starttime="20210918 13:20:43.878" endtime="20210918 13:20:50.941"/>
</kw>
<msg timestamp="20210918 13:20:50.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:43.878" endtime="20210918 13:20:50.941"/>
</kw>
<status status="PASS" starttime="20210918 13:20:43.877" endtime="20210918 13:20:50.942"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:50.949" level="INFO">Running command 'ozone sh volume info /24467-rpcbasic | jq -r '. | select(.name=="24467-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:20:59.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:20:59.103" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:20:50.945" endtime="20210918 13:20:59.103"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:20:59.105" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:20:59.104" endtime="20210918 13:20:59.105"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:20:59.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:20:59.105" endtime="20210918 13:20:59.105"/>
</kw>
<status status="PASS" starttime="20210918 13:20:50.944" endtime="20210918 13:20:59.106"/>
</kw>
<msg timestamp="20210918 13:20:59.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:50.944" endtime="20210918 13:20:59.106"/>
</kw>
<msg timestamp="20210918 13:20:59.106" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:20:50.942" endtime="20210918 13:20:59.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:20:59.107" endtime="20210918 13:20:59.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:20:59.112" level="INFO">Running command 'ozone sh bucket create /24467-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:05.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:05.778" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:20:59.109" endtime="20210918 13:21:05.778"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:05.780" level="INFO"/>
<status status="PASS" starttime="20210918 13:21:05.778" endtime="20210918 13:21:05.780"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:05.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:05.780" endtime="20210918 13:21:05.781"/>
</kw>
<status status="PASS" starttime="20210918 13:20:59.108" endtime="20210918 13:21:05.782"/>
</kw>
<msg timestamp="20210918 13:21:05.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:20:59.108" endtime="20210918 13:21:05.782"/>
</kw>
<status status="PASS" starttime="20210918 13:20:59.107" endtime="20210918 13:21:05.782"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:05.796" level="INFO">Running command 'ozone sh bucket info /24467-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:11.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:11.694" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210918 13:21:05.788" endtime="20210918 13:21:11.694"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:11.698" level="INFO">DISK</msg>
<status status="PASS" starttime="20210918 13:21:11.695" endtime="20210918 13:21:11.698"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:11.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:11.698" endtime="20210918 13:21:11.699"/>
</kw>
<status status="PASS" starttime="20210918 13:21:05.786" endtime="20210918 13:21:11.699"/>
</kw>
<msg timestamp="20210918 13:21:11.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:05.785" endtime="20210918 13:21:11.699"/>
</kw>
<msg timestamp="20210918 13:21:11.700" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210918 13:21:05.783" endtime="20210918 13:21:11.700"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:21:11.700" endtime="20210918 13:21:11.701"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:11.707" level="INFO">Running command 'ozone sh bucket info /24467-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:19.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:19.604" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:21:11.703" endtime="20210918 13:21:19.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:19.606" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:21:19.605" endtime="20210918 13:21:19.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:19.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:19.606" endtime="20210918 13:21:19.607"/>
</kw>
<status status="PASS" starttime="20210918 13:21:11.703" endtime="20210918 13:21:19.607"/>
</kw>
<msg timestamp="20210918 13:21:19.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:11.702" endtime="20210918 13:21:19.608"/>
</kw>
<msg timestamp="20210918 13:21:19.608" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:21:11.701" endtime="20210918 13:21:19.608"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:21:19.608" endtime="20210918 13:21:19.609"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:19.615" level="INFO">Running command 'ozone sh bucket info /24467-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:27.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:27.250" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210918 13:21:19.611" endtime="20210918 13:21:27.250"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:27.251" level="INFO">100</msg>
<status status="PASS" starttime="20210918 13:21:27.251" endtime="20210918 13:21:27.251"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:27.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:27.252" endtime="20210918 13:21:27.252"/>
</kw>
<status status="PASS" starttime="20210918 13:21:19.610" endtime="20210918 13:21:27.253"/>
</kw>
<msg timestamp="20210918 13:21:27.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:19.610" endtime="20210918 13:21:27.253"/>
</kw>
<msg timestamp="20210918 13:21:27.253" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210918 13:21:19.609" endtime="20210918 13:21:27.253"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:21:27.254" endtime="20210918 13:21:27.254"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:27.260" level="INFO">Running command 'ozone sh bucket setquota /24467-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:34.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:34.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:21:27.256" endtime="20210918 13:21:34.378"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:34.380" level="INFO"/>
<status status="PASS" starttime="20210918 13:21:34.379" endtime="20210918 13:21:34.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:34.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:34.380" endtime="20210918 13:21:34.381"/>
</kw>
<status status="PASS" starttime="20210918 13:21:27.256" endtime="20210918 13:21:34.381"/>
</kw>
<msg timestamp="20210918 13:21:34.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:27.255" endtime="20210918 13:21:34.381"/>
</kw>
<status status="PASS" starttime="20210918 13:21:27.254" endtime="20210918 13:21:34.384"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:34.389" level="INFO">Running command 'ozone sh bucket info /24467-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:43.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:43.077" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:21:34.386" endtime="20210918 13:21:43.077"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:43.078" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210918 13:21:43.078" endtime="20210918 13:21:43.079"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:43.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:43.079" endtime="20210918 13:21:43.080"/>
</kw>
<status status="PASS" starttime="20210918 13:21:34.385" endtime="20210918 13:21:43.080"/>
</kw>
<msg timestamp="20210918 13:21:43.080" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:34.385" endtime="20210918 13:21:43.080"/>
</kw>
<msg timestamp="20210918 13:21:43.081" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:21:34.384" endtime="20210918 13:21:43.081"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:21:43.081" endtime="20210918 13:21:43.081"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:43.089" level="INFO">Running command 'ozone sh bucket info /24467-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:51.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:51.513" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210918 13:21:43.084" endtime="20210918 13:21:51.513"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:51.515" level="INFO">1000</msg>
<status status="PASS" starttime="20210918 13:21:51.513" endtime="20210918 13:21:51.515"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:51.516" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:51.515" endtime="20210918 13:21:51.516"/>
</kw>
<status status="PASS" starttime="20210918 13:21:43.083" endtime="20210918 13:21:51.516"/>
</kw>
<msg timestamp="20210918 13:21:51.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:43.083" endtime="20210918 13:21:51.517"/>
</kw>
<msg timestamp="20210918 13:21:51.517" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210918 13:21:43.082" endtime="20210918 13:21:51.517"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:21:51.517" endtime="20210918 13:21:51.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:51.525" level="INFO">Running command 'ozone sh bucket list /24467-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:21:59.627" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:21:59.627" level="INFO">${output} = 24467-rpcbasic</msg>
<status status="PASS" starttime="20210918 13:21:51.523" endtime="20210918 13:21:59.627"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:21:59.629" level="INFO">24467-rpcbasic</msg>
<status status="PASS" starttime="20210918 13:21:59.628" endtime="20210918 13:21:59.629"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:21:59.630" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:21:59.629" endtime="20210918 13:21:59.630"/>
</kw>
<status status="PASS" starttime="20210918 13:21:51.522" endtime="20210918 13:21:59.630"/>
</kw>
<msg timestamp="20210918 13:21:59.631" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:51.520" endtime="20210918 13:21:59.631"/>
</kw>
<msg timestamp="20210918 13:21:59.631" level="INFO">${result} = 24467-rpcbasic</msg>
<status status="PASS" starttime="20210918 13:21:51.518" endtime="20210918 13:21:59.631"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:21:59.631" endtime="20210918 13:21:59.632"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:21:59.638" level="INFO">Running command 'ozone sh key put /24467-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:11.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:11.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:21:59.636" endtime="20210918 13:25:11.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:11.033" level="INFO"/>
<status status="PASS" starttime="20210918 13:25:11.032" endtime="20210918 13:25:11.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:11.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:11.034" endtime="20210918 13:25:11.036"/>
</kw>
<status status="PASS" starttime="20210918 13:21:59.635" endtime="20210918 13:25:11.036"/>
</kw>
<msg timestamp="20210918 13:25:11.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:21:59.634" endtime="20210918 13:25:11.037"/>
</kw>
<status status="PASS" starttime="20210918 13:21:59.633" endtime="20210918 13:25:11.037"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:11.044" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:11.048" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:11.048" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:25:11.042" endtime="20210918 13:25:11.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:11.049" level="INFO"/>
<status status="PASS" starttime="20210918 13:25:11.048" endtime="20210918 13:25:11.049"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:11.050" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:11.049" endtime="20210918 13:25:11.050"/>
</kw>
<status status="PASS" starttime="20210918 13:25:11.039" endtime="20210918 13:25:11.051"/>
</kw>
<msg timestamp="20210918 13:25:11.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:11.039" endtime="20210918 13:25:11.051"/>
</kw>
<status status="PASS" starttime="20210918 13:25:11.038" endtime="20210918 13:25:11.051"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:11.057" level="INFO">Running command 'ozone sh key get /24467-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:11.965" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:25:11.055" endtime="20210918 13:25:11.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.966" endtime="20210918 13:25:11.966"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.966" endtime="20210918 13:25:11.966"/>
</kw>
<status status="FAIL" starttime="20210918 13:25:11.053" endtime="20210918 13:25:11.967"/>
</kw>
<msg timestamp="20210918 13:25:11.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:25:11.052" endtime="20210918 13:25:11.967"/>
</kw>
<status status="FAIL" starttime="20210918 13:25:11.051" endtime="20210918 13:25:11.967"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.967" endtime="20210918 13:25:11.967"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.968" endtime="20210918 13:25:11.968"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.968" endtime="20210918 13:25:11.968"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.968" endtime="20210918 13:25:11.968"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.968" endtime="20210918 13:25:11.969"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.969" endtime="20210918 13:25:11.969"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.969" endtime="20210918 13:25:11.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.969" endtime="20210918 13:25:11.969"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.970" endtime="20210918 13:25:11.970"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.970" endtime="20210918 13:25:11.970"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.970" endtime="20210918 13:25:11.970"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.971" endtime="20210918 13:25:11.971"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.971" endtime="20210918 13:25:11.971"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.971" endtime="20210918 13:25:11.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.972" endtime="20210918 13:25:11.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.972" endtime="20210918 13:25:11.972"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.972" endtime="20210918 13:25:11.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.972" endtime="20210918 13:25:11.972"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.972" endtime="20210918 13:25:11.972"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.973" endtime="20210918 13:25:11.973"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.976" endtime="20210918 13:25:11.976"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.976" endtime="20210918 13:25:11.976"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.976" endtime="20210918 13:25:11.976"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.976" endtime="20210918 13:25:11.977"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.980" endtime="20210918 13:25:11.980"/>
</kw>
<status status="FAIL" starttime="20210918 13:21:59.632" endtime="20210918 13:25:11.980"/>
</kw>
<status status="FAIL" starttime="20210918 13:21:59.632" endtime="20210918 13:25:11.980"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.980" endtime="20210918 13:25:11.980"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.980" endtime="20210918 13:25:11.980"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.983" endtime="20210918 13:25:11.983"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.983" endtime="20210918 13:25:11.983"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.983" endtime="20210918 13:25:11.983"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.984" endtime="20210918 13:25:11.984"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.985" endtime="20210918 13:25:11.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.987" endtime="20210918 13:25:11.987"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.987" endtime="20210918 13:25:11.993"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.993" endtime="20210918 13:25:11.993"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.993" endtime="20210918 13:25:11.994"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.994" endtime="20210918 13:25:11.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.994" endtime="20210918 13:25:11.994"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.994" endtime="20210918 13:25:11.995"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.995" endtime="20210918 13:25:11.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.996" endtime="20210918 13:25:11.996"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.996" endtime="20210918 13:25:11.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.997" endtime="20210918 13:25:11.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.997" endtime="20210918 13:25:11.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.997" endtime="20210918 13:25:11.997"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.998" endtime="20210918 13:25:11.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.998" endtime="20210918 13:25:11.998"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.998" endtime="20210918 13:25:11.998"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:25:11.998" endtime="20210918 13:25:11.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.999" endtime="20210918 13:25:11.999"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:25:11.999" endtime="20210918 13:25:11.999"/>
</kw>
<status status="FAIL" starttime="20210918 13:20:11.965" endtime="20210918 13:25:11.999"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210918 13:20:11.964" endtime="20210918 13:25:12.000">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210918 13:20:11.928" endtime="20210918 13:25:12.012"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210918 13:25:12.060" level="INFO">${random} = 36609</msg>
<status status="PASS" starttime="20210918 13:25:12.058" endtime="20210918 13:25:12.060"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:25:12.064" level="INFO">${prefix} = 36609</msg>
<status status="PASS" starttime="20210918 13:25:12.061" endtime="20210918 13:25:12.064"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.056" endtime="20210918 13:25:12.065"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:12.088" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:12.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:12.107" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:25:12.075" endtime="20210918 13:25:12.107"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:12.108" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:25:12.107" endtime="20210918 13:25:12.109"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:12.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:12.109" endtime="20210918 13:25:12.110"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.074" endtime="20210918 13:25:12.110"/>
</kw>
<msg timestamp="20210918 13:25:12.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:12.074" endtime="20210918 13:25:12.111"/>
</kw>
<msg timestamp="20210918 13:25:12.111" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:25:12.073" endtime="20210918 13:25:12.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:25:12.114" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:25:12.112" endtime="20210918 13:25:12.115"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:12.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:12.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:12.215" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:25:12.123" endtime="20210918 13:25:12.215"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:12.235" level="INFO"/>
<status status="PASS" starttime="20210918 13:25:12.223" endtime="20210918 13:25:12.235"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:12.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:12.235" endtime="20210918 13:25:12.237"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.121" endtime="20210918 13:25:12.238"/>
</kw>
<msg timestamp="20210918 13:25:12.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:12.120" endtime="20210918 13:25:12.240"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.117" endtime="20210918 13:25:12.240"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.115" endtime="20210918 13:25:12.240"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.073" endtime="20210918 13:25:12.241"/>
</kw>
<status status="PASS" starttime="20210918 13:25:12.071" endtime="20210918 13:25:12.241"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:12.292" level="INFO">Running command 'ozone sh volume info o3://om:9862/36609-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:27.089" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:25:27.089" level="INFO">${output} = VOLUME_NOT_FOUND Volume 36609-rpcwoport is not found</msg>
<status status="PASS" starttime="20210918 13:25:12.270" endtime="20210918 13:25:27.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:27.092" level="INFO">VOLUME_NOT_FOUND Volume 36609-rpcwoport is not found</msg>
<status status="PASS" starttime="20210918 13:25:27.091" endtime="20210918 13:25:27.092"/>
</kw>
<msg timestamp="20210918 13:25:27.093" level="INFO">${result} = VOLUME_NOT_FOUND Volume 36609-rpcwoport is not found</msg>
<status status="PASS" starttime="20210918 13:25:12.267" endtime="20210918 13:25:27.093"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:25:27.093" endtime="20210918 13:25:27.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:27.112" level="INFO">Running command 'ozone sh volume create o3://om:9862/36609-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:37.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:37.175" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:25:27.099" endtime="20210918 13:25:37.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:37.177" level="INFO"/>
<status status="PASS" starttime="20210918 13:25:37.176" endtime="20210918 13:25:37.178"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:37.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:37.178" endtime="20210918 13:25:37.179"/>
</kw>
<status status="PASS" starttime="20210918 13:25:27.097" endtime="20210918 13:25:37.180"/>
</kw>
<msg timestamp="20210918 13:25:37.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:27.096" endtime="20210918 13:25:37.180"/>
</kw>
<msg timestamp="20210918 13:25:37.181" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210918 13:25:27.095" endtime="20210918 13:25:37.181"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:25:37.181" endtime="20210918 13:25:37.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:37.189" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="36609-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:45.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:45.022" level="INFO">${output} = {
  "metadata": {},
  "name": "36609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210918 13:25:37.186" endtime="20210918 13:25:45.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:45.024" level="INFO">{
  "metadata": {},
  "name": "36609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:25:36.876Z",
  "modificationTime": "2021-09-18T13:25:36.876Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:25:45.023" endtime="20210918 13:25:45.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:45.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:45.024" endtime="20210918 13:25:45.025"/>
</kw>
<status status="PASS" starttime="20210918 13:25:37.185" endtime="20210918 13:25:45.025"/>
</kw>
<msg timestamp="20210918 13:25:45.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:37.185" endtime="20210918 13:25:45.025"/>
</kw>
<msg timestamp="20210918 13:25:45.026" level="INFO">${result} = {
  "metadata": {},
  "name": "36609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210918 13:25:37.182" endtime="20210918 13:25:45.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:25:45.026" endtime="20210918 13:25:45.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:45.033" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="36609-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:50.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:50.864" level="INFO">${output} = {
  "metadata": {},
  "name": "36609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210918 13:25:45.031" endtime="20210918 13:25:50.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:50.865" level="INFO">{
  "metadata": {},
  "name": "36609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:25:36.876Z",
  "modificationTime": "2021-09-18T13:25:36.876Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:25:50.864" endtime="20210918 13:25:50.865"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:50.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:50.865" endtime="20210918 13:25:50.866"/>
</kw>
<status status="PASS" starttime="20210918 13:25:45.027" endtime="20210918 13:25:50.866"/>
</kw>
<msg timestamp="20210918 13:25:50.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:45.027" endtime="20210918 13:25:50.867"/>
</kw>
<msg timestamp="20210918 13:25:50.867" level="INFO">${result} = {
  "metadata": {},
  "name": "36609-rpcwoport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "20...</msg>
<status status="PASS" starttime="20210918 13:25:45.026" endtime="20210918 13:25:50.867"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:25:50.867" endtime="20210918 13:25:50.868"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:50.873" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/36609-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:25:57.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:25:57.752" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:25:50.870" endtime="20210918 13:25:57.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:25:57.754" level="INFO"/>
<status status="PASS" starttime="20210918 13:25:57.752" endtime="20210918 13:25:57.754"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:25:57.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:25:57.754" endtime="20210918 13:25:57.755"/>
</kw>
<status status="PASS" starttime="20210918 13:25:50.869" endtime="20210918 13:25:57.755"/>
</kw>
<msg timestamp="20210918 13:25:57.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:50.869" endtime="20210918 13:25:57.755"/>
</kw>
<status status="PASS" starttime="20210918 13:25:50.868" endtime="20210918 13:25:57.756"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:25:57.760" level="INFO">Running command 'ozone sh volume info o3://om:9862/36609-rpcwoport | jq -r '. | select(.name=="36609-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:02.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:02.420" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:25:57.758" endtime="20210918 13:26:02.420"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:02.421" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:26:02.420" endtime="20210918 13:26:02.421"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:02.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:02.421" endtime="20210918 13:26:02.421"/>
</kw>
<status status="PASS" starttime="20210918 13:25:57.757" endtime="20210918 13:26:02.422"/>
</kw>
<msg timestamp="20210918 13:26:02.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:25:57.757" endtime="20210918 13:26:02.422"/>
</kw>
<msg timestamp="20210918 13:26:02.422" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:25:57.756" endtime="20210918 13:26:02.422"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:02.422" endtime="20210918 13:26:02.423"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:02.426" level="INFO">Running command 'ozone sh bucket create o3://om:9862/36609-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:09.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:09.585" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:26:02.425" endtime="20210918 13:26:09.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:09.586" level="INFO"/>
<status status="PASS" starttime="20210918 13:26:09.585" endtime="20210918 13:26:09.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:09.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:09.587" endtime="20210918 13:26:09.587"/>
</kw>
<status status="PASS" starttime="20210918 13:26:02.424" endtime="20210918 13:26:09.588"/>
</kw>
<msg timestamp="20210918 13:26:09.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:02.424" endtime="20210918 13:26:09.588"/>
</kw>
<status status="PASS" starttime="20210918 13:26:02.423" endtime="20210918 13:26:09.588"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:09.593" level="INFO">Running command 'ozone sh bucket info o3://om:9862/36609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:17.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:17.210" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210918 13:26:09.590" endtime="20210918 13:26:17.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:17.213" level="INFO">DISK</msg>
<status status="PASS" starttime="20210918 13:26:17.211" endtime="20210918 13:26:17.213"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:17.214" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:17.213" endtime="20210918 13:26:17.214"/>
</kw>
<status status="PASS" starttime="20210918 13:26:09.590" endtime="20210918 13:26:17.215"/>
</kw>
<msg timestamp="20210918 13:26:17.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:09.589" endtime="20210918 13:26:17.216"/>
</kw>
<msg timestamp="20210918 13:26:17.216" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210918 13:26:09.588" endtime="20210918 13:26:17.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:17.217" endtime="20210918 13:26:17.218"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:17.225" level="INFO">Running command 'ozone sh bucket info o3://om:9862/36609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:25.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:25.167" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:26:17.222" endtime="20210918 13:26:25.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:25.168" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:26:25.168" endtime="20210918 13:26:25.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:25.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:25.169" endtime="20210918 13:26:25.169"/>
</kw>
<status status="PASS" starttime="20210918 13:26:17.221" endtime="20210918 13:26:25.170"/>
</kw>
<msg timestamp="20210918 13:26:25.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:17.220" endtime="20210918 13:26:25.170"/>
</kw>
<msg timestamp="20210918 13:26:25.170" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:26:17.218" endtime="20210918 13:26:25.170"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:25.171" endtime="20210918 13:26:25.171"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:25.179" level="INFO">Running command 'ozone sh bucket info o3://om:9862/36609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:32.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:32.480" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210918 13:26:25.174" endtime="20210918 13:26:32.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:32.481" level="INFO">100</msg>
<status status="PASS" starttime="20210918 13:26:32.480" endtime="20210918 13:26:32.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:32.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:32.481" endtime="20210918 13:26:32.482"/>
</kw>
<status status="PASS" starttime="20210918 13:26:25.173" endtime="20210918 13:26:32.482"/>
</kw>
<msg timestamp="20210918 13:26:32.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:25.173" endtime="20210918 13:26:32.483"/>
</kw>
<msg timestamp="20210918 13:26:32.483" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210918 13:26:25.171" endtime="20210918 13:26:32.483"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:32.483" endtime="20210918 13:26:32.484"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:32.489" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/36609-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:40.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:40.364" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:26:32.487" endtime="20210918 13:26:40.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:40.365" level="INFO"/>
<status status="PASS" starttime="20210918 13:26:40.364" endtime="20210918 13:26:40.365"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:40.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:40.365" endtime="20210918 13:26:40.366"/>
</kw>
<status status="PASS" starttime="20210918 13:26:32.485" endtime="20210918 13:26:40.367"/>
</kw>
<msg timestamp="20210918 13:26:40.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:32.485" endtime="20210918 13:26:40.367"/>
</kw>
<status status="PASS" starttime="20210918 13:26:32.484" endtime="20210918 13:26:40.367"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:40.373" level="INFO">Running command 'ozone sh bucket info o3://om:9862/36609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:46.109" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:46.109" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:26:40.369" endtime="20210918 13:26:46.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:46.110" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210918 13:26:46.110" endtime="20210918 13:26:46.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:46.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:46.111" endtime="20210918 13:26:46.111"/>
</kw>
<status status="PASS" starttime="20210918 13:26:40.369" endtime="20210918 13:26:46.112"/>
</kw>
<msg timestamp="20210918 13:26:46.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:40.369" endtime="20210918 13:26:46.112"/>
</kw>
<msg timestamp="20210918 13:26:46.112" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:26:40.367" endtime="20210918 13:26:46.112"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:46.112" endtime="20210918 13:26:46.113"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:46.121" level="INFO">Running command 'ozone sh bucket info o3://om:9862/36609-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:51.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:51.570" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210918 13:26:46.119" endtime="20210918 13:26:51.570"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:51.571" level="INFO">1000</msg>
<status status="PASS" starttime="20210918 13:26:51.571" endtime="20210918 13:26:51.571"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:51.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:51.572" endtime="20210918 13:26:51.572"/>
</kw>
<status status="PASS" starttime="20210918 13:26:46.115" endtime="20210918 13:26:51.573"/>
</kw>
<msg timestamp="20210918 13:26:51.573" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:46.115" endtime="20210918 13:26:51.573"/>
</kw>
<msg timestamp="20210918 13:26:51.573" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210918 13:26:46.113" endtime="20210918 13:26:51.573"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:51.573" endtime="20210918 13:26:51.574"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:51.580" level="INFO">Running command 'ozone sh bucket list o3://om:9862/36609-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:26:58.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:26:58.899" level="INFO">${output} = 36609-rpcwoport</msg>
<status status="PASS" starttime="20210918 13:26:51.577" endtime="20210918 13:26:58.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:26:58.902" level="INFO">36609-rpcwoport</msg>
<status status="PASS" starttime="20210918 13:26:58.901" endtime="20210918 13:26:58.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:26:58.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:26:58.903" endtime="20210918 13:26:58.904"/>
</kw>
<status status="PASS" starttime="20210918 13:26:51.576" endtime="20210918 13:26:58.905"/>
</kw>
<msg timestamp="20210918 13:26:58.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:51.576" endtime="20210918 13:26:58.905"/>
</kw>
<msg timestamp="20210918 13:26:58.906" level="INFO">${result} = 36609-rpcwoport</msg>
<status status="PASS" starttime="20210918 13:26:51.574" endtime="20210918 13:26:58.906"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:26:58.906" endtime="20210918 13:26:58.907"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:26:58.918" level="INFO">Running command 'ozone sh key put o3://om:9862/36609-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:08.328" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:08.328" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:26:58.915" endtime="20210918 13:30:08.329"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:08.330" level="INFO"/>
<status status="PASS" starttime="20210918 13:30:08.329" endtime="20210918 13:30:08.330"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:08.331" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:08.330" endtime="20210918 13:30:08.331"/>
</kw>
<status status="PASS" starttime="20210918 13:26:58.914" endtime="20210918 13:30:08.331"/>
</kw>
<msg timestamp="20210918 13:30:08.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:26:58.911" endtime="20210918 13:30:08.332"/>
</kw>
<status status="PASS" starttime="20210918 13:26:58.910" endtime="20210918 13:30:08.332"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:08.336" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:08.341" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:08.341" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:30:08.334" endtime="20210918 13:30:08.341"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:08.343" level="INFO"/>
<status status="PASS" starttime="20210918 13:30:08.342" endtime="20210918 13:30:08.343"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:08.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:08.343" endtime="20210918 13:30:08.345"/>
</kw>
<status status="PASS" starttime="20210918 13:30:08.333" endtime="20210918 13:30:08.346"/>
</kw>
<msg timestamp="20210918 13:30:08.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:08.333" endtime="20210918 13:30:08.346"/>
</kw>
<status status="PASS" starttime="20210918 13:30:08.332" endtime="20210918 13:30:08.346"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:08.350" level="INFO">Running command 'ozone sh key get o3://om:9862/36609-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:12.069" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:30:08.348" endtime="20210918 13:30:12.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.070" endtime="20210918 13:30:12.070"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.070" endtime="20210918 13:30:12.070"/>
</kw>
<status status="FAIL" starttime="20210918 13:30:08.348" endtime="20210918 13:30:12.070"/>
</kw>
<msg timestamp="20210918 13:30:12.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:30:08.347" endtime="20210918 13:30:12.071"/>
</kw>
<status status="FAIL" starttime="20210918 13:30:08.346" endtime="20210918 13:30:12.071"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.071" endtime="20210918 13:30:12.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.071" endtime="20210918 13:30:12.071"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.071" endtime="20210918 13:30:12.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.072" endtime="20210918 13:30:12.072"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.072" endtime="20210918 13:30:12.074"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.075" endtime="20210918 13:30:12.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.075" endtime="20210918 13:30:12.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.075" endtime="20210918 13:30:12.075"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.075" endtime="20210918 13:30:12.075"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.076" endtime="20210918 13:30:12.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.076" endtime="20210918 13:30:12.076"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.076" endtime="20210918 13:30:12.076"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.076" endtime="20210918 13:30:12.076"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.076" endtime="20210918 13:30:12.077"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.077" endtime="20210918 13:30:12.077"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.077" endtime="20210918 13:30:12.077"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.077" endtime="20210918 13:30:12.077"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.082" endtime="20210918 13:30:12.084"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.085" endtime="20210918 13:30:12.085"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.085" endtime="20210918 13:30:12.085"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.085" endtime="20210918 13:30:12.085"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.086" endtime="20210918 13:30:12.086"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.086" endtime="20210918 13:30:12.086"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.086" endtime="20210918 13:30:12.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.086" endtime="20210918 13:30:12.086"/>
</kw>
<status status="FAIL" starttime="20210918 13:26:58.908" endtime="20210918 13:30:12.087"/>
</kw>
<status status="FAIL" starttime="20210918 13:26:58.908" endtime="20210918 13:30:12.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.087" endtime="20210918 13:30:12.087"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.087" endtime="20210918 13:30:12.087"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.087" endtime="20210918 13:30:12.087"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.087" endtime="20210918 13:30:12.088"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.088" endtime="20210918 13:30:12.088"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.088" endtime="20210918 13:30:12.088"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.089" endtime="20210918 13:30:12.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.089" endtime="20210918 13:30:12.089"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.089" endtime="20210918 13:30:12.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.089" endtime="20210918 13:30:12.089"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.089" endtime="20210918 13:30:12.090"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.105" endtime="20210918 13:30:12.105"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.105" endtime="20210918 13:30:12.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.106" endtime="20210918 13:30:12.106"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.106" endtime="20210918 13:30:12.106"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.106" endtime="20210918 13:30:12.106"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.106" endtime="20210918 13:30:12.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.107" endtime="20210918 13:30:12.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.107" endtime="20210918 13:30:12.107"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.107" endtime="20210918 13:30:12.107"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.107" endtime="20210918 13:30:12.107"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.107" endtime="20210918 13:30:12.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.108" endtime="20210918 13:30:12.108"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:30:12.176" endtime="20210918 13:30:12.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.177" endtime="20210918 13:30:12.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:30:12.177" endtime="20210918 13:30:12.177"/>
</kw>
<status status="FAIL" starttime="20210918 13:25:12.244" endtime="20210918 13:30:12.183"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210918 13:25:12.065" endtime="20210918 13:30:12.185">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:12.200" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:12.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:12.223" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:30:12.189" endtime="20210918 13:30:12.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:12.225" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:30:12.224" endtime="20210918 13:30:12.225"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:12.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:12.225" endtime="20210918 13:30:12.226"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.188" endtime="20210918 13:30:12.227"/>
</kw>
<msg timestamp="20210918 13:30:12.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:12.188" endtime="20210918 13:30:12.227"/>
</kw>
<msg timestamp="20210918 13:30:12.228" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:30:12.188" endtime="20210918 13:30:12.228"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:30:12.231" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:30:12.229" endtime="20210918 13:30:12.232"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:12.275" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:12.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:12.331" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:30:12.245" endtime="20210918 13:30:12.331"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:12.333" level="INFO"/>
<status status="PASS" starttime="20210918 13:30:12.332" endtime="20210918 13:30:12.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:12.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:12.333" endtime="20210918 13:30:12.334"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.242" endtime="20210918 13:30:12.334"/>
</kw>
<msg timestamp="20210918 13:30:12.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:12.239" endtime="20210918 13:30:12.335"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.235" endtime="20210918 13:30:12.335"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.233" endtime="20210918 13:30:12.335"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.187" endtime="20210918 13:30:12.336"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.186" endtime="20210918 13:30:12.336"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:12.363" level="INFO">Running command 'ozone sh volume create o3://om:9862/36609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:26.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:26.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:30:12.348" endtime="20210918 13:30:26.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:26.677" level="INFO"/>
<status status="PASS" starttime="20210918 13:30:26.676" endtime="20210918 13:30:26.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:26.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:26.677" endtime="20210918 13:30:26.678"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.345" endtime="20210918 13:30:26.678"/>
</kw>
<msg timestamp="20210918 13:30:26.678" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:12.345" endtime="20210918 13:30:26.678"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.343" endtime="20210918 13:30:26.679"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:26.683" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/36609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:34.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:34.024" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:30:26.680" endtime="20210918 13:30:34.024"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:34.027" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:30:34.026" endtime="20210918 13:30:34.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:34.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:34.028" endtime="20210918 13:30:34.030"/>
</kw>
<status status="PASS" starttime="20210918 13:30:26.680" endtime="20210918 13:30:34.030"/>
</kw>
<msg timestamp="20210918 13:30:34.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:26.680" endtime="20210918 13:30:34.031"/>
</kw>
<msg timestamp="20210918 13:30:34.031" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:30:26.679" endtime="20210918 13:30:34.031"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:30:34.031" endtime="20210918 13:30:34.032"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:34.041" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/36609-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:41.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:41.181" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210918 13:30:34.036" endtime="20210918 13:30:41.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:41.182" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210918 13:30:41.181" endtime="20210918 13:30:41.182"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:41.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:41.182" endtime="20210918 13:30:41.183"/>
</kw>
<status status="PASS" starttime="20210918 13:30:34.035" endtime="20210918 13:30:41.183"/>
</kw>
<msg timestamp="20210918 13:30:41.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:34.035" endtime="20210918 13:30:41.184"/>
</kw>
<msg timestamp="20210918 13:30:41.184" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210918 13:30:34.033" endtime="20210918 13:30:41.184"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:41.188" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/36609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:47.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:47.379" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210918 13:30:41.186" endtime="20210918 13:30:47.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:47.382" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:30:47.380" endtime="20210918 13:30:47.382"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:47.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:47.382" endtime="20210918 13:30:47.383"/>
</kw>
<status status="PASS" starttime="20210918 13:30:41.185" endtime="20210918 13:30:47.383"/>
</kw>
<msg timestamp="20210918 13:30:47.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:41.185" endtime="20210918 13:30:47.383"/>
</kw>
<msg timestamp="20210918 13:30:47.384" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210918 13:30:41.184" endtime="20210918 13:30:47.384"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:30:47.384" endtime="20210918 13:30:47.385"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:47.393" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/36609-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:30:54.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:30:54.328" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:30:47.387" endtime="20210918 13:30:54.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:30:54.329" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:30:54.328" endtime="20210918 13:30:54.329"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:30:54.330" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:30:54.329" endtime="20210918 13:30:54.330"/>
</kw>
<status status="PASS" starttime="20210918 13:30:47.386" endtime="20210918 13:30:54.330"/>
</kw>
<msg timestamp="20210918 13:30:54.331" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:47.386" endtime="20210918 13:30:54.331"/>
</kw>
<msg timestamp="20210918 13:30:54.331" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:30:47.385" endtime="20210918 13:30:54.331"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:30:54.335" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/36609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:03.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:03.260" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210918 13:30:54.333" endtime="20210918 13:31:03.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:03.263" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:31:03.261" endtime="20210918 13:31:03.263"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:03.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:03.264" endtime="20210918 13:31:03.265"/>
</kw>
<status status="PASS" starttime="20210918 13:30:54.332" endtime="20210918 13:31:03.266"/>
</kw>
<msg timestamp="20210918 13:31:03.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:30:54.332" endtime="20210918 13:31:03.267"/>
</kw>
<msg timestamp="20210918 13:31:03.267" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE...</msg>
<status status="PASS" starttime="20210918 13:30:54.331" endtime="20210918 13:31:03.268"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:31:03.268" endtime="20210918 13:31:03.271"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:03.280" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/36609-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:10.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:10.488" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:31:03.276" endtime="20210918 13:31:10.489"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:10.492" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:31:10.490" endtime="20210918 13:31:10.492"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:10.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:10.493" endtime="20210918 13:31:10.494"/>
</kw>
<status status="PASS" starttime="20210918 13:31:03.274" endtime="20210918 13:31:10.495"/>
</kw>
<msg timestamp="20210918 13:31:10.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:03.273" endtime="20210918 13:31:10.495"/>
</kw>
<msg timestamp="20210918 13:31:10.496" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:31:03.271" endtime="20210918 13:31:10.496"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:10.503" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/36609-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:18.255" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:18.256" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210918 13:31:10.500" endtime="20210918 13:31:18.256"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:18.258" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:31:18.257" endtime="20210918 13:31:18.258"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:18.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:18.258" endtime="20210918 13:31:18.259"/>
</kw>
<status status="PASS" starttime="20210918 13:31:10.498" endtime="20210918 13:31:18.259"/>
</kw>
<msg timestamp="20210918 13:31:18.259" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:10.497" endtime="20210918 13:31:18.259"/>
</kw>
<msg timestamp="20210918 13:31:18.260" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210918 13:31:10.496" endtime="20210918 13:31:18.260"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:31:18.260" endtime="20210918 13:31:18.260"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:31:18.260" endtime="20210918 13:31:18.261"/>
</kw>
<status status="PASS" starttime="20210918 13:30:12.336" endtime="20210918 13:31:18.261"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:30:12.186" endtime="20210918 13:31:18.262"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:18.272" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:18.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:18.279" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:31:18.269" endtime="20210918 13:31:18.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:18.282" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:31:18.280" endtime="20210918 13:31:18.282"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:18.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:18.282" endtime="20210918 13:31:18.283"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.268" endtime="20210918 13:31:18.284"/>
</kw>
<msg timestamp="20210918 13:31:18.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:18.267" endtime="20210918 13:31:18.284"/>
</kw>
<msg timestamp="20210918 13:31:18.285" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:31:18.266" endtime="20210918 13:31:18.285"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:31:18.286" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:31:18.285" endtime="20210918 13:31:18.286"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:18.292" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:18.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:18.306" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:31:18.289" endtime="20210918 13:31:18.306"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:18.308" level="INFO"/>
<status status="PASS" starttime="20210918 13:31:18.306" endtime="20210918 13:31:18.308"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:18.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:18.308" endtime="20210918 13:31:18.309"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.289" endtime="20210918 13:31:18.310"/>
</kw>
<msg timestamp="20210918 13:31:18.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:18.288" endtime="20210918 13:31:18.310"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.287" endtime="20210918 13:31:18.310"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.286" endtime="20210918 13:31:18.311"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.265" endtime="20210918 13:31:18.311"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.264" endtime="20210918 13:31:18.311"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:18.317" level="INFO">Running command 'ozone sh bucket create o3://om:9862/36609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:26.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:26.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:31:18.314" endtime="20210918 13:31:26.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:26.035" level="INFO"/>
<status status="PASS" starttime="20210918 13:31:26.034" endtime="20210918 13:31:26.035"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:26.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:26.035" endtime="20210918 13:31:26.036"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.313" endtime="20210918 13:31:26.036"/>
</kw>
<msg timestamp="20210918 13:31:26.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:18.313" endtime="20210918 13:31:26.037"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.312" endtime="20210918 13:31:26.037"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:26.043" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/36609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:31.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:31.612" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:31:26.039" endtime="20210918 13:31:31.612"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:31.613" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:31:31.612" endtime="20210918 13:31:31.613"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:31.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:31.614" endtime="20210918 13:31:31.614"/>
</kw>
<status status="PASS" starttime="20210918 13:31:26.038" endtime="20210918 13:31:31.615"/>
</kw>
<msg timestamp="20210918 13:31:31.615" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:26.038" endtime="20210918 13:31:31.615"/>
</kw>
<msg timestamp="20210918 13:31:31.615" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:31:26.037" endtime="20210918 13:31:31.615"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:31:31.616" endtime="20210918 13:31:31.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:31.621" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/36609-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:38.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:38.974" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210918 13:31:31.618" endtime="20210918 13:31:38.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:38.975" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210918 13:31:38.974" endtime="20210918 13:31:38.975"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:38.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:38.975" endtime="20210918 13:31:38.976"/>
</kw>
<status status="PASS" starttime="20210918 13:31:31.617" endtime="20210918 13:31:38.976"/>
</kw>
<msg timestamp="20210918 13:31:38.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:31.617" endtime="20210918 13:31:38.977"/>
</kw>
<msg timestamp="20210918 13:31:38.977" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210918 13:31:31.616" endtime="20210918 13:31:38.977"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:38.982" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/36609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:46.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:46.585" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:31:38.979" endtime="20210918 13:31:46.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:46.587" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:31:46.586" endtime="20210918 13:31:46.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:46.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:46.587" endtime="20210918 13:31:46.588"/>
</kw>
<status status="PASS" starttime="20210918 13:31:38.978" endtime="20210918 13:31:46.588"/>
</kw>
<msg timestamp="20210918 13:31:46.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:38.978" endtime="20210918 13:31:46.588"/>
</kw>
<msg timestamp="20210918 13:31:46.589" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:31:38.977" endtime="20210918 13:31:46.589"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:31:46.589" endtime="20210918 13:31:46.590"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:46.596" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/36609-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:31:53.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:31:53.428" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:31:46.593" endtime="20210918 13:31:53.428"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:31:53.430" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:31:53.429" endtime="20210918 13:31:53.430"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:31:53.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:31:53.431" endtime="20210918 13:31:53.431"/>
</kw>
<status status="PASS" starttime="20210918 13:31:46.592" endtime="20210918 13:31:53.432"/>
</kw>
<msg timestamp="20210918 13:31:53.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:46.592" endtime="20210918 13:31:53.432"/>
</kw>
<msg timestamp="20210918 13:31:53.432" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:31:46.590" endtime="20210918 13:31:53.432"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:31:53.438" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/36609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:32:01.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:32:01.296" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:31:53.435" endtime="20210918 13:32:01.296"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:32:01.298" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:32:01.296" endtime="20210918 13:32:01.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:32:01.299" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:32:01.298" endtime="20210918 13:32:01.299"/>
</kw>
<status status="PASS" starttime="20210918 13:31:53.434" endtime="20210918 13:32:01.300"/>
</kw>
<msg timestamp="20210918 13:32:01.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:31:53.433" endtime="20210918 13:32:01.300"/>
</kw>
<msg timestamp="20210918 13:32:01.300" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:31:53.433" endtime="20210918 13:32:01.300"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:32:01.300" endtime="20210918 13:32:01.301"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:32:01.306" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/36609-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:32:08.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:32:08.801" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:32:01.303" endtime="20210918 13:32:08.801"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:32:08.804" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:32:08.802" endtime="20210918 13:32:08.805"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:32:08.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:32:08.805" endtime="20210918 13:32:08.807"/>
</kw>
<status status="PASS" starttime="20210918 13:32:01.303" endtime="20210918 13:32:08.808"/>
</kw>
<msg timestamp="20210918 13:32:08.808" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:32:01.302" endtime="20210918 13:32:08.809"/>
</kw>
<msg timestamp="20210918 13:32:08.809" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:32:01.301" endtime="20210918 13:32:08.809"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:32:08.817" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/36609-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:32:17.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:32:17.111" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210918 13:32:08.813" endtime="20210918 13:32:17.111"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:32:17.113" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:32:17.111" endtime="20210918 13:32:17.113"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:32:17.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:32:17.113" endtime="20210918 13:32:17.114"/>
</kw>
<status status="PASS" starttime="20210918 13:32:08.813" endtime="20210918 13:32:17.114"/>
</kw>
<msg timestamp="20210918 13:32:17.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:32:08.812" endtime="20210918 13:32:17.114"/>
</kw>
<msg timestamp="20210918 13:32:17.115" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210918 13:32:08.810" endtime="20210918 13:32:17.115"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:32:17.115" endtime="20210918 13:32:17.116"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:32:17.116" endtime="20210918 13:32:17.116"/>
</kw>
<status status="PASS" starttime="20210918 13:31:18.311" endtime="20210918 13:32:17.117"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:31:18.263" endtime="20210918 13:32:17.117"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:32:17.126" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:32:17.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:32:17.130" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:32:17.123" endtime="20210918 13:32:17.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:32:17.132" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:32:17.131" endtime="20210918 13:32:17.132"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:32:17.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:32:17.132" endtime="20210918 13:32:17.133"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.122" endtime="20210918 13:32:17.133"/>
</kw>
<msg timestamp="20210918 13:32:17.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:32:17.122" endtime="20210918 13:32:17.133"/>
</kw>
<msg timestamp="20210918 13:32:17.134" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:32:17.121" endtime="20210918 13:32:17.134"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:32:17.135" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:32:17.134" endtime="20210918 13:32:17.135"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:32:17.139" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:32:17.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:32:17.147" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:32:17.137" endtime="20210918 13:32:17.147"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:32:17.148" level="INFO"/>
<status status="PASS" starttime="20210918 13:32:17.148" endtime="20210918 13:32:17.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:32:17.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:32:17.149" endtime="20210918 13:32:17.149"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.137" endtime="20210918 13:32:17.150"/>
</kw>
<msg timestamp="20210918 13:32:17.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:32:17.136" endtime="20210918 13:32:17.150"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.136" endtime="20210918 13:32:17.150"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.135" endtime="20210918 13:32:17.150"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.121" endtime="20210918 13:32:17.151"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.120" endtime="20210918 13:32:17.151"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:32:17.156" level="INFO">Running command 'ozone sh key put o3://om:9862/36609-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:35:27.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:35:27.086" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:32:17.154" endtime="20210918 13:35:27.086"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:35:27.089" level="INFO"/>
<status status="PASS" starttime="20210918 13:35:27.087" endtime="20210918 13:35:27.089"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:35:27.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:35:27.089" endtime="20210918 13:35:27.090"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.153" endtime="20210918 13:35:27.091"/>
</kw>
<msg timestamp="20210918 13:35:27.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:32:17.153" endtime="20210918 13:35:27.091"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.152" endtime="20210918 13:35:27.091"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:35:27.098" level="INFO">Running command 'ozone sh key getacl o3://om:9862/36609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:35:34.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:35:34.055" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210918 13:35:27.095" endtime="20210918 13:35:34.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:35:34.057" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:35:34.056" endtime="20210918 13:35:34.057"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:35:34.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:35:34.057" endtime="20210918 13:35:34.058"/>
</kw>
<status status="PASS" starttime="20210918 13:35:27.094" endtime="20210918 13:35:34.058"/>
</kw>
<msg timestamp="20210918 13:35:34.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:35:27.093" endtime="20210918 13:35:34.059"/>
</kw>
<msg timestamp="20210918 13:35:34.059" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210918 13:35:27.092" endtime="20210918 13:35:34.059"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:35:34.059" endtime="20210918 13:35:34.059"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:35:34.064" level="INFO">Running command 'ozone sh key addacl o3://om:9862/36609-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:35:41.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:35:41.678" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:35:34.062" endtime="20210918 13:35:41.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:35:41.679" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:35:41.679" endtime="20210918 13:35:41.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:35:41.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:35:41.680" endtime="20210918 13:35:41.680"/>
</kw>
<status status="PASS" starttime="20210918 13:35:34.061" endtime="20210918 13:35:41.681"/>
</kw>
<msg timestamp="20210918 13:35:41.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:35:34.061" endtime="20210918 13:35:41.681"/>
</kw>
<msg timestamp="20210918 13:35:41.681" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210918 13:35:34.060" endtime="20210918 13:35:41.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:35:41.686" level="INFO">Running command 'ozone sh key getacl o3://om:9862/36609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:35:49.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:35:49.479" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210918 13:35:41.684" endtime="20210918 13:35:49.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:35:49.480" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:35:49.479" endtime="20210918 13:35:49.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:35:49.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:35:49.480" endtime="20210918 13:35:49.481"/>
</kw>
<status status="PASS" starttime="20210918 13:35:41.683" endtime="20210918 13:35:49.481"/>
</kw>
<msg timestamp="20210918 13:35:49.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:35:41.683" endtime="20210918 13:35:49.482"/>
</kw>
<msg timestamp="20210918 13:35:49.482" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210918 13:35:41.682" endtime="20210918 13:35:49.482"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:35:49.482" endtime="20210918 13:35:49.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:35:49.488" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/36609-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:35:56.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:35:56.658" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:35:49.486" endtime="20210918 13:35:56.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:35:56.661" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:35:56.659" endtime="20210918 13:35:56.661"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:35:56.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:35:56.661" endtime="20210918 13:35:56.662"/>
</kw>
<status status="PASS" starttime="20210918 13:35:49.485" endtime="20210918 13:35:56.663"/>
</kw>
<msg timestamp="20210918 13:35:56.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:35:49.484" endtime="20210918 13:35:56.663"/>
</kw>
<msg timestamp="20210918 13:35:56.663" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210918 13:35:49.484" endtime="20210918 13:35:56.663"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:35:56.670" level="INFO">Running command 'ozone sh key getacl o3://om:9862/36609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:01.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:01.900" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210918 13:35:56.666" endtime="20210918 13:36:01.900"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:01.903" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:36:01.901" endtime="20210918 13:36:01.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:01.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:01.903" endtime="20210918 13:36:01.904"/>
</kw>
<status status="PASS" starttime="20210918 13:35:56.665" endtime="20210918 13:36:01.905"/>
</kw>
<msg timestamp="20210918 13:36:01.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:35:56.665" endtime="20210918 13:36:01.906"/>
</kw>
<msg timestamp="20210918 13:36:01.907" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : ...</msg>
<status status="PASS" starttime="20210918 13:35:56.664" endtime="20210918 13:36:01.907"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:01.907" endtime="20210918 13:36:01.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:01.915" level="INFO">Running command 'ozone sh key setacl o3://om:9862/36609-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:08.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:08.786" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:36:01.912" endtime="20210918 13:36:08.786"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:08.787" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:36:08.787" endtime="20210918 13:36:08.787"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:08.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:08.788" endtime="20210918 13:36:08.789"/>
</kw>
<status status="PASS" starttime="20210918 13:36:01.911" endtime="20210918 13:36:08.789"/>
</kw>
<msg timestamp="20210918 13:36:08.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:01.910" endtime="20210918 13:36:08.789"/>
</kw>
<msg timestamp="20210918 13:36:08.790" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:36:01.909" endtime="20210918 13:36:08.790"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:08.794" level="INFO">Running command 'ozone sh key getacl o3://om:9862/36609-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:14.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:14.708" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210918 13:36:08.792" endtime="20210918 13:36:14.708"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:14.709" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:36:14.708" endtime="20210918 13:36:14.709"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:14.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:14.710" endtime="20210918 13:36:14.710"/>
</kw>
<status status="PASS" starttime="20210918 13:36:08.791" endtime="20210918 13:36:14.711"/>
</kw>
<msg timestamp="20210918 13:36:14.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:08.791" endtime="20210918 13:36:14.711"/>
</kw>
<msg timestamp="20210918 13:36:14.711" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210918 13:36:08.790" endtime="20210918 13:36:14.711"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:14.712" endtime="20210918 13:36:14.712"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:14.712" endtime="20210918 13:36:14.713"/>
</kw>
<status status="PASS" starttime="20210918 13:32:17.151" endtime="20210918 13:36:14.713"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:32:17.119" endtime="20210918 13:36:14.714"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:14.720" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:14.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:14.724" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:36:14.718" endtime="20210918 13:36:14.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:14.725" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:36:14.724" endtime="20210918 13:36:14.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:14.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:14.725" endtime="20210918 13:36:14.726"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.717" endtime="20210918 13:36:14.726"/>
</kw>
<msg timestamp="20210918 13:36:14.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:14.717" endtime="20210918 13:36:14.726"/>
</kw>
<msg timestamp="20210918 13:36:14.726" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:36:14.717" endtime="20210918 13:36:14.726"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:36:14.727" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:36:14.727" endtime="20210918 13:36:14.727"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:14.731" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:14.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:14.765" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:36:14.729" endtime="20210918 13:36:14.765"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:14.766" level="INFO"/>
<status status="PASS" starttime="20210918 13:36:14.765" endtime="20210918 13:36:14.766"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:14.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:14.766" endtime="20210918 13:36:14.767"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.729" endtime="20210918 13:36:14.767"/>
</kw>
<msg timestamp="20210918 13:36:14.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:14.729" endtime="20210918 13:36:14.767"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.728" endtime="20210918 13:36:14.767"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.728" endtime="20210918 13:36:14.767"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.716" endtime="20210918 13:36:14.768"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.715" endtime="20210918 13:36:14.768"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:14.774" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:20.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:20.745" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210918 13:36:14.770" endtime="20210918 13:36:20.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:20.746" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210918 13:36:20.746" endtime="20210918 13:36:20.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:20.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:20.747" endtime="20210918 13:36:20.747"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.769" endtime="20210918 13:36:20.747"/>
</kw>
<msg timestamp="20210918 13:36:20.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:14.769" endtime="20210918 13:36:20.748"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.768" endtime="20210918 13:36:20.748"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:20.753" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:27.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:27.579" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210918 13:36:20.750" endtime="20210918 13:36:27.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:27.582" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:36:27.580" endtime="20210918 13:36:27.583"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:27.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:27.583" endtime="20210918 13:36:27.585"/>
</kw>
<status status="PASS" starttime="20210918 13:36:20.749" endtime="20210918 13:36:27.585"/>
</kw>
<msg timestamp="20210918 13:36:27.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:20.749" endtime="20210918 13:36:27.586"/>
</kw>
<msg timestamp="20210918 13:36:27.586" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210918 13:36:20.748" endtime="20210918 13:36:27.587"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:27.587" endtime="20210918 13:36:27.589"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:27.596" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:34.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:34.724" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210918 13:36:27.593" endtime="20210918 13:36:34.724"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:34.727" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210918 13:36:34.726" endtime="20210918 13:36:34.727"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:34.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:34.728" endtime="20210918 13:36:34.729"/>
</kw>
<status status="PASS" starttime="20210918 13:36:27.592" endtime="20210918 13:36:34.730"/>
</kw>
<msg timestamp="20210918 13:36:34.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:27.591" endtime="20210918 13:36:34.730"/>
</kw>
<msg timestamp="20210918 13:36:34.732" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210918 13:36:27.589" endtime="20210918 13:36:34.732"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:34.740" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:41.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:41.325" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210918 13:36:34.737" endtime="20210918 13:36:41.325"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:41.326" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:36:41.325" endtime="20210918 13:36:41.326"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:41.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:41.326" endtime="20210918 13:36:41.327"/>
</kw>
<status status="PASS" starttime="20210918 13:36:34.736" endtime="20210918 13:36:41.327"/>
</kw>
<msg timestamp="20210918 13:36:41.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:34.735" endtime="20210918 13:36:41.327"/>
</kw>
<msg timestamp="20210918 13:36:41.328" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210918 13:36:34.733" endtime="20210918 13:36:41.328"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:41.328" endtime="20210918 13:36:41.329"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:41.333" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:47.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:47.163" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:36:41.331" endtime="20210918 13:36:47.163"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:47.165" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:36:47.164" endtime="20210918 13:36:47.165"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:47.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:47.165" endtime="20210918 13:36:47.166"/>
</kw>
<status status="PASS" starttime="20210918 13:36:41.330" endtime="20210918 13:36:47.167"/>
</kw>
<msg timestamp="20210918 13:36:47.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:41.330" endtime="20210918 13:36:47.167"/>
</kw>
<msg timestamp="20210918 13:36:47.167" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210918 13:36:41.329" endtime="20210918 13:36:47.167"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:47.173" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:36:54.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:36:54.443" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210918 13:36:47.169" endtime="20210918 13:36:54.443"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:36:54.446" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:36:54.443" endtime="20210918 13:36:54.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:36:54.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:36:54.447" endtime="20210918 13:36:54.448"/>
</kw>
<status status="PASS" starttime="20210918 13:36:47.169" endtime="20210918 13:36:54.449"/>
</kw>
<msg timestamp="20210918 13:36:54.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:47.168" endtime="20210918 13:36:54.450"/>
</kw>
<msg timestamp="20210918 13:36:54.450" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210918 13:36:47.168" endtime="20210918 13:36:54.451"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:54.451" endtime="20210918 13:36:54.452"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:36:54.452" endtime="20210918 13:36:54.453"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:36:54.460" level="INFO">Running command 'ozone sh key put o3://om:9862/36609-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:06.036" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:06.037" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:36:54.456" endtime="20210918 13:40:06.037"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:06.038" level="INFO"/>
<status status="PASS" starttime="20210918 13:40:06.037" endtime="20210918 13:40:06.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:06.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:06.038" endtime="20210918 13:40:06.039"/>
</kw>
<status status="PASS" starttime="20210918 13:36:54.455" endtime="20210918 13:40:06.039"/>
</kw>
<msg timestamp="20210918 13:40:06.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:36:54.454" endtime="20210918 13:40:06.039"/>
</kw>
<status status="PASS" starttime="20210918 13:36:54.453" endtime="20210918 13:40:06.040"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:06.045" level="INFO">Running command 'ozone sh key getacl o3://om:9862/36609-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:14.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:14.007" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:40:06.041" endtime="20210918 13:40:14.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:14.009" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210918 13:40:14.008" endtime="20210918 13:40:14.009"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:14.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:14.009" endtime="20210918 13:40:14.013"/>
</kw>
<status status="PASS" starttime="20210918 13:40:06.041" endtime="20210918 13:40:14.014"/>
</kw>
<msg timestamp="20210918 13:40:14.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:06.040" endtime="20210918 13:40:14.014"/>
</kw>
<msg timestamp="20210918 13:40:14.014" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [...</msg>
<status status="PASS" starttime="20210918 13:40:06.040" endtime="20210918 13:40:14.014"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:40:14.014" endtime="20210918 13:40:14.015"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210918 13:40:14.015" endtime="20210918 13:40:14.016"/>
</kw>
<status status="PASS" starttime="20210918 13:36:14.768" endtime="20210918 13:40:14.016"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210918 13:36:14.714" endtime="20210918 13:40:14.018"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:14.030" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:14.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:14.036" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:40:14.026" endtime="20210918 13:40:14.036"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:14.038" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:40:14.037" endtime="20210918 13:40:14.038"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:14.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:14.040" endtime="20210918 13:40:14.042"/>
</kw>
<status status="PASS" starttime="20210918 13:40:14.025" endtime="20210918 13:40:14.043"/>
</kw>
<msg timestamp="20210918 13:40:14.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:14.024" endtime="20210918 13:40:14.043"/>
</kw>
<msg timestamp="20210918 13:40:14.044" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:40:14.023" endtime="20210918 13:40:14.044"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:40:14.046" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:40:14.045" endtime="20210918 13:40:14.046"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:14.056" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:14.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:14.064" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:40:14.051" endtime="20210918 13:40:14.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:14.067" level="INFO"/>
<status status="PASS" starttime="20210918 13:40:14.065" endtime="20210918 13:40:14.067"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:14.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:14.067" endtime="20210918 13:40:14.068"/>
</kw>
<status status="PASS" starttime="20210918 13:40:14.050" endtime="20210918 13:40:14.069"/>
</kw>
<msg timestamp="20210918 13:40:14.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:14.049" endtime="20210918 13:40:14.069"/>
</kw>
<status status="PASS" starttime="20210918 13:40:14.047" endtime="20210918 13:40:14.070"/>
</kw>
<status status="PASS" starttime="20210918 13:40:14.046" endtime="20210918 13:40:14.070"/>
</kw>
<status status="PASS" starttime="20210918 13:40:14.022" endtime="20210918 13:40:14.070"/>
</kw>
<status status="PASS" starttime="20210918 13:40:14.021" endtime="20210918 13:40:14.071"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:14.077" level="INFO">Running command 'ozone sh volume info o3:///36609-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:21.644" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:40:21.644" level="INFO">${output} = VOLUME_NOT_FOUND Volume 36609-rpcwport is not found</msg>
<status status="PASS" starttime="20210918 13:40:14.074" endtime="20210918 13:40:21.644"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:21.646" level="INFO">VOLUME_NOT_FOUND Volume 36609-rpcwport is not found</msg>
<status status="PASS" starttime="20210918 13:40:21.645" endtime="20210918 13:40:21.647"/>
</kw>
<msg timestamp="20210918 13:40:21.647" level="INFO">${result} = VOLUME_NOT_FOUND Volume 36609-rpcwport is not found</msg>
<status status="PASS" starttime="20210918 13:40:14.073" endtime="20210918 13:40:21.647"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:40:21.647" endtime="20210918 13:40:21.648"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:21.653" level="INFO">Running command 'ozone sh volume create o3:///36609-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:29.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:29.448" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:40:21.650" endtime="20210918 13:40:29.448"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:29.451" level="INFO"/>
<status status="PASS" starttime="20210918 13:40:29.449" endtime="20210918 13:40:29.451"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:29.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:29.452" endtime="20210918 13:40:29.454"/>
</kw>
<status status="PASS" starttime="20210918 13:40:21.650" endtime="20210918 13:40:29.454"/>
</kw>
<msg timestamp="20210918 13:40:29.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:21.649" endtime="20210918 13:40:29.455"/>
</kw>
<msg timestamp="20210918 13:40:29.455" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210918 13:40:21.648" endtime="20210918 13:40:29.455"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:40:29.456" endtime="20210918 13:40:29.457"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:29.465" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="36609-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:37.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:37.493" level="INFO">${output} = {
  "metadata": {},
  "name": "36609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:40:29.461" endtime="20210918 13:40:37.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:37.495" level="INFO">{
  "metadata": {},
  "name": "36609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:40:29.354Z",
  "modificationTime": "2021-09-18T13:40:29.354Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:40:37.494" endtime="20210918 13:40:37.495"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:37.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:37.495" endtime="20210918 13:40:37.496"/>
</kw>
<status status="PASS" starttime="20210918 13:40:29.460" endtime="20210918 13:40:37.496"/>
</kw>
<msg timestamp="20210918 13:40:37.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:29.459" endtime="20210918 13:40:37.496"/>
</kw>
<msg timestamp="20210918 13:40:37.497" level="INFO">${result} = {
  "metadata": {},
  "name": "36609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:40:29.457" endtime="20210918 13:40:37.497"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:40:37.497" endtime="20210918 13:40:37.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:37.503" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="36609-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:44.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:44.352" level="INFO">${output} = {
  "metadata": {},
  "name": "36609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:40:37.499" endtime="20210918 13:40:44.353"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:44.354" level="INFO">{
  "metadata": {},
  "name": "36609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:40:29.354Z",
  "modificationTime": "2021-09-18T13:40:29.354Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:40:44.353" endtime="20210918 13:40:44.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:44.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:44.354" endtime="20210918 13:40:44.355"/>
</kw>
<status status="PASS" starttime="20210918 13:40:37.498" endtime="20210918 13:40:44.355"/>
</kw>
<msg timestamp="20210918 13:40:44.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:37.498" endtime="20210918 13:40:44.355"/>
</kw>
<msg timestamp="20210918 13:40:44.355" level="INFO">${result} = {
  "metadata": {},
  "name": "36609-rpcwport",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "202...</msg>
<status status="PASS" starttime="20210918 13:40:37.497" endtime="20210918 13:40:44.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:40:44.356" endtime="20210918 13:40:44.356"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:44.361" level="INFO">Running command 'ozone sh volume setquota o3:///36609-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:49.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:49.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:40:44.358" endtime="20210918 13:40:49.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:49.819" level="INFO"/>
<status status="PASS" starttime="20210918 13:40:49.818" endtime="20210918 13:40:49.819"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:49.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:49.819" endtime="20210918 13:40:49.820"/>
</kw>
<status status="PASS" starttime="20210918 13:40:44.358" endtime="20210918 13:40:49.820"/>
</kw>
<msg timestamp="20210918 13:40:49.820" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:44.357" endtime="20210918 13:40:49.820"/>
</kw>
<status status="PASS" starttime="20210918 13:40:44.356" endtime="20210918 13:40:49.821"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:49.828" level="INFO">Running command 'ozone sh volume info o3:///36609-rpcwport | jq -r '. | select(.name=="36609-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:40:55.953" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:40:55.954" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:40:49.823" endtime="20210918 13:40:55.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:40:55.955" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:40:55.954" endtime="20210918 13:40:55.955"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:40:55.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:40:55.955" endtime="20210918 13:40:55.956"/>
</kw>
<status status="PASS" starttime="20210918 13:40:49.823" endtime="20210918 13:40:55.956"/>
</kw>
<msg timestamp="20210918 13:40:55.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:49.822" endtime="20210918 13:40:55.957"/>
</kw>
<msg timestamp="20210918 13:40:55.957" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:40:49.821" endtime="20210918 13:40:55.957"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:40:55.957" endtime="20210918 13:40:55.958"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:40:55.961" level="INFO">Running command 'ozone sh bucket create o3:///36609-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:03.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:03.961" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:40:55.959" endtime="20210918 13:41:03.961"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:03.963" level="INFO"/>
<status status="PASS" starttime="20210918 13:41:03.962" endtime="20210918 13:41:03.963"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:03.964" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:03.963" endtime="20210918 13:41:03.964"/>
</kw>
<status status="PASS" starttime="20210918 13:40:55.959" endtime="20210918 13:41:03.964"/>
</kw>
<msg timestamp="20210918 13:41:03.964" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:40:55.958" endtime="20210918 13:41:03.965"/>
</kw>
<status status="PASS" starttime="20210918 13:40:55.958" endtime="20210918 13:41:03.965"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:03.970" level="INFO">Running command 'ozone sh bucket info o3:///36609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:11.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:11.954" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210918 13:41:03.967" endtime="20210918 13:41:11.955"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:11.956" level="INFO">DISK</msg>
<status status="PASS" starttime="20210918 13:41:11.955" endtime="20210918 13:41:11.956"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:11.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:11.956" endtime="20210918 13:41:11.957"/>
</kw>
<status status="PASS" starttime="20210918 13:41:03.967" endtime="20210918 13:41:11.957"/>
</kw>
<msg timestamp="20210918 13:41:11.957" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:03.967" endtime="20210918 13:41:11.957"/>
</kw>
<msg timestamp="20210918 13:41:11.958" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210918 13:41:03.965" endtime="20210918 13:41:11.958"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:41:11.959" endtime="20210918 13:41:11.959"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:11.968" level="INFO">Running command 'ozone sh bucket info o3:///36609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:18.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:18.523" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:41:11.964" endtime="20210918 13:41:18.523"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:18.524" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:41:18.524" endtime="20210918 13:41:18.525"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:18.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:18.525" endtime="20210918 13:41:18.525"/>
</kw>
<status status="PASS" starttime="20210918 13:41:11.963" endtime="20210918 13:41:18.526"/>
</kw>
<msg timestamp="20210918 13:41:18.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:11.962" endtime="20210918 13:41:18.526"/>
</kw>
<msg timestamp="20210918 13:41:18.526" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:41:11.960" endtime="20210918 13:41:18.526"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:41:18.527" endtime="20210918 13:41:18.527"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:18.532" level="INFO">Running command 'ozone sh bucket info o3:///36609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:26.991" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:26.992" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210918 13:41:18.529" endtime="20210918 13:41:26.992"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:26.994" level="INFO">100</msg>
<status status="PASS" starttime="20210918 13:41:26.993" endtime="20210918 13:41:26.994"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:26.995" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:26.994" endtime="20210918 13:41:26.996"/>
</kw>
<status status="PASS" starttime="20210918 13:41:18.529" endtime="20210918 13:41:26.996"/>
</kw>
<msg timestamp="20210918 13:41:26.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:18.528" endtime="20210918 13:41:26.996"/>
</kw>
<msg timestamp="20210918 13:41:26.997" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210918 13:41:18.527" endtime="20210918 13:41:26.997"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:41:26.997" endtime="20210918 13:41:26.998"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:27.004" level="INFO">Running command 'ozone sh bucket setquota o3:///36609-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:34.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:34.819" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:41:27.001" endtime="20210918 13:41:34.820"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:34.822" level="INFO"/>
<status status="PASS" starttime="20210918 13:41:34.820" endtime="20210918 13:41:34.822"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:34.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:34.822" endtime="20210918 13:41:34.824"/>
</kw>
<status status="PASS" starttime="20210918 13:41:27.000" endtime="20210918 13:41:34.824"/>
</kw>
<msg timestamp="20210918 13:41:34.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:26.999" endtime="20210918 13:41:34.825"/>
</kw>
<status status="PASS" starttime="20210918 13:41:26.998" endtime="20210918 13:41:34.825"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:34.834" level="INFO">Running command 'ozone sh bucket info o3:///36609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:43.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:43.564" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:41:34.830" endtime="20210918 13:41:43.564"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:43.566" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210918 13:41:43.565" endtime="20210918 13:41:43.566"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:43.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:43.566" endtime="20210918 13:41:43.567"/>
</kw>
<status status="PASS" starttime="20210918 13:41:34.829" endtime="20210918 13:41:43.567"/>
</kw>
<msg timestamp="20210918 13:41:43.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:34.828" endtime="20210918 13:41:43.567"/>
</kw>
<msg timestamp="20210918 13:41:43.568" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:41:34.825" endtime="20210918 13:41:43.568"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:41:43.568" endtime="20210918 13:41:43.569"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:43.576" level="INFO">Running command 'ozone sh bucket info o3:///36609-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:51.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:51.090" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210918 13:41:43.573" endtime="20210918 13:41:51.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:51.091" level="INFO">1000</msg>
<status status="PASS" starttime="20210918 13:41:51.091" endtime="20210918 13:41:51.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:51.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:51.092" endtime="20210918 13:41:51.093"/>
</kw>
<status status="PASS" starttime="20210918 13:41:43.572" endtime="20210918 13:41:51.093"/>
</kw>
<msg timestamp="20210918 13:41:51.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:43.570" endtime="20210918 13:41:51.093"/>
</kw>
<msg timestamp="20210918 13:41:51.094" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210918 13:41:43.569" endtime="20210918 13:41:51.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:41:51.094" endtime="20210918 13:41:51.095"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:51.100" level="INFO">Running command 'ozone sh bucket list o3:///36609-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:41:59.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:41:59.277" level="INFO">${output} = 36609-rpcwport</msg>
<status status="PASS" starttime="20210918 13:41:51.098" endtime="20210918 13:41:59.278"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:41:59.281" level="INFO">36609-rpcwport</msg>
<status status="PASS" starttime="20210918 13:41:59.279" endtime="20210918 13:41:59.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:41:59.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:41:59.281" endtime="20210918 13:41:59.283"/>
</kw>
<status status="PASS" starttime="20210918 13:41:51.097" endtime="20210918 13:41:59.284"/>
</kw>
<msg timestamp="20210918 13:41:59.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:51.096" endtime="20210918 13:41:59.285"/>
</kw>
<msg timestamp="20210918 13:41:59.286" level="INFO">${result} = 36609-rpcwport</msg>
<status status="PASS" starttime="20210918 13:41:51.095" endtime="20210918 13:41:59.286"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:41:59.286" endtime="20210918 13:41:59.288"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:41:59.299" level="INFO">Running command 'ozone sh key put o3:///36609-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:11.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:11.438" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:41:59.295" endtime="20210918 13:45:11.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:11.440" level="INFO"/>
<status status="PASS" starttime="20210918 13:45:11.439" endtime="20210918 13:45:11.440"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:11.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:11.440" endtime="20210918 13:45:11.440"/>
</kw>
<status status="PASS" starttime="20210918 13:41:59.293" endtime="20210918 13:45:11.441"/>
</kw>
<msg timestamp="20210918 13:45:11.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:41:59.292" endtime="20210918 13:45:11.441"/>
</kw>
<status status="PASS" starttime="20210918 13:41:59.291" endtime="20210918 13:45:11.441"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:11.446" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:11.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:11.450" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:45:11.443" endtime="20210918 13:45:11.450"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:11.452" level="INFO"/>
<status status="PASS" starttime="20210918 13:45:11.450" endtime="20210918 13:45:11.452"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:11.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:11.452" endtime="20210918 13:45:11.453"/>
</kw>
<status status="PASS" starttime="20210918 13:45:11.442" endtime="20210918 13:45:11.454"/>
</kw>
<msg timestamp="20210918 13:45:11.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:11.442" endtime="20210918 13:45:11.454"/>
</kw>
<status status="PASS" starttime="20210918 13:45:11.441" endtime="20210918 13:45:11.455"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:11.461" level="INFO">Running command 'ozone sh key get o3:///36609-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:14.020" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:45:11.458" endtime="20210918 13:45:14.021"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.021" endtime="20210918 13:45:14.021"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.021" endtime="20210918 13:45:14.021"/>
</kw>
<status status="FAIL" starttime="20210918 13:45:11.457" endtime="20210918 13:45:14.022"/>
</kw>
<msg timestamp="20210918 13:45:14.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:45:11.457" endtime="20210918 13:45:14.023"/>
</kw>
<status status="FAIL" starttime="20210918 13:45:11.455" endtime="20210918 13:45:14.024"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.024" endtime="20210918 13:45:14.024"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.025" endtime="20210918 13:45:14.025"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.025" endtime="20210918 13:45:14.025"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.025" endtime="20210918 13:45:14.026"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.026" endtime="20210918 13:45:14.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.026" endtime="20210918 13:45:14.026"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.027" endtime="20210918 13:45:14.027"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.027" endtime="20210918 13:45:14.028"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.029" endtime="20210918 13:45:14.029"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.030" endtime="20210918 13:45:14.030"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.030" endtime="20210918 13:45:14.031"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.032" endtime="20210918 13:45:14.032"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.033" endtime="20210918 13:45:14.033"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.035" endtime="20210918 13:45:14.038"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.039" endtime="20210918 13:45:14.039"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.040" endtime="20210918 13:45:14.040"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.040" endtime="20210918 13:45:14.041"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.041" endtime="20210918 13:45:14.042"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.043" endtime="20210918 13:45:14.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.043" endtime="20210918 13:45:14.043"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.046" endtime="20210918 13:45:14.046"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.047" endtime="20210918 13:45:14.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.049" endtime="20210918 13:45:14.050"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.051" endtime="20210918 13:45:14.052"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.053" endtime="20210918 13:45:14.054"/>
</kw>
<status status="FAIL" starttime="20210918 13:41:59.289" endtime="20210918 13:45:14.058"/>
</kw>
<status status="FAIL" starttime="20210918 13:41:59.288" endtime="20210918 13:45:14.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.058" endtime="20210918 13:45:14.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.058" endtime="20210918 13:45:14.060"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.060" endtime="20210918 13:45:14.061"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.061" endtime="20210918 13:45:14.061"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.062" endtime="20210918 13:45:14.062"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.064" endtime="20210918 13:45:14.064"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.064" endtime="20210918 13:45:14.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.065" endtime="20210918 13:45:14.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.065" endtime="20210918 13:45:14.065"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.065" endtime="20210918 13:45:14.065"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.067" endtime="20210918 13:45:14.067"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.067" endtime="20210918 13:45:14.067"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.067" endtime="20210918 13:45:14.067"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.068" endtime="20210918 13:45:14.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.068" endtime="20210918 13:45:14.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.068" endtime="20210918 13:45:14.068"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.068" endtime="20210918 13:45:14.068"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.068" endtime="20210918 13:45:14.068"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.068" endtime="20210918 13:45:14.069"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.069" endtime="20210918 13:45:14.069"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.076" endtime="20210918 13:45:14.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.076" endtime="20210918 13:45:14.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.076" endtime="20210918 13:45:14.077"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:45:14.077" endtime="20210918 13:45:14.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.077" endtime="20210918 13:45:14.077"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:45:14.077" endtime="20210918 13:45:14.077"/>
</kw>
<status status="FAIL" starttime="20210918 13:40:14.071" endtime="20210918 13:45:14.078"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210918 13:40:14.019" endtime="20210918 13:45:14.083">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:14.117" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:14.143" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:14.143" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:45:14.101" endtime="20210918 13:45:14.144"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:14.149" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:45:14.146" endtime="20210918 13:45:14.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:14.153" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:14.150" endtime="20210918 13:45:14.153"/>
</kw>
<status status="PASS" starttime="20210918 13:45:14.101" endtime="20210918 13:45:14.155"/>
</kw>
<msg timestamp="20210918 13:45:14.155" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:14.101" endtime="20210918 13:45:14.155"/>
</kw>
<msg timestamp="20210918 13:45:14.158" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:45:14.100" endtime="20210918 13:45:14.158"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:45:14.166" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:45:14.161" endtime="20210918 13:45:14.166"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:14.202" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:14.252" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:14.252" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:45:14.187" endtime="20210918 13:45:14.252"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:14.254" level="INFO"/>
<status status="PASS" starttime="20210918 13:45:14.253" endtime="20210918 13:45:14.254"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:14.255" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:14.255" endtime="20210918 13:45:14.255"/>
</kw>
<status status="PASS" starttime="20210918 13:45:14.181" endtime="20210918 13:45:14.256"/>
</kw>
<msg timestamp="20210918 13:45:14.256" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:14.179" endtime="20210918 13:45:14.256"/>
</kw>
<status status="PASS" starttime="20210918 13:45:14.174" endtime="20210918 13:45:14.257"/>
</kw>
<status status="PASS" starttime="20210918 13:45:14.166" endtime="20210918 13:45:14.257"/>
</kw>
<status status="PASS" starttime="20210918 13:45:14.099" endtime="20210918 13:45:14.257"/>
</kw>
<status status="PASS" starttime="20210918 13:45:14.099" endtime="20210918 13:45:14.257"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:14.286" level="INFO">Running command 'ozone sh volume info /36609-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:26.982" level="INFO">${rc} = 255</msg>
<msg timestamp="20210918 13:45:26.982" level="INFO">${output} = VOLUME_NOT_FOUND Volume 36609-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210918 13:45:14.271" endtime="20210918 13:45:26.982"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:26.990" level="INFO">VOLUME_NOT_FOUND Volume 36609-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210918 13:45:26.985" endtime="20210918 13:45:26.990"/>
</kw>
<msg timestamp="20210918 13:45:26.993" level="INFO">${result} = VOLUME_NOT_FOUND Volume 36609-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210918 13:45:14.267" endtime="20210918 13:45:26.993"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:45:26.995" endtime="20210918 13:45:26.996"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:27.018" level="INFO">Running command 'ozone sh volume create /36609-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:34.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:34.845" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:45:27.012" endtime="20210918 13:45:34.845"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:34.847" level="INFO"/>
<status status="PASS" starttime="20210918 13:45:34.846" endtime="20210918 13:45:34.848"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:34.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:34.848" endtime="20210918 13:45:34.849"/>
</kw>
<status status="PASS" starttime="20210918 13:45:27.005" endtime="20210918 13:45:34.850"/>
</kw>
<msg timestamp="20210918 13:45:34.850" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:27.002" endtime="20210918 13:45:34.851"/>
</kw>
<msg timestamp="20210918 13:45:34.851" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210918 13:45:26.998" endtime="20210918 13:45:34.851"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:45:34.851" endtime="20210918 13:45:34.852"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:34.858" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="36609-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:41.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:41.493" level="INFO">${output} = {
  "metadata": {},
  "name": "36609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210918 13:45:34.855" endtime="20210918 13:45:41.493"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:41.494" level="INFO">{
  "metadata": {},
  "name": "36609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:45:34.735Z",
  "modificationTime": "2021-09-18T13:45:34.735Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:45:41.493" endtime="20210918 13:45:41.494"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:41.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:41.494" endtime="20210918 13:45:41.495"/>
</kw>
<status status="PASS" starttime="20210918 13:45:34.854" endtime="20210918 13:45:41.495"/>
</kw>
<msg timestamp="20210918 13:45:41.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:34.853" endtime="20210918 13:45:41.496"/>
</kw>
<msg timestamp="20210918 13:45:41.496" level="INFO">${result} = {
  "metadata": {},
  "name": "36609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210918 13:45:34.852" endtime="20210918 13:45:41.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:45:41.496" endtime="20210918 13:45:41.497"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:41.500" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="36609-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:48.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:48.945" level="INFO">${output} = {
  "metadata": {},
  "name": "36609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210918 13:45:41.498" endtime="20210918 13:45:48.945"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:48.947" level="INFO">{
  "metadata": {},
  "name": "36609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-09-18T13:45:34.735Z",
  "modificationTime": "2021-09-18T13:45:34.735Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210918 13:45:48.946" endtime="20210918 13:45:48.947"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:48.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:48.948" endtime="20210918 13:45:48.948"/>
</kw>
<status status="PASS" starttime="20210918 13:45:41.498" endtime="20210918 13:45:48.948"/>
</kw>
<msg timestamp="20210918 13:45:48.949" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:41.497" endtime="20210918 13:45:48.949"/>
</kw>
<msg timestamp="20210918 13:45:48.949" level="INFO">${result} = {
  "metadata": {},
  "name": "36609-rpcwoscheme",
  "admin": "testuser",
  "owner": "testuser",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "...</msg>
<status status="PASS" starttime="20210918 13:45:41.497" endtime="20210918 13:45:48.949"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210918 13:45:48.949" endtime="20210918 13:45:48.950"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:48.956" level="INFO">Running command 'ozone sh volume setquota /36609-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:45:56.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:45:56.237" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:45:48.952" endtime="20210918 13:45:56.237"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:45:56.239" level="INFO"/>
<status status="PASS" starttime="20210918 13:45:56.238" endtime="20210918 13:45:56.240"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:45:56.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:45:56.240" endtime="20210918 13:45:56.241"/>
</kw>
<status status="PASS" starttime="20210918 13:45:48.951" endtime="20210918 13:45:56.241"/>
</kw>
<msg timestamp="20210918 13:45:56.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:48.951" endtime="20210918 13:45:56.242"/>
</kw>
<status status="PASS" starttime="20210918 13:45:48.950" endtime="20210918 13:45:56.242"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:45:56.248" level="INFO">Running command 'ozone sh volume info /36609-rpcwoscheme | jq -r '. | select(.name=="36609-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:02.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:02.464" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:45:56.245" endtime="20210918 13:46:02.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:02.467" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:46:02.465" endtime="20210918 13:46:02.468"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:02.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:02.468" endtime="20210918 13:46:02.469"/>
</kw>
<status status="PASS" starttime="20210918 13:45:56.244" endtime="20210918 13:46:02.469"/>
</kw>
<msg timestamp="20210918 13:46:02.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:45:56.244" endtime="20210918 13:46:02.469"/>
</kw>
<msg timestamp="20210918 13:46:02.470" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:45:56.242" endtime="20210918 13:46:02.470"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:02.470" endtime="20210918 13:46:02.471"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:02.477" level="INFO">Running command 'ozone sh bucket create /36609-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:10.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:10.169" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:46:02.474" endtime="20210918 13:46:10.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:10.171" level="INFO"/>
<status status="PASS" starttime="20210918 13:46:10.170" endtime="20210918 13:46:10.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:10.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:10.171" endtime="20210918 13:46:10.172"/>
</kw>
<status status="PASS" starttime="20210918 13:46:02.473" endtime="20210918 13:46:10.173"/>
</kw>
<msg timestamp="20210918 13:46:10.173" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:02.472" endtime="20210918 13:46:10.173"/>
</kw>
<status status="PASS" starttime="20210918 13:46:02.471" endtime="20210918 13:46:10.174"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:10.181" level="INFO">Running command 'ozone sh bucket info /36609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:17.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:17.586" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210918 13:46:10.178" endtime="20210918 13:46:17.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:17.587" level="INFO">DISK</msg>
<status status="PASS" starttime="20210918 13:46:17.586" endtime="20210918 13:46:17.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:17.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:17.588" endtime="20210918 13:46:17.589"/>
</kw>
<status status="PASS" starttime="20210918 13:46:10.176" endtime="20210918 13:46:17.590"/>
</kw>
<msg timestamp="20210918 13:46:17.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:10.175" endtime="20210918 13:46:17.590"/>
</kw>
<msg timestamp="20210918 13:46:17.590" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210918 13:46:10.174" endtime="20210918 13:46:17.590"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:17.590" endtime="20210918 13:46:17.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:17.597" level="INFO">Running command 'ozone sh bucket info /36609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:25.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:25.276" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:46:17.593" endtime="20210918 13:46:25.276"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:25.280" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210918 13:46:25.278" endtime="20210918 13:46:25.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:25.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:25.280" endtime="20210918 13:46:25.282"/>
</kw>
<status status="PASS" starttime="20210918 13:46:17.593" endtime="20210918 13:46:25.283"/>
</kw>
<msg timestamp="20210918 13:46:25.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:17.592" endtime="20210918 13:46:25.284"/>
</kw>
<msg timestamp="20210918 13:46:25.285" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210918 13:46:17.591" endtime="20210918 13:46:25.285"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:25.285" endtime="20210918 13:46:25.287"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:25.296" level="INFO">Running command 'ozone sh bucket info /36609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:33.212" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:33.212" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210918 13:46:25.293" endtime="20210918 13:46:33.213"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:33.214" level="INFO">100</msg>
<status status="PASS" starttime="20210918 13:46:33.213" endtime="20210918 13:46:33.214"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:33.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:33.214" endtime="20210918 13:46:33.215"/>
</kw>
<status status="PASS" starttime="20210918 13:46:25.291" endtime="20210918 13:46:33.215"/>
</kw>
<msg timestamp="20210918 13:46:33.215" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:25.290" endtime="20210918 13:46:33.215"/>
</kw>
<msg timestamp="20210918 13:46:33.216" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210918 13:46:25.287" endtime="20210918 13:46:33.216"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:33.216" endtime="20210918 13:46:33.216"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:33.222" level="INFO">Running command 'ozone sh bucket setquota /36609-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:41.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:41.034" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:46:33.218" endtime="20210918 13:46:41.034"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:41.036" level="INFO"/>
<status status="PASS" starttime="20210918 13:46:41.036" endtime="20210918 13:46:41.037"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:41.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:41.037" endtime="20210918 13:46:41.039"/>
</kw>
<status status="PASS" starttime="20210918 13:46:33.217" endtime="20210918 13:46:41.040"/>
</kw>
<msg timestamp="20210918 13:46:41.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:33.217" endtime="20210918 13:46:41.041"/>
</kw>
<status status="PASS" starttime="20210918 13:46:33.216" endtime="20210918 13:46:41.041"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:41.049" level="INFO">Running command 'ozone sh bucket info /36609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:47.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:47.403" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:46:41.046" endtime="20210918 13:46:47.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:47.404" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210918 13:46:47.404" endtime="20210918 13:46:47.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:47.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:47.405" endtime="20210918 13:46:47.406"/>
</kw>
<status status="PASS" starttime="20210918 13:46:41.045" endtime="20210918 13:46:47.407"/>
</kw>
<msg timestamp="20210918 13:46:47.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:41.044" endtime="20210918 13:46:47.407"/>
</kw>
<msg timestamp="20210918 13:46:47.407" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210918 13:46:41.042" endtime="20210918 13:46:47.407"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:47.407" endtime="20210918 13:46:47.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:47.412" level="INFO">Running command 'ozone sh bucket info /36609-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:52.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:52.075" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210918 13:46:47.410" endtime="20210918 13:46:52.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:52.077" level="INFO">1000</msg>
<status status="PASS" starttime="20210918 13:46:52.076" endtime="20210918 13:46:52.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:52.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:52.077" endtime="20210918 13:46:52.078"/>
</kw>
<status status="PASS" starttime="20210918 13:46:47.409" endtime="20210918 13:46:52.078"/>
</kw>
<msg timestamp="20210918 13:46:52.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:47.409" endtime="20210918 13:46:52.078"/>
</kw>
<msg timestamp="20210918 13:46:52.078" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210918 13:46:47.408" endtime="20210918 13:46:52.079"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:52.079" endtime="20210918 13:46:52.079"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:52.086" level="INFO">Running command 'ozone sh bucket list /36609-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:46:58.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:46:58.596" level="INFO">${output} = 36609-rpcwoscheme</msg>
<status status="PASS" starttime="20210918 13:46:52.081" endtime="20210918 13:46:58.596"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:46:58.597" level="INFO">36609-rpcwoscheme</msg>
<status status="PASS" starttime="20210918 13:46:58.596" endtime="20210918 13:46:58.597"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:46:58.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:46:58.597" endtime="20210918 13:46:58.598"/>
</kw>
<status status="PASS" starttime="20210918 13:46:52.081" endtime="20210918 13:46:58.598"/>
</kw>
<msg timestamp="20210918 13:46:58.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:52.080" endtime="20210918 13:46:58.598"/>
</kw>
<msg timestamp="20210918 13:46:58.599" level="INFO">${result} = 36609-rpcwoscheme</msg>
<status status="PASS" starttime="20210918 13:46:52.079" endtime="20210918 13:46:58.599"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210918 13:46:58.599" endtime="20210918 13:46:58.600"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:46:58.605" level="INFO">Running command 'ozone sh key put /36609-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:50:09.013" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:50:09.013" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:46:58.603" endtime="20210918 13:50:09.013"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:50:09.016" level="INFO"/>
<status status="PASS" starttime="20210918 13:50:09.014" endtime="20210918 13:50:09.016"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:50:09.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:50:09.016" endtime="20210918 13:50:09.017"/>
</kw>
<status status="PASS" starttime="20210918 13:46:58.602" endtime="20210918 13:50:09.018"/>
</kw>
<msg timestamp="20210918 13:50:09.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:46:58.602" endtime="20210918 13:50:09.018"/>
</kw>
<status status="PASS" starttime="20210918 13:46:58.601" endtime="20210918 13:50:09.019"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:50:09.025" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:50:09.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:50:09.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:50:09.022" endtime="20210918 13:50:09.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:50:09.030" level="INFO"/>
<status status="PASS" starttime="20210918 13:50:09.029" endtime="20210918 13:50:09.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:50:09.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:50:09.031" endtime="20210918 13:50:09.032"/>
</kw>
<status status="PASS" starttime="20210918 13:50:09.020" endtime="20210918 13:50:09.032"/>
</kw>
<msg timestamp="20210918 13:50:09.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:50:09.020" endtime="20210918 13:50:09.033"/>
</kw>
<status status="PASS" starttime="20210918 13:50:09.019" endtime="20210918 13:50:09.033"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:50:09.039" level="INFO">Running command 'ozone sh key get /36609-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:50:14.094" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210918 13:50:09.036" endtime="20210918 13:50:14.094"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.095" endtime="20210918 13:50:14.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.095" endtime="20210918 13:50:14.096"/>
</kw>
<status status="FAIL" starttime="20210918 13:50:09.035" endtime="20210918 13:50:14.096"/>
</kw>
<msg timestamp="20210918 13:50:14.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210918 13:50:09.034" endtime="20210918 13:50:14.097"/>
</kw>
<status status="FAIL" starttime="20210918 13:50:09.033" endtime="20210918 13:50:14.097"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.097" endtime="20210918 13:50:14.097"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.098" endtime="20210918 13:50:14.098"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.098" endtime="20210918 13:50:14.098"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.098" endtime="20210918 13:50:14.098"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.099" endtime="20210918 13:50:14.099"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.099" endtime="20210918 13:50:14.099"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.099" endtime="20210918 13:50:14.099"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.099" endtime="20210918 13:50:14.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.100" endtime="20210918 13:50:14.100"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.100" endtime="20210918 13:50:14.101"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.101" endtime="20210918 13:50:14.101"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.102" endtime="20210918 13:50:14.102"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.103" endtime="20210918 13:50:14.103"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.103" endtime="20210918 13:50:14.103"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.104" endtime="20210918 13:50:14.105"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.106" endtime="20210918 13:50:14.106"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.108" endtime="20210918 13:50:14.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.109" endtime="20210918 13:50:14.110"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.111" endtime="20210918 13:50:14.111"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.112" endtime="20210918 13:50:14.113"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.113" endtime="20210918 13:50:14.114"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.114" endtime="20210918 13:50:14.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.115" endtime="20210918 13:50:14.117"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.118" endtime="20210918 13:50:14.118"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.119" endtime="20210918 13:50:14.119"/>
</kw>
<status status="FAIL" starttime="20210918 13:46:58.600" endtime="20210918 13:50:14.121"/>
</kw>
<status status="FAIL" starttime="20210918 13:46:58.600" endtime="20210918 13:50:14.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.122" endtime="20210918 13:50:14.122"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.123" endtime="20210918 13:50:14.123"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.123" endtime="20210918 13:50:14.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.125" endtime="20210918 13:50:14.125"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.125" endtime="20210918 13:50:14.126"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.128" endtime="20210918 13:50:14.128"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.128" endtime="20210918 13:50:14.129"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.129" endtime="20210918 13:50:14.130"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.130" endtime="20210918 13:50:14.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.131" endtime="20210918 13:50:14.131"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.132" endtime="20210918 13:50:14.133"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.134" endtime="20210918 13:50:14.134"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.135" endtime="20210918 13:50:14.135"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.136" endtime="20210918 13:50:14.137"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.137" endtime="20210918 13:50:14.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.138" endtime="20210918 13:50:14.139"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.139" endtime="20210918 13:50:14.139"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.141" endtime="20210918 13:50:14.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.143" endtime="20210918 13:50:14.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.143" endtime="20210918 13:50:14.144"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.144" endtime="20210918 13:50:14.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.145" endtime="20210918 13:50:14.146"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.146" endtime="20210918 13:50:14.148"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210918 13:50:14.148" endtime="20210918 13:50:14.148"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.149" endtime="20210918 13:50:14.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210918 13:50:14.151" endtime="20210918 13:50:14.151"/>
</kw>
<status status="FAIL" starttime="20210918 13:45:14.258" endtime="20210918 13:50:14.152"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210918 13:45:14.093" endtime="20210918 13:50:14.154">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210918 13:25:12.017" endtime="20210918 13:50:14.163"/>
</suite>
<status status="FAIL" starttime="20210918 13:00:54.442" endtime="20210918 13:50:14.185"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:49.188" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:49.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:49.193" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210918 13:00:49.184" endtime="20210918 13:00:49.193"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:49.194" level="INFO">scm</msg>
<status status="PASS" starttime="20210918 13:00:49.193" endtime="20210918 13:00:49.194"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:49.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:49.194" endtime="20210918 13:00:49.195"/>
</kw>
<status status="PASS" starttime="20210918 13:00:49.183" endtime="20210918 13:00:49.195"/>
</kw>
<msg timestamp="20210918 13:00:49.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:49.183" endtime="20210918 13:00:49.195"/>
</kw>
<msg timestamp="20210918 13:00:49.196" level="INFO">${instance} = scm</msg>
<status status="PASS" starttime="20210918 13:00:49.182" endtime="20210918 13:00:49.196"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210918 13:00:49.196" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210918 13:00:49.196" endtime="20210918 13:00:49.197"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210918 13:00:49.201" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210918 13:00:49.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210918 13:00:49.210" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210918 13:00:49.199" endtime="20210918 13:00:49.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210918 13:00:49.211" level="INFO"/>
<status status="PASS" starttime="20210918 13:00:49.210" endtime="20210918 13:00:49.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210918 13:00:49.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210918 13:00:49.212" endtime="20210918 13:00:49.212"/>
</kw>
<status status="PASS" starttime="20210918 13:00:49.198" endtime="20210918 13:00:49.213"/>
</kw>
<msg timestamp="20210918 13:00:49.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210918 13:00:49.198" endtime="20210918 13:00:49.213"/>
</kw>
<status status="PASS" starttime="20210918 13:00:49.197" endtime="20210918 13:00:49.213"/>
</kw>
<status status="PASS" starttime="20210918 13:00:49.197" endtime="20210918 13:00:49.213"/>
</kw>
<status status="PASS" starttime="20210918 13:00:49.181" endtime="20210918 13:00:49.213"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210918 13:00:49.180" endtime="20210918 13:00:49.214"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210918 13:00:49.116" endtime="20210918 13:00:49.215"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2959842"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
