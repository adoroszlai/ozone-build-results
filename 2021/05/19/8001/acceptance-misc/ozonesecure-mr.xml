<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.2 (Python 3.6.9 on linux)" generated="20210519 19:32:47.492" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:37.505" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:41.768" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 19:28:41.768" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210519 19:28:37.502" endtime="20210519 19:28:41.768"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:41.769" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210519 19:28:41.768" endtime="20210519 19:28:41.769"/>
</kw>
<msg timestamp="20210519 19:28:41.770" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210519 19:28:37.501" endtime="20210519 19:28:41.770"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:41.775" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:45.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:28:45.323" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:28:41.773" endtime="20210519 19:28:45.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:45.325" level="INFO"/>
<status status="PASS" starttime="20210519 19:28:45.324" endtime="20210519 19:28:45.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:28:45.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:28:45.325" endtime="20210519 19:28:45.325"/>
</kw>
<status status="PASS" starttime="20210519 19:28:41.772" endtime="20210519 19:28:45.326"/>
</kw>
<msg timestamp="20210519 19:28:45.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:41.772" endtime="20210519 19:28:45.326"/>
</kw>
<msg timestamp="20210519 19:28:45.326" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210519 19:28:41.771" endtime="20210519 19:28:45.326"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:28:45.326" endtime="20210519 19:28:45.327"/>
</kw>
<status status="PASS" starttime="20210519 19:28:41.771" endtime="20210519 19:28:45.327"/>
</kw>
<status status="PASS" starttime="20210519 19:28:41.770" endtime="20210519 19:28:45.327"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:45.332" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:48.507" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:28:48.507" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:28:45.329" endtime="20210519 19:28:48.507"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:48.509" level="INFO"/>
<status status="PASS" starttime="20210519 19:28:48.508" endtime="20210519 19:28:48.509"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:28:48.509" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:28:48.509" endtime="20210519 19:28:48.509"/>
</kw>
<status status="PASS" starttime="20210519 19:28:45.329" endtime="20210519 19:28:48.510"/>
</kw>
<msg timestamp="20210519 19:28:48.510" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:45.328" endtime="20210519 19:28:48.510"/>
</kw>
<status status="PASS" starttime="20210519 19:28:45.328" endtime="20210519 19:28:48.510"/>
</kw>
<status status="PASS" starttime="20210519 19:28:45.328" endtime="20210519 19:28:48.511"/>
</kw>
<status status="PASS" starttime="20210519 19:28:45.327" endtime="20210519 19:28:48.511"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210519 19:28:48.511" endtime="20210519 19:28:48.511"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:48.515" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:51.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:28:51.722" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T19:28...</msg>
<status status="PASS" starttime="20210519 19:28:48.513" endtime="20210519 19:28:51.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:51.723" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T19:28:48.397Z",
  "modificationTime" : "2021-05-19T19:28:48.397Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210519 19:28:51.722" endtime="20210519 19:28:51.723"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:28:51.724" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:28:51.723" endtime="20210519 19:28:51.724"/>
</kw>
<status status="PASS" starttime="20210519 19:28:48.513" endtime="20210519 19:28:51.724"/>
</kw>
<msg timestamp="20210519 19:28:51.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:48.512" endtime="20210519 19:28:51.724"/>
</kw>
<msg timestamp="20210519 19:28:51.725" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T19:28...</msg>
<status status="PASS" starttime="20210519 19:28:48.512" endtime="20210519 19:28:51.725"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:28:51.725" endtime="20210519 19:28:51.725"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:28:51.730" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:28:51.729" endtime="20210519 19:28:51.730"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:28:51.730" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:28:51.730" endtime="20210519 19:28:51.730"/>
</kw>
<status status="PASS" starttime="20210519 19:28:51.729" endtime="20210519 19:28:51.731"/>
</kw>
<msg timestamp="20210519 19:28:51.731" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:28:51.727" endtime="20210519 19:28:51.731"/>
</kw>
<status status="PASS" starttime="20210519 19:28:51.727" endtime="20210519 19:28:51.731"/>
</kw>
<msg timestamp="20210519 19:28:51.731" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210519 19:28:51.726" endtime="20210519 19:28:51.731"/>
</kw>
<msg timestamp="20210519 19:28:51.731" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210519 19:28:51.725" endtime="20210519 19:28:51.731"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:51.734" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:55.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:28:55.017" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:28:51.733" endtime="20210519 19:28:55.017"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:55.018" level="INFO"/>
<status status="PASS" starttime="20210519 19:28:55.017" endtime="20210519 19:28:55.018"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:28:55.019" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:28:55.018" endtime="20210519 19:28:55.019"/>
</kw>
<status status="PASS" starttime="20210519 19:28:51.732" endtime="20210519 19:28:55.019"/>
</kw>
<msg timestamp="20210519 19:28:55.019" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:51.732" endtime="20210519 19:28:55.019"/>
</kw>
<status status="PASS" starttime="20210519 19:28:51.732" endtime="20210519 19:28:55.020"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:55.023" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:01.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:01.851" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:28:55.021" endtime="20210519 19:29:01.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:01.852" level="INFO"/>
<status status="PASS" starttime="20210519 19:29:01.851" endtime="20210519 19:29:01.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:01.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:01.853" endtime="20210519 19:29:01.853"/>
</kw>
<status status="PASS" starttime="20210519 19:28:55.021" endtime="20210519 19:29:01.853"/>
</kw>
<msg timestamp="20210519 19:29:01.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:55.020" endtime="20210519 19:29:01.854"/>
</kw>
<status status="PASS" starttime="20210519 19:28:55.020" endtime="20210519 19:29:01.854"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:01.857" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:06.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:06.950" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:29:01.855" endtime="20210519 19:29:06.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:06.953" level="INFO"/>
<status status="PASS" starttime="20210519 19:29:06.951" endtime="20210519 19:29:06.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:06.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:06.953" endtime="20210519 19:29:06.953"/>
</kw>
<status status="PASS" starttime="20210519 19:29:01.855" endtime="20210519 19:29:06.954"/>
</kw>
<msg timestamp="20210519 19:29:06.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:01.855" endtime="20210519 19:29:06.954"/>
</kw>
<status status="PASS" starttime="20210519 19:29:01.854" endtime="20210519 19:29:06.954"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:06.958" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:12.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:12.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:29:06.956" endtime="20210519 19:29:12.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:12.652" level="INFO"/>
<status status="PASS" starttime="20210519 19:29:12.652" endtime="20210519 19:29:12.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:12.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:12.653" endtime="20210519 19:29:12.653"/>
</kw>
<status status="PASS" starttime="20210519 19:29:06.955" endtime="20210519 19:29:12.654"/>
</kw>
<msg timestamp="20210519 19:29:12.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:06.955" endtime="20210519 19:29:12.654"/>
</kw>
<status status="PASS" starttime="20210519 19:29:06.954" endtime="20210519 19:29:12.654"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 19:28:37.501" endtime="20210519 19:29:12.654"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:29:12.660" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:29:12.660" endtime="20210519 19:29:12.660"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:29:12.661" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:29:12.661" endtime="20210519 19:29:12.661"/>
</kw>
<status status="PASS" starttime="20210519 19:29:12.659" endtime="20210519 19:29:12.661"/>
</kw>
<msg timestamp="20210519 19:29:12.662" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:29:12.658" endtime="20210519 19:29:12.662"/>
</kw>
<status status="PASS" starttime="20210519 19:29:12.657" endtime="20210519 19:29:12.662"/>
</kw>
<msg timestamp="20210519 19:29:12.662" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210519 19:29:12.657" endtime="20210519 19:29:12.662"/>
</kw>
<msg timestamp="20210519 19:29:12.663" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210519 19:29:12.656" endtime="20210519 19:29:12.663"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:12.666" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:16.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:16.181" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:29:12.664" endtime="20210519 19:29:16.181"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:16.183" level="INFO"/>
<status status="PASS" starttime="20210519 19:29:16.181" endtime="20210519 19:29:16.183"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:16.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:16.183" endtime="20210519 19:29:16.184"/>
</kw>
<status status="PASS" starttime="20210519 19:29:12.664" endtime="20210519 19:29:16.184"/>
</kw>
<msg timestamp="20210519 19:29:16.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:12.663" endtime="20210519 19:29:16.184"/>
</kw>
<status status="PASS" starttime="20210519 19:29:12.663" endtime="20210519 19:29:16.185"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:16.188" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:19.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:19.383" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:29:16.186" endtime="20210519 19:29:19.384"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:19.385" level="INFO"/>
<status status="PASS" starttime="20210519 19:29:19.384" endtime="20210519 19:29:19.385"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:19.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:19.385" endtime="20210519 19:29:19.385"/>
</kw>
<status status="PASS" starttime="20210519 19:29:16.186" endtime="20210519 19:29:19.386"/>
</kw>
<msg timestamp="20210519 19:29:19.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:16.185" endtime="20210519 19:29:19.386"/>
</kw>
<status status="PASS" starttime="20210519 19:29:16.185" endtime="20210519 19:29:19.386"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 19:29:12.655" endtime="20210519 19:29:19.387"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210519 19:28:37.444" endtime="20210519 19:29:19.388"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:31:24.620" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210519 19:31:24.619" endtime="20210519 19:31:24.620"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:31:24.620" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210519 19:31:24.620" endtime="20210519 19:31:24.620"/>
</kw>
<status status="PASS" starttime="20210519 19:31:24.618" endtime="20210519 19:31:24.620"/>
</kw>
<msg timestamp="20210519 19:31:24.621" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210519 19:31:24.618" endtime="20210519 19:31:24.621"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210519 19:31:24.621" endtime="20210519 19:31:24.622"/>
</kw>
<msg timestamp="20210519 19:31:24.622" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210519 19:31:24.621" endtime="20210519 19:31:24.622"/>
</kw>
<status status="PASS" starttime="20210519 19:31:24.617" endtime="20210519 19:31:24.622"/>
</kw>
<msg timestamp="20210519 19:31:24.622" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210519 19:31:24.617" endtime="20210519 19:31:24.622"/>
</kw>
<msg timestamp="20210519 19:31:24.622" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210519 19:31:24.615" endtime="20210519 19:31:24.623"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 19:31:24.623" level="INFO">${random} = 87875</msg>
<status status="PASS" starttime="20210519 19:31:24.623" endtime="20210519 19:31:24.623"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:31:24.629" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-87875 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:31:30.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:31:30.654" level="INFO">${output} = 2021-05-19 19:31:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:31:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210519 19:31:24.625" endtime="20210519 19:31:30.654"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:31:30.655" level="INFO">2021-05-19 19:31:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:31:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-19 19:31:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-19 19:31:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-19 19:31:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9B45149EFD38-&gt;4dcad3c5-d5b4-428b-93ba-88b2a1d36823
2021-05-19 19:31:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210519 19:31:30.655" endtime="20210519 19:31:30.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:31:30.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:31:30.656" endtime="20210519 19:31:30.656"/>
</kw>
<status status="PASS" starttime="20210519 19:31:24.624" endtime="20210519 19:31:30.656"/>
</kw>
<msg timestamp="20210519 19:31:30.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:31:24.624" endtime="20210519 19:31:30.657"/>
</kw>
<msg timestamp="20210519 19:31:30.657" level="INFO">${result} = 2021-05-19 19:31:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:31:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210519 19:31:24.623" endtime="20210519 19:31:30.657"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:31:30.660" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:31:32.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:31:32.490" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:29 ofs://om/volume1/bucket1/ozone-12267
-rw-...</msg>
<status status="PASS" starttime="20210519 19:31:30.658" endtime="20210519 19:31:32.490"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:31:32.491" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:29 ofs://om/volume1/bucket1/ozone-12267
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:31 ofs://om/volume1/bucket1/ozone-87875
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:29 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:30 ofs://om/volume1/bucket1/wordcount-wz5ZSvnu.txt</msg>
<status status="PASS" starttime="20210519 19:31:32.490" endtime="20210519 19:31:32.491"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:31:32.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:31:32.492" endtime="20210519 19:31:32.492"/>
</kw>
<status status="PASS" starttime="20210519 19:31:30.658" endtime="20210519 19:31:32.492"/>
</kw>
<msg timestamp="20210519 19:31:32.492" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:31:30.658" endtime="20210519 19:31:32.493"/>
</kw>
<msg timestamp="20210519 19:31:32.493" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:28 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:29 ofs://om/volume1/bucket1/ozone-12267
-rw-...</msg>
<status status="PASS" starttime="20210519 19:31:30.657" endtime="20210519 19:31:32.493"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:31:32.493" endtime="20210519 19:31:32.493"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 19:31:24.615" endtime="20210519 19:31:32.494"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210519 19:31:24.555" endtime="20210519 19:31:32.495"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:29:45.904" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:29:45.904" endtime="20210519 19:29:45.904"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:29:45.905" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:29:45.905" endtime="20210519 19:29:45.905"/>
</kw>
<status status="PASS" starttime="20210519 19:29:45.904" endtime="20210519 19:29:45.905"/>
</kw>
<msg timestamp="20210519 19:29:45.905" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:29:45.903" endtime="20210519 19:29:45.905"/>
</kw>
<status status="PASS" starttime="20210519 19:29:45.902" endtime="20210519 19:29:45.906"/>
</kw>
<msg timestamp="20210519 19:29:45.906" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210519 19:29:45.902" endtime="20210519 19:29:45.906"/>
</kw>
<msg timestamp="20210519 19:29:45.906" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210519 19:29:45.901" endtime="20210519 19:29:45.906"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 19:29:45.906" level="INFO">${random} = 12267</msg>
<status status="PASS" starttime="20210519 19:29:45.906" endtime="20210519 19:29:45.907"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:45.911" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12267 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:52.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:52.216" level="INFO">${output} = 2021-05-19 19:29:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:29:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210519 19:29:45.908" endtime="20210519 19:29:52.216"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:52.217" level="INFO">2021-05-19 19:29:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:29:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-19 19:29:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-19 19:29:48 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-19 19:29:48 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D3AA6A097555-&gt;4dcad3c5-d5b4-428b-93ba-88b2a1d36823
2021-05-19 19:29:48 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210519 19:29:52.217" endtime="20210519 19:29:52.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:52.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:52.218" endtime="20210519 19:29:52.218"/>
</kw>
<status status="PASS" starttime="20210519 19:29:45.907" endtime="20210519 19:29:52.218"/>
</kw>
<msg timestamp="20210519 19:29:52.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:45.907" endtime="20210519 19:29:52.219"/>
</kw>
<msg timestamp="20210519 19:29:52.219" level="INFO">${result} = 2021-05-19 19:29:47 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:29:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210519 19:29:45.907" endtime="20210519 19:29:52.219"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:52.222" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:54.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:54.134" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:29 o3fs://bucket1.volume1.om/ozone-12267
dr...</msg>
<status status="PASS" starttime="20210519 19:29:52.220" endtime="20210519 19:29:54.134"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:54.136" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:29 o3fs://bucket1.volume1.om/ozone-12267
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:29 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210519 19:29:54.135" endtime="20210519 19:29:54.136"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:54.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:54.136" endtime="20210519 19:29:54.136"/>
</kw>
<status status="PASS" starttime="20210519 19:29:52.220" endtime="20210519 19:29:54.137"/>
</kw>
<msg timestamp="20210519 19:29:54.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:52.219" endtime="20210519 19:29:54.137"/>
</kw>
<msg timestamp="20210519 19:29:54.138" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-19 19:28 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-19 19:29 o3fs://bucket1.volume1.om/ozone-12267
dr...</msg>
<status status="PASS" starttime="20210519 19:29:52.219" endtime="20210519 19:29:54.138"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:29:54.138" endtime="20210519 19:29:54.138"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 19:29:45.900" endtime="20210519 19:29:54.138"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210519 19:29:45.844" endtime="20210519 19:29:54.140"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:40.862" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:40.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:40.864" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210519 19:29:40.858" endtime="20210519 19:29:40.864"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:40.866" level="INFO">rm</msg>
<status status="PASS" starttime="20210519 19:29:40.865" endtime="20210519 19:29:40.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:40.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:40.866" endtime="20210519 19:29:40.867"/>
</kw>
<status status="PASS" starttime="20210519 19:29:40.857" endtime="20210519 19:29:40.867"/>
</kw>
<msg timestamp="20210519 19:29:40.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:40.857" endtime="20210519 19:29:40.867"/>
</kw>
<msg timestamp="20210519 19:29:40.867" level="INFO">${hostname} = rm</msg>
<status status="PASS" starttime="20210519 19:29:40.856" endtime="20210519 19:29:40.867"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 19:29:40.869" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 19:29:40.868" endtime="20210519 19:29:40.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:40.874" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:40.880" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:40.881" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:29:40.871" endtime="20210519 19:29:40.881"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:40.881" level="INFO"/>
<status status="PASS" starttime="20210519 19:29:40.881" endtime="20210519 19:29:40.881"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:40.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:40.882" endtime="20210519 19:29:40.882"/>
</kw>
<status status="PASS" starttime="20210519 19:29:40.871" endtime="20210519 19:29:40.883"/>
</kw>
<msg timestamp="20210519 19:29:40.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:40.870" endtime="20210519 19:29:40.883"/>
</kw>
<status status="PASS" starttime="20210519 19:29:40.870" endtime="20210519 19:29:40.883"/>
</kw>
<status status="PASS" starttime="20210519 19:29:40.869" endtime="20210519 19:29:40.883"/>
</kw>
<status status="PASS" starttime="20210519 19:29:40.856" endtime="20210519 19:29:40.883"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 19:29:40.855" endtime="20210519 19:29:40.883"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210519 19:29:40.802" endtime="20210519 19:29:40.885"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:32.373" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:32.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:28:32.375" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210519 19:28:32.369" endtime="20210519 19:28:32.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:32.376" level="INFO">om</msg>
<status status="PASS" starttime="20210519 19:28:32.376" endtime="20210519 19:28:32.376"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:28:32.377" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:28:32.376" endtime="20210519 19:28:32.377"/>
</kw>
<status status="PASS" starttime="20210519 19:28:32.369" endtime="20210519 19:28:32.378"/>
</kw>
<msg timestamp="20210519 19:28:32.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:32.369" endtime="20210519 19:28:32.378"/>
</kw>
<msg timestamp="20210519 19:28:32.381" level="INFO">${hostname} = om</msg>
<status status="PASS" starttime="20210519 19:28:32.368" endtime="20210519 19:28:32.381"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 19:28:32.382" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 19:28:32.381" endtime="20210519 19:28:32.382"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:28:32.385" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:28:32.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:28:32.392" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:28:32.384" endtime="20210519 19:28:32.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:28:32.393" level="INFO"/>
<status status="PASS" starttime="20210519 19:28:32.392" endtime="20210519 19:28:32.393"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:28:32.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:28:32.393" endtime="20210519 19:28:32.393"/>
</kw>
<status status="PASS" starttime="20210519 19:28:32.383" endtime="20210519 19:28:32.394"/>
</kw>
<msg timestamp="20210519 19:28:32.394" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:28:32.383" endtime="20210519 19:28:32.394"/>
</kw>
<status status="PASS" starttime="20210519 19:28:32.382" endtime="20210519 19:28:32.394"/>
</kw>
<status status="PASS" starttime="20210519 19:28:32.382" endtime="20210519 19:28:32.394"/>
</kw>
<status status="PASS" starttime="20210519 19:28:32.367" endtime="20210519 19:28:32.394"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 19:28:32.367" endtime="20210519 19:28:32.395"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210519 19:28:32.306" endtime="20210519 19:28:32.396"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:31:37.776" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:31:37.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:31:37.782" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:31:37.774" endtime="20210519 19:31:37.782"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:31:37.783" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:31:37.782" endtime="20210519 19:31:37.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:31:37.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:31:37.783" endtime="20210519 19:31:37.783"/>
</kw>
<status status="PASS" starttime="20210519 19:31:37.773" endtime="20210519 19:31:37.784"/>
</kw>
<msg timestamp="20210519 19:31:37.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:31:37.772" endtime="20210519 19:31:37.784"/>
</kw>
<msg timestamp="20210519 19:31:37.784" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:31:37.772" endtime="20210519 19:31:37.785"/>
</kw>
<msg timestamp="20210519 19:31:37.785" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:31:37.771" endtime="20210519 19:31:37.785"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:31:37.789" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210519 19:31:37.788" endtime="20210519 19:31:37.789"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:31:37.789" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210519 19:31:37.789" endtime="20210519 19:31:37.789"/>
</kw>
<status status="PASS" starttime="20210519 19:31:37.788" endtime="20210519 19:31:37.789"/>
</kw>
<msg timestamp="20210519 19:31:37.790" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210519 19:31:37.787" endtime="20210519 19:31:37.790"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210519 19:31:37.791" endtime="20210519 19:31:37.791"/>
</kw>
<msg timestamp="20210519 19:31:37.791" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210519 19:31:37.790" endtime="20210519 19:31:37.791"/>
</kw>
<status status="PASS" starttime="20210519 19:31:37.787" endtime="20210519 19:31:37.791"/>
</kw>
<msg timestamp="20210519 19:31:37.791" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210519 19:31:37.786" endtime="20210519 19:31:37.791"/>
</kw>
<msg timestamp="20210519 19:31:37.792" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210519 19:31:37.785" endtime="20210519 19:31:37.792"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:31:37.794" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:32:10.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:32:10.956" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-19 19:31:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:31:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210519 19:31:37.793" endtime="20210519 19:32:10.956"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:32:10.957" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-19 19:31:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:31:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-19 19:31:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-19 19:31:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-19 19:31:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-82F8513A00FD-&gt;3790e1b3-4a4e-428d-9380-f0aa9f41af82
2021-05-19 19:31:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-05-19 19:31:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-22DC66357F83-&gt;4dcad3c5-d5b4-428b-93ba-88b2a1d36823
2021-05-19 19:31:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-19 19:31:41 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:31:41 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-19 19:31:41 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452701639, maxDate=1622057501639, sequenceNumber=3, masterKeyId=2))
2021-05-19 19:31:41 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f8 fe f2 b0 98 2f 38 f8 86 a5 d1 9a 2f 40 03 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-19 19:31:41 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452701639, maxDate=1622057501639, sequenceNumber=3, masterKeyId=2)
2021-05-19 19:31:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-19 19:31:41 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-19 19:31:42 INFO  JobSubmitter:202 - number of splits:3
2021-05-19 19:31:44 INFO  JobSubmitter:298 - Submitting tokens for job: job_1621452461219_0003
2021-05-19 19:31:44 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452701639, maxDate=1622057501639, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f8 fe f2 b0 98 2f 38 f8 86 a5 d1 9a 2f 40 03 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-19 19:31:45 INFO  Configuration:2795 - resource-types.xml not found
2021-05-19 19:31:45 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-19 19:31:45 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-19 19:31:45 INFO  YarnClientImpl:329 - Submitted application application_1621452461219_0003
2021-05-19 19:31:45 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1621452461219_0003/
2021-05-19 19:31:45 INFO  Job:1614 - Running job: job_1621452461219_0003
2021-05-19 19:31:53 INFO  Job:1635 - Job job_1621452461219_0003 running in uber mode : false
2021-05-19 19:31:53 INFO  Job:1642 -  map 0% reduce 0%
2021-05-19 19:32:03 INFO  Job:1642 -  map 33% reduce 0%
2021-05-19 19:32:05 INFO  Job:1642 -  map 100% reduce 0%
2021-05-19 19:32:09 INFO  Job:1642 -  map 100% reduce 100%
2021-05-19 19:32:10 INFO  Job:1653 - Job job_1621452461219_0003 completed successfully
2021-05-19 19:32:10 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1125873
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41236
		Total time spent by all reduces in occupied slots (ms)=7258
		Total time spent by all map tasks (ms)=20618
		Total time spent by all reduce tasks (ms)=3629
		Total vcore-milliseconds taken by all map tasks=20618
		Total vcore-milliseconds taken by all reduce tasks=3629
		Total megabyte-milliseconds taken by all map tasks=42225664
		Total megabyte-milliseconds taken by all reduce tasks=7432192
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=987
		CPU time spent (ms)=7430
		Physical memory (bytes) snapshot=1497321472
		Virtual memory (bytes) snapshot=14063747072
		Total committed heap usage (bytes)=1293942784
		Peak Map Physical memory (bytes)=402247680
		Peak Map Virtual memory (bytes)=3514937344
		Peak Reduce Physical memory (bytes)=334200832
		Peak Reduce Virtual memory (bytes)=3526217728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.207 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210519 19:32:10.956" endtime="20210519 19:32:10.957"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:32:10.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:32:10.958" endtime="20210519 19:32:10.958"/>
</kw>
<status status="PASS" starttime="20210519 19:31:37.793" endtime="20210519 19:32:10.959"/>
</kw>
<msg timestamp="20210519 19:32:10.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:31:37.792" endtime="20210519 19:32:10.959"/>
</kw>
<msg timestamp="20210519 19:32:10.959" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-19 19:31:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:31:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210519 19:31:37.792" endtime="20210519 19:32:10.959"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:32:10.960" endtime="20210519 19:32:10.960"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210519 19:31:37.771" endtime="20210519 19:32:10.960"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:32:10.965" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:32:10.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:32:10.971" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:32:10.963" endtime="20210519 19:32:10.971"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:32:10.972" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:32:10.971" endtime="20210519 19:32:10.972"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:32:10.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:32:10.972" endtime="20210519 19:32:10.973"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.963" endtime="20210519 19:32:10.973"/>
</kw>
<msg timestamp="20210519 19:32:10.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:32:10.962" endtime="20210519 19:32:10.973"/>
</kw>
<msg timestamp="20210519 19:32:10.973" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:32:10.962" endtime="20210519 19:32:10.973"/>
</kw>
<msg timestamp="20210519 19:32:10.974" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:32:10.962" endtime="20210519 19:32:10.974"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 19:32:10.975" level="INFO">${random} = WKDN2V0I</msg>
<status status="PASS" starttime="20210519 19:32:10.974" endtime="20210519 19:32:10.975"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:32:10.979" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210519 19:32:10.979" endtime="20210519 19:32:10.979"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:32:10.980" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210519 19:32:10.980" endtime="20210519 19:32:10.980"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.978" endtime="20210519 19:32:10.980"/>
</kw>
<msg timestamp="20210519 19:32:10.980" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210519 19:32:10.978" endtime="20210519 19:32:10.980"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210519 19:32:10.981" endtime="20210519 19:32:10.981"/>
</kw>
<msg timestamp="20210519 19:32:10.982" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210519 19:32:10.981" endtime="20210519 19:32:10.982"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.977" endtime="20210519 19:32:10.982"/>
</kw>
<msg timestamp="20210519 19:32:10.982" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210519 19:32:10.976" endtime="20210519 19:32:10.982"/>
</kw>
<msg timestamp="20210519 19:32:10.982" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210519 19:32:10.975" endtime="20210519 19:32:10.982"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:32:10.986" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210519 19:32:10.986" endtime="20210519 19:32:10.987"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:32:10.987" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210519 19:32:10.987" endtime="20210519 19:32:10.987"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.985" endtime="20210519 19:32:10.987"/>
</kw>
<msg timestamp="20210519 19:32:10.988" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210519 19:32:10.985" endtime="20210519 19:32:10.988"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:32:10.989" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210519 19:32:10.989" endtime="20210519 19:32:10.989"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:32:10.990" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210519 19:32:10.990" endtime="20210519 19:32:10.990"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.988" endtime="20210519 19:32:10.990"/>
</kw>
<msg timestamp="20210519 19:32:10.990" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210519 19:32:10.988" endtime="20210519 19:32:10.990"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.984" endtime="20210519 19:32:10.991"/>
</kw>
<msg timestamp="20210519 19:32:10.991" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210519 19:32:10.983" endtime="20210519 19:32:10.991"/>
</kw>
<msg timestamp="20210519 19:32:10.991" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210519 19:32:10.983" endtime="20210519 19:32:10.991"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:32:10.994" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210519 19:32:10.994" endtime="20210519 19:32:10.994"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:32:10.995" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210519 19:32:10.994" endtime="20210519 19:32:10.995"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.993" endtime="20210519 19:32:10.995"/>
</kw>
<msg timestamp="20210519 19:32:10.996" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210519 19:32:10.993" endtime="20210519 19:32:10.996"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:32:10.997" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210519 19:32:10.997" endtime="20210519 19:32:10.997"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:32:10.997" level="INFO">${result} = /wordcount-WKDN2V0I.txt</msg>
<status status="PASS" starttime="20210519 19:32:10.997" endtime="20210519 19:32:10.998"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.996" endtime="20210519 19:32:10.998"/>
</kw>
<msg timestamp="20210519 19:32:10.998" level="INFO">${path_with_leading} = /wordcount-WKDN2V0I.txt</msg>
<status status="PASS" starttime="20210519 19:32:10.996" endtime="20210519 19:32:10.998"/>
</kw>
<status status="PASS" starttime="20210519 19:32:10.992" endtime="20210519 19:32:10.998"/>
</kw>
<msg timestamp="20210519 19:32:10.998" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-WKDN2V0I.txt</msg>
<status status="PASS" starttime="20210519 19:32:10.992" endtime="20210519 19:32:10.998"/>
</kw>
<msg timestamp="20210519 19:32:10.998" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-WKDN2V0I.txt</msg>
<status status="PASS" starttime="20210519 19:32:10.991" endtime="20210519 19:32:10.998"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:32:11.001" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-WKDN2V0I.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:32:40.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:32:40.169" level="INFO">${output} = 2021-05-19 19:32:12 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:32:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210519 19:32:11.000" endtime="20210519 19:32:40.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:32:40.171" level="INFO">2021-05-19 19:32:12 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:32:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-19 19:32:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452733262, maxDate=1622057533262, sequenceNumber=4, masterKeyId=2))
2021-05-19 19:32:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 eb f5 f4 b0 98 2f 38 eb fd a6 d1 9a 2f 40 04 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-19 19:32:13 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452733262, maxDate=1622057533262, sequenceNumber=4, masterKeyId=2)
2021-05-19 19:32:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-19 19:32:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:32:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-19 19:32:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-19 19:32:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-19 19:32:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3AC8B79E614E-&gt;4dcad3c5-d5b4-428b-93ba-88b2a1d36823
2021-05-19 19:32:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-19 19:32:14 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-19 19:32:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C1BA1F4D82F6-&gt;3790e1b3-4a4e-428d-9380-f0aa9f41af82
2021-05-19 19:32:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-19 19:32:15 INFO  JobSubmitter:202 - number of splits:3
2021-05-19 19:32:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1621452461219_0004
2021-05-19 19:32:15 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452733262, maxDate=1622057533262, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 eb f5 f4 b0 98 2f 38 eb fd a6 d1 9a 2f 40 04 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-19 19:32:15 INFO  Configuration:2795 - resource-types.xml not found
2021-05-19 19:32:15 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-19 19:32:15 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-19 19:32:16 INFO  YarnClientImpl:329 - Submitted application application_1621452461219_0004
2021-05-19 19:32:16 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1621452461219_0004/
2021-05-19 19:32:16 INFO  Job:1614 - Running job: job_1621452461219_0004
2021-05-19 19:32:23 INFO  Job:1635 - Job job_1621452461219_0004 running in uber mode : false
2021-05-19 19:32:23 INFO  Job:1642 -  map 0% reduce 0%
2021-05-19 19:32:33 INFO  Job:1642 -  map 33% reduce 0%
2021-05-19 19:32:34 INFO  Job:1642 -  map 67% reduce 0%
2021-05-19 19:32:35 INFO  Job:1642 -  map 100% reduce 0%
2021-05-19 19:32:39 INFO  Job:1642 -  map 100% reduce 100%
2021-05-19 19:32:39 INFO  Job:1653 - Job job_1621452461219_0004 completed successfully
2021-05-19 19:32:39 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32104
		FILE: Number of bytes written=1188701
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39807
		OFS: Number of bytes written=22286
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42788
		Total time spent by all reduces in occupied slots (ms)=7264
		Total time spent by all map tasks (ms)=21394
		Total time spent by all reduce tasks (ms)=3632
		Total vcore-milliseconds taken by all map tasks=21394
		Total vcore-milliseconds taken by all reduce tasks=3632
		Total megabyte-milliseconds taken by all map tasks=43814912
		Total megabyte-milliseconds taken by all reduce tasks=7438336
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55167
		Map output materialized bytes=32116
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32116
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1202
		CPU time spent (ms)=7640
		Physical memory (bytes) snapshot=1676177408
		Virtual memory (bytes) snapshot=14060531712
		Total committed heap usage (bytes)=1519910912
		Peak Map Physical memory (bytes)=569864192
		Peak Map Virtual memory (bytes)=3511103488
		Peak Reduce Physical memory (bytes)=330362880
		Peak Reduce Virtual memory (bytes)=3530043392
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39507
	File Output Format Counters 
		Bytes Written=22286</msg>
<status status="PASS" starttime="20210519 19:32:40.170" endtime="20210519 19:32:40.171"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:32:40.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:32:40.171" endtime="20210519 19:32:40.172"/>
</kw>
<status status="PASS" starttime="20210519 19:32:11.000" endtime="20210519 19:32:40.172"/>
</kw>
<msg timestamp="20210519 19:32:40.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:32:10.999" endtime="20210519 19:32:40.172"/>
</kw>
<msg timestamp="20210519 19:32:40.173" level="INFO">${output} = 2021-05-19 19:32:12 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:32:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210519 19:32:10.999" endtime="20210519 19:32:40.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:32:40.173" endtime="20210519 19:32:40.173"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:32:40.173" endtime="20210519 19:32:40.174"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210519 19:32:10.961" endtime="20210519 19:32:40.174"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210519 19:31:37.711" endtime="20210519 19:32:40.176"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:59.152" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:29:59.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:29:59.157" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:29:59.149" endtime="20210519 19:29:59.157"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:29:59.158" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:29:59.158" endtime="20210519 19:29:59.158"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:29:59.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:29:59.158" endtime="20210519 19:29:59.159"/>
</kw>
<status status="PASS" starttime="20210519 19:29:59.148" endtime="20210519 19:29:59.159"/>
</kw>
<msg timestamp="20210519 19:29:59.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:59.148" endtime="20210519 19:29:59.159"/>
</kw>
<msg timestamp="20210519 19:29:59.160" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:29:59.147" endtime="20210519 19:29:59.160"/>
</kw>
<msg timestamp="20210519 19:29:59.160" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:29:59.147" endtime="20210519 19:29:59.161"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:29:59.164" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:29:59.163" endtime="20210519 19:29:59.164"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:29:59.164" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:29:59.164" endtime="20210519 19:29:59.164"/>
</kw>
<status status="PASS" starttime="20210519 19:29:59.163" endtime="20210519 19:29:59.165"/>
</kw>
<msg timestamp="20210519 19:29:59.165" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:29:59.163" endtime="20210519 19:29:59.165"/>
</kw>
<status status="PASS" starttime="20210519 19:29:59.162" endtime="20210519 19:29:59.165"/>
</kw>
<msg timestamp="20210519 19:29:59.165" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210519 19:29:59.161" endtime="20210519 19:29:59.165"/>
</kw>
<msg timestamp="20210519 19:29:59.165" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210519 19:29:59.161" endtime="20210519 19:29:59.165"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:29:59.169" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:30:38.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:30:38.689" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-19 19:30:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:30:01 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210519 19:29:59.167" endtime="20210519 19:30:38.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:30:38.690" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-19 19:30:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:30:01 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-19 19:30:01 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-19 19:30:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-19 19:30:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3B44BC9C8603-&gt;4dcad3c5-d5b4-428b-93ba-88b2a1d36823
2021-05-19 19:30:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-05-19 19:30:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EF28BD1EEC62-&gt;3790e1b3-4a4e-428d-9380-f0aa9f41af82
2021-05-19 19:30:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-19 19:30:05 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:30:05 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-19 19:30:05 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452605535, maxDate=1622057405535, sequenceNumber=1, masterKeyId=2))
2021-05-19 19:30:05 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da 8e ed b0 98 2f 38 da 96 9f d1 9a 2f 40 01 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-19 19:30:05 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452605535, maxDate=1622057405535, sequenceNumber=1, masterKeyId=2)
2021-05-19 19:30:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-19 19:30:08 INFO  JobSubmitter:202 - number of splits:3
2021-05-19 19:30:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1621452461219_0001
2021-05-19 19:30:08 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452605535, maxDate=1622057405535, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 da 8e ed b0 98 2f 38 da 96 9f d1 9a 2f 40 01 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-19 19:30:09 INFO  Configuration:2795 - resource-types.xml not found
2021-05-19 19:30:09 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-19 19:30:09 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-19 19:30:10 INFO  YarnClientImpl:329 - Submitted application application_1621452461219_0001
2021-05-19 19:30:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1621452461219_0001/
2021-05-19 19:30:10 INFO  Job:1614 - Running job: job_1621452461219_0001
2021-05-19 19:30:20 INFO  Job:1635 - Job job_1621452461219_0001 running in uber mode : false
2021-05-19 19:30:20 INFO  Job:1642 -  map 0% reduce 0%
2021-05-19 19:30:29 INFO  Job:1642 -  map 33% reduce 0%
2021-05-19 19:30:31 INFO  Job:1642 -  map 67% reduce 0%
2021-05-19 19:30:32 INFO  Job:1642 -  map 100% reduce 0%
2021-05-19 19:30:36 INFO  Job:1642 -  map 100% reduce 100%
2021-05-19 19:30:38 INFO  Job:1653 - Job job_1621452461219_0001 completed successfully
2021-05-19 19:30:38 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126077
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43208
		Total time spent by all reduces in occupied slots (ms)=8304
		Total time spent by all map tasks (ms)=21604
		Total time spent by all reduce tasks (ms)=4152
		Total vcore-milliseconds taken by all map tasks=21604
		Total vcore-milliseconds taken by all reduce tasks=4152
		Total megabyte-milliseconds taken by all map tasks=44244992
		Total megabyte-milliseconds taken by all reduce tasks=8503296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=935
		CPU time spent (ms)=7060
		Physical memory (bytes) snapshot=1503113216
		Virtual memory (bytes) snapshot=14055657472
		Total committed heap usage (bytes)=1303379968
		Peak Map Physical memory (bytes)=391053312
		Peak Map Virtual memory (bytes)=3510550528
		Peak Reduce Physical memory (bytes)=334843904
		Peak Reduce Virtual memory (bytes)=3527254016
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.22 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210519 19:30:38.690" endtime="20210519 19:30:38.691"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:30:38.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:30:38.691" endtime="20210519 19:30:38.691"/>
</kw>
<status status="PASS" starttime="20210519 19:29:59.167" endtime="20210519 19:30:38.692"/>
</kw>
<msg timestamp="20210519 19:30:38.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:29:59.166" endtime="20210519 19:30:38.692"/>
</kw>
<msg timestamp="20210519 19:30:38.692" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-19 19:30:01 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:30:01 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210519 19:29:59.166" endtime="20210519 19:30:38.692"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:30:38.692" endtime="20210519 19:30:38.693"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210519 19:29:59.146" endtime="20210519 19:30:38.693"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:30:38.698" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:30:38.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:30:38.702" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:30:38.696" endtime="20210519 19:30:38.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:30:38.703" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:30:38.702" endtime="20210519 19:30:38.703"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:30:38.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:30:38.703" endtime="20210519 19:30:38.704"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.696" endtime="20210519 19:30:38.704"/>
</kw>
<msg timestamp="20210519 19:30:38.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:30:38.695" endtime="20210519 19:30:38.704"/>
</kw>
<msg timestamp="20210519 19:30:38.704" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:30:38.695" endtime="20210519 19:30:38.704"/>
</kw>
<msg timestamp="20210519 19:30:38.705" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210519 19:30:38.695" endtime="20210519 19:30:38.705"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 19:30:38.705" level="INFO">${random} = wz5ZSvnu</msg>
<status status="PASS" starttime="20210519 19:30:38.705" endtime="20210519 19:30:38.705"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:30:38.709" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:30:38.709" endtime="20210519 19:30:38.709"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:30:38.710" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:30:38.709" endtime="20210519 19:30:38.710"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.708" endtime="20210519 19:30:38.710"/>
</kw>
<msg timestamp="20210519 19:30:38.710" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:30:38.708" endtime="20210519 19:30:38.710"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.707" endtime="20210519 19:30:38.710"/>
</kw>
<msg timestamp="20210519 19:30:38.710" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210519 19:30:38.706" endtime="20210519 19:30:38.710"/>
</kw>
<msg timestamp="20210519 19:30:38.711" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210519 19:30:38.705" endtime="20210519 19:30:38.711"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:30:38.714" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:30:38.713" endtime="20210519 19:30:38.714"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:30:38.715" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:30:38.714" endtime="20210519 19:30:38.715"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.713" endtime="20210519 19:30:38.715"/>
</kw>
<msg timestamp="20210519 19:30:38.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:30:38.713" endtime="20210519 19:30:38.715"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.712" endtime="20210519 19:30:38.715"/>
</kw>
<msg timestamp="20210519 19:30:38.715" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210519 19:30:38.711" endtime="20210519 19:30:38.715"/>
</kw>
<msg timestamp="20210519 19:30:38.716" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210519 19:30:38.711" endtime="20210519 19:30:38.716"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210519 19:30:38.719" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210519 19:30:38.718" endtime="20210519 19:30:38.719"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210519 19:30:38.719" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210519 19:30:38.719" endtime="20210519 19:30:38.719"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.718" endtime="20210519 19:30:38.720"/>
</kw>
<msg timestamp="20210519 19:30:38.720" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210519 19:30:38.718" endtime="20210519 19:30:38.720"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.717" endtime="20210519 19:30:38.720"/>
</kw>
<msg timestamp="20210519 19:30:38.720" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-wz5ZSvnu.txt</msg>
<status status="PASS" starttime="20210519 19:30:38.717" endtime="20210519 19:30:38.720"/>
</kw>
<msg timestamp="20210519 19:30:38.721" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-wz5ZSvnu.txt</msg>
<status status="PASS" starttime="20210519 19:30:38.716" endtime="20210519 19:30:38.721"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:30:38.724" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-wz5ZSvnu.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:31:19.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:31:19.176" level="INFO">${output} = 2021-05-19 19:30:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:30:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210519 19:30:38.722" endtime="20210519 19:31:19.176"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:31:19.177" level="INFO">2021-05-19 19:30:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:30:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-19 19:30:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452640871, maxDate=1622057440871, sequenceNumber=2, masterKeyId=2))
2021-05-19 19:30:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 a4 ef b0 98 2f 38 81 ac a1 d1 9a 2f 40 02 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-19 19:30:40 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452640871, maxDate=1622057440871, sequenceNumber=2, masterKeyId=2)
2021-05-19 19:30:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-19 19:30:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-19 19:30:41 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-19 19:30:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-19 19:30:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-19 19:30:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-001519C4F5B3-&gt;4dcad3c5-d5b4-428b-93ba-88b2a1d36823
2021-05-19 19:30:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-19 19:30:42 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-19 19:30:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DE1C2F73B7C-&gt;3790e1b3-4a4e-428d-9380-f0aa9f41af82
2021-05-19 19:30:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-19 19:30:45 INFO  JobSubmitter:202 - number of splits:3
2021-05-19 19:30:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1621452461219_0002
2021-05-19 19:30:45 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1621452640871, maxDate=1622057440871, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.7:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 81 a4 ef b0 98 2f 38 81 ac a1 d1 9a 2f 40 02 48 01 5a 0d 34 30 35 35 30 32 32 38 38 36 38 32 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-19 19:30:45 INFO  Configuration:2795 - resource-types.xml not found
2021-05-19 19:30:45 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-19 19:30:45 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-19 19:30:46 INFO  YarnClientImpl:329 - Submitted application application_1621452461219_0002
2021-05-19 19:30:46 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1621452461219_0002/
2021-05-19 19:30:46 INFO  Job:1614 - Running job: job_1621452461219_0002
2021-05-19 19:30:53 INFO  Job:1635 - Job job_1621452461219_0002 running in uber mode : false
2021-05-19 19:30:53 INFO  Job:1642 -  map 0% reduce 0%
2021-05-19 19:31:03 INFO  Job:1642 -  map 33% reduce 0%
2021-05-19 19:31:05 INFO  Job:1642 -  map 67% reduce 0%
2021-05-19 19:31:06 INFO  Job:1642 -  map 100% reduce 0%
2021-05-19 19:31:12 INFO  Job:1642 -  map 100% reduce 100%
2021-05-19 19:31:18 INFO  Job:1653 - Job job_1621452461219_0002 completed successfully
2021-05-19 19:31:18 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32104
		FILE: Number of bytes written=1188785
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39810
		O3FS: Number of bytes written=22286
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44966
		Total time spent by all reduces in occupied slots (ms)=13660
		Total time spent by all map tasks (ms)=22483
		Total time spent by all reduce tasks (ms)=6830
		Total vcore-milliseconds taken by all map tasks=22483
		Total vcore-milliseconds taken by all reduce tasks=6830
		Total megabyte-milliseconds taken by all map tasks=46045184
		Total megabyte-milliseconds taken by all reduce tasks=13987840
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55167
		Map output materialized bytes=32116
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32116
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1392
		CPU time spent (ms)=7950
		Physical memory (bytes) snapshot=1670008832
		Virtual memory (bytes) snapshot=14058061824
		Total committed heap usage (bytes)=1441792000
		Peak Map Physical memory (bytes)=563355648
		Peak Map Virtual memory (bytes)=3510693888
		Peak Reduce Physical memory (bytes)=332189696
		Peak Reduce Virtual memory (bytes)=3527028736
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39507
	File Output Format Counters 
		Bytes Written=22286</msg>
<status status="PASS" starttime="20210519 19:31:19.176" endtime="20210519 19:31:19.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:31:19.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:31:19.177" endtime="20210519 19:31:19.178"/>
</kw>
<status status="PASS" starttime="20210519 19:30:38.722" endtime="20210519 19:31:19.178"/>
</kw>
<msg timestamp="20210519 19:31:19.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:30:38.722" endtime="20210519 19:31:19.178"/>
</kw>
<msg timestamp="20210519 19:31:19.179" level="INFO">${output} = 2021-05-19 19:30:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.4:8032
2021-05-19 19:30:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
202...</msg>
<status status="PASS" starttime="20210519 19:30:38.721" endtime="20210519 19:31:19.179"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:31:19.179" endtime="20210519 19:31:19.180"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:31:19.180" endtime="20210519 19:31:19.180"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210519 19:30:38.694" endtime="20210519 19:31:19.180"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210519 19:29:59.087" endtime="20210519 19:31:19.182"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="200913"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
