<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.2 (Python 3.6.9 on linux)" generated="20210519 19:15:48.326" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:19.184" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:19.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:19.186" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:26:19.180" endtime="20210519 18:26:19.187"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:19.187" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:26:19.187" endtime="20210519 18:26:19.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:19.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:19.188" endtime="20210519 18:26:19.188"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.180" endtime="20210519 18:26:19.189"/>
</kw>
<msg timestamp="20210519 18:26:19.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:19.179" endtime="20210519 18:26:19.189"/>
</kw>
<msg timestamp="20210519 18:26:19.189" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:26:19.179" endtime="20210519 18:26:19.190"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:19.194" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:19.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:19.201" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:26:19.192" endtime="20210519 18:26:19.201"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:19.202" level="INFO"/>
<status status="PASS" starttime="20210519 18:26:19.201" endtime="20210519 18:26:19.202"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:19.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:19.202" endtime="20210519 18:26:19.203"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.191" endtime="20210519 18:26:19.203"/>
</kw>
<msg timestamp="20210519 18:26:19.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:19.191" endtime="20210519 18:26:19.203"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.190" endtime="20210519 18:26:19.204"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.190" endtime="20210519 18:26:19.204"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.179" endtime="20210519 18:26:19.205"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.178" endtime="20210519 18:26:19.205"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:19.209" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:19.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:19.352" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210519 18:26:19.207" endtime="20210519 18:26:19.352"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:19.354" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Wed, 19 May 2021 18:26:19 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFHcSOqZ+DnAOR8dWLxl0EpC7kHGtx+cQezPVMHi1B4rvKcd9S/QIDR8AHm+HdDeupcDbH3wPBqCYKq+RMb/TTfB/
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1621484779340&amp;s=CU9pxSyLnS7trt7NmG1c3ej1h2Z+DygB11FYudglcFg="; Path=/; HttpOnly
Last-Modified: Wed, 19 May 2021 18:13:54 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210519 18:26:19.353" endtime="20210519 18:26:19.354"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:19.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:19.354" endtime="20210519 18:26:19.355"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.206" endtime="20210519 18:26:19.355"/>
</kw>
<msg timestamp="20210519 18:26:19.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:19.206" endtime="20210519 18:26:19.356"/>
</kw>
<msg timestamp="20210519 18:26:19.356" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210519 18:26:19.205" endtime="20210519 18:26:19.356"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:26:19.356" endtime="20210519 18:26:19.357"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:26:19.177" endtime="20210519 18:26:19.357"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:19.366" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:19.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:19.369" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:26:19.363" endtime="20210519 18:26:19.369"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:19.371" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:26:19.370" endtime="20210519 18:26:19.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:19.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:19.371" endtime="20210519 18:26:19.372"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.363" endtime="20210519 18:26:19.373"/>
</kw>
<msg timestamp="20210519 18:26:19.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:19.362" endtime="20210519 18:26:19.373"/>
</kw>
<msg timestamp="20210519 18:26:19.373" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:26:19.362" endtime="20210519 18:26:19.374"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:26:19.377" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:26:19.374" endtime="20210519 18:26:19.377"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:19.382" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:19.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:19.390" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:26:19.380" endtime="20210519 18:26:19.390"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:19.391" level="INFO"/>
<status status="PASS" starttime="20210519 18:26:19.391" endtime="20210519 18:26:19.391"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:19.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:19.392" endtime="20210519 18:26:19.392"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.379" endtime="20210519 18:26:19.392"/>
</kw>
<msg timestamp="20210519 18:26:19.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:19.378" endtime="20210519 18:26:19.393"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.378" endtime="20210519 18:26:19.393"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.377" endtime="20210519 18:26:19.393"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.361" endtime="20210519 18:26:19.393"/>
</kw>
<status status="PASS" starttime="20210519 18:26:19.360" endtime="20210519 18:26:19.393"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:19.398" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:19.360" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 18:26:19.396" endtime="20210519 18:31:19.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 18:31:19.361" endtime="20210519 18:31:19.361"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 18:31:19.362" endtime="20210519 18:31:19.362"/>
</kw>
<status status="FAIL" starttime="20210519 18:26:19.395" endtime="20210519 18:31:19.362"/>
</kw>
<msg timestamp="20210519 18:31:19.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:26:19.394" endtime="20210519 18:31:19.362"/>
</kw>
<status status="FAIL" starttime="20210519 18:26:19.394" endtime="20210519 18:31:19.363"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210519 18:31:19.363" endtime="20210519 18:31:19.363"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:31:19.363" endtime="20210519 18:31:19.363"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210519 18:26:19.359" endtime="20210519 18:31:19.364">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210519 18:26:19.146" endtime="20210519 18:31:19.366"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:19.380" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:22.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:22.334" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210519 18:31:19.377" endtime="20210519 18:31:22.335"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:22.336" level="INFO">om</msg>
<status status="PASS" starttime="20210519 18:31:22.335" endtime="20210519 18:31:22.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:22.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:22.336" endtime="20210519 18:31:22.338"/>
</kw>
<status status="PASS" starttime="20210519 18:31:19.376" endtime="20210519 18:31:22.339"/>
</kw>
<msg timestamp="20210519 18:31:22.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:19.376" endtime="20210519 18:31:22.340"/>
</kw>
<msg timestamp="20210519 18:31:22.341" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210519 18:31:19.375" endtime="20210519 18:31:22.341"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:22.341" endtime="20210519 18:31:22.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:22.347" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:25.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:25.272" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210519 18:31:22.344" endtime="20210519 18:31:25.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:25.274" level="INFO">om</msg>
<status status="PASS" starttime="20210519 18:31:25.273" endtime="20210519 18:31:25.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:25.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:25.274" endtime="20210519 18:31:25.274"/>
</kw>
<status status="PASS" starttime="20210519 18:31:22.343" endtime="20210519 18:31:25.275"/>
</kw>
<msg timestamp="20210519 18:31:25.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:22.343" endtime="20210519 18:31:25.275"/>
</kw>
<msg timestamp="20210519 18:31:25.275" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210519 18:31:22.342" endtime="20210519 18:31:25.275"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:25.276" endtime="20210519 18:31:25.276"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:31:19.374" endtime="20210519 18:31:25.276"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:25.286" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:28.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:28.167" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:31:25.282" endtime="20210519 18:31:28.167"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:28.169" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:31:28.168" endtime="20210519 18:31:28.169"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:28.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:28.169" endtime="20210519 18:31:28.170"/>
</kw>
<status status="PASS" starttime="20210519 18:31:25.281" endtime="20210519 18:31:28.170"/>
</kw>
<msg timestamp="20210519 18:31:28.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:25.280" endtime="20210519 18:31:28.170"/>
</kw>
<msg timestamp="20210519 18:31:28.171" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210519 18:31:25.279" endtime="20210519 18:31:28.171"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:28.171" endtime="20210519 18:31:28.172"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:28.176" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:29.687" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:29.687" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:31:28.173" endtime="20210519 18:31:29.687"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:29.688" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:31:29.687" endtime="20210519 18:31:29.689"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:29.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:29.689" endtime="20210519 18:31:29.689"/>
</kw>
<status status="PASS" starttime="20210519 18:31:28.173" endtime="20210519 18:31:29.690"/>
</kw>
<msg timestamp="20210519 18:31:29.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:28.173" endtime="20210519 18:31:29.690"/>
</kw>
<msg timestamp="20210519 18:31:29.690" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210519 18:31:28.172" endtime="20210519 18:31:29.690"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:29.691" endtime="20210519 18:31:29.691"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:31:25.277" endtime="20210519 18:31:29.691"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:29.697" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:32.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:32.071" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210519 18:31:29.695" endtime="20210519 18:31:32.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:32.073" level="INFO">om</msg>
<status status="PASS" starttime="20210519 18:31:32.072" endtime="20210519 18:31:32.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:32.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:32.073" endtime="20210519 18:31:32.074"/>
</kw>
<status status="PASS" starttime="20210519 18:31:29.695" endtime="20210519 18:31:32.074"/>
</kw>
<msg timestamp="20210519 18:31:32.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:29.694" endtime="20210519 18:31:32.075"/>
</kw>
<msg timestamp="20210519 18:31:32.075" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210519 18:31:29.693" endtime="20210519 18:31:32.075"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:32.075" endtime="20210519 18:31:32.076"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:32.076" endtime="20210519 18:31:32.076"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:32.081" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:35.057" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:35.057" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210519 18:31:32.078" endtime="20210519 18:31:35.057"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:35.059" level="INFO">om</msg>
<status status="PASS" starttime="20210519 18:31:35.058" endtime="20210519 18:31:35.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:35.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:35.059" endtime="20210519 18:31:35.060"/>
</kw>
<status status="PASS" starttime="20210519 18:31:32.077" endtime="20210519 18:31:35.060"/>
</kw>
<msg timestamp="20210519 18:31:35.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:32.077" endtime="20210519 18:31:35.060"/>
</kw>
<msg timestamp="20210519 18:31:35.061" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210519 18:31:32.076" endtime="20210519 18:31:35.061"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:35.061" endtime="20210519 18:31:35.062"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:35.062" endtime="20210519 18:31:35.062"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:31:29.692" endtime="20210519 18:31:35.063"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:35.069" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:37.769" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:31:37.769" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210519 18:31:35.065" endtime="20210519 18:31:37.769"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:37.771" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210519 18:31:37.770" endtime="20210519 18:31:37.771"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:37.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:37.771" endtime="20210519 18:31:37.772"/>
</kw>
<msg timestamp="20210519 18:31:37.772" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210519 18:31:35.064" endtime="20210519 18:31:37.772"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:37.772" endtime="20210519 18:31:37.773"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:37.778" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:40.377" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:31:40.377" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210519 18:31:37.774" endtime="20210519 18:31:40.377"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:40.379" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210519 18:31:40.378" endtime="20210519 18:31:40.379"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:40.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:40.379" endtime="20210519 18:31:40.380"/>
</kw>
<msg timestamp="20210519 18:31:40.381" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210519 18:31:37.773" endtime="20210519 18:31:40.381"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:31:40.381" endtime="20210519 18:31:40.382"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:31:35.063" endtime="20210519 18:31:40.382"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210519 18:31:19.368" endtime="20210519 18:31:40.385"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 18:31:40.410" level="INFO">${random} = 90575</msg>
<status status="PASS" starttime="20210519 18:31:40.409" endtime="20210519 18:31:40.410"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:31:40.412" level="INFO">${source} = 90575-source</msg>
<status status="PASS" starttime="20210519 18:31:40.410" endtime="20210519 18:31:40.412"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:31:40.414" level="INFO">${target} = 90575-target</msg>
<status status="PASS" starttime="20210519 18:31:40.413" endtime="20210519 18:31:40.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:40.419" level="INFO">Running command 'ozone sh volume create 90575-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:48.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:48.172" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:31:40.416" endtime="20210519 18:31:48.172"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:48.173" level="INFO"/>
<status status="PASS" starttime="20210519 18:31:48.172" endtime="20210519 18:31:48.174"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:48.174" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:48.174" endtime="20210519 18:31:48.174"/>
</kw>
<status status="PASS" starttime="20210519 18:31:40.416" endtime="20210519 18:31:48.175"/>
</kw>
<msg timestamp="20210519 18:31:48.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:40.415" endtime="20210519 18:31:48.175"/>
</kw>
<status status="PASS" starttime="20210519 18:31:40.415" endtime="20210519 18:31:48.176"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:48.180" level="INFO">Running command 'ozone sh volume create 90575-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:31:54.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:31:54.509" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:31:48.177" endtime="20210519 18:31:54.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:31:54.510" level="INFO"/>
<status status="PASS" starttime="20210519 18:31:54.509" endtime="20210519 18:31:54.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:31:54.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:31:54.510" endtime="20210519 18:31:54.511"/>
</kw>
<status status="PASS" starttime="20210519 18:31:48.177" endtime="20210519 18:31:54.511"/>
</kw>
<msg timestamp="20210519 18:31:54.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:48.176" endtime="20210519 18:31:54.511"/>
</kw>
<status status="PASS" starttime="20210519 18:31:48.176" endtime="20210519 18:31:54.512"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:31:54.517" level="INFO">Running command 'ozone sh bucket create 90575-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:32:00.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:32:00.812" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:31:54.516" endtime="20210519 18:32:00.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:32:00.814" level="INFO"/>
<status status="PASS" starttime="20210519 18:32:00.813" endtime="20210519 18:32:00.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:32:00.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:32:00.814" endtime="20210519 18:32:00.815"/>
</kw>
<status status="PASS" starttime="20210519 18:31:54.515" endtime="20210519 18:32:00.815"/>
</kw>
<msg timestamp="20210519 18:32:00.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:31:54.513" endtime="20210519 18:32:00.815"/>
</kw>
<status status="PASS" starttime="20210519 18:31:54.513" endtime="20210519 18:32:00.815"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:32:00.821" level="INFO">Running command 'ozone sh key put 90575-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:13.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:13.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:32:00.817" endtime="20210519 18:35:13.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:13.404" level="INFO"/>
<status status="PASS" starttime="20210519 18:35:13.404" endtime="20210519 18:35:13.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:13.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:13.405" endtime="20210519 18:35:13.405"/>
</kw>
<status status="PASS" starttime="20210519 18:32:00.817" endtime="20210519 18:35:13.406"/>
</kw>
<msg timestamp="20210519 18:35:13.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:32:00.816" endtime="20210519 18:35:13.406"/>
</kw>
<status status="PASS" starttime="20210519 18:32:00.816" endtime="20210519 18:35:13.406"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:13.410" level="INFO">Running command 'ozone sh bucket create 90575-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:21.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:21.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:35:13.408" endtime="20210519 18:35:21.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:21.893" level="INFO"/>
<status status="PASS" starttime="20210519 18:35:21.892" endtime="20210519 18:35:21.893"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:21.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:21.893" endtime="20210519 18:35:21.894"/>
</kw>
<status status="PASS" starttime="20210519 18:35:13.408" endtime="20210519 18:35:21.895"/>
</kw>
<msg timestamp="20210519 18:35:21.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:13.407" endtime="20210519 18:35:21.895"/>
</kw>
<status status="PASS" starttime="20210519 18:35:13.407" endtime="20210519 18:35:21.896"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:21.901" level="INFO">Running command 'ozone sh bucket link 90575-source/readable-bucket 90575-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:27.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:27.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:35:21.899" endtime="20210519 18:35:27.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:27.479" level="INFO"/>
<status status="PASS" starttime="20210519 18:35:27.479" endtime="20210519 18:35:27.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:27.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:27.480" endtime="20210519 18:35:27.480"/>
</kw>
<status status="PASS" starttime="20210519 18:35:21.898" endtime="20210519 18:35:27.481"/>
</kw>
<msg timestamp="20210519 18:35:27.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:21.898" endtime="20210519 18:35:27.481"/>
</kw>
<status status="PASS" starttime="20210519 18:35:21.896" endtime="20210519 18:35:27.481"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:27.486" level="INFO">Running command 'ozone sh bucket link 90575-source/readable-bucket 90575-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:34.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:34.347" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:35:27.484" endtime="20210519 18:35:34.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:34.349" level="INFO"/>
<status status="PASS" starttime="20210519 18:35:34.348" endtime="20210519 18:35:34.352"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:34.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:34.353" endtime="20210519 18:35:34.354"/>
</kw>
<status status="PASS" starttime="20210519 18:35:27.483" endtime="20210519 18:35:34.354"/>
</kw>
<msg timestamp="20210519 18:35:34.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:27.483" endtime="20210519 18:35:34.354"/>
</kw>
<status status="PASS" starttime="20210519 18:35:27.482" endtime="20210519 18:35:34.354"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:34.363" level="INFO">Running command 'ozone sh bucket link 90575-source/unreadable-bucket 90575-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:41.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:41.736" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:35:34.356" endtime="20210519 18:35:41.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:41.739" level="INFO"/>
<status status="PASS" starttime="20210519 18:35:41.737" endtime="20210519 18:35:41.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:41.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:41.739" endtime="20210519 18:35:41.740"/>
</kw>
<status status="PASS" starttime="20210519 18:35:34.356" endtime="20210519 18:35:41.741"/>
</kw>
<msg timestamp="20210519 18:35:41.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:34.355" endtime="20210519 18:35:41.742"/>
</kw>
<status status="PASS" starttime="20210519 18:35:34.355" endtime="20210519 18:35:41.742"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:41.749" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90575-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:48.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:48.598" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:35:41.745" endtime="20210519 18:35:48.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:48.600" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:35:48.599" endtime="20210519 18:35:48.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:48.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:48.600" endtime="20210519 18:35:48.601"/>
</kw>
<status status="PASS" starttime="20210519 18:35:41.744" endtime="20210519 18:35:48.601"/>
</kw>
<msg timestamp="20210519 18:35:48.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:41.744" endtime="20210519 18:35:48.601"/>
</kw>
<status status="PASS" starttime="20210519 18:35:41.743" endtime="20210519 18:35:48.602"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:48.614" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90575-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:35:53.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:35:53.474" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:35:48.604" endtime="20210519 18:35:53.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:35:53.475" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:35:53.474" endtime="20210519 18:35:53.475"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:35:53.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:35:53.475" endtime="20210519 18:35:53.476"/>
</kw>
<status status="PASS" starttime="20210519 18:35:48.603" endtime="20210519 18:35:53.476"/>
</kw>
<msg timestamp="20210519 18:35:53.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:48.603" endtime="20210519 18:35:53.476"/>
</kw>
<status status="PASS" starttime="20210519 18:35:48.602" endtime="20210519 18:35:53.477"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:35:53.481" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90575-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:01.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:01.308" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:35:53.479" endtime="20210519 18:36:01.308"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:01.309" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:36:01.308" endtime="20210519 18:36:01.309"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:01.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:01.309" endtime="20210519 18:36:01.310"/>
</kw>
<status status="PASS" starttime="20210519 18:35:53.478" endtime="20210519 18:36:01.310"/>
</kw>
<msg timestamp="20210519 18:36:01.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:35:53.478" endtime="20210519 18:36:01.311"/>
</kw>
<status status="PASS" starttime="20210519 18:35:53.477" endtime="20210519 18:36:01.311"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:01.316" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90575-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:08.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:08.905" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:36:01.313" endtime="20210519 18:36:08.905"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:08.907" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:36:08.906" endtime="20210519 18:36:08.907"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:08.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:08.907" endtime="20210519 18:36:08.907"/>
</kw>
<status status="PASS" starttime="20210519 18:36:01.312" endtime="20210519 18:36:08.908"/>
</kw>
<msg timestamp="20210519 18:36:08.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:01.312" endtime="20210519 18:36:08.908"/>
</kw>
<status status="PASS" starttime="20210519 18:36:01.311" endtime="20210519 18:36:08.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:08.912" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90575-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:14.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:14.327" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:36:08.910" endtime="20210519 18:36:14.327"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:14.328" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:36:14.328" endtime="20210519 18:36:14.328"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:14.329" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:14.329" endtime="20210519 18:36:14.329"/>
</kw>
<status status="PASS" starttime="20210519 18:36:08.910" endtime="20210519 18:36:14.330"/>
</kw>
<msg timestamp="20210519 18:36:14.330" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:08.909" endtime="20210519 18:36:14.330"/>
</kw>
<status status="PASS" starttime="20210519 18:36:08.909" endtime="20210519 18:36:14.330"/>
</kw>
<status status="PASS" starttime="20210519 18:31:54.513" endtime="20210519 18:36:14.330"/>
</kw>
<status status="PASS" starttime="20210519 18:31:54.512" endtime="20210519 18:36:14.330"/>
</kw>
<status status="PASS" starttime="20210519 18:31:40.409" endtime="20210519 18:36:14.331"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:14.337" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:14.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:14.339" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:36:14.335" endtime="20210519 18:36:14.339"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:14.340" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:36:14.340" endtime="20210519 18:36:14.341"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:14.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:14.341" endtime="20210519 18:36:14.342"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.334" endtime="20210519 18:36:14.342"/>
</kw>
<msg timestamp="20210519 18:36:14.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:14.333" endtime="20210519 18:36:14.342"/>
</kw>
<msg timestamp="20210519 18:36:14.342" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:36:14.333" endtime="20210519 18:36:14.342"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:36:14.344" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:36:14.343" endtime="20210519 18:36:14.344"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:14.348" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:14.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:14.387" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:36:14.347" endtime="20210519 18:36:14.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:14.389" level="INFO"/>
<status status="PASS" starttime="20210519 18:36:14.388" endtime="20210519 18:36:14.389"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:14.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:14.389" endtime="20210519 18:36:14.390"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.346" endtime="20210519 18:36:14.390"/>
</kw>
<msg timestamp="20210519 18:36:14.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:14.346" endtime="20210519 18:36:14.390"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.345" endtime="20210519 18:36:14.390"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.345" endtime="20210519 18:36:14.391"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.332" endtime="20210519 18:36:14.391"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.332" endtime="20210519 18:36:14.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:14.395" level="INFO">Running command 'ozone sh bucket link 90575-source/no-such-bucket 90575-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:21.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:21.056" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:36:14.392" endtime="20210519 18:36:21.056"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:21.058" level="INFO"/>
<status status="PASS" starttime="20210519 18:36:21.057" endtime="20210519 18:36:21.059"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:21.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:21.059" endtime="20210519 18:36:21.059"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.392" endtime="20210519 18:36:21.060"/>
</kw>
<msg timestamp="20210519 18:36:21.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:14.392" endtime="20210519 18:36:21.060"/>
</kw>
<status status="PASS" starttime="20210519 18:36:14.391" endtime="20210519 18:36:21.060"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:21.064" level="INFO">Running command 'ozone sh key list 90575-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:28.438" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:36:28.438" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210519 18:36:21.061" endtime="20210519 18:36:28.438"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:28.440" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210519 18:36:28.439" endtime="20210519 18:36:28.440"/>
</kw>
<msg timestamp="20210519 18:36:28.441" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210519 18:36:21.060" endtime="20210519 18:36:28.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:36:28.441" endtime="20210519 18:36:28.442"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:36:14.331" endtime="20210519 18:36:28.443"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:28.453" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:28.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:28.456" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:36:28.450" endtime="20210519 18:36:28.456"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:28.458" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:36:28.457" endtime="20210519 18:36:28.458"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:28.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:28.459" endtime="20210519 18:36:28.460"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.449" endtime="20210519 18:36:28.460"/>
</kw>
<msg timestamp="20210519 18:36:28.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:28.448" endtime="20210519 18:36:28.461"/>
</kw>
<msg timestamp="20210519 18:36:28.461" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:36:28.448" endtime="20210519 18:36:28.461"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:36:28.463" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:36:28.462" endtime="20210519 18:36:28.463"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:28.469" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:28.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:28.481" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:36:28.466" endtime="20210519 18:36:28.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:28.483" level="INFO"/>
<status status="PASS" starttime="20210519 18:36:28.482" endtime="20210519 18:36:28.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:28.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:28.483" endtime="20210519 18:36:28.484"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.465" endtime="20210519 18:36:28.485"/>
</kw>
<msg timestamp="20210519 18:36:28.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:28.465" endtime="20210519 18:36:28.485"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.464" endtime="20210519 18:36:28.485"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.463" endtime="20210519 18:36:28.485"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.447" endtime="20210519 18:36:28.486"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.446" endtime="20210519 18:36:28.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:28.492" level="INFO">Running command 'ozone sh bucket link 90575-source/bucket1 90575-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:35.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:35.781" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:36:28.489" endtime="20210519 18:36:35.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:35.783" level="INFO"/>
<status status="PASS" starttime="20210519 18:36:35.782" endtime="20210519 18:36:35.783"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:35.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:35.783" endtime="20210519 18:36:35.784"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.488" endtime="20210519 18:36:35.784"/>
</kw>
<msg timestamp="20210519 18:36:35.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:28.487" endtime="20210519 18:36:35.785"/>
</kw>
<status status="PASS" starttime="20210519 18:36:28.486" endtime="20210519 18:36:35.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:35.791" level="INFO">Running command 'ozone sh bucket create 90575-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:36:43.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:36:43.254" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:36:35.788" endtime="20210519 18:36:43.254"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:36:43.256" level="INFO"/>
<status status="PASS" starttime="20210519 18:36:43.255" endtime="20210519 18:36:43.256"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:36:43.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:36:43.256" endtime="20210519 18:36:43.257"/>
</kw>
<status status="PASS" starttime="20210519 18:36:35.787" endtime="20210519 18:36:43.257"/>
</kw>
<msg timestamp="20210519 18:36:43.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:36:35.787" endtime="20210519 18:36:43.258"/>
</kw>
<status status="PASS" starttime="20210519 18:36:35.785" endtime="20210519 18:36:43.259"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:36:43.266" level="INFO">Running command 'ozone sh key put 90575-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:38:28.446" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 18:36:43.262" endtime="20210519 18:38:28.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 18:38:28.447" endtime="20210519 18:38:28.447"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 18:38:28.448" endtime="20210519 18:38:28.448"/>
</kw>
<status status="FAIL" starttime="20210519 18:36:43.261" endtime="20210519 18:38:28.448"/>
</kw>
<msg timestamp="20210519 18:38:28.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:36:43.260" endtime="20210519 18:38:28.448"/>
</kw>
<status status="FAIL" starttime="20210519 18:36:43.259" endtime="20210519 18:38:28.449"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210519 18:38:28.449" endtime="20210519 18:38:28.449"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210519 18:36:28.444" endtime="20210519 18:38:28.450">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:38:28.459" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:38:28.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:38:28.462" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:38:28.456" endtime="20210519 18:38:28.462"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:38:28.463" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:38:28.462" endtime="20210519 18:38:28.463"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:38:28.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:38:28.463" endtime="20210519 18:38:28.464"/>
</kw>
<status status="PASS" starttime="20210519 18:38:28.455" endtime="20210519 18:38:28.464"/>
</kw>
<msg timestamp="20210519 18:38:28.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:38:28.455" endtime="20210519 18:38:28.465"/>
</kw>
<msg timestamp="20210519 18:38:28.465" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:38:28.454" endtime="20210519 18:38:28.465"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:38:28.466" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:38:28.465" endtime="20210519 18:38:28.466"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:38:28.470" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:38:28.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:38:28.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:38:28.468" endtime="20210519 18:38:28.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:38:28.480" level="INFO"/>
<status status="PASS" starttime="20210519 18:38:28.480" endtime="20210519 18:38:28.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:38:28.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:38:28.481" endtime="20210519 18:38:28.482"/>
</kw>
<status status="PASS" starttime="20210519 18:38:28.468" endtime="20210519 18:38:28.482"/>
</kw>
<msg timestamp="20210519 18:38:28.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:38:28.467" endtime="20210519 18:38:28.482"/>
</kw>
<status status="PASS" starttime="20210519 18:38:28.467" endtime="20210519 18:38:28.483"/>
</kw>
<status status="PASS" starttime="20210519 18:38:28.466" endtime="20210519 18:38:28.483"/>
</kw>
<status status="PASS" starttime="20210519 18:38:28.454" endtime="20210519 18:38:28.483"/>
</kw>
<status status="PASS" starttime="20210519 18:38:28.453" endtime="20210519 18:38:28.483"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:38:28.487" level="INFO">Running command 'ozone sh key put 90575-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:28.452" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 18:38:28.485" endtime="20210519 18:40:28.453"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 18:40:28.454" endtime="20210519 18:40:28.454"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 18:40:28.454" endtime="20210519 18:40:28.454"/>
</kw>
<status status="FAIL" starttime="20210519 18:38:28.484" endtime="20210519 18:40:28.454"/>
</kw>
<msg timestamp="20210519 18:40:28.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:38:28.484" endtime="20210519 18:40:28.455"/>
</kw>
<status status="FAIL" starttime="20210519 18:38:28.483" endtime="20210519 18:40:28.455"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210519 18:40:28.455" endtime="20210519 18:40:28.455"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210519 18:38:28.452" endtime="20210519 18:40:28.456">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:28.464" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:28.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:28.468" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:40:28.462" endtime="20210519 18:40:28.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:28.470" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:40:28.469" endtime="20210519 18:40:28.470"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:28.472" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:28.471" endtime="20210519 18:40:28.472"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.461" endtime="20210519 18:40:28.472"/>
</kw>
<msg timestamp="20210519 18:40:28.473" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:28.461" endtime="20210519 18:40:28.473"/>
</kw>
<msg timestamp="20210519 18:40:28.473" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:40:28.460" endtime="20210519 18:40:28.473"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:40:28.474" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:40:28.474" endtime="20210519 18:40:28.475"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:28.481" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:28.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:28.497" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:40:28.478" endtime="20210519 18:40:28.497"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:28.499" level="INFO"/>
<status status="PASS" starttime="20210519 18:40:28.498" endtime="20210519 18:40:28.499"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:28.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:28.500" endtime="20210519 18:40:28.501"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.478" endtime="20210519 18:40:28.501"/>
</kw>
<msg timestamp="20210519 18:40:28.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:28.477" endtime="20210519 18:40:28.502"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.476" endtime="20210519 18:40:28.502"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.475" endtime="20210519 18:40:28.502"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.459" endtime="20210519 18:40:28.503"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.459" endtime="20210519 18:40:28.503"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:28.508" level="INFO">Running command 'ozone sh key list 90575-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:36.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:36.946" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210519 18:40:28.506" endtime="20210519 18:40:36.946"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:36.948" level="INFO">key1</msg>
<status status="PASS" starttime="20210519 18:40:36.947" endtime="20210519 18:40:36.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:36.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:36.948" endtime="20210519 18:40:36.949"/>
</kw>
<status status="PASS" starttime="20210519 18:40:28.505" endtime="20210519 18:40:36.949"/>
</kw>
<msg timestamp="20210519 18:40:36.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:28.504" endtime="20210519 18:40:36.950"/>
</kw>
<msg timestamp="20210519 18:40:36.950" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210519 18:40:28.503" endtime="20210519 18:40:36.950"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:36.955" level="INFO">Running command 'ozone sh key list 90575-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:44.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:44.701" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210519 18:40:36.952" endtime="20210519 18:40:44.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:44.704" level="INFO">key1</msg>
<status status="PASS" starttime="20210519 18:40:44.703" endtime="20210519 18:40:44.704"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:44.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:44.704" endtime="20210519 18:40:44.706"/>
</kw>
<status status="PASS" starttime="20210519 18:40:36.951" endtime="20210519 18:40:44.706"/>
</kw>
<msg timestamp="20210519 18:40:44.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:36.951" endtime="20210519 18:40:44.707"/>
</kw>
<msg timestamp="20210519 18:40:44.707" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210519 18:40:36.950" endtime="20210519 18:40:44.707"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:40:44.708" endtime="20210519 18:40:44.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:40:44.709" endtime="20210519 18:40:44.710"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210519 18:40:44.711" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210519 18:40:44.710" endtime="20210519 18:40:44.711"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210519 18:40:28.457" endtime="20210519 18:40:44.711">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:44.719" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:44.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:44.723" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:40:44.717" endtime="20210519 18:40:44.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:44.725" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:40:44.724" endtime="20210519 18:40:44.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:44.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:44.725" endtime="20210519 18:40:44.727"/>
</kw>
<status status="PASS" starttime="20210519 18:40:44.716" endtime="20210519 18:40:44.727"/>
</kw>
<msg timestamp="20210519 18:40:44.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:44.716" endtime="20210519 18:40:44.727"/>
</kw>
<msg timestamp="20210519 18:40:44.728" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:40:44.715" endtime="20210519 18:40:44.728"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:40:44.729" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:40:44.728" endtime="20210519 18:40:44.729"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:44.736" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:44.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:44.746" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:40:44.734" endtime="20210519 18:40:44.747"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:44.748" level="INFO"/>
<status status="PASS" starttime="20210519 18:40:44.747" endtime="20210519 18:40:44.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:44.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:44.749" endtime="20210519 18:40:44.750"/>
</kw>
<status status="PASS" starttime="20210519 18:40:44.733" endtime="20210519 18:40:44.750"/>
</kw>
<msg timestamp="20210519 18:40:44.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:44.733" endtime="20210519 18:40:44.750"/>
</kw>
<status status="PASS" starttime="20210519 18:40:44.729" endtime="20210519 18:40:44.751"/>
</kw>
<status status="PASS" starttime="20210519 18:40:44.729" endtime="20210519 18:40:44.751"/>
</kw>
<status status="PASS" starttime="20210519 18:40:44.714" endtime="20210519 18:40:44.751"/>
</kw>
<status status="PASS" starttime="20210519 18:40:44.714" endtime="20210519 18:40:44.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:44.756" level="INFO">Running command 'ozone sh key delete 90575-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:52.346" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:40:52.347" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210519 18:40:44.753" endtime="20210519 18:40:52.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:52.348" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210519 18:40:52.347" endtime="20210519 18:40:52.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:52.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210519 18:40:52.349" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210519 18:40:52.348" endtime="20210519 18:40:52.349"/>
</kw>
<status status="FAIL" starttime="20210519 18:40:44.753" endtime="20210519 18:40:52.350"/>
</kw>
<msg timestamp="20210519 18:40:52.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:40:44.752" endtime="20210519 18:40:52.351"/>
</kw>
<status status="FAIL" starttime="20210519 18:40:44.751" endtime="20210519 18:40:52.352"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210519 18:40:52.352" endtime="20210519 18:40:52.352"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:40:52.357" endtime="20210519 18:40:52.357"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210519 18:40:44.712" endtime="20210519 18:40:52.357">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:52.380" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:52.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:52.387" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:40:52.375" endtime="20210519 18:40:52.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:52.392" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:40:52.387" endtime="20210519 18:40:52.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:52.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:52.394" endtime="20210519 18:40:52.396"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.370" endtime="20210519 18:40:52.396"/>
</kw>
<msg timestamp="20210519 18:40:52.397" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:52.370" endtime="20210519 18:40:52.397"/>
</kw>
<msg timestamp="20210519 18:40:52.399" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:40:52.370" endtime="20210519 18:40:52.399"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:40:52.400" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:40:52.399" endtime="20210519 18:40:52.400"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:52.414" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:40:52.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:40:52.436" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:40:52.411" endtime="20210519 18:40:52.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:40:52.437" level="INFO"/>
<status status="PASS" starttime="20210519 18:40:52.436" endtime="20210519 18:40:52.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:40:52.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:40:52.438" endtime="20210519 18:40:52.439"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.410" endtime="20210519 18:40:52.439"/>
</kw>
<msg timestamp="20210519 18:40:52.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:52.407" endtime="20210519 18:40:52.440"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.403" endtime="20210519 18:40:52.440"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.402" endtime="20210519 18:40:52.440"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.369" endtime="20210519 18:40:52.440"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.368" endtime="20210519 18:40:52.441"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:40:52.456" level="INFO">Running command 'ozone sh bucket list 90575-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:00.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:00.807" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210519 18:40:52.446" endtime="20210519 18:41:00.807"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:00.809" level="INFO">{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:36:20.678Z",
  "modificationTime" : "2021-05-19T18:36:20.678Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:41.669Z",
  "modificationTime" : "2021-05-19T18:36:14.182Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:36:35.695Z",
  "modificationTime" : "2021-05-19T18:36:35.695Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:27.388Z",
  "modificationTime" : "2021-05-19T18:36:08.834Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:34.168Z",
  "modificationTime" : "2021-05-19T18:35:34.168Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210519 18:41:00.808" endtime="20210519 18:41:00.809"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:00.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:00.809" endtime="20210519 18:41:00.810"/>
</kw>
<status status="PASS" starttime="20210519 18:40:52.442" endtime="20210519 18:41:00.810"/>
</kw>
<msg timestamp="20210519 18:41:00.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:40:52.442" endtime="20210519 18:41:00.810"/>
</kw>
<msg timestamp="20210519 18:41:00.811" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210519 18:40:52.441" endtime="20210519 18:41:00.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:41:00.811" endtime="20210519 18:41:00.811"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:41:00.812" endtime="20210519 18:41:00.812"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:40:52.365" endtime="20210519 18:41:00.812"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:00.822" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:00.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:00.828" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:41:00.819" endtime="20210519 18:41:00.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:00.832" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:41:00.831" endtime="20210519 18:41:00.832"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:00.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:00.832" endtime="20210519 18:41:00.833"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.818" endtime="20210519 18:41:00.833"/>
</kw>
<msg timestamp="20210519 18:41:00.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:00.818" endtime="20210519 18:41:00.834"/>
</kw>
<msg timestamp="20210519 18:41:00.834" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:41:00.817" endtime="20210519 18:41:00.834"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:41:00.835" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:41:00.834" endtime="20210519 18:41:00.835"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:00.841" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:00.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:00.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:41:00.839" endtime="20210519 18:41:00.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:00.858" level="INFO"/>
<status status="PASS" starttime="20210519 18:41:00.856" endtime="20210519 18:41:00.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:00.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:00.858" endtime="20210519 18:41:00.860"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.837" endtime="20210519 18:41:00.860"/>
</kw>
<msg timestamp="20210519 18:41:00.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:00.836" endtime="20210519 18:41:00.861"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.836" endtime="20210519 18:41:00.861"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.835" endtime="20210519 18:41:00.861"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.816" endtime="20210519 18:41:00.862"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.815" endtime="20210519 18:41:00.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:00.870" level="INFO">Running command 'ozone sh bucket info 90575-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:08.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:08.500" level="INFO">${output} = 90575-source bucket1</msg>
<status status="PASS" starttime="20210519 18:41:00.866" endtime="20210519 18:41:08.500"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:08.503" level="INFO">90575-source bucket1</msg>
<status status="PASS" starttime="20210519 18:41:08.501" endtime="20210519 18:41:08.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:08.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:08.503" endtime="20210519 18:41:08.505"/>
</kw>
<status status="PASS" starttime="20210519 18:41:00.865" endtime="20210519 18:41:08.505"/>
</kw>
<msg timestamp="20210519 18:41:08.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:00.864" endtime="20210519 18:41:08.506"/>
</kw>
<msg timestamp="20210519 18:41:08.507" level="INFO">${result} = 90575-source bucket1</msg>
<status status="PASS" starttime="20210519 18:41:00.862" endtime="20210519 18:41:08.507"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:41:08.508" endtime="20210519 18:41:08.509"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:41:00.813" endtime="20210519 18:41:08.510"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:08.520" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:08.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:08.524" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:41:08.517" endtime="20210519 18:41:08.524"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:08.527" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:41:08.526" endtime="20210519 18:41:08.527"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:08.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:08.527" endtime="20210519 18:41:08.528"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.516" endtime="20210519 18:41:08.529"/>
</kw>
<msg timestamp="20210519 18:41:08.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:08.516" endtime="20210519 18:41:08.529"/>
</kw>
<msg timestamp="20210519 18:41:08.530" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:41:08.515" endtime="20210519 18:41:08.530"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:41:08.531" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:41:08.530" endtime="20210519 18:41:08.531"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:08.538" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:08.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:08.548" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:41:08.535" endtime="20210519 18:41:08.548"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:08.550" level="INFO"/>
<status status="PASS" starttime="20210519 18:41:08.549" endtime="20210519 18:41:08.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:08.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:08.551" endtime="20210519 18:41:08.552"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.534" endtime="20210519 18:41:08.552"/>
</kw>
<msg timestamp="20210519 18:41:08.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:08.534" endtime="20210519 18:41:08.553"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.532" endtime="20210519 18:41:08.553"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.532" endtime="20210519 18:41:08.553"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.514" endtime="20210519 18:41:08.554"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.513" endtime="20210519 18:41:08.554"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:08.559" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 90575-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:15.851" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:15.851" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:41:08.556" endtime="20210519 18:41:15.851"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:15.853" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:41:15.852" endtime="20210519 18:41:15.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:15.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:15.854" endtime="20210519 18:41:15.856"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.556" endtime="20210519 18:41:15.856"/>
</kw>
<msg timestamp="20210519 18:41:15.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:08.555" endtime="20210519 18:41:15.857"/>
</kw>
<status status="PASS" starttime="20210519 18:41:08.554" endtime="20210519 18:41:15.857"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:15.867" level="INFO">Running command 'ozone sh bucket getacl 90575-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:21.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:21.744" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210519 18:41:15.863" endtime="20210519 18:41:21.745"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:21.748" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210519 18:41:21.746" endtime="20210519 18:41:21.748"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:21.750" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:21.749" endtime="20210519 18:41:21.751"/>
</kw>
<status status="PASS" starttime="20210519 18:41:15.861" endtime="20210519 18:41:21.751"/>
</kw>
<msg timestamp="20210519 18:41:21.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:15.861" endtime="20210519 18:41:21.753"/>
</kw>
<msg timestamp="20210519 18:41:21.753" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210519 18:41:15.859" endtime="20210519 18:41:21.753"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:41:21.753" endtime="20210519 18:41:21.756"/>
</kw>
<status status="PASS" starttime="20210519 18:41:15.858" endtime="20210519 18:41:21.756"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:21.768" level="INFO">Running command 'ozone sh bucket getacl 90575-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:30.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:30.476" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:41:21.766" endtime="20210519 18:41:30.476"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:30.479" level="INFO"/>
<status status="PASS" starttime="20210519 18:41:30.478" endtime="20210519 18:41:30.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:30.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:30.480" endtime="20210519 18:41:30.481"/>
</kw>
<status status="PASS" starttime="20210519 18:41:21.763" endtime="20210519 18:41:30.482"/>
</kw>
<msg timestamp="20210519 18:41:30.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:21.763" endtime="20210519 18:41:30.483"/>
</kw>
<msg timestamp="20210519 18:41:30.484" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210519 18:41:21.759" endtime="20210519 18:41:30.484"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:41:30.484" endtime="20210519 18:41:30.486"/>
</kw>
<status status="PASS" starttime="20210519 18:41:21.757" endtime="20210519 18:41:30.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:30.498" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 90575-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:37.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:37.148" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:41:30.494" endtime="20210519 18:41:37.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:37.150" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 18:41:37.149" endtime="20210519 18:41:37.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:37.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:37.151" endtime="20210519 18:41:37.152"/>
</kw>
<status status="PASS" starttime="20210519 18:41:30.490" endtime="20210519 18:41:37.152"/>
</kw>
<msg timestamp="20210519 18:41:37.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:30.489" endtime="20210519 18:41:37.152"/>
</kw>
<status status="PASS" starttime="20210519 18:41:30.487" endtime="20210519 18:41:37.153"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:37.161" level="INFO">Running command 'ozone sh bucket getacl 90575-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:44.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:44.748" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:41:37.158" endtime="20210519 18:41:44.748"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:44.750" level="INFO"/>
<status status="PASS" starttime="20210519 18:41:44.749" endtime="20210519 18:41:44.751"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:44.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:44.751" endtime="20210519 18:41:44.752"/>
</kw>
<status status="PASS" starttime="20210519 18:41:37.157" endtime="20210519 18:41:44.753"/>
</kw>
<msg timestamp="20210519 18:41:44.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:37.157" endtime="20210519 18:41:44.753"/>
</kw>
<msg timestamp="20210519 18:41:44.754" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210519 18:41:37.155" endtime="20210519 18:41:44.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:41:44.755" endtime="20210519 18:41:44.756"/>
</kw>
<status status="PASS" starttime="20210519 18:41:37.153" endtime="20210519 18:41:44.756"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:44.763" level="INFO">Running command 'ozone sh bucket getacl 90575-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:52.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:52.858" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210519 18:41:44.760" endtime="20210519 18:41:52.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:52.860" level="INFO">READ</msg>
<status status="PASS" starttime="20210519 18:41:52.859" endtime="20210519 18:41:52.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:52.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:52.860" endtime="20210519 18:41:52.861"/>
</kw>
<status status="PASS" starttime="20210519 18:41:44.759" endtime="20210519 18:41:52.861"/>
</kw>
<msg timestamp="20210519 18:41:52.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:44.759" endtime="20210519 18:41:52.862"/>
</kw>
<msg timestamp="20210519 18:41:52.862" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210519 18:41:44.758" endtime="20210519 18:41:52.862"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:41:52.862" endtime="20210519 18:41:52.863"/>
</kw>
<status status="PASS" starttime="20210519 18:41:44.757" endtime="20210519 18:41:52.864"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:41:08.511" endtime="20210519 18:41:52.864"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:52.876" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:52.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:52.883" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:41:52.873" endtime="20210519 18:41:52.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:52.886" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:41:52.884" endtime="20210519 18:41:52.886"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:52.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:52.886" endtime="20210519 18:41:52.887"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.872" endtime="20210519 18:41:52.888"/>
</kw>
<msg timestamp="20210519 18:41:52.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:52.871" endtime="20210519 18:41:52.888"/>
</kw>
<msg timestamp="20210519 18:41:52.888" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:41:52.871" endtime="20210519 18:41:52.888"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:41:52.889" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:41:52.889" endtime="20210519 18:41:52.889"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:52.896" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:41:52.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:41:52.930" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:41:52.894" endtime="20210519 18:41:52.930"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:41:52.931" level="INFO"/>
<status status="PASS" starttime="20210519 18:41:52.931" endtime="20210519 18:41:52.931"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:41:52.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:41:52.932" endtime="20210519 18:41:52.932"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.892" endtime="20210519 18:41:52.933"/>
</kw>
<msg timestamp="20210519 18:41:52.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:52.892" endtime="20210519 18:41:52.933"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.891" endtime="20210519 18:41:52.933"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.890" endtime="20210519 18:41:52.933"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.870" endtime="20210519 18:41:52.933"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.868" endtime="20210519 18:41:52.934"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:41:52.938" level="INFO">Running command 'ozone sh bucket link 90575-source/bucket2 90575-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:00.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:00.676" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:41:52.936" endtime="20210519 18:42:00.676"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:00.677" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:00.676" endtime="20210519 18:42:00.678"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:00.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:00.678" endtime="20210519 18:42:00.679"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.935" endtime="20210519 18:42:00.679"/>
</kw>
<msg timestamp="20210519 18:42:00.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:41:52.935" endtime="20210519 18:42:00.679"/>
</kw>
<status status="PASS" starttime="20210519 18:41:52.934" endtime="20210519 18:42:00.680"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:00.683" level="INFO">Running command 'ozone sh bucket create 90575-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:08.375" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:42:08.375" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210519 18:42:00.680" endtime="20210519 18:42:08.375"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:08.377" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210519 18:42:08.376" endtime="20210519 18:42:08.377"/>
</kw>
<msg timestamp="20210519 18:42:08.378" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210519 18:42:00.680" endtime="20210519 18:42:08.378"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:08.378" endtime="20210519 18:42:08.378"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:08.384" level="INFO">Running command 'ozone sh bucket create 90575-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:15.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:15.479" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:08.381" endtime="20210519 18:42:15.479"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:15.482" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:15.480" endtime="20210519 18:42:15.482"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:15.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:15.482" endtime="20210519 18:42:15.483"/>
</kw>
<status status="PASS" starttime="20210519 18:42:08.380" endtime="20210519 18:42:15.484"/>
</kw>
<msg timestamp="20210519 18:42:15.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:08.379" endtime="20210519 18:42:15.484"/>
</kw>
<status status="PASS" starttime="20210519 18:42:08.379" endtime="20210519 18:42:15.484"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:15.489" level="INFO">Running command 'ozone sh bucket link 90575-source/bucket1 90575-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:22.889" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:42:22.889" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210519 18:42:15.486" endtime="20210519 18:42:22.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:22.890" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210519 18:42:22.890" endtime="20210519 18:42:22.891"/>
</kw>
<msg timestamp="20210519 18:42:22.891" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210519 18:42:15.485" endtime="20210519 18:42:22.891"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:22.891" endtime="20210519 18:42:22.892"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:41:52.867" endtime="20210519 18:42:22.892"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:22.900" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:22.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:22.904" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:22.897" endtime="20210519 18:42:22.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:22.905" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:22.904" endtime="20210519 18:42:22.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:22.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:22.906" endtime="20210519 18:42:22.907"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.896" endtime="20210519 18:42:22.907"/>
</kw>
<msg timestamp="20210519 18:42:22.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:22.896" endtime="20210519 18:42:22.907"/>
</kw>
<msg timestamp="20210519 18:42:22.907" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:22.895" endtime="20210519 18:42:22.908"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:22.909" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:22.908" endtime="20210519 18:42:22.909"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:22.915" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:22.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:22.924" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:22.913" endtime="20210519 18:42:22.925"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:22.926" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:22.925" endtime="20210519 18:42:22.926"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:22.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:22.926" endtime="20210519 18:42:22.927"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.911" endtime="20210519 18:42:22.927"/>
</kw>
<msg timestamp="20210519 18:42:22.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:22.911" endtime="20210519 18:42:22.928"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.910" endtime="20210519 18:42:22.928"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.909" endtime="20210519 18:42:22.928"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.895" endtime="20210519 18:42:22.928"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.894" endtime="20210519 18:42:22.928"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:22.933" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:22.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:22.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:22.931" endtime="20210519 18:42:22.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:22.938" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:22.938" endtime="20210519 18:42:22.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:22.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:22.939" endtime="20210519 18:42:22.939"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.931" endtime="20210519 18:42:22.940"/>
</kw>
<msg timestamp="20210519 18:42:22.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:22.930" endtime="20210519 18:42:22.940"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.930" endtime="20210519 18:42:22.940"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:22.945" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:22.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:22.947" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:22.943" endtime="20210519 18:42:22.947"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:22.948" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:22.947" endtime="20210519 18:42:22.948"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:22.949" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:22.948" endtime="20210519 18:42:22.949"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.942" endtime="20210519 18:42:22.949"/>
</kw>
<msg timestamp="20210519 18:42:22.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:22.942" endtime="20210519 18:42:22.950"/>
</kw>
<msg timestamp="20210519 18:42:22.950" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:22.941" endtime="20210519 18:42:22.950"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:22.951" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:22.950" endtime="20210519 18:42:22.951"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:22.960" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:22.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:22.966" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:22.957" endtime="20210519 18:42:22.966"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:22.967" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:22.967" endtime="20210519 18:42:22.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:22.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:22.968" endtime="20210519 18:42:22.968"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.957" endtime="20210519 18:42:22.969"/>
</kw>
<msg timestamp="20210519 18:42:22.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:22.956" endtime="20210519 18:42:22.969"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.951" endtime="20210519 18:42:22.969"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.951" endtime="20210519 18:42:22.969"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.941" endtime="20210519 18:42:22.970"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.940" endtime="20210519 18:42:22.970"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:22.972" level="INFO">Running command 'ozone sh key list 90575-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:30.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:30.330" level="INFO">${output} = {
  "volumeName" : "90575-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-05-19T18:32:08.703Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210519 18:42:22.971" endtime="20210519 18:42:30.330"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:30.332" level="INFO">{
  "volumeName" : "90575-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-05-19T18:32:08.703Z",
  "modificationTime" : "2021-05-19T18:35:12.754Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210519 18:42:30.331" endtime="20210519 18:42:30.332"/>
</kw>
<msg timestamp="20210519 18:42:30.332" level="INFO">${result} = {
  "volumeName" : "90575-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-05-19T18:32:08.703Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210519 18:42:22.970" endtime="20210519 18:42:30.332"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:30.333" endtime="20210519 18:42:30.333"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.929" endtime="20210519 18:42:30.333"/>
</kw>
<status status="PASS" starttime="20210519 18:42:22.929" endtime="20210519 18:42:30.333"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:42:22.893" endtime="20210519 18:42:30.334"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:30.344" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:30.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:30.348" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:30.342" endtime="20210519 18:42:30.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:30.349" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:30.349" endtime="20210519 18:42:30.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:30.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:30.350" endtime="20210519 18:42:30.351"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.341" endtime="20210519 18:42:30.351"/>
</kw>
<msg timestamp="20210519 18:42:30.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:30.340" endtime="20210519 18:42:30.351"/>
</kw>
<msg timestamp="20210519 18:42:30.352" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:30.339" endtime="20210519 18:42:30.352"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:30.353" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:30.352" endtime="20210519 18:42:30.353"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:30.360" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:30.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:30.370" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:30.356" endtime="20210519 18:42:30.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:30.371" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:30.370" endtime="20210519 18:42:30.371"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:30.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:30.371" endtime="20210519 18:42:30.372"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.355" endtime="20210519 18:42:30.373"/>
</kw>
<msg timestamp="20210519 18:42:30.373" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:30.355" endtime="20210519 18:42:30.373"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.354" endtime="20210519 18:42:30.373"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.353" endtime="20210519 18:42:30.373"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.338" endtime="20210519 18:42:30.374"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.337" endtime="20210519 18:42:30.374"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:30.381" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:30.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:30.386" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:30.378" endtime="20210519 18:42:30.387"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:30.388" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:30.387" endtime="20210519 18:42:30.388"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:30.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:30.388" endtime="20210519 18:42:30.389"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.377" endtime="20210519 18:42:30.389"/>
</kw>
<msg timestamp="20210519 18:42:30.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:30.376" endtime="20210519 18:42:30.389"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.376" endtime="20210519 18:42:30.390"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:30.395" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:30.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:30.399" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:30.393" endtime="20210519 18:42:30.399"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:30.400" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:30.399" endtime="20210519 18:42:30.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:30.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:30.400" endtime="20210519 18:42:30.402"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.392" endtime="20210519 18:42:30.402"/>
</kw>
<msg timestamp="20210519 18:42:30.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:30.392" endtime="20210519 18:42:30.403"/>
</kw>
<msg timestamp="20210519 18:42:30.403" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:30.391" endtime="20210519 18:42:30.403"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:30.404" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:30.403" endtime="20210519 18:42:30.404"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:30.409" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:30.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:30.417" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:30.407" endtime="20210519 18:42:30.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:30.418" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:30.417" endtime="20210519 18:42:30.418"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:30.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:30.419" endtime="20210519 18:42:30.419"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.406" endtime="20210519 18:42:30.420"/>
</kw>
<msg timestamp="20210519 18:42:30.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:30.406" endtime="20210519 18:42:30.420"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.405" endtime="20210519 18:42:30.420"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.405" endtime="20210519 18:42:30.420"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.390" endtime="20210519 18:42:30.421"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.390" endtime="20210519 18:42:30.421"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:30.424" level="INFO">Running command 'ozone sh key list 90575-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:35.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:42:35.884" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 90575-target unreadable-link null</msg>
<status status="PASS" starttime="20210519 18:42:30.422" endtime="20210519 18:42:35.884"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:35.885" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 90575-target unreadable-link null</msg>
<status status="PASS" starttime="20210519 18:42:35.884" endtime="20210519 18:42:35.885"/>
</kw>
<msg timestamp="20210519 18:42:35.887" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 90575-target unreadable-link null</msg>
<status status="PASS" starttime="20210519 18:42:30.421" endtime="20210519 18:42:35.887"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:35.887" endtime="20210519 18:42:35.888"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.375" endtime="20210519 18:42:35.888"/>
</kw>
<status status="PASS" starttime="20210519 18:42:30.375" endtime="20210519 18:42:35.888"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:42:30.336" endtime="20210519 18:42:35.889"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:35.895" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:35.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:35.898" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:35.893" endtime="20210519 18:42:35.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:35.899" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:35.899" endtime="20210519 18:42:35.899"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:35.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:35.900" endtime="20210519 18:42:35.900"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.892" endtime="20210519 18:42:35.901"/>
</kw>
<msg timestamp="20210519 18:42:35.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:35.892" endtime="20210519 18:42:35.901"/>
</kw>
<msg timestamp="20210519 18:42:35.901" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:35.891" endtime="20210519 18:42:35.901"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:35.902" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:35.902" endtime="20210519 18:42:35.902"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:35.908" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:35.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:35.915" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:35.906" endtime="20210519 18:42:35.915"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:35.916" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:35.916" endtime="20210519 18:42:35.917"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:35.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:35.917" endtime="20210519 18:42:35.917"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.905" endtime="20210519 18:42:35.918"/>
</kw>
<msg timestamp="20210519 18:42:35.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:35.904" endtime="20210519 18:42:35.918"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.903" endtime="20210519 18:42:35.918"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.903" endtime="20210519 18:42:35.918"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.891" endtime="20210519 18:42:35.919"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.890" endtime="20210519 18:42:35.919"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:35.925" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:35.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:35.927" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:35.922" endtime="20210519 18:42:35.927"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:35.928" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:35.928" endtime="20210519 18:42:35.929"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:35.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:35.929" endtime="20210519 18:42:35.929"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.921" endtime="20210519 18:42:35.930"/>
</kw>
<msg timestamp="20210519 18:42:35.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:35.921" endtime="20210519 18:42:35.930"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.920" endtime="20210519 18:42:35.930"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:35.935" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:35.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:35.938" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:35.933" endtime="20210519 18:42:35.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:35.939" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:35.938" endtime="20210519 18:42:35.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:35.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:35.939" endtime="20210519 18:42:35.940"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.932" endtime="20210519 18:42:35.940"/>
</kw>
<msg timestamp="20210519 18:42:35.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:35.932" endtime="20210519 18:42:35.940"/>
</kw>
<msg timestamp="20210519 18:42:35.941" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:35.932" endtime="20210519 18:42:35.941"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:35.942" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:35.941" endtime="20210519 18:42:35.942"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:35.946" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:35.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:35.957" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:35.944" endtime="20210519 18:42:35.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:35.958" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:35.958" endtime="20210519 18:42:35.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:35.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:35.959" endtime="20210519 18:42:35.959"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.944" endtime="20210519 18:42:35.960"/>
</kw>
<msg timestamp="20210519 18:42:35.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:35.943" endtime="20210519 18:42:35.960"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.942" endtime="20210519 18:42:35.960"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.942" endtime="20210519 18:42:35.960"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.931" endtime="20210519 18:42:35.960"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.931" endtime="20210519 18:42:35.960"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:35.964" level="INFO">Running command 'ozone sh bucket info 90575-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:42.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:42.491" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210519 18:42:35.962" endtime="20210519 18:42:42.491"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:42.493" level="INFO">{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:41.669Z",
  "modificationTime" : "2021-05-19T18:36:14.182Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210519 18:42:42.492" endtime="20210519 18:42:42.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:42.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:42.493" endtime="20210519 18:42:42.494"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.962" endtime="20210519 18:42:42.495"/>
</kw>
<msg timestamp="20210519 18:42:42.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:35.961" endtime="20210519 18:42:42.495"/>
</kw>
<msg timestamp="20210519 18:42:42.496" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210519 18:42:35.961" endtime="20210519 18:42:42.496"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:42.496" endtime="20210519 18:42:42.497"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:42.497" endtime="20210519 18:42:42.497"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:42.503" level="INFO">Running command 'ozone sh key list 90575-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:50.042" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:42:50.043" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 90575-source unreadable-bucket </msg>
<status status="PASS" starttime="20210519 18:42:42.499" endtime="20210519 18:42:50.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:50.044" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 90575-source unreadable-bucket </msg>
<status status="PASS" starttime="20210519 18:42:50.043" endtime="20210519 18:42:50.044"/>
</kw>
<msg timestamp="20210519 18:42:50.045" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 90575-source unreadable-bucket </msg>
<status status="PASS" starttime="20210519 18:42:42.498" endtime="20210519 18:42:50.045"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:42:50.045" endtime="20210519 18:42:50.046"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.920" endtime="20210519 18:42:50.046"/>
</kw>
<status status="PASS" starttime="20210519 18:42:35.919" endtime="20210519 18:42:50.047"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:42:35.889" endtime="20210519 18:42:50.047"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:50.057" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:50.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:50.061" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:42:50.054" endtime="20210519 18:42:50.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:50.063" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:42:50.062" endtime="20210519 18:42:50.063"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:50.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:50.064" endtime="20210519 18:42:50.065"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.052" endtime="20210519 18:42:50.065"/>
</kw>
<msg timestamp="20210519 18:42:50.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:50.052" endtime="20210519 18:42:50.066"/>
</kw>
<msg timestamp="20210519 18:42:50.066" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:42:50.051" endtime="20210519 18:42:50.066"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:42:50.068" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:42:50.067" endtime="20210519 18:42:50.068"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:50.074" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:50.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:50.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:50.072" endtime="20210519 18:42:50.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:50.085" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:50.084" endtime="20210519 18:42:50.086"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:50.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:50.086" endtime="20210519 18:42:50.087"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.070" endtime="20210519 18:42:50.087"/>
</kw>
<msg timestamp="20210519 18:42:50.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:50.069" endtime="20210519 18:42:50.088"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.068" endtime="20210519 18:42:50.088"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.068" endtime="20210519 18:42:50.088"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.050" endtime="20210519 18:42:50.088"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.049" endtime="20210519 18:42:50.089"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:50.094" level="INFO">Running command 'ozone sh bucket link 90575-target/loop1 90575-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:42:58.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:42:58.025" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:50.091" endtime="20210519 18:42:58.025"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:42:58.026" level="INFO"/>
<status status="PASS" starttime="20210519 18:42:58.026" endtime="20210519 18:42:58.027"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:42:58.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:42:58.027" endtime="20210519 18:42:58.027"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.090" endtime="20210519 18:42:58.028"/>
</kw>
<msg timestamp="20210519 18:42:58.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:50.090" endtime="20210519 18:42:58.028"/>
</kw>
<status status="PASS" starttime="20210519 18:42:50.089" endtime="20210519 18:42:58.029"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:42:58.033" level="INFO">Running command 'ozone sh bucket link 90575-target/loop2 90575-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:43:05.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:43:05.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:42:58.031" endtime="20210519 18:43:05.008"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:43:05.010" level="INFO"/>
<status status="PASS" starttime="20210519 18:43:05.009" endtime="20210519 18:43:05.010"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:43:05.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:43:05.011" endtime="20210519 18:43:05.011"/>
</kw>
<status status="PASS" starttime="20210519 18:42:58.030" endtime="20210519 18:43:05.012"/>
</kw>
<msg timestamp="20210519 18:43:05.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:42:58.030" endtime="20210519 18:43:05.012"/>
</kw>
<status status="PASS" starttime="20210519 18:42:58.029" endtime="20210519 18:43:05.013"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:43:05.019" level="INFO">Running command 'ozone sh bucket link 90575-target/loop3 90575-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:43:12.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:43:12.568" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:43:05.016" endtime="20210519 18:43:12.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:43:12.569" level="INFO"/>
<status status="PASS" starttime="20210519 18:43:12.568" endtime="20210519 18:43:12.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:43:12.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:43:12.570" endtime="20210519 18:43:12.570"/>
</kw>
<status status="PASS" starttime="20210519 18:43:05.015" endtime="20210519 18:43:12.571"/>
</kw>
<msg timestamp="20210519 18:43:12.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:43:05.014" endtime="20210519 18:43:12.571"/>
</kw>
<status status="PASS" starttime="20210519 18:43:05.013" endtime="20210519 18:43:12.571"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:43:12.577" level="INFO">Running command 'ozone sh key list 90575-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:43:20.058" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:43:20.058" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210519 18:43:12.573" endtime="20210519 18:43:20.058"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:43:20.060" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210519 18:43:20.059" endtime="20210519 18:43:20.060"/>
</kw>
<msg timestamp="20210519 18:43:20.060" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210519 18:43:12.572" endtime="20210519 18:43:20.060"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:43:20.061" endtime="20210519 18:43:20.062"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:42:50.048" endtime="20210519 18:43:20.062"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:43:20.076" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:43:20.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:43:20.081" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:43:20.073" endtime="20210519 18:43:20.081"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:43:20.083" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:43:20.081" endtime="20210519 18:43:20.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:43:20.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:43:20.085" endtime="20210519 18:43:20.086"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.072" endtime="20210519 18:43:20.087"/>
</kw>
<msg timestamp="20210519 18:43:20.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:43:20.072" endtime="20210519 18:43:20.088"/>
</kw>
<msg timestamp="20210519 18:43:20.089" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:43:20.071" endtime="20210519 18:43:20.089"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:43:20.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:43:20.090" endtime="20210519 18:43:20.091"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:43:20.097" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:43:20.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:43:20.109" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:43:20.094" endtime="20210519 18:43:20.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:43:20.110" level="INFO"/>
<status status="PASS" starttime="20210519 18:43:20.109" endtime="20210519 18:43:20.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:43:20.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:43:20.110" endtime="20210519 18:43:20.111"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.093" endtime="20210519 18:43:20.111"/>
</kw>
<msg timestamp="20210519 18:43:20.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:43:20.093" endtime="20210519 18:43:20.112"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.092" endtime="20210519 18:43:20.112"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.091" endtime="20210519 18:43:20.112"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.069" endtime="20210519 18:43:20.112"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.068" endtime="20210519 18:43:20.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:43:20.116" level="INFO">Running command 'ozone sh bucket link 90575-source/bucket1 90575-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:43:27.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:43:27.043" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:43:20.114" endtime="20210519 18:43:27.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:43:27.044" level="INFO"/>
<status status="PASS" starttime="20210519 18:43:27.043" endtime="20210519 18:43:27.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:43:27.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:43:27.044" endtime="20210519 18:43:27.045"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.113" endtime="20210519 18:43:27.046"/>
</kw>
<msg timestamp="20210519 18:43:27.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:43:20.113" endtime="20210519 18:43:27.046"/>
</kw>
<status status="PASS" starttime="20210519 18:43:20.112" endtime="20210519 18:43:27.047"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:43:27.055" level="INFO">Running command 'ozone sh key put 90575-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:20.067" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 18:43:27.051" endtime="20210519 18:45:20.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 18:45:20.067" endtime="20210519 18:45:20.068"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 18:45:20.068" endtime="20210519 18:45:20.068"/>
</kw>
<status status="FAIL" starttime="20210519 18:43:27.050" endtime="20210519 18:45:20.068"/>
</kw>
<msg timestamp="20210519 18:45:20.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:43:27.049" endtime="20210519 18:45:20.069"/>
</kw>
<status status="FAIL" starttime="20210519 18:43:27.047" endtime="20210519 18:45:20.069"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210519 18:45:20.069" endtime="20210519 18:45:20.069"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210519 18:43:20.065" endtime="20210519 18:45:20.070">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:20.078" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:20.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:45:20.082" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:45:20.076" endtime="20210519 18:45:20.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:20.084" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:45:20.083" endtime="20210519 18:45:20.084"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:45:20.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:45:20.084" endtime="20210519 18:45:20.085"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.075" endtime="20210519 18:45:20.085"/>
</kw>
<msg timestamp="20210519 18:45:20.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:20.075" endtime="20210519 18:45:20.086"/>
</kw>
<msg timestamp="20210519 18:45:20.086" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:45:20.074" endtime="20210519 18:45:20.086"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:45:20.087" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:45:20.086" endtime="20210519 18:45:20.087"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:20.093" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:20.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:45:20.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:45:20.090" endtime="20210519 18:45:20.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:20.107" level="INFO"/>
<status status="PASS" starttime="20210519 18:45:20.106" endtime="20210519 18:45:20.108"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:45:20.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:45:20.108" endtime="20210519 18:45:20.110"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.090" endtime="20210519 18:45:20.110"/>
</kw>
<msg timestamp="20210519 18:45:20.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:20.089" endtime="20210519 18:45:20.111"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.088" endtime="20210519 18:45:20.111"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.087" endtime="20210519 18:45:20.112"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.074" endtime="20210519 18:45:20.112"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.073" endtime="20210519 18:45:20.112"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:20.117" level="INFO">Running command 'ozone sh bucket delete 90575-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:25.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:45:25.317" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:45:20.115" endtime="20210519 18:45:25.317"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:25.320" level="INFO"/>
<status status="PASS" starttime="20210519 18:45:25.317" endtime="20210519 18:45:25.321"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:45:25.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:45:25.321" endtime="20210519 18:45:25.322"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.114" endtime="20210519 18:45:25.323"/>
</kw>
<msg timestamp="20210519 18:45:25.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:20.114" endtime="20210519 18:45:25.323"/>
</kw>
<status status="PASS" starttime="20210519 18:45:20.113" endtime="20210519 18:45:25.324"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:25.328" level="INFO">Running command 'ozone sh bucket list 90575-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:33.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:45:33.154" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T...</msg>
<status status="PASS" starttime="20210519 18:45:25.326" endtime="20210519 18:45:33.154"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:33.156" level="INFO">{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:42:15.354Z",
  "modificationTime" : "2021-05-19T18:42:15.354Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:36:20.678Z",
  "modificationTime" : "2021-05-19T18:36:20.678Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:41.669Z",
  "modificationTime" : "2021-05-19T18:36:14.182Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:42:00.575Z",
  "modificationTime" : "2021-05-19T18:42:00.575Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:43:26.745Z",
  "modificationTime" : "2021-05-19T18:43:26.745Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:43:12.466Z",
  "modificationTime" : "2021-05-19T18:43:12.466Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:42:57.871Z",
  "modificationTime" : "2021-05-19T18:42:57.871Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:43:04.937Z",
  "modificationTime" : "2021-05-19T18:43:04.937Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:27.388Z",
  "modificationTime" : "2021-05-19T18:36:08.834Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T18:35:34.168Z",
  "modificationTime" : "2021-05-19T18:35:34.168Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90575-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210519 18:45:33.154" endtime="20210519 18:45:33.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:45:33.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:45:33.156" endtime="20210519 18:45:33.158"/>
</kw>
<status status="PASS" starttime="20210519 18:45:25.325" endtime="20210519 18:45:33.159"/>
</kw>
<msg timestamp="20210519 18:45:33.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:25.325" endtime="20210519 18:45:33.159"/>
</kw>
<msg timestamp="20210519 18:45:33.160" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "90575-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-19T...</msg>
<status status="PASS" starttime="20210519 18:45:25.324" endtime="20210519 18:45:33.160"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:45:33.161" endtime="20210519 18:45:33.162"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:33.169" level="INFO">Running command 'ozone sh key list 90575-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:41.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:45:41.064" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210519 18:45:33.166" endtime="20210519 18:45:41.064"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:41.066" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210519 18:45:41.065" endtime="20210519 18:45:41.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:45:41.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:45:41.066" endtime="20210519 18:45:41.067"/>
</kw>
<status status="PASS" starttime="20210519 18:45:33.165" endtime="20210519 18:45:41.068"/>
</kw>
<msg timestamp="20210519 18:45:41.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:33.164" endtime="20210519 18:45:41.068"/>
</kw>
<msg timestamp="20210519 18:45:41.068" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210519 18:45:33.162" endtime="20210519 18:45:41.069"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:45:41.069" endtime="20210519 18:45:41.069"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:45:20.072" endtime="20210519 18:45:41.069"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210519 18:31:40.391" endtime="20210519 18:45:41.073"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 18:45:41.111" level="INFO">${random} = 66277</msg>
<status status="PASS" starttime="20210519 18:45:41.111" endtime="20210519 18:45:41.111"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:45:41.112" level="INFO">${prefix} = 66277</msg>
<status status="PASS" starttime="20210519 18:45:41.111" endtime="20210519 18:45:41.112"/>
</kw>
<status status="PASS" starttime="20210519 18:45:41.110" endtime="20210519 18:45:41.112"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:41.120" level="INFO">Running command 'ozone sh volume info /66277-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:48.081" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:45:48.082" level="INFO">${output} = VOLUME_NOT_FOUND Volume 66277-rpcbasic is not found</msg>
<status status="PASS" starttime="20210519 18:45:41.117" endtime="20210519 18:45:48.082"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:48.083" level="INFO">VOLUME_NOT_FOUND Volume 66277-rpcbasic is not found</msg>
<status status="PASS" starttime="20210519 18:45:48.082" endtime="20210519 18:45:48.083"/>
</kw>
<msg timestamp="20210519 18:45:48.085" level="INFO">${result} = VOLUME_NOT_FOUND Volume 66277-rpcbasic is not found</msg>
<status status="PASS" starttime="20210519 18:45:41.116" endtime="20210519 18:45:48.085"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:45:48.085" endtime="20210519 18:45:48.086"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:48.090" level="INFO">Running command 'ozone sh volume create /66277-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:45:53.591" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:45:53.591" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:45:48.088" endtime="20210519 18:45:53.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:45:53.593" level="INFO"/>
<status status="PASS" starttime="20210519 18:45:53.592" endtime="20210519 18:45:53.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:45:53.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:45:53.593" endtime="20210519 18:45:53.594"/>
</kw>
<status status="PASS" starttime="20210519 18:45:48.087" endtime="20210519 18:45:53.595"/>
</kw>
<msg timestamp="20210519 18:45:53.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:48.087" endtime="20210519 18:45:53.596"/>
</kw>
<msg timestamp="20210519 18:45:53.596" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210519 18:45:48.086" endtime="20210519 18:45:53.596"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:45:53.597" endtime="20210519 18:45:53.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:45:53.605" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="66277-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:03.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:03.650" level="INFO">${output} = {
  "metadata": {},
  "name": "66277-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 18:45:53.602" endtime="20210519 18:46:03.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:03.659" level="INFO">{
  "metadata": {},
  "name": "66277-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T18:45:53.505Z",
  "modificationTime": "2021-05-19T18:45:53.505Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 18:46:03.652" endtime="20210519 18:46:03.659"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:03.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:03.660" endtime="20210519 18:46:03.661"/>
</kw>
<status status="PASS" starttime="20210519 18:45:53.600" endtime="20210519 18:46:03.662"/>
</kw>
<msg timestamp="20210519 18:46:03.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:45:53.600" endtime="20210519 18:46:03.663"/>
</kw>
<msg timestamp="20210519 18:46:03.664" level="INFO">${result} = {
  "metadata": {},
  "name": "66277-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 18:45:53.598" endtime="20210519 18:46:03.664"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:46:03.664" endtime="20210519 18:46:03.666"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:03.673" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="66277-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:10.243" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:10.243" level="INFO">${output} = {
  "metadata": {},
  "name": "66277-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 18:46:03.670" endtime="20210519 18:46:10.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:10.246" level="INFO">{
  "metadata": {},
  "name": "66277-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T18:45:53.505Z",
  "modificationTime": "2021-05-19T18:45:53.505Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 18:46:10.245" endtime="20210519 18:46:10.247"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:10.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:10.247" endtime="20210519 18:46:10.249"/>
</kw>
<status status="PASS" starttime="20210519 18:46:03.668" endtime="20210519 18:46:10.249"/>
</kw>
<msg timestamp="20210519 18:46:10.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:03.668" endtime="20210519 18:46:10.249"/>
</kw>
<msg timestamp="20210519 18:46:10.250" level="INFO">${result} = {
  "metadata": {},
  "name": "66277-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 18:46:03.666" endtime="20210519 18:46:10.250"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:46:10.250" endtime="20210519 18:46:10.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:10.257" level="INFO">Running command 'ozone sh volume setquota /66277-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:17.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:17.496" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:46:10.253" endtime="20210519 18:46:17.496"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:17.498" level="INFO"/>
<status status="PASS" starttime="20210519 18:46:17.497" endtime="20210519 18:46:17.498"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:17.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:17.498" endtime="20210519 18:46:17.499"/>
</kw>
<status status="PASS" starttime="20210519 18:46:10.252" endtime="20210519 18:46:17.499"/>
</kw>
<msg timestamp="20210519 18:46:17.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:10.251" endtime="20210519 18:46:17.500"/>
</kw>
<status status="PASS" starttime="20210519 18:46:10.251" endtime="20210519 18:46:17.500"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:17.505" level="INFO">Running command 'ozone sh volume info /66277-rpcbasic | jq -r '. | select(.name=="66277-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:25.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:25.068" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:46:17.503" endtime="20210519 18:46:25.069"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:25.071" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 18:46:25.070" endtime="20210519 18:46:25.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:25.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:25.071" endtime="20210519 18:46:25.072"/>
</kw>
<status status="PASS" starttime="20210519 18:46:17.502" endtime="20210519 18:46:25.073"/>
</kw>
<msg timestamp="20210519 18:46:25.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:17.501" endtime="20210519 18:46:25.073"/>
</kw>
<msg timestamp="20210519 18:46:25.073" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:46:17.500" endtime="20210519 18:46:25.073"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:46:25.074" endtime="20210519 18:46:25.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:25.080" level="INFO">Running command 'ozone sh bucket create /66277-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:31.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:31.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:46:25.077" endtime="20210519 18:46:31.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:31.889" level="INFO"/>
<status status="PASS" starttime="20210519 18:46:31.888" endtime="20210519 18:46:31.889"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:31.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:31.890" endtime="20210519 18:46:31.891"/>
</kw>
<status status="PASS" starttime="20210519 18:46:25.076" endtime="20210519 18:46:31.891"/>
</kw>
<msg timestamp="20210519 18:46:31.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:25.076" endtime="20210519 18:46:31.892"/>
</kw>
<status status="PASS" starttime="20210519 18:46:25.075" endtime="20210519 18:46:31.892"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:31.898" level="INFO">Running command 'ozone sh bucket info /66277-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:37.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:37.647" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210519 18:46:31.895" endtime="20210519 18:46:37.647"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:37.649" level="INFO">DISK</msg>
<status status="PASS" starttime="20210519 18:46:37.648" endtime="20210519 18:46:37.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:37.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:37.653" endtime="20210519 18:46:37.655"/>
</kw>
<status status="PASS" starttime="20210519 18:46:31.895" endtime="20210519 18:46:37.658"/>
</kw>
<msg timestamp="20210519 18:46:37.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:31.894" endtime="20210519 18:46:37.660"/>
</kw>
<msg timestamp="20210519 18:46:37.661" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210519 18:46:31.893" endtime="20210519 18:46:37.661"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:46:37.662" endtime="20210519 18:46:37.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:37.671" level="INFO">Running command 'ozone sh bucket info /66277-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:45.260" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:45.260" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:46:37.669" endtime="20210519 18:46:45.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:45.262" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 18:46:45.261" endtime="20210519 18:46:45.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:45.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:45.262" endtime="20210519 18:46:45.263"/>
</kw>
<status status="PASS" starttime="20210519 18:46:37.668" endtime="20210519 18:46:45.263"/>
</kw>
<msg timestamp="20210519 18:46:45.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:37.667" endtime="20210519 18:46:45.263"/>
</kw>
<msg timestamp="20210519 18:46:45.264" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:46:37.662" endtime="20210519 18:46:45.264"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:46:45.264" endtime="20210519 18:46:45.264"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:45.270" level="INFO">Running command 'ozone sh bucket info /66277-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:46:52.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:46:52.600" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210519 18:46:45.267" endtime="20210519 18:46:52.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:46:52.602" level="INFO">100</msg>
<status status="PASS" starttime="20210519 18:46:52.601" endtime="20210519 18:46:52.603"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:46:52.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:46:52.603" endtime="20210519 18:46:52.604"/>
</kw>
<status status="PASS" starttime="20210519 18:46:45.266" endtime="20210519 18:46:52.605"/>
</kw>
<msg timestamp="20210519 18:46:52.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:45.266" endtime="20210519 18:46:52.605"/>
</kw>
<msg timestamp="20210519 18:46:52.606" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210519 18:46:45.265" endtime="20210519 18:46:52.606"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:46:52.607" endtime="20210519 18:46:52.608"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:46:52.614" level="INFO">Running command 'ozone sh bucket setquota /66277-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:47:00.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:47:00.214" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:46:52.611" endtime="20210519 18:47:00.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:47:00.217" level="INFO"/>
<status status="PASS" starttime="20210519 18:47:00.215" endtime="20210519 18:47:00.217"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:47:00.218" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:47:00.217" endtime="20210519 18:47:00.219"/>
</kw>
<status status="PASS" starttime="20210519 18:46:52.610" endtime="20210519 18:47:00.220"/>
</kw>
<msg timestamp="20210519 18:47:00.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:46:52.609" endtime="20210519 18:47:00.220"/>
</kw>
<status status="PASS" starttime="20210519 18:46:52.608" endtime="20210519 18:47:00.221"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:47:00.228" level="INFO">Running command 'ozone sh bucket info /66277-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:47:07.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:47:07.898" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210519 18:47:00.225" endtime="20210519 18:47:07.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:47:07.900" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210519 18:47:07.899" endtime="20210519 18:47:07.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:47:07.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:47:07.900" endtime="20210519 18:47:07.902"/>
</kw>
<status status="PASS" starttime="20210519 18:47:00.224" endtime="20210519 18:47:07.902"/>
</kw>
<msg timestamp="20210519 18:47:07.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:47:00.223" endtime="20210519 18:47:07.903"/>
</kw>
<msg timestamp="20210519 18:47:07.903" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210519 18:47:00.221" endtime="20210519 18:47:07.903"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:47:07.903" endtime="20210519 18:47:07.904"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:47:07.910" level="INFO">Running command 'ozone sh bucket info /66277-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:47:15.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:47:15.345" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210519 18:47:07.907" endtime="20210519 18:47:15.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:47:15.347" level="INFO">1000</msg>
<status status="PASS" starttime="20210519 18:47:15.346" endtime="20210519 18:47:15.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:47:15.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:47:15.347" endtime="20210519 18:47:15.348"/>
</kw>
<status status="PASS" starttime="20210519 18:47:07.906" endtime="20210519 18:47:15.348"/>
</kw>
<msg timestamp="20210519 18:47:15.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:47:07.906" endtime="20210519 18:47:15.348"/>
</kw>
<msg timestamp="20210519 18:47:15.348" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210519 18:47:07.904" endtime="20210519 18:47:15.348"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:47:15.349" endtime="20210519 18:47:15.349"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:47:15.355" level="INFO">Running command 'ozone sh bucket list /66277-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:47:22.346" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:47:22.346" level="INFO">${output} = 66277-rpcbasic</msg>
<status status="PASS" starttime="20210519 18:47:15.352" endtime="20210519 18:47:22.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:47:22.348" level="INFO">66277-rpcbasic</msg>
<status status="PASS" starttime="20210519 18:47:22.347" endtime="20210519 18:47:22.348"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:47:22.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:47:22.348" endtime="20210519 18:47:22.349"/>
</kw>
<status status="PASS" starttime="20210519 18:47:15.351" endtime="20210519 18:47:22.349"/>
</kw>
<msg timestamp="20210519 18:47:22.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:47:15.351" endtime="20210519 18:47:22.350"/>
</kw>
<msg timestamp="20210519 18:47:22.350" level="INFO">${result} = 66277-rpcbasic</msg>
<status status="PASS" starttime="20210519 18:47:15.350" endtime="20210519 18:47:22.350"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:47:22.350" endtime="20210519 18:47:22.351"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:47:22.356" level="INFO">Running command 'ozone sh key put /66277-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:32.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:50:32.407" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:47:22.354" endtime="20210519 18:50:32.407"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:50:32.409" level="INFO"/>
<status status="PASS" starttime="20210519 18:50:32.408" endtime="20210519 18:50:32.410"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:50:32.411" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:50:32.410" endtime="20210519 18:50:32.411"/>
</kw>
<status status="PASS" starttime="20210519 18:47:22.353" endtime="20210519 18:50:32.412"/>
</kw>
<msg timestamp="20210519 18:50:32.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:47:22.353" endtime="20210519 18:50:32.413"/>
</kw>
<status status="PASS" starttime="20210519 18:47:22.352" endtime="20210519 18:50:32.413"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:32.420" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:32.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:50:32.425" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:50:32.416" endtime="20210519 18:50:32.425"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:50:32.427" level="INFO"/>
<status status="PASS" starttime="20210519 18:50:32.426" endtime="20210519 18:50:32.427"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:50:32.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:50:32.427" endtime="20210519 18:50:32.428"/>
</kw>
<status status="PASS" starttime="20210519 18:50:32.415" endtime="20210519 18:50:32.429"/>
</kw>
<msg timestamp="20210519 18:50:32.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:50:32.414" endtime="20210519 18:50:32.430"/>
</kw>
<status status="PASS" starttime="20210519 18:50:32.413" endtime="20210519 18:50:32.430"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:32.437" level="INFO">Running command 'ozone sh key get /66277-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:41.115" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 18:50:32.434" endtime="20210519 18:50:41.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.116" endtime="20210519 18:50:41.116"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.117" endtime="20210519 18:50:41.117"/>
</kw>
<status status="FAIL" starttime="20210519 18:50:32.432" endtime="20210519 18:50:41.119"/>
</kw>
<msg timestamp="20210519 18:50:41.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:50:32.431" endtime="20210519 18:50:41.119"/>
</kw>
<status status="FAIL" starttime="20210519 18:50:32.430" endtime="20210519 18:50:41.120"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.120" endtime="20210519 18:50:41.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.120" endtime="20210519 18:50:41.120"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.121" endtime="20210519 18:50:41.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.121" endtime="20210519 18:50:41.121"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.121" endtime="20210519 18:50:41.121"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.121" endtime="20210519 18:50:41.122"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.122" endtime="20210519 18:50:41.122"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.123" endtime="20210519 18:50:41.124"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.124" endtime="20210519 18:50:41.125"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.125" endtime="20210519 18:50:41.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.129" endtime="20210519 18:50:41.129"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.131" endtime="20210519 18:50:41.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.131" endtime="20210519 18:50:41.132"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.133" endtime="20210519 18:50:41.133"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.133" endtime="20210519 18:50:41.134"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.134" endtime="20210519 18:50:41.134"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.135" endtime="20210519 18:50:41.135"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.136" endtime="20210519 18:50:41.136"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.137" endtime="20210519 18:50:41.137"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.138" endtime="20210519 18:50:41.138"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.139" endtime="20210519 18:50:41.140"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.140" endtime="20210519 18:50:41.140"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.141" endtime="20210519 18:50:41.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.141" endtime="20210519 18:50:41.141"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.141" endtime="20210519 18:50:41.142"/>
</kw>
<status status="FAIL" starttime="20210519 18:47:22.351" endtime="20210519 18:50:41.142"/>
</kw>
<status status="FAIL" starttime="20210519 18:47:22.351" endtime="20210519 18:50:41.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.143" endtime="20210519 18:50:41.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.144" endtime="20210519 18:50:41.144"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.144" endtime="20210519 18:50:41.144"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.145" endtime="20210519 18:50:41.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.146" endtime="20210519 18:50:41.146"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.147" endtime="20210519 18:50:41.147"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.148" endtime="20210519 18:50:41.148"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.149" endtime="20210519 18:50:41.149"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.150" endtime="20210519 18:50:41.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.150" endtime="20210519 18:50:41.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.150" endtime="20210519 18:50:41.151"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.151" endtime="20210519 18:50:41.151"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.152" endtime="20210519 18:50:41.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.152" endtime="20210519 18:50:41.152"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.152" endtime="20210519 18:50:41.152"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.153" endtime="20210519 18:50:41.153"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.156" endtime="20210519 18:50:41.156"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.157" endtime="20210519 18:50:41.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.158" endtime="20210519 18:50:41.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.158" endtime="20210519 18:50:41.159"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.159" endtime="20210519 18:50:41.159"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.160" endtime="20210519 18:50:41.160"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.160" endtime="20210519 18:50:41.161"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:50:41.161" endtime="20210519 18:50:41.162"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.162" endtime="20210519 18:50:41.163"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:50:41.163" endtime="20210519 18:50:41.164"/>
</kw>
<status status="FAIL" starttime="20210519 18:45:41.114" endtime="20210519 18:50:41.165"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210519 18:45:41.113" endtime="20210519 18:50:41.167">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210519 18:45:41.080" endtime="20210519 18:50:41.171"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210519 18:50:41.211" level="INFO">${random} = 00315</msg>
<status status="PASS" starttime="20210519 18:50:41.210" endtime="20210519 18:50:41.211"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:50:41.214" level="INFO">${prefix} = 00315</msg>
<status status="PASS" starttime="20210519 18:50:41.212" endtime="20210519 18:50:41.214"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.208" endtime="20210519 18:50:41.214"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:41.241" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:41.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:50:41.260" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:50:41.226" endtime="20210519 18:50:41.260"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:50:41.262" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:50:41.261" endtime="20210519 18:50:41.262"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:50:41.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:50:41.262" endtime="20210519 18:50:41.264"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.224" endtime="20210519 18:50:41.264"/>
</kw>
<msg timestamp="20210519 18:50:41.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:50:41.223" endtime="20210519 18:50:41.265"/>
</kw>
<msg timestamp="20210519 18:50:41.265" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:50:41.220" endtime="20210519 18:50:41.265"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:50:41.273" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:50:41.265" endtime="20210519 18:50:41.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:41.300" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:41.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:50:41.349" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:50:41.285" endtime="20210519 18:50:41.350"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:50:41.351" level="INFO"/>
<status status="PASS" starttime="20210519 18:50:41.350" endtime="20210519 18:50:41.351"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:50:41.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:50:41.351" endtime="20210519 18:50:41.352"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.281" endtime="20210519 18:50:41.352"/>
</kw>
<msg timestamp="20210519 18:50:41.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:50:41.279" endtime="20210519 18:50:41.352"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.276" endtime="20210519 18:50:41.353"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.275" endtime="20210519 18:50:41.353"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.219" endtime="20210519 18:50:41.353"/>
</kw>
<status status="PASS" starttime="20210519 18:50:41.218" endtime="20210519 18:50:41.353"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:41.379" level="INFO">Running command 'ozone sh volume info o3://om:9862/00315-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:48.388" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 18:50:48.388" level="INFO">${output} = VOLUME_NOT_FOUND Volume 00315-rpcwoport is not found</msg>
<status status="PASS" starttime="20210519 18:50:41.355" endtime="20210519 18:50:48.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:50:48.389" level="INFO">VOLUME_NOT_FOUND Volume 00315-rpcwoport is not found</msg>
<status status="PASS" starttime="20210519 18:50:48.388" endtime="20210519 18:50:48.389"/>
</kw>
<msg timestamp="20210519 18:50:48.390" level="INFO">${result} = VOLUME_NOT_FOUND Volume 00315-rpcwoport is not found</msg>
<status status="PASS" starttime="20210519 18:50:41.354" endtime="20210519 18:50:48.390"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:50:48.390" endtime="20210519 18:50:48.390"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:48.395" level="INFO">Running command 'ozone sh volume create o3://om:9862/00315-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:50:53.770" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:50:53.770" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:50:48.393" endtime="20210519 18:50:53.770"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:50:53.772" level="INFO"/>
<status status="PASS" starttime="20210519 18:50:53.771" endtime="20210519 18:50:53.772"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:50:53.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:50:53.772" endtime="20210519 18:50:53.773"/>
</kw>
<status status="PASS" starttime="20210519 18:50:48.392" endtime="20210519 18:50:53.773"/>
</kw>
<msg timestamp="20210519 18:50:53.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:50:48.391" endtime="20210519 18:50:53.774"/>
</kw>
<msg timestamp="20210519 18:50:53.775" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210519 18:50:48.391" endtime="20210519 18:50:53.775"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:50:53.776" endtime="20210519 18:50:53.778"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:50:53.787" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="00315-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:02.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:02.150" level="INFO">${output} = {
  "metadata": {},
  "name": "00315-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210519 18:50:53.784" endtime="20210519 18:51:02.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:02.151" level="INFO">{
  "metadata": {},
  "name": "00315-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T18:50:53.427Z",
  "modificationTime": "2021-05-19T18:50:53.427Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 18:51:02.150" endtime="20210519 18:51:02.152"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:02.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:02.152" endtime="20210519 18:51:02.153"/>
</kw>
<status status="PASS" starttime="20210519 18:50:53.783" endtime="20210519 18:51:02.153"/>
</kw>
<msg timestamp="20210519 18:51:02.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:50:53.782" endtime="20210519 18:51:02.153"/>
</kw>
<msg timestamp="20210519 18:51:02.154" level="INFO">${result} = {
  "metadata": {},
  "name": "00315-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210519 18:50:53.778" endtime="20210519 18:51:02.154"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:51:02.155" endtime="20210519 18:51:02.155"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:02.162" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="00315-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:10.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:10.053" level="INFO">${output} = {
  "metadata": {},
  "name": "00315-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210519 18:51:02.159" endtime="20210519 18:51:10.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:10.054" level="INFO">{
  "metadata": {},
  "name": "00315-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T18:50:53.427Z",
  "modificationTime": "2021-05-19T18:50:53.427Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 18:51:10.054" endtime="20210519 18:51:10.055"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:10.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:10.055" endtime="20210519 18:51:10.056"/>
</kw>
<status status="PASS" starttime="20210519 18:51:02.158" endtime="20210519 18:51:10.056"/>
</kw>
<msg timestamp="20210519 18:51:10.056" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:02.157" endtime="20210519 18:51:10.056"/>
</kw>
<msg timestamp="20210519 18:51:10.057" level="INFO">${result} = {
  "metadata": {},
  "name": "00315-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210519 18:51:02.156" endtime="20210519 18:51:10.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 18:51:10.057" endtime="20210519 18:51:10.058"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:10.062" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/00315-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:15.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:15.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:51:10.060" endtime="20210519 18:51:15.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:15.503" level="INFO"/>
<status status="PASS" starttime="20210519 18:51:15.502" endtime="20210519 18:51:15.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:15.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:15.503" endtime="20210519 18:51:15.504"/>
</kw>
<status status="PASS" starttime="20210519 18:51:10.059" endtime="20210519 18:51:15.504"/>
</kw>
<msg timestamp="20210519 18:51:15.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:10.059" endtime="20210519 18:51:15.504"/>
</kw>
<status status="PASS" starttime="20210519 18:51:10.058" endtime="20210519 18:51:15.504"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:15.512" level="INFO">Running command 'ozone sh volume info o3://om:9862/00315-rpcwoport | jq -r '. | select(.name=="00315-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:23.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:23.474" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:51:15.509" endtime="20210519 18:51:23.474"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:23.476" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 18:51:23.475" endtime="20210519 18:51:23.476"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:23.477" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:23.476" endtime="20210519 18:51:23.477"/>
</kw>
<status status="PASS" starttime="20210519 18:51:15.508" endtime="20210519 18:51:23.478"/>
</kw>
<msg timestamp="20210519 18:51:23.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:15.506" endtime="20210519 18:51:23.478"/>
</kw>
<msg timestamp="20210519 18:51:23.479" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:51:15.505" endtime="20210519 18:51:23.479"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:51:23.479" endtime="20210519 18:51:23.480"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:23.486" level="INFO">Running command 'ozone sh bucket create o3://om:9862/00315-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:31.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:31.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:51:23.483" endtime="20210519 18:51:31.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:31.043" level="INFO"/>
<status status="PASS" starttime="20210519 18:51:31.042" endtime="20210519 18:51:31.043"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:31.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:31.043" endtime="20210519 18:51:31.044"/>
</kw>
<status status="PASS" starttime="20210519 18:51:23.482" endtime="20210519 18:51:31.044"/>
</kw>
<msg timestamp="20210519 18:51:31.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:23.482" endtime="20210519 18:51:31.044"/>
</kw>
<status status="PASS" starttime="20210519 18:51:23.480" endtime="20210519 18:51:31.044"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:31.051" level="INFO">Running command 'ozone sh bucket info o3://om:9862/00315-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:38.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:38.789" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210519 18:51:31.047" endtime="20210519 18:51:38.790"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:38.791" level="INFO">DISK</msg>
<status status="PASS" starttime="20210519 18:51:38.790" endtime="20210519 18:51:38.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:38.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:38.792" endtime="20210519 18:51:38.792"/>
</kw>
<status status="PASS" starttime="20210519 18:51:31.046" endtime="20210519 18:51:38.793"/>
</kw>
<msg timestamp="20210519 18:51:38.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:31.046" endtime="20210519 18:51:38.794"/>
</kw>
<msg timestamp="20210519 18:51:38.797" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210519 18:51:31.045" endtime="20210519 18:51:38.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:51:38.797" endtime="20210519 18:51:38.798"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:38.804" level="INFO">Running command 'ozone sh bucket info o3://om:9862/00315-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:46.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:46.027" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:51:38.802" endtime="20210519 18:51:46.027"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:46.028" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 18:51:46.027" endtime="20210519 18:51:46.028"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:46.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:46.028" endtime="20210519 18:51:46.029"/>
</kw>
<status status="PASS" starttime="20210519 18:51:38.801" endtime="20210519 18:51:46.029"/>
</kw>
<msg timestamp="20210519 18:51:46.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:38.800" endtime="20210519 18:51:46.030"/>
</kw>
<msg timestamp="20210519 18:51:46.030" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 18:51:38.798" endtime="20210519 18:51:46.030"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:51:46.030" endtime="20210519 18:51:46.030"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:46.036" level="INFO">Running command 'ozone sh bucket info o3://om:9862/00315-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:51.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:51.789" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210519 18:51:46.032" endtime="20210519 18:51:51.789"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:51.791" level="INFO">100</msg>
<status status="PASS" starttime="20210519 18:51:51.790" endtime="20210519 18:51:51.791"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:51.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:51.791" endtime="20210519 18:51:51.792"/>
</kw>
<status status="PASS" starttime="20210519 18:51:46.032" endtime="20210519 18:51:51.792"/>
</kw>
<msg timestamp="20210519 18:51:51.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:46.032" endtime="20210519 18:51:51.792"/>
</kw>
<msg timestamp="20210519 18:51:51.793" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210519 18:51:46.031" endtime="20210519 18:51:51.793"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:51:51.793" endtime="20210519 18:51:51.793"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:51.798" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/00315-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:51:57.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:51:57.415" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:51:51.796" endtime="20210519 18:51:57.415"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:51:57.417" level="INFO"/>
<status status="PASS" starttime="20210519 18:51:57.416" endtime="20210519 18:51:57.417"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:51:57.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:51:57.417" endtime="20210519 18:51:57.418"/>
</kw>
<status status="PASS" starttime="20210519 18:51:51.795" endtime="20210519 18:51:57.418"/>
</kw>
<msg timestamp="20210519 18:51:57.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:51.794" endtime="20210519 18:51:57.419"/>
</kw>
<status status="PASS" starttime="20210519 18:51:51.794" endtime="20210519 18:51:57.419"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:51:57.424" level="INFO">Running command 'ozone sh bucket info o3://om:9862/00315-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:52:04.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:52:04.958" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210519 18:51:57.422" endtime="20210519 18:52:04.958"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:52:04.960" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210519 18:52:04.959" endtime="20210519 18:52:04.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:52:04.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:52:04.961" endtime="20210519 18:52:04.962"/>
</kw>
<status status="PASS" starttime="20210519 18:51:57.421" endtime="20210519 18:52:04.962"/>
</kw>
<msg timestamp="20210519 18:52:04.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:51:57.420" endtime="20210519 18:52:04.962"/>
</kw>
<msg timestamp="20210519 18:52:04.963" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210519 18:51:57.419" endtime="20210519 18:52:04.963"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:52:04.963" endtime="20210519 18:52:04.964"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:52:04.974" level="INFO">Running command 'ozone sh bucket info o3://om:9862/00315-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:52:12.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:52:12.839" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210519 18:52:04.971" endtime="20210519 18:52:12.839"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:52:12.840" level="INFO">1000</msg>
<status status="PASS" starttime="20210519 18:52:12.839" endtime="20210519 18:52:12.840"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:52:12.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:52:12.840" endtime="20210519 18:52:12.841"/>
</kw>
<status status="PASS" starttime="20210519 18:52:04.970" endtime="20210519 18:52:12.842"/>
</kw>
<msg timestamp="20210519 18:52:12.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:52:04.969" endtime="20210519 18:52:12.842"/>
</kw>
<msg timestamp="20210519 18:52:12.842" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210519 18:52:04.966" endtime="20210519 18:52:12.842"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:52:12.843" endtime="20210519 18:52:12.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:52:12.849" level="INFO">Running command 'ozone sh bucket list o3://om:9862/00315-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:52:20.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:52:20.995" level="INFO">${output} = 00315-rpcwoport</msg>
<status status="PASS" starttime="20210519 18:52:12.846" endtime="20210519 18:52:20.995"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:52:20.996" level="INFO">00315-rpcwoport</msg>
<status status="PASS" starttime="20210519 18:52:20.996" endtime="20210519 18:52:20.997"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:52:20.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:52:20.997" endtime="20210519 18:52:20.998"/>
</kw>
<status status="PASS" starttime="20210519 18:52:12.845" endtime="20210519 18:52:20.999"/>
</kw>
<msg timestamp="20210519 18:52:20.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:52:12.845" endtime="20210519 18:52:21.000"/>
</kw>
<msg timestamp="20210519 18:52:21.001" level="INFO">${result} = 00315-rpcwoport</msg>
<status status="PASS" starttime="20210519 18:52:12.844" endtime="20210519 18:52:21.001"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 18:52:21.001" endtime="20210519 18:52:21.002"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:52:21.011" level="INFO">Running command 'ozone sh key put o3://om:9862/00315-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:32.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:55:32.678" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:52:21.008" endtime="20210519 18:55:32.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:55:32.679" level="INFO"/>
<status status="PASS" starttime="20210519 18:55:32.678" endtime="20210519 18:55:32.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:55:32.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:55:32.679" endtime="20210519 18:55:32.680"/>
</kw>
<status status="PASS" starttime="20210519 18:52:21.007" endtime="20210519 18:55:32.681"/>
</kw>
<msg timestamp="20210519 18:55:32.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:52:21.005" endtime="20210519 18:55:32.681"/>
</kw>
<status status="PASS" starttime="20210519 18:52:21.004" endtime="20210519 18:55:32.681"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:32.686" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:32.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:55:32.689" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:55:32.683" endtime="20210519 18:55:32.689"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:55:32.691" level="INFO"/>
<status status="PASS" starttime="20210519 18:55:32.690" endtime="20210519 18:55:32.692"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:55:32.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:55:32.692" endtime="20210519 18:55:32.693"/>
</kw>
<status status="PASS" starttime="20210519 18:55:32.682" endtime="20210519 18:55:32.694"/>
</kw>
<msg timestamp="20210519 18:55:32.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:55:32.682" endtime="20210519 18:55:32.695"/>
</kw>
<status status="PASS" starttime="20210519 18:55:32.681" endtime="20210519 18:55:32.695"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:32.701" level="INFO">Running command 'ozone sh key get o3://om:9862/00315-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:41.218" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 18:55:32.698" endtime="20210519 18:55:41.218"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.219" endtime="20210519 18:55:41.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.220" endtime="20210519 18:55:41.220"/>
</kw>
<status status="FAIL" starttime="20210519 18:55:32.697" endtime="20210519 18:55:41.220"/>
</kw>
<msg timestamp="20210519 18:55:41.220" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 18:55:32.697" endtime="20210519 18:55:41.220"/>
</kw>
<status status="FAIL" starttime="20210519 18:55:32.695" endtime="20210519 18:55:41.221"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.223" endtime="20210519 18:55:41.223"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.224" endtime="20210519 18:55:41.224"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.224" endtime="20210519 18:55:41.224"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.224" endtime="20210519 18:55:41.224"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.224" endtime="20210519 18:55:41.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.225" endtime="20210519 18:55:41.225"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.227" endtime="20210519 18:55:41.227"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.227" endtime="20210519 18:55:41.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.228" endtime="20210519 18:55:41.228"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.228" endtime="20210519 18:55:41.228"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.228" endtime="20210519 18:55:41.228"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.228" endtime="20210519 18:55:41.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.229" endtime="20210519 18:55:41.229"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.229" endtime="20210519 18:55:41.229"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.229" endtime="20210519 18:55:41.229"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.229" endtime="20210519 18:55:41.229"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.230" endtime="20210519 18:55:41.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.230" endtime="20210519 18:55:41.230"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.230" endtime="20210519 18:55:41.230"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.230" endtime="20210519 18:55:41.230"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.230" endtime="20210519 18:55:41.231"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.231" endtime="20210519 18:55:41.241"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.243" endtime="20210519 18:55:41.244"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.244" endtime="20210519 18:55:41.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.244" endtime="20210519 18:55:41.244"/>
</kw>
<status status="FAIL" starttime="20210519 18:52:21.003" endtime="20210519 18:55:41.244"/>
</kw>
<status status="FAIL" starttime="20210519 18:52:21.002" endtime="20210519 18:55:41.244"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.245" endtime="20210519 18:55:41.245"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.245" endtime="20210519 18:55:41.245"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.245" endtime="20210519 18:55:41.246"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.247" endtime="20210519 18:55:41.248"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.249" endtime="20210519 18:55:41.249"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.249" endtime="20210519 18:55:41.249"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.249" endtime="20210519 18:55:41.249"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.249" endtime="20210519 18:55:41.249"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.250" endtime="20210519 18:55:41.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.250" endtime="20210519 18:55:41.250"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.250" endtime="20210519 18:55:41.250"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.250" endtime="20210519 18:55:41.250"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.250" endtime="20210519 18:55:41.251"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.258" endtime="20210519 18:55:41.258"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.258" endtime="20210519 18:55:41.259"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.259" endtime="20210519 18:55:41.261"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.265" endtime="20210519 18:55:41.265"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.265" endtime="20210519 18:55:41.265"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.268" endtime="20210519 18:55:41.268"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.268" endtime="20210519 18:55:41.268"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.268" endtime="20210519 18:55:41.268"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.269" endtime="20210519 18:55:41.269"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.269" endtime="20210519 18:55:41.269"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 18:55:41.337" endtime="20210519 18:55:41.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.342" endtime="20210519 18:55:41.342"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 18:55:41.342" endtime="20210519 18:55:41.342"/>
</kw>
<status status="FAIL" starttime="20210519 18:50:41.353" endtime="20210519 18:55:41.346"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210519 18:50:41.215" endtime="20210519 18:55:41.346">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:41.364" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:41.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:55:41.381" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:55:41.358" endtime="20210519 18:55:41.381"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:55:41.383" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:55:41.382" endtime="20210519 18:55:41.383"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:55:41.384" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:55:41.383" endtime="20210519 18:55:41.384"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.358" endtime="20210519 18:55:41.385"/>
</kw>
<msg timestamp="20210519 18:55:41.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:55:41.358" endtime="20210519 18:55:41.385"/>
</kw>
<msg timestamp="20210519 18:55:41.385" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:55:41.355" endtime="20210519 18:55:41.385"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:55:41.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:55:41.386" endtime="20210519 18:55:41.387"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:41.393" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:41.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:55:41.434" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:55:41.390" endtime="20210519 18:55:41.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:55:41.438" level="INFO"/>
<status status="PASS" starttime="20210519 18:55:41.435" endtime="20210519 18:55:41.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:55:41.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:55:41.439" endtime="20210519 18:55:41.441"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.389" endtime="20210519 18:55:41.441"/>
</kw>
<msg timestamp="20210519 18:55:41.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:55:41.389" endtime="20210519 18:55:41.442"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.388" endtime="20210519 18:55:41.442"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.387" endtime="20210519 18:55:41.442"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.352" endtime="20210519 18:55:41.443"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.351" endtime="20210519 18:55:41.443"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:41.463" level="INFO">Running command 'ozone sh volume create o3://om:9862/00315-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:47.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:55:47.797" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:55:41.456" endtime="20210519 18:55:47.797"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:55:47.799" level="INFO"/>
<status status="PASS" starttime="20210519 18:55:47.798" endtime="20210519 18:55:47.799"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:55:47.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:55:47.799" endtime="20210519 18:55:47.800"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.453" endtime="20210519 18:55:47.800"/>
</kw>
<msg timestamp="20210519 18:55:47.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:55:41.451" endtime="20210519 18:55:47.800"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.447" endtime="20210519 18:55:47.800"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:47.806" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/00315-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:55:55.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:55:55.186" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:55:47.803" endtime="20210519 18:55:55.186"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:55:55.188" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:55:55.187" endtime="20210519 18:55:55.188"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:55:55.188" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:55:55.188" endtime="20210519 18:55:55.189"/>
</kw>
<status status="PASS" starttime="20210519 18:55:47.802" endtime="20210519 18:55:55.189"/>
</kw>
<msg timestamp="20210519 18:55:55.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:55:47.801" endtime="20210519 18:55:55.189"/>
</kw>
<msg timestamp="20210519 18:55:55.190" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:55:47.800" endtime="20210519 18:55:55.190"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:55:55.190" endtime="20210519 18:55:55.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:55:55.199" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/00315-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:03.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:03.323" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210519 18:55:55.195" endtime="20210519 18:56:03.323"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:03.325" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210519 18:56:03.324" endtime="20210519 18:56:03.325"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:03.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:03.325" endtime="20210519 18:56:03.326"/>
</kw>
<status status="PASS" starttime="20210519 18:55:55.194" endtime="20210519 18:56:03.326"/>
</kw>
<msg timestamp="20210519 18:56:03.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:55:55.193" endtime="20210519 18:56:03.327"/>
</kw>
<msg timestamp="20210519 18:56:03.327" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210519 18:55:55.192" endtime="20210519 18:56:03.327"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:03.334" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/00315-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:11.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:11.188" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:56:03.330" endtime="20210519 18:56:11.188"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:11.189" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:56:11.188" endtime="20210519 18:56:11.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:11.190" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:11.190" endtime="20210519 18:56:11.191"/>
</kw>
<status status="PASS" starttime="20210519 18:56:03.329" endtime="20210519 18:56:11.191"/>
</kw>
<msg timestamp="20210519 18:56:11.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:03.328" endtime="20210519 18:56:11.191"/>
</kw>
<msg timestamp="20210519 18:56:11.192" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:56:03.327" endtime="20210519 18:56:11.192"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:56:11.192" endtime="20210519 18:56:11.193"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:11.198" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/00315-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:18.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:18.361" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 18:56:11.195" endtime="20210519 18:56:18.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:18.363" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 18:56:18.362" endtime="20210519 18:56:18.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:18.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:18.363" endtime="20210519 18:56:18.364"/>
</kw>
<status status="PASS" starttime="20210519 18:56:11.194" endtime="20210519 18:56:18.365"/>
</kw>
<msg timestamp="20210519 18:56:18.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:11.194" endtime="20210519 18:56:18.365"/>
</kw>
<msg timestamp="20210519 18:56:18.365" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 18:56:11.193" endtime="20210519 18:56:18.365"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:18.370" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/00315-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:24.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:24.446" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:56:18.367" endtime="20210519 18:56:24.446"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:24.449" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:56:24.447" endtime="20210519 18:56:24.449"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:24.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:24.449" endtime="20210519 18:56:24.451"/>
</kw>
<status status="PASS" starttime="20210519 18:56:18.367" endtime="20210519 18:56:24.451"/>
</kw>
<msg timestamp="20210519 18:56:24.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:18.366" endtime="20210519 18:56:24.452"/>
</kw>
<msg timestamp="20210519 18:56:24.452" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:56:18.365" endtime="20210519 18:56:24.452"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:56:24.453" endtime="20210519 18:56:24.454"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:24.460" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/00315-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:31.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:31.392" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 18:56:24.458" endtime="20210519 18:56:31.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:31.394" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 18:56:31.393" endtime="20210519 18:56:31.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:31.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:31.395" endtime="20210519 18:56:31.396"/>
</kw>
<status status="PASS" starttime="20210519 18:56:24.457" endtime="20210519 18:56:31.396"/>
</kw>
<msg timestamp="20210519 18:56:31.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:24.456" endtime="20210519 18:56:31.396"/>
</kw>
<msg timestamp="20210519 18:56:31.397" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 18:56:24.454" endtime="20210519 18:56:31.397"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:31.404" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/00315-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:39.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:39.492" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210519 18:56:31.400" endtime="20210519 18:56:39.492"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:39.493" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:56:39.493" endtime="20210519 18:56:39.493"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:39.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:39.494" endtime="20210519 18:56:39.494"/>
</kw>
<status status="PASS" starttime="20210519 18:56:31.399" endtime="20210519 18:56:39.495"/>
</kw>
<msg timestamp="20210519 18:56:39.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:31.399" endtime="20210519 18:56:39.495"/>
</kw>
<msg timestamp="20210519 18:56:39.495" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210519 18:56:31.397" endtime="20210519 18:56:39.495"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:56:39.495" endtime="20210519 18:56:39.496"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:56:39.496" endtime="20210519 18:56:39.497"/>
</kw>
<status status="PASS" starttime="20210519 18:55:41.443" endtime="20210519 18:56:39.497"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:55:41.350" endtime="20210519 18:56:39.498"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:39.507" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:39.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:39.511" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:56:39.505" endtime="20210519 18:56:39.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:39.513" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:56:39.512" endtime="20210519 18:56:39.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:39.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:39.513" endtime="20210519 18:56:39.514"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.504" endtime="20210519 18:56:39.515"/>
</kw>
<msg timestamp="20210519 18:56:39.515" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:39.503" endtime="20210519 18:56:39.515"/>
</kw>
<msg timestamp="20210519 18:56:39.516" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:56:39.503" endtime="20210519 18:56:39.516"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:56:39.517" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:56:39.516" endtime="20210519 18:56:39.517"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:39.523" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:39.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:39.538" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:56:39.521" endtime="20210519 18:56:39.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:39.541" level="INFO"/>
<status status="PASS" starttime="20210519 18:56:39.539" endtime="20210519 18:56:39.541"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:39.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:39.541" endtime="20210519 18:56:39.542"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.520" endtime="20210519 18:56:39.543"/>
</kw>
<msg timestamp="20210519 18:56:39.543" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:39.520" endtime="20210519 18:56:39.543"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.518" endtime="20210519 18:56:39.543"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.518" endtime="20210519 18:56:39.543"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.502" endtime="20210519 18:56:39.543"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.501" endtime="20210519 18:56:39.543"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:39.549" level="INFO">Running command 'ozone sh bucket create o3://om:9862/00315-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:46.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:46.714" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:56:39.547" endtime="20210519 18:56:46.714"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:46.716" level="INFO"/>
<status status="PASS" starttime="20210519 18:56:46.715" endtime="20210519 18:56:46.716"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:46.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:46.716" endtime="20210519 18:56:46.717"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.546" endtime="20210519 18:56:46.717"/>
</kw>
<msg timestamp="20210519 18:56:46.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:39.545" endtime="20210519 18:56:46.718"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.545" endtime="20210519 18:56:46.718"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:46.724" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/00315-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:56:53.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:56:53.944" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:56:46.720" endtime="20210519 18:56:53.944"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:56:53.946" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:56:53.945" endtime="20210519 18:56:53.946"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:56:53.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:56:53.946" endtime="20210519 18:56:53.947"/>
</kw>
<status status="PASS" starttime="20210519 18:56:46.719" endtime="20210519 18:56:53.947"/>
</kw>
<msg timestamp="20210519 18:56:53.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:46.719" endtime="20210519 18:56:53.947"/>
</kw>
<msg timestamp="20210519 18:56:53.948" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:56:46.718" endtime="20210519 18:56:53.948"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:56:53.948" endtime="20210519 18:56:53.949"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:56:53.956" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/00315-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:01.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:01.421" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210519 18:56:53.952" endtime="20210519 18:57:01.421"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:01.423" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210519 18:57:01.422" endtime="20210519 18:57:01.423"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:01.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:01.424" endtime="20210519 18:57:01.425"/>
</kw>
<status status="PASS" starttime="20210519 18:56:53.951" endtime="20210519 18:57:01.426"/>
</kw>
<msg timestamp="20210519 18:57:01.426" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:56:53.951" endtime="20210519 18:57:01.426"/>
</kw>
<msg timestamp="20210519 18:57:01.427" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210519 18:56:53.949" endtime="20210519 18:57:01.427"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:01.435" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/00315-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:09.558" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:09.558" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:57:01.431" endtime="20210519 18:57:09.559"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:09.562" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:57:09.559" endtime="20210519 18:57:09.562"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:09.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:09.563" endtime="20210519 18:57:09.564"/>
</kw>
<status status="PASS" starttime="20210519 18:57:01.430" endtime="20210519 18:57:09.564"/>
</kw>
<msg timestamp="20210519 18:57:09.564" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:01.429" endtime="20210519 18:57:09.564"/>
</kw>
<msg timestamp="20210519 18:57:09.565" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:57:01.428" endtime="20210519 18:57:09.565"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:57:09.565" endtime="20210519 18:57:09.567"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:09.574" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/00315-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:15.635" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:15.635" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 18:57:09.569" endtime="20210519 18:57:15.635"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:15.637" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 18:57:15.636" endtime="20210519 18:57:15.637"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:15.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:15.637" endtime="20210519 18:57:15.638"/>
</kw>
<status status="PASS" starttime="20210519 18:57:09.569" endtime="20210519 18:57:15.639"/>
</kw>
<msg timestamp="20210519 18:57:15.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:09.568" endtime="20210519 18:57:15.639"/>
</kw>
<msg timestamp="20210519 18:57:15.639" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 18:57:09.567" endtime="20210519 18:57:15.639"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:15.643" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/00315-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:22.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:22.582" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:57:15.641" endtime="20210519 18:57:22.582"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:22.585" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:57:22.583" endtime="20210519 18:57:22.585"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:22.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:22.586" endtime="20210519 18:57:22.588"/>
</kw>
<status status="PASS" starttime="20210519 18:57:15.641" endtime="20210519 18:57:22.588"/>
</kw>
<msg timestamp="20210519 18:57:22.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:15.640" endtime="20210519 18:57:22.589"/>
</kw>
<msg timestamp="20210519 18:57:22.589" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 18:57:15.640" endtime="20210519 18:57:22.590"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:57:22.590" endtime="20210519 18:57:22.591"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:22.598" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/00315-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:27.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:27.865" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 18:57:22.595" endtime="20210519 18:57:27.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:27.867" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 18:57:27.866" endtime="20210519 18:57:27.867"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:27.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:27.867" endtime="20210519 18:57:27.867"/>
</kw>
<status status="PASS" starttime="20210519 18:57:22.594" endtime="20210519 18:57:27.874"/>
</kw>
<msg timestamp="20210519 18:57:27.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:22.593" endtime="20210519 18:57:27.874"/>
</kw>
<msg timestamp="20210519 18:57:27.875" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 18:57:22.592" endtime="20210519 18:57:27.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:27.881" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/00315-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:35.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:35.954" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210519 18:57:27.876" endtime="20210519 18:57:35.954"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:35.958" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 18:57:35.955" endtime="20210519 18:57:35.959"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:35.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:35.959" endtime="20210519 18:57:35.961"/>
</kw>
<status status="PASS" starttime="20210519 18:57:27.876" endtime="20210519 18:57:35.962"/>
</kw>
<msg timestamp="20210519 18:57:35.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:27.876" endtime="20210519 18:57:35.963"/>
</kw>
<msg timestamp="20210519 18:57:35.963" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210519 18:57:27.875" endtime="20210519 18:57:35.963"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:57:35.964" endtime="20210519 18:57:35.965"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 18:57:35.965" endtime="20210519 18:57:35.967"/>
</kw>
<status status="PASS" starttime="20210519 18:56:39.544" endtime="20210519 18:57:35.967"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:56:39.499" endtime="20210519 18:57:35.968"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:35.982" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:35.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:35.986" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:57:35.978" endtime="20210519 18:57:35.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:35.988" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:57:35.986" endtime="20210519 18:57:35.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:35.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:35.988" endtime="20210519 18:57:35.989"/>
</kw>
<status status="PASS" starttime="20210519 18:57:35.976" endtime="20210519 18:57:35.990"/>
</kw>
<msg timestamp="20210519 18:57:35.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:35.976" endtime="20210519 18:57:35.990"/>
</kw>
<msg timestamp="20210519 18:57:35.990" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:57:35.974" endtime="20210519 18:57:35.992"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:57:35.993" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:57:35.992" endtime="20210519 18:57:35.993"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:35.999" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:57:36.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:57:36.009" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:57:35.996" endtime="20210519 18:57:36.009"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:57:36.011" level="INFO"/>
<status status="PASS" starttime="20210519 18:57:36.010" endtime="20210519 18:57:36.011"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:57:36.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:57:36.011" endtime="20210519 18:57:36.012"/>
</kw>
<status status="PASS" starttime="20210519 18:57:35.995" endtime="20210519 18:57:36.013"/>
</kw>
<msg timestamp="20210519 18:57:36.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:35.995" endtime="20210519 18:57:36.013"/>
</kw>
<status status="PASS" starttime="20210519 18:57:35.994" endtime="20210519 18:57:36.013"/>
</kw>
<status status="PASS" starttime="20210519 18:57:35.993" endtime="20210519 18:57:36.013"/>
</kw>
<status status="PASS" starttime="20210519 18:57:35.973" endtime="20210519 18:57:36.014"/>
</kw>
<status status="PASS" starttime="20210519 18:57:35.972" endtime="20210519 18:57:36.014"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:57:36.019" level="INFO">Running command 'ozone sh key put o3://om:9862/00315-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:00:46.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:00:46.280" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:57:36.017" endtime="20210519 19:00:46.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:00:46.285" level="INFO"/>
<status status="PASS" starttime="20210519 19:00:46.281" endtime="20210519 19:00:46.285"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:00:46.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:00:46.286" endtime="20210519 19:00:46.287"/>
</kw>
<status status="PASS" starttime="20210519 18:57:36.016" endtime="20210519 19:00:46.287"/>
</kw>
<msg timestamp="20210519 19:00:46.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:57:36.016" endtime="20210519 19:00:46.288"/>
</kw>
<status status="PASS" starttime="20210519 18:57:36.015" endtime="20210519 19:00:46.288"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:00:46.294" level="INFO">Running command 'ozone sh key getacl o3://om:9862/00315-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:00:51.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:00:51.889" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:00:46.291" endtime="20210519 19:00:51.889"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:00:51.892" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:00:51.890" endtime="20210519 19:00:51.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:00:51.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:00:51.892" endtime="20210519 19:00:51.893"/>
</kw>
<status status="PASS" starttime="20210519 19:00:46.290" endtime="20210519 19:00:51.894"/>
</kw>
<msg timestamp="20210519 19:00:51.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:00:46.290" endtime="20210519 19:00:51.894"/>
</kw>
<msg timestamp="20210519 19:00:51.895" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:00:46.289" endtime="20210519 19:00:51.895"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:00:51.895" endtime="20210519 19:00:51.896"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:00:51.901" level="INFO">Running command 'ozone sh key addacl o3://om:9862/00315-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:00:58.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:00:58.669" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 19:00:51.898" endtime="20210519 19:00:58.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:00:58.672" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 19:00:58.670" endtime="20210519 19:00:58.672"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:00:58.674" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:00:58.672" endtime="20210519 19:00:58.674"/>
</kw>
<status status="PASS" starttime="20210519 19:00:51.897" endtime="20210519 19:00:58.674"/>
</kw>
<msg timestamp="20210519 19:00:58.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:00:51.897" endtime="20210519 19:00:58.675"/>
</kw>
<msg timestamp="20210519 19:00:58.675" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210519 19:00:51.896" endtime="20210519 19:00:58.675"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:00:58.680" level="INFO">Running command 'ozone sh key getacl o3://om:9862/00315-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:07.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:07.150" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:00:58.677" endtime="20210519 19:01:07.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:07.154" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:01:07.153" endtime="20210519 19:01:07.154"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:07.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:07.154" endtime="20210519 19:01:07.155"/>
</kw>
<status status="PASS" starttime="20210519 19:00:58.676" endtime="20210519 19:01:07.155"/>
</kw>
<msg timestamp="20210519 19:01:07.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:00:58.676" endtime="20210519 19:01:07.156"/>
</kw>
<msg timestamp="20210519 19:01:07.156" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:00:58.675" endtime="20210519 19:01:07.156"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:01:07.156" endtime="20210519 19:01:07.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:07.164" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/00315-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:14.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:14.567" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 19:01:07.160" endtime="20210519 19:01:14.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:14.569" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 19:01:14.567" endtime="20210519 19:01:14.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:14.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:14.569" endtime="20210519 19:01:14.570"/>
</kw>
<status status="PASS" starttime="20210519 19:01:07.160" endtime="20210519 19:01:14.571"/>
</kw>
<msg timestamp="20210519 19:01:14.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:07.159" endtime="20210519 19:01:14.571"/>
</kw>
<msg timestamp="20210519 19:01:14.571" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210519 19:01:07.157" endtime="20210519 19:01:14.571"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:14.578" level="INFO">Running command 'ozone sh key getacl o3://om:9862/00315-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:21.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:21.932" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:01:14.574" endtime="20210519 19:01:21.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:21.934" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:01:21.933" endtime="20210519 19:01:21.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:21.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:21.935" endtime="20210519 19:01:21.936"/>
</kw>
<status status="PASS" starttime="20210519 19:01:14.572" endtime="20210519 19:01:21.937"/>
</kw>
<msg timestamp="20210519 19:01:21.937" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:14.572" endtime="20210519 19:01:21.938"/>
</kw>
<msg timestamp="20210519 19:01:21.938" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:01:14.571" endtime="20210519 19:01:21.939"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:01:21.939" endtime="20210519 19:01:21.941"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:21.946" level="INFO">Running command 'ozone sh key setacl o3://om:9862/00315-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:28.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:28.951" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 19:01:21.943" endtime="20210519 19:01:28.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:28.953" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 19:01:28.952" endtime="20210519 19:01:28.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:28.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:28.953" endtime="20210519 19:01:28.954"/>
</kw>
<status status="PASS" starttime="20210519 19:01:21.942" endtime="20210519 19:01:28.954"/>
</kw>
<msg timestamp="20210519 19:01:28.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:21.942" endtime="20210519 19:01:28.954"/>
</kw>
<msg timestamp="20210519 19:01:28.955" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 19:01:21.941" endtime="20210519 19:01:28.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:28.960" level="INFO">Running command 'ozone sh key getacl o3://om:9862/00315-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:35.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:35.429" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210519 19:01:28.957" endtime="20210519 19:01:35.430"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:35.433" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:01:35.431" endtime="20210519 19:01:35.433"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:35.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:35.434" endtime="20210519 19:01:35.435"/>
</kw>
<status status="PASS" starttime="20210519 19:01:28.956" endtime="20210519 19:01:35.436"/>
</kw>
<msg timestamp="20210519 19:01:35.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:28.956" endtime="20210519 19:01:35.436"/>
</kw>
<msg timestamp="20210519 19:01:35.438" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210519 19:01:28.955" endtime="20210519 19:01:35.438"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:01:35.438" endtime="20210519 19:01:35.439"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:01:35.440" endtime="20210519 19:01:35.443"/>
</kw>
<status status="PASS" starttime="20210519 18:57:36.014" endtime="20210519 19:01:35.443"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 18:57:35.970" endtime="20210519 19:01:35.443"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:35.457" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:35.460" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:35.460" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 19:01:35.454" endtime="20210519 19:01:35.460"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:35.462" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 19:01:35.461" endtime="20210519 19:01:35.462"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:35.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:35.463" endtime="20210519 19:01:35.464"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.452" endtime="20210519 19:01:35.465"/>
</kw>
<msg timestamp="20210519 19:01:35.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:35.451" endtime="20210519 19:01:35.465"/>
</kw>
<msg timestamp="20210519 19:01:35.466" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 19:01:35.450" endtime="20210519 19:01:35.466"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 19:01:35.467" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 19:01:35.466" endtime="20210519 19:01:35.467"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:35.475" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:35.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:35.511" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:01:35.472" endtime="20210519 19:01:35.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:35.512" level="INFO"/>
<status status="PASS" starttime="20210519 19:01:35.511" endtime="20210519 19:01:35.512"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:35.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:35.512" endtime="20210519 19:01:35.513"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.471" endtime="20210519 19:01:35.513"/>
</kw>
<msg timestamp="20210519 19:01:35.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:35.471" endtime="20210519 19:01:35.514"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.469" endtime="20210519 19:01:35.514"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.468" endtime="20210519 19:01:35.514"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.449" endtime="20210519 19:01:35.514"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.448" endtime="20210519 19:01:35.514"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:35.520" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:42.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:42.416" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210519 19:01:35.517" endtime="20210519 19:01:42.416"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:42.418" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210519 19:01:42.417" endtime="20210519 19:01:42.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:42.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:42.419" endtime="20210519 19:01:42.420"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.516" endtime="20210519 19:01:42.420"/>
</kw>
<msg timestamp="20210519 19:01:42.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:35.516" endtime="20210519 19:01:42.421"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.515" endtime="20210519 19:01:42.421"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:42.426" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:50.528" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:50.528" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210519 19:01:42.424" endtime="20210519 19:01:50.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:50.531" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:01:50.529" endtime="20210519 19:01:50.531"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:50.532" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:50.531" endtime="20210519 19:01:50.533"/>
</kw>
<status status="PASS" starttime="20210519 19:01:42.423" endtime="20210519 19:01:50.533"/>
</kw>
<msg timestamp="20210519 19:01:50.533" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:42.422" endtime="20210519 19:01:50.534"/>
</kw>
<msg timestamp="20210519 19:01:50.534" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210519 19:01:42.421" endtime="20210519 19:01:50.534"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:01:50.535" endtime="20210519 19:01:50.536"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:50.543" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:01:56.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:01:56.836" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210519 19:01:50.540" endtime="20210519 19:01:56.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:01:56.837" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210519 19:01:56.836" endtime="20210519 19:01:56.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:01:56.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:01:56.838" endtime="20210519 19:01:56.838"/>
</kw>
<status status="PASS" starttime="20210519 19:01:50.538" endtime="20210519 19:01:56.839"/>
</kw>
<msg timestamp="20210519 19:01:56.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:50.538" endtime="20210519 19:01:56.839"/>
</kw>
<msg timestamp="20210519 19:01:56.839" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210519 19:01:50.536" endtime="20210519 19:01:56.839"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:01:56.844" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:02:03.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:02:03.979" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210519 19:01:56.841" endtime="20210519 19:02:03.979"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:02:03.980" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:02:03.980" endtime="20210519 19:02:03.980"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:02:03.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:02:03.981" endtime="20210519 19:02:03.982"/>
</kw>
<status status="PASS" starttime="20210519 19:01:56.841" endtime="20210519 19:02:03.982"/>
</kw>
<msg timestamp="20210519 19:02:03.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:01:56.840" endtime="20210519 19:02:03.982"/>
</kw>
<msg timestamp="20210519 19:02:03.982" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210519 19:01:56.839" endtime="20210519 19:02:03.983"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:02:03.983" endtime="20210519 19:02:03.984"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:02:03.989" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:02:10.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:02:10.279" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 19:02:03.986" endtime="20210519 19:02:10.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:02:10.280" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 19:02:10.279" endtime="20210519 19:02:10.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:02:10.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:02:10.280" endtime="20210519 19:02:10.281"/>
</kw>
<status status="PASS" starttime="20210519 19:02:03.985" endtime="20210519 19:02:10.281"/>
</kw>
<msg timestamp="20210519 19:02:10.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:02:03.985" endtime="20210519 19:02:10.282"/>
</kw>
<msg timestamp="20210519 19:02:10.282" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210519 19:02:03.984" endtime="20210519 19:02:10.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:02:10.288" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:02:17.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:02:17.590" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210519 19:02:10.285" endtime="20210519 19:02:17.591"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:02:17.593" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:02:17.592" endtime="20210519 19:02:17.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:02:17.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:02:17.606" endtime="20210519 19:02:17.608"/>
</kw>
<status status="PASS" starttime="20210519 19:02:10.284" endtime="20210519 19:02:17.608"/>
</kw>
<msg timestamp="20210519 19:02:17.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:02:10.283" endtime="20210519 19:02:17.609"/>
</kw>
<msg timestamp="20210519 19:02:17.610" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210519 19:02:10.282" endtime="20210519 19:02:17.610"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:02:17.610" endtime="20210519 19:02:17.611"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:02:17.611" endtime="20210519 19:02:17.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:02:17.620" level="INFO">Running command 'ozone sh key put o3://om:9862/00315-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:29.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:05:29.309" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:02:17.617" endtime="20210519 19:05:29.309"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:29.310" level="INFO"/>
<status status="PASS" starttime="20210519 19:05:29.309" endtime="20210519 19:05:29.310"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:05:29.311" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:05:29.310" endtime="20210519 19:05:29.311"/>
</kw>
<status status="PASS" starttime="20210519 19:02:17.615" endtime="20210519 19:05:29.311"/>
</kw>
<msg timestamp="20210519 19:05:29.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:02:17.614" endtime="20210519 19:05:29.311"/>
</kw>
<status status="PASS" starttime="20210519 19:02:17.613" endtime="20210519 19:05:29.312"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:29.316" level="INFO">Running command 'ozone sh key getacl o3://om:9862/00315-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:36.804" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:05:36.804" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:05:29.314" endtime="20210519 19:05:36.805"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:36.807" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210519 19:05:36.805" endtime="20210519 19:05:36.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:05:36.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:05:36.808" endtime="20210519 19:05:36.809"/>
</kw>
<status status="PASS" starttime="20210519 19:05:29.313" endtime="20210519 19:05:36.810"/>
</kw>
<msg timestamp="20210519 19:05:36.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:05:29.313" endtime="20210519 19:05:36.810"/>
</kw>
<msg timestamp="20210519 19:05:36.811" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210519 19:05:29.312" endtime="20210519 19:05:36.811"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:05:36.811" endtime="20210519 19:05:36.813"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210519 19:05:36.813" endtime="20210519 19:05:36.814"/>
</kw>
<status status="PASS" starttime="20210519 19:01:35.515" endtime="20210519 19:05:36.814"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210519 19:01:35.446" endtime="20210519 19:05:36.814"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:36.823" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:36.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:05:36.827" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 19:05:36.820" endtime="20210519 19:05:36.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:36.829" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 19:05:36.828" endtime="20210519 19:05:36.829"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:05:36.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:05:36.829" endtime="20210519 19:05:36.831"/>
</kw>
<status status="PASS" starttime="20210519 19:05:36.819" endtime="20210519 19:05:36.831"/>
</kw>
<msg timestamp="20210519 19:05:36.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:05:36.819" endtime="20210519 19:05:36.832"/>
</kw>
<msg timestamp="20210519 19:05:36.832" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 19:05:36.818" endtime="20210519 19:05:36.832"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 19:05:36.833" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 19:05:36.832" endtime="20210519 19:05:36.833"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:36.841" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:36.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:05:36.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:05:36.836" endtime="20210519 19:05:36.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:36.852" level="INFO"/>
<status status="PASS" starttime="20210519 19:05:36.851" endtime="20210519 19:05:36.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:05:36.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:05:36.852" endtime="20210519 19:05:36.853"/>
</kw>
<status status="PASS" starttime="20210519 19:05:36.835" endtime="20210519 19:05:36.853"/>
</kw>
<msg timestamp="20210519 19:05:36.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:05:36.835" endtime="20210519 19:05:36.853"/>
</kw>
<status status="PASS" starttime="20210519 19:05:36.834" endtime="20210519 19:05:36.854"/>
</kw>
<status status="PASS" starttime="20210519 19:05:36.833" endtime="20210519 19:05:36.854"/>
</kw>
<status status="PASS" starttime="20210519 19:05:36.817" endtime="20210519 19:05:36.854"/>
</kw>
<status status="PASS" starttime="20210519 19:05:36.816" endtime="20210519 19:05:36.854"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:36.860" level="INFO">Running command 'ozone sh volume info o3:///00315-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:43.368" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 19:05:43.370" level="INFO">${output} = VOLUME_NOT_FOUND Volume 00315-rpcwport is not found</msg>
<status status="PASS" starttime="20210519 19:05:36.857" endtime="20210519 19:05:43.370"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:43.371" level="INFO">VOLUME_NOT_FOUND Volume 00315-rpcwport is not found</msg>
<status status="PASS" starttime="20210519 19:05:43.371" endtime="20210519 19:05:43.372"/>
</kw>
<msg timestamp="20210519 19:05:43.372" level="INFO">${result} = VOLUME_NOT_FOUND Volume 00315-rpcwport is not found</msg>
<status status="PASS" starttime="20210519 19:05:36.856" endtime="20210519 19:05:43.372"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:05:43.372" endtime="20210519 19:05:43.373"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:43.380" level="INFO">Running command 'ozone sh volume create o3:///00315-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:50.566" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:05:50.567" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:05:43.377" endtime="20210519 19:05:50.567"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:50.569" level="INFO"/>
<status status="PASS" starttime="20210519 19:05:50.567" endtime="20210519 19:05:50.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:05:50.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:05:50.569" endtime="20210519 19:05:50.570"/>
</kw>
<status status="PASS" starttime="20210519 19:05:43.376" endtime="20210519 19:05:50.571"/>
</kw>
<msg timestamp="20210519 19:05:50.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:05:43.375" endtime="20210519 19:05:50.571"/>
</kw>
<msg timestamp="20210519 19:05:50.572" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210519 19:05:43.374" endtime="20210519 19:05:50.572"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:05:50.572" endtime="20210519 19:05:50.572"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:50.578" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="00315-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:05:58.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:05:58.146" level="INFO">${output} = {
  "metadata": {},
  "name": "00315-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 19:05:50.575" endtime="20210519 19:05:58.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:05:58.149" level="INFO">{
  "metadata": {},
  "name": "00315-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T19:05:50.220Z",
  "modificationTime": "2021-05-19T19:05:50.220Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 19:05:58.148" endtime="20210519 19:05:58.150"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:05:58.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:05:58.150" endtime="20210519 19:05:58.151"/>
</kw>
<status status="PASS" starttime="20210519 19:05:50.574" endtime="20210519 19:05:58.151"/>
</kw>
<msg timestamp="20210519 19:05:58.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:05:50.574" endtime="20210519 19:05:58.152"/>
</kw>
<msg timestamp="20210519 19:05:58.153" level="INFO">${result} = {
  "metadata": {},
  "name": "00315-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 19:05:50.573" endtime="20210519 19:05:58.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:05:58.153" endtime="20210519 19:05:58.154"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:05:58.161" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="00315-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:05.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:05.565" level="INFO">${output} = {
  "metadata": {},
  "name": "00315-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 19:05:58.158" endtime="20210519 19:06:05.565"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:05.568" level="INFO">{
  "metadata": {},
  "name": "00315-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T19:05:50.220Z",
  "modificationTime": "2021-05-19T19:05:50.220Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 19:06:05.566" endtime="20210519 19:06:05.568"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:05.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:05.568" endtime="20210519 19:06:05.570"/>
</kw>
<status status="PASS" starttime="20210519 19:05:58.156" endtime="20210519 19:06:05.571"/>
</kw>
<msg timestamp="20210519 19:06:05.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:05:58.156" endtime="20210519 19:06:05.572"/>
</kw>
<msg timestamp="20210519 19:06:05.573" level="INFO">${result} = {
  "metadata": {},
  "name": "00315-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210519 19:05:58.154" endtime="20210519 19:06:05.573"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:06:05.573" endtime="20210519 19:06:05.574"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:05.581" level="INFO">Running command 'ozone sh volume setquota o3:///00315-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:11.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:11.937" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:06:05.578" endtime="20210519 19:06:11.937"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:11.938" level="INFO"/>
<status status="PASS" starttime="20210519 19:06:11.937" endtime="20210519 19:06:11.938"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:11.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:11.939" endtime="20210519 19:06:11.939"/>
</kw>
<status status="PASS" starttime="20210519 19:06:05.577" endtime="20210519 19:06:11.940"/>
</kw>
<msg timestamp="20210519 19:06:11.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:05.576" endtime="20210519 19:06:11.940"/>
</kw>
<status status="PASS" starttime="20210519 19:06:05.574" endtime="20210519 19:06:11.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:11.944" level="INFO">Running command 'ozone sh volume info o3:///00315-rpcwport | jq -r '. | select(.name=="00315-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:19.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:19.348" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:06:11.942" endtime="20210519 19:06:19.348"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:19.350" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 19:06:19.349" endtime="20210519 19:06:19.350"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:19.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:19.351" endtime="20210519 19:06:19.351"/>
</kw>
<status status="PASS" starttime="20210519 19:06:11.942" endtime="20210519 19:06:19.352"/>
</kw>
<msg timestamp="20210519 19:06:19.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:11.942" endtime="20210519 19:06:19.352"/>
</kw>
<msg timestamp="20210519 19:06:19.352" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:06:11.940" endtime="20210519 19:06:19.352"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:06:19.353" endtime="20210519 19:06:19.353"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:19.358" level="INFO">Running command 'ozone sh bucket create o3:///00315-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:27.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:27.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:06:19.355" endtime="20210519 19:06:27.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:27.023" level="INFO"/>
<status status="PASS" starttime="20210519 19:06:27.022" endtime="20210519 19:06:27.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:27.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:27.024" endtime="20210519 19:06:27.024"/>
</kw>
<status status="PASS" starttime="20210519 19:06:19.355" endtime="20210519 19:06:27.025"/>
</kw>
<msg timestamp="20210519 19:06:27.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:19.354" endtime="20210519 19:06:27.025"/>
</kw>
<status status="PASS" starttime="20210519 19:06:19.353" endtime="20210519 19:06:27.026"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:27.033" level="INFO">Running command 'ozone sh bucket info o3:///00315-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:32.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:32.722" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210519 19:06:27.029" endtime="20210519 19:06:32.722"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:32.724" level="INFO">DISK</msg>
<status status="PASS" starttime="20210519 19:06:32.723" endtime="20210519 19:06:32.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:32.726" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:32.725" endtime="20210519 19:06:32.726"/>
</kw>
<status status="PASS" starttime="20210519 19:06:27.028" endtime="20210519 19:06:32.727"/>
</kw>
<msg timestamp="20210519 19:06:32.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:27.027" endtime="20210519 19:06:32.728"/>
</kw>
<msg timestamp="20210519 19:06:32.728" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210519 19:06:27.026" endtime="20210519 19:06:32.729"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:06:32.729" endtime="20210519 19:06:32.730"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:32.739" level="INFO">Running command 'ozone sh bucket info o3:///00315-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:40.274" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:40.274" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:06:32.734" endtime="20210519 19:06:40.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:40.276" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 19:06:40.275" endtime="20210519 19:06:40.276"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:40.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:40.276" endtime="20210519 19:06:40.277"/>
</kw>
<status status="PASS" starttime="20210519 19:06:32.733" endtime="20210519 19:06:40.278"/>
</kw>
<msg timestamp="20210519 19:06:40.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:32.733" endtime="20210519 19:06:40.278"/>
</kw>
<msg timestamp="20210519 19:06:40.278" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:06:32.730" endtime="20210519 19:06:40.278"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:06:40.279" endtime="20210519 19:06:40.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:40.284" level="INFO">Running command 'ozone sh bucket info o3:///00315-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:47.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:47.718" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210519 19:06:40.281" endtime="20210519 19:06:47.719"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:47.721" level="INFO">100</msg>
<status status="PASS" starttime="20210519 19:06:47.719" endtime="20210519 19:06:47.721"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:47.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:47.721" endtime="20210519 19:06:47.723"/>
</kw>
<status status="PASS" starttime="20210519 19:06:40.281" endtime="20210519 19:06:47.725"/>
</kw>
<msg timestamp="20210519 19:06:47.725" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:40.280" endtime="20210519 19:06:47.725"/>
</kw>
<msg timestamp="20210519 19:06:47.726" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210519 19:06:40.279" endtime="20210519 19:06:47.726"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:06:47.727" endtime="20210519 19:06:47.728"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:47.735" level="INFO">Running command 'ozone sh bucket setquota o3:///00315-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:06:54.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:06:54.556" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:06:47.732" endtime="20210519 19:06:54.556"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:06:54.559" level="INFO"/>
<status status="PASS" starttime="20210519 19:06:54.557" endtime="20210519 19:06:54.559"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:06:54.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:06:54.560" endtime="20210519 19:06:54.562"/>
</kw>
<status status="PASS" starttime="20210519 19:06:47.731" endtime="20210519 19:06:54.562"/>
</kw>
<msg timestamp="20210519 19:06:54.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:47.730" endtime="20210519 19:06:54.563"/>
</kw>
<status status="PASS" starttime="20210519 19:06:47.728" endtime="20210519 19:06:54.564"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:06:54.570" level="INFO">Running command 'ozone sh bucket info o3:///00315-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:07:02.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:07:02.270" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210519 19:06:54.567" endtime="20210519 19:07:02.270"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:07:02.274" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210519 19:07:02.273" endtime="20210519 19:07:02.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:07:02.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:07:02.275" endtime="20210519 19:07:02.279"/>
</kw>
<status status="PASS" starttime="20210519 19:06:54.567" endtime="20210519 19:07:02.279"/>
</kw>
<msg timestamp="20210519 19:07:02.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:06:54.566" endtime="20210519 19:07:02.279"/>
</kw>
<msg timestamp="20210519 19:07:02.280" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210519 19:06:54.564" endtime="20210519 19:07:02.280"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:07:02.280" endtime="20210519 19:07:02.281"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:07:02.286" level="INFO">Running command 'ozone sh bucket info o3:///00315-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:07:10.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:07:10.338" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210519 19:07:02.284" endtime="20210519 19:07:10.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:07:10.339" level="INFO">1000</msg>
<status status="PASS" starttime="20210519 19:07:10.338" endtime="20210519 19:07:10.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:07:10.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:07:10.339" endtime="20210519 19:07:10.340"/>
</kw>
<status status="PASS" starttime="20210519 19:07:02.283" endtime="20210519 19:07:10.341"/>
</kw>
<msg timestamp="20210519 19:07:10.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:07:02.282" endtime="20210519 19:07:10.341"/>
</kw>
<msg timestamp="20210519 19:07:10.341" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210519 19:07:02.281" endtime="20210519 19:07:10.341"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:07:10.342" endtime="20210519 19:07:10.342"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:07:10.347" level="INFO">Running command 'ozone sh bucket list o3:///00315-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:07:18.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:07:18.219" level="INFO">${output} = 00315-rpcwport</msg>
<status status="PASS" starttime="20210519 19:07:10.344" endtime="20210519 19:07:18.219"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:07:18.223" level="INFO">00315-rpcwport</msg>
<status status="PASS" starttime="20210519 19:07:18.221" endtime="20210519 19:07:18.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:07:18.224" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:07:18.223" endtime="20210519 19:07:18.224"/>
</kw>
<status status="PASS" starttime="20210519 19:07:10.344" endtime="20210519 19:07:18.225"/>
</kw>
<msg timestamp="20210519 19:07:18.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:07:10.343" endtime="20210519 19:07:18.225"/>
</kw>
<msg timestamp="20210519 19:07:18.225" level="INFO">${result} = 00315-rpcwport</msg>
<status status="PASS" starttime="20210519 19:07:10.342" endtime="20210519 19:07:18.225"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:07:18.226" endtime="20210519 19:07:18.226"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:07:18.232" level="INFO">Running command 'ozone sh key put o3:///00315-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:29.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:10:29.403" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:07:18.230" endtime="20210519 19:10:29.403"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:10:29.404" level="INFO"/>
<status status="PASS" starttime="20210519 19:10:29.404" endtime="20210519 19:10:29.404"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:10:29.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:10:29.405" endtime="20210519 19:10:29.405"/>
</kw>
<status status="PASS" starttime="20210519 19:07:18.229" endtime="20210519 19:10:29.406"/>
</kw>
<msg timestamp="20210519 19:10:29.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:07:18.229" endtime="20210519 19:10:29.406"/>
</kw>
<status status="PASS" starttime="20210519 19:07:18.228" endtime="20210519 19:10:29.406"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:29.410" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:29.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:10:29.412" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:10:29.408" endtime="20210519 19:10:29.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:10:29.414" level="INFO"/>
<status status="PASS" starttime="20210519 19:10:29.413" endtime="20210519 19:10:29.414"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:10:29.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:10:29.414" endtime="20210519 19:10:29.415"/>
</kw>
<status status="PASS" starttime="20210519 19:10:29.407" endtime="20210519 19:10:29.415"/>
</kw>
<msg timestamp="20210519 19:10:29.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:10:29.407" endtime="20210519 19:10:29.415"/>
</kw>
<status status="PASS" starttime="20210519 19:10:29.406" endtime="20210519 19:10:29.415"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:29.420" level="INFO">Running command 'ozone sh key get o3:///00315-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:36.816" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 19:10:29.417" endtime="20210519 19:10:36.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.817" endtime="20210519 19:10:36.817"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.817" endtime="20210519 19:10:36.817"/>
</kw>
<status status="FAIL" starttime="20210519 19:10:29.417" endtime="20210519 19:10:36.821"/>
</kw>
<msg timestamp="20210519 19:10:36.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 19:10:29.416" endtime="20210519 19:10:36.823"/>
</kw>
<status status="FAIL" starttime="20210519 19:10:29.416" endtime="20210519 19:10:36.825"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.826" endtime="20210519 19:10:36.827"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.828" endtime="20210519 19:10:36.828"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.828" endtime="20210519 19:10:36.829"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.829" endtime="20210519 19:10:36.829"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.831" endtime="20210519 19:10:36.831"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.831" endtime="20210519 19:10:36.832"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.833" endtime="20210519 19:10:36.833"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.834" endtime="20210519 19:10:36.834"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.835" endtime="20210519 19:10:36.835"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.836" endtime="20210519 19:10:36.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.837" endtime="20210519 19:10:36.837"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.837" endtime="20210519 19:10:36.839"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.840" endtime="20210519 19:10:36.841"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.841" endtime="20210519 19:10:36.841"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.842" endtime="20210519 19:10:36.843"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.844" endtime="20210519 19:10:36.845"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.845" endtime="20210519 19:10:36.845"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.846" endtime="20210519 19:10:36.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.846" endtime="20210519 19:10:36.846"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.847" endtime="20210519 19:10:36.848"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.849" endtime="20210519 19:10:36.849"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.850" endtime="20210519 19:10:36.850"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.850" endtime="20210519 19:10:36.852"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.852" endtime="20210519 19:10:36.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.852" endtime="20210519 19:10:36.852"/>
</kw>
<status status="FAIL" starttime="20210519 19:07:18.227" endtime="20210519 19:10:36.852"/>
</kw>
<status status="FAIL" starttime="20210519 19:07:18.226" endtime="20210519 19:10:36.852"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.853" endtime="20210519 19:10:36.854"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.854" endtime="20210519 19:10:36.854"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.855" endtime="20210519 19:10:36.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.856" endtime="20210519 19:10:36.857"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.858" endtime="20210519 19:10:36.858"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.859" endtime="20210519 19:10:36.860"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.860" endtime="20210519 19:10:36.860"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.861" endtime="20210519 19:10:36.861"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.861" endtime="20210519 19:10:36.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.862" endtime="20210519 19:10:36.862"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.863" endtime="20210519 19:10:36.863"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.864" endtime="20210519 19:10:36.865"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.865" endtime="20210519 19:10:36.866"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.866" endtime="20210519 19:10:36.867"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.867" endtime="20210519 19:10:36.868"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.868" endtime="20210519 19:10:36.869"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.869" endtime="20210519 19:10:36.870"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.871" endtime="20210519 19:10:36.871"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.871" endtime="20210519 19:10:36.872"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.873" endtime="20210519 19:10:36.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.873" endtime="20210519 19:10:36.874"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.875" endtime="20210519 19:10:36.875"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.876" endtime="20210519 19:10:36.876"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:10:36.877" endtime="20210519 19:10:36.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.890" endtime="20210519 19:10:36.892"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:10:36.893" endtime="20210519 19:10:36.893"/>
</kw>
<status status="FAIL" starttime="20210519 19:05:36.855" endtime="20210519 19:10:36.894"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210519 19:05:36.815" endtime="20210519 19:10:36.897">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:36.924" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:36.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:10:36.931" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 19:10:36.917" endtime="20210519 19:10:36.931"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:10:36.934" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 19:10:36.932" endtime="20210519 19:10:36.934"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:10:36.936" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:10:36.934" endtime="20210519 19:10:36.937"/>
</kw>
<status status="PASS" starttime="20210519 19:10:36.914" endtime="20210519 19:10:36.939"/>
</kw>
<msg timestamp="20210519 19:10:36.939" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:10:36.912" endtime="20210519 19:10:36.939"/>
</kw>
<msg timestamp="20210519 19:10:36.940" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 19:10:36.911" endtime="20210519 19:10:36.940"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 19:10:36.944" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 19:10:36.942" endtime="20210519 19:10:36.945"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:36.960" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:37.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:10:37.023" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:10:36.950" endtime="20210519 19:10:37.023"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:10:37.025" level="INFO"/>
<status status="PASS" starttime="20210519 19:10:37.024" endtime="20210519 19:10:37.026"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:10:37.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:10:37.026" endtime="20210519 19:10:37.027"/>
</kw>
<status status="PASS" starttime="20210519 19:10:36.947" endtime="20210519 19:10:37.028"/>
</kw>
<msg timestamp="20210519 19:10:37.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:10:36.947" endtime="20210519 19:10:37.028"/>
</kw>
<status status="PASS" starttime="20210519 19:10:36.946" endtime="20210519 19:10:37.028"/>
</kw>
<status status="PASS" starttime="20210519 19:10:36.945" endtime="20210519 19:10:37.028"/>
</kw>
<status status="PASS" starttime="20210519 19:10:36.909" endtime="20210519 19:10:37.029"/>
</kw>
<status status="PASS" starttime="20210519 19:10:36.906" endtime="20210519 19:10:37.029"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:37.064" level="INFO">Running command 'ozone sh volume info /00315-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:44.706" level="INFO">${rc} = 255</msg>
<msg timestamp="20210519 19:10:44.706" level="INFO">${output} = VOLUME_NOT_FOUND Volume 00315-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210519 19:10:37.039" endtime="20210519 19:10:44.706"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:10:44.708" level="INFO">VOLUME_NOT_FOUND Volume 00315-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210519 19:10:44.707" endtime="20210519 19:10:44.708"/>
</kw>
<msg timestamp="20210519 19:10:44.709" level="INFO">${result} = VOLUME_NOT_FOUND Volume 00315-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210519 19:10:37.036" endtime="20210519 19:10:44.709"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:10:44.709" endtime="20210519 19:10:44.710"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:44.716" level="INFO">Running command 'ozone sh volume create /00315-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:10:51.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:10:51.891" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:10:44.713" endtime="20210519 19:10:51.891"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:10:51.892" level="INFO"/>
<status status="PASS" starttime="20210519 19:10:51.891" endtime="20210519 19:10:51.892"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:10:51.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:10:51.893" endtime="20210519 19:10:51.893"/>
</kw>
<status status="PASS" starttime="20210519 19:10:44.713" endtime="20210519 19:10:51.894"/>
</kw>
<msg timestamp="20210519 19:10:51.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:10:44.712" endtime="20210519 19:10:51.894"/>
</kw>
<msg timestamp="20210519 19:10:51.894" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210519 19:10:44.711" endtime="20210519 19:10:51.894"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:10:51.894" endtime="20210519 19:10:51.895"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:10:51.901" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="00315-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:00.571" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:00.571" level="INFO">${output} = {
  "metadata": {},
  "name": "00315-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210519 19:10:51.897" endtime="20210519 19:11:00.571"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:00.572" level="INFO">{
  "metadata": {},
  "name": "00315-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T19:10:51.796Z",
  "modificationTime": "2021-05-19T19:10:51.796Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 19:11:00.572" endtime="20210519 19:11:00.573"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:00.573" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:00.573" endtime="20210519 19:11:00.574"/>
</kw>
<status status="PASS" starttime="20210519 19:10:51.896" endtime="20210519 19:11:00.574"/>
</kw>
<msg timestamp="20210519 19:11:00.574" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:10:51.896" endtime="20210519 19:11:00.574"/>
</kw>
<msg timestamp="20210519 19:11:00.575" level="INFO">${result} = {
  "metadata": {},
  "name": "00315-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210519 19:10:51.895" endtime="20210519 19:11:00.575"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:11:00.575" endtime="20210519 19:11:00.576"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:00.581" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="00315-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:09.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:09.534" level="INFO">${output} = {
  "metadata": {},
  "name": "00315-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210519 19:11:00.578" endtime="20210519 19:11:09.534"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:09.536" level="INFO">{
  "metadata": {},
  "name": "00315-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-19T19:10:51.796Z",
  "modificationTime": "2021-05-19T19:10:51.796Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210519 19:11:09.534" endtime="20210519 19:11:09.536"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:09.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:09.536" endtime="20210519 19:11:09.537"/>
</kw>
<status status="PASS" starttime="20210519 19:11:00.577" endtime="20210519 19:11:09.537"/>
</kw>
<msg timestamp="20210519 19:11:09.537" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:00.577" endtime="20210519 19:11:09.537"/>
</kw>
<msg timestamp="20210519 19:11:09.538" level="INFO">${result} = {
  "metadata": {},
  "name": "00315-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210519 19:11:00.576" endtime="20210519 19:11:09.538"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210519 19:11:09.538" endtime="20210519 19:11:09.538"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:09.543" level="INFO">Running command 'ozone sh volume setquota /00315-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:16.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:16.402" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:11:09.541" endtime="20210519 19:11:16.402"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:16.405" level="INFO"/>
<status status="PASS" starttime="20210519 19:11:16.403" endtime="20210519 19:11:16.405"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:16.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:16.405" endtime="20210519 19:11:16.406"/>
</kw>
<status status="PASS" starttime="20210519 19:11:09.540" endtime="20210519 19:11:16.407"/>
</kw>
<msg timestamp="20210519 19:11:16.407" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:09.540" endtime="20210519 19:11:16.408"/>
</kw>
<status status="PASS" starttime="20210519 19:11:09.539" endtime="20210519 19:11:16.408"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:16.416" level="INFO">Running command 'ozone sh volume info /00315-rpcwoscheme | jq -r '. | select(.name=="00315-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:23.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:23.850" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:11:16.413" endtime="20210519 19:11:23.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:23.852" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 19:11:23.851" endtime="20210519 19:11:23.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:23.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:23.852" endtime="20210519 19:11:23.853"/>
</kw>
<status status="PASS" starttime="20210519 19:11:16.412" endtime="20210519 19:11:23.853"/>
</kw>
<msg timestamp="20210519 19:11:23.854" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:16.411" endtime="20210519 19:11:23.854"/>
</kw>
<msg timestamp="20210519 19:11:23.855" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:11:16.409" endtime="20210519 19:11:23.855"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:11:23.856" endtime="20210519 19:11:23.856"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:23.866" level="INFO">Running command 'ozone sh bucket create /00315-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:28.866" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:28.866" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:11:23.862" endtime="20210519 19:11:28.866"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:28.868" level="INFO"/>
<status status="PASS" starttime="20210519 19:11:28.867" endtime="20210519 19:11:28.869"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:28.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:28.869" endtime="20210519 19:11:28.870"/>
</kw>
<status status="PASS" starttime="20210519 19:11:23.861" endtime="20210519 19:11:28.871"/>
</kw>
<msg timestamp="20210519 19:11:28.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:23.859" endtime="20210519 19:11:28.871"/>
</kw>
<status status="PASS" starttime="20210519 19:11:23.857" endtime="20210519 19:11:28.872"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:28.880" level="INFO">Running command 'ozone sh bucket info /00315-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:36.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:36.793" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210519 19:11:28.877" endtime="20210519 19:11:36.793"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:36.794" level="INFO">DISK</msg>
<status status="PASS" starttime="20210519 19:11:36.793" endtime="20210519 19:11:36.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:36.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:36.795" endtime="20210519 19:11:36.796"/>
</kw>
<status status="PASS" starttime="20210519 19:11:28.876" endtime="20210519 19:11:36.797"/>
</kw>
<msg timestamp="20210519 19:11:36.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:28.875" endtime="20210519 19:11:36.797"/>
</kw>
<msg timestamp="20210519 19:11:36.797" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210519 19:11:28.872" endtime="20210519 19:11:36.797"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:11:36.798" endtime="20210519 19:11:36.799"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:36.805" level="INFO">Running command 'ozone sh bucket info /00315-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:44.325" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:44.325" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:11:36.802" endtime="20210519 19:11:44.326"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:44.327" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210519 19:11:44.326" endtime="20210519 19:11:44.327"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:44.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:44.327" endtime="20210519 19:11:44.328"/>
</kw>
<status status="PASS" starttime="20210519 19:11:36.801" endtime="20210519 19:11:44.328"/>
</kw>
<msg timestamp="20210519 19:11:44.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:36.801" endtime="20210519 19:11:44.328"/>
</kw>
<msg timestamp="20210519 19:11:44.329" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210519 19:11:36.799" endtime="20210519 19:11:44.329"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:11:44.329" endtime="20210519 19:11:44.330"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:44.335" level="INFO">Running command 'ozone sh bucket info /00315-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:52.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:52.802" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210519 19:11:44.332" endtime="20210519 19:11:52.802"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:52.803" level="INFO">100</msg>
<status status="PASS" starttime="20210519 19:11:52.802" endtime="20210519 19:11:52.804"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:52.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:52.804" endtime="20210519 19:11:52.805"/>
</kw>
<status status="PASS" starttime="20210519 19:11:44.331" endtime="20210519 19:11:52.806"/>
</kw>
<msg timestamp="20210519 19:11:52.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:44.331" endtime="20210519 19:11:52.807"/>
</kw>
<msg timestamp="20210519 19:11:52.808" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210519 19:11:44.330" endtime="20210519 19:11:52.808"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:11:52.808" endtime="20210519 19:11:52.809"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:52.815" level="INFO">Running command 'ozone sh bucket setquota /00315-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:11:59.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:11:59.870" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:11:52.812" endtime="20210519 19:11:59.870"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:11:59.871" level="INFO"/>
<status status="PASS" starttime="20210519 19:11:59.870" endtime="20210519 19:11:59.871"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:11:59.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:11:59.871" endtime="20210519 19:11:59.872"/>
</kw>
<status status="PASS" starttime="20210519 19:11:52.811" endtime="20210519 19:11:59.872"/>
</kw>
<msg timestamp="20210519 19:11:59.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:52.810" endtime="20210519 19:11:59.873"/>
</kw>
<status status="PASS" starttime="20210519 19:11:52.809" endtime="20210519 19:11:59.873"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:11:59.877" level="INFO">Running command 'ozone sh bucket info /00315-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:12:05.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:12:05.412" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210519 19:11:59.875" endtime="20210519 19:12:05.412"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:12:05.413" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210519 19:12:05.412" endtime="20210519 19:12:05.413"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:12:05.415" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:12:05.414" endtime="20210519 19:12:05.415"/>
</kw>
<status status="PASS" starttime="20210519 19:11:59.875" endtime="20210519 19:12:05.415"/>
</kw>
<msg timestamp="20210519 19:12:05.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:11:59.874" endtime="20210519 19:12:05.415"/>
</kw>
<msg timestamp="20210519 19:12:05.416" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210519 19:11:59.873" endtime="20210519 19:12:05.416"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:12:05.416" endtime="20210519 19:12:05.417"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:12:05.421" level="INFO">Running command 'ozone sh bucket info /00315-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:12:11.052" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:12:11.052" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210519 19:12:05.419" endtime="20210519 19:12:11.052"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:12:11.054" level="INFO">1000</msg>
<status status="PASS" starttime="20210519 19:12:11.053" endtime="20210519 19:12:11.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:12:11.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:12:11.054" endtime="20210519 19:12:11.055"/>
</kw>
<status status="PASS" starttime="20210519 19:12:05.418" endtime="20210519 19:12:11.055"/>
</kw>
<msg timestamp="20210519 19:12:11.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:12:05.418" endtime="20210519 19:12:11.055"/>
</kw>
<msg timestamp="20210519 19:12:11.055" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210519 19:12:05.417" endtime="20210519 19:12:11.055"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:12:11.056" endtime="20210519 19:12:11.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:12:11.061" level="INFO">Running command 'ozone sh bucket list /00315-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:12:17.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:12:17.173" level="INFO">${output} = 00315-rpcwoscheme</msg>
<status status="PASS" starttime="20210519 19:12:11.059" endtime="20210519 19:12:17.173"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:12:17.175" level="INFO">00315-rpcwoscheme</msg>
<status status="PASS" starttime="20210519 19:12:17.174" endtime="20210519 19:12:17.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:12:17.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:12:17.175" endtime="20210519 19:12:17.176"/>
</kw>
<status status="PASS" starttime="20210519 19:12:11.058" endtime="20210519 19:12:17.176"/>
</kw>
<msg timestamp="20210519 19:12:17.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:12:11.058" endtime="20210519 19:12:17.176"/>
</kw>
<msg timestamp="20210519 19:12:17.177" level="INFO">${result} = 00315-rpcwoscheme</msg>
<status status="PASS" starttime="20210519 19:12:11.056" endtime="20210519 19:12:17.177"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210519 19:12:17.177" endtime="20210519 19:12:17.177"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:12:17.183" level="INFO">Running command 'ozone sh key put /00315-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:15:28.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:15:28.526" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:12:17.180" endtime="20210519 19:15:28.527"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:15:28.528" level="INFO"/>
<status status="PASS" starttime="20210519 19:15:28.527" endtime="20210519 19:15:28.528"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:15:28.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:15:28.528" endtime="20210519 19:15:28.529"/>
</kw>
<status status="PASS" starttime="20210519 19:12:17.180" endtime="20210519 19:15:28.530"/>
</kw>
<msg timestamp="20210519 19:15:28.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:12:17.180" endtime="20210519 19:15:28.530"/>
</kw>
<status status="PASS" starttime="20210519 19:12:17.179" endtime="20210519 19:15:28.530"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:15:28.538" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:15:28.541" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 19:15:28.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 19:15:28.534" endtime="20210519 19:15:28.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 19:15:28.542" level="INFO"/>
<status status="PASS" starttime="20210519 19:15:28.542" endtime="20210519 19:15:28.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 19:15:28.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 19:15:28.543" endtime="20210519 19:15:28.543"/>
</kw>
<status status="PASS" starttime="20210519 19:15:28.532" endtime="20210519 19:15:28.544"/>
</kw>
<msg timestamp="20210519 19:15:28.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 19:15:28.531" endtime="20210519 19:15:28.544"/>
</kw>
<status status="PASS" starttime="20210519 19:15:28.530" endtime="20210519 19:15:28.544"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 19:15:28.550" level="INFO">Running command 'ozone sh key get /00315-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 19:15:36.904" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210519 19:15:28.547" endtime="20210519 19:15:36.904"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.905" endtime="20210519 19:15:36.905"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.905" endtime="20210519 19:15:36.905"/>
</kw>
<status status="FAIL" starttime="20210519 19:15:28.546" endtime="20210519 19:15:36.906"/>
</kw>
<msg timestamp="20210519 19:15:36.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210519 19:15:28.545" endtime="20210519 19:15:36.907"/>
</kw>
<status status="FAIL" starttime="20210519 19:15:28.544" endtime="20210519 19:15:36.907"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.907" endtime="20210519 19:15:36.907"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.908" endtime="20210519 19:15:36.908"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.908" endtime="20210519 19:15:36.908"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.908" endtime="20210519 19:15:36.908"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.908" endtime="20210519 19:15:36.908"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.909" endtime="20210519 19:15:36.909"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.909" endtime="20210519 19:15:36.909"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.911" endtime="20210519 19:15:36.912"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.913" endtime="20210519 19:15:36.913"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.913" endtime="20210519 19:15:36.914"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.915" endtime="20210519 19:15:36.915"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.916" endtime="20210519 19:15:36.916"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.916" endtime="20210519 19:15:36.916"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.916" endtime="20210519 19:15:36.916"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.916" endtime="20210519 19:15:36.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.917" endtime="20210519 19:15:36.917"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.917" endtime="20210519 19:15:36.917"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.920" endtime="20210519 19:15:36.920"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.920" endtime="20210519 19:15:36.920"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.921" endtime="20210519 19:15:36.922"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.923" endtime="20210519 19:15:36.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.924" endtime="20210519 19:15:36.924"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.924" endtime="20210519 19:15:36.924"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.924" endtime="20210519 19:15:36.924"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.924" endtime="20210519 19:15:36.925"/>
</kw>
<status status="FAIL" starttime="20210519 19:12:17.178" endtime="20210519 19:15:36.925"/>
</kw>
<status status="FAIL" starttime="20210519 19:12:17.178" endtime="20210519 19:15:36.925"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.925" endtime="20210519 19:15:36.925"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.925" endtime="20210519 19:15:36.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.925" endtime="20210519 19:15:36.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.926" endtime="20210519 19:15:36.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.926" endtime="20210519 19:15:36.926"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.926" endtime="20210519 19:15:36.926"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.926" endtime="20210519 19:15:36.926"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.927" endtime="20210519 19:15:36.927"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.927" endtime="20210519 19:15:36.927"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.927" endtime="20210519 19:15:36.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.927" endtime="20210519 19:15:36.927"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.927" endtime="20210519 19:15:36.927"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.928" endtime="20210519 19:15:36.928"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.928" endtime="20210519 19:15:36.928"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.928" endtime="20210519 19:15:36.928"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.928" endtime="20210519 19:15:36.928"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.929" endtime="20210519 19:15:36.929"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.929" endtime="20210519 19:15:36.938"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.939" endtime="20210519 19:15:36.939"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.939" endtime="20210519 19:15:36.939"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.939" endtime="20210519 19:15:36.939"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.939" endtime="20210519 19:15:36.940"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.940" endtime="20210519 19:15:36.940"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210519 19:15:36.940" endtime="20210519 19:15:36.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.940" endtime="20210519 19:15:36.940"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210519 19:15:36.940" endtime="20210519 19:15:36.940"/>
</kw>
<status status="FAIL" starttime="20210519 19:10:37.029" endtime="20210519 19:15:36.941"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210519 19:10:36.901" endtime="20210519 19:15:36.941">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210519 18:50:41.177" endtime="20210519 19:15:36.951"/>
</suite>
<status status="FAIL" starttime="20210519 18:26:19.111" endtime="20210519 19:15:36.965"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:13.261" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:13.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:13.265" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210519 18:26:13.258" endtime="20210519 18:26:13.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:13.266" level="INFO">scm</msg>
<status status="PASS" starttime="20210519 18:26:13.265" endtime="20210519 18:26:13.266"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:13.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:13.266" endtime="20210519 18:26:13.267"/>
</kw>
<status status="PASS" starttime="20210519 18:26:13.257" endtime="20210519 18:26:13.268"/>
</kw>
<msg timestamp="20210519 18:26:13.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:13.257" endtime="20210519 18:26:13.268"/>
</kw>
<msg timestamp="20210519 18:26:13.268" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210519 18:26:13.256" endtime="20210519 18:26:13.268"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210519 18:26:13.269" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210519 18:26:13.268" endtime="20210519 18:26:13.269"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210519 18:26:13.274" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210519 18:26:13.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210519 18:26:13.282" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210519 18:26:13.272" endtime="20210519 18:26:13.282"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210519 18:26:13.284" level="INFO"/>
<status status="PASS" starttime="20210519 18:26:13.283" endtime="20210519 18:26:13.284"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210519 18:26:13.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210519 18:26:13.285" endtime="20210519 18:26:13.285"/>
</kw>
<status status="PASS" starttime="20210519 18:26:13.271" endtime="20210519 18:26:13.286"/>
</kw>
<msg timestamp="20210519 18:26:13.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210519 18:26:13.271" endtime="20210519 18:26:13.286"/>
</kw>
<status status="PASS" starttime="20210519 18:26:13.270" endtime="20210519 18:26:13.286"/>
</kw>
<status status="PASS" starttime="20210519 18:26:13.269" endtime="20210519 18:26:13.286"/>
</kw>
<status status="PASS" starttime="20210519 18:26:13.255" endtime="20210519 18:26:13.287"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210519 18:26:13.254" endtime="20210519 18:26:13.287"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210519 18:26:13.186" endtime="20210519 18:26:13.289"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2957957"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
