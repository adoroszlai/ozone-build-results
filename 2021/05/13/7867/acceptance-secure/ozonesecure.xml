<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.2 (Python 3.6.9 on linux)" generated="20210513 17:25:37.284" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure">
<suite id="s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic">
<suite id="s1-s1-s1" name="Basic" source="/opt/hadoop/smoketest/basic/basic.robot">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:59.123" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:59.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:59.126" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:36:59.119" endtime="20210513 16:36:59.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:59.128" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:36:59.127" endtime="20210513 16:36:59.128"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:59.129" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:59.128" endtime="20210513 16:36:59.129"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.119" endtime="20210513 16:36:59.129"/>
</kw>
<msg timestamp="20210513 16:36:59.130" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:59.118" endtime="20210513 16:36:59.130"/>
</kw>
<msg timestamp="20210513 16:36:59.130" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:36:59.118" endtime="20210513 16:36:59.130"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:59.135" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:59.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:59.143" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:36:59.133" endtime="20210513 16:36:59.143"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:59.144" level="INFO"/>
<status status="PASS" starttime="20210513 16:36:59.143" endtime="20210513 16:36:59.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:59.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:59.144" endtime="20210513 16:36:59.144"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.132" endtime="20210513 16:36:59.145"/>
</kw>
<msg timestamp="20210513 16:36:59.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:59.132" endtime="20210513 16:36:59.145"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.131" endtime="20210513 16:36:59.145"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.130" endtime="20210513 16:36:59.145"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.118" endtime="20210513 16:36:59.145"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.117" endtime="20210513 16:36:59.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>curl --negotiate -u : -s -I http://${SCM}:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:59.149" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:59.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:59.265" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210513 16:36:59.147" endtime="20210513 16:36:59.265"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:59.267" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 13 May 2021 16:36:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCuK4P4OcD5pmQxZPzZ923kLTPahTDZfsyQIUMHXiENBrlG/yzRUpc1UGS5jDRMfoqt9y11Yy+cN5VhypTu1l75K8p
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1620959819255&amp;s=1Hlon5tpBaPrVDyoam8aT4DUl1+ncD1fEmcLTfiWEeg="; Path=/; HttpOnly
Last-Modified: Thu, 13 May 2021 16:19:32 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" starttime="20210513 16:36:59.266" endtime="20210513 16:36:59.267"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:59.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:59.267" endtime="20210513 16:36:59.267"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.146" endtime="20210513 16:36:59.268"/>
</kw>
<msg timestamp="20210513 16:36:59.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:59.146" endtime="20210513 16:36:59.268"/>
</kw>
<msg timestamp="20210513 16:36:59.269" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" starttime="20210513 16:36:59.146" endtime="20210513 16:36:59.269"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>200</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:36:59.269" endtime="20210513 16:36:59.269"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 16:36:59.116" endtime="20210513 16:36:59.269"/>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:59.276" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:59.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:59.279" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:36:59.273" endtime="20210513 16:36:59.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:59.280" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:36:59.279" endtime="20210513 16:36:59.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:59.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:59.280" endtime="20210513 16:36:59.281"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.273" endtime="20210513 16:36:59.281"/>
</kw>
<msg timestamp="20210513 16:36:59.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:59.273" endtime="20210513 16:36:59.281"/>
</kw>
<msg timestamp="20210513 16:36:59.282" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:36:59.272" endtime="20210513 16:36:59.282"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:36:59.284" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:36:59.282" endtime="20210513 16:36:59.284"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:59.288" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:59.296" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:59.296" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:36:59.286" endtime="20210513 16:36:59.297"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:59.298" level="INFO"/>
<status status="PASS" starttime="20210513 16:36:59.297" endtime="20210513 16:36:59.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:59.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:59.298" endtime="20210513 16:36:59.299"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.285" endtime="20210513 16:36:59.299"/>
</kw>
<msg timestamp="20210513 16:36:59.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:59.285" endtime="20210513 16:36:59.299"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.284" endtime="20210513 16:36:59.299"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.284" endtime="20210513 16:36:59.299"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.272" endtime="20210513 16:36:59.300"/>
</kw>
<status status="PASS" starttime="20210513 16:36:59.271" endtime="20210513 16:36:59.300"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:59.304" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:41:59.272" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 16:36:59.302" endtime="20210513 16:41:59.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 16:41:59.272" endtime="20210513 16:41:59.272"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 16:41:59.273" endtime="20210513 16:41:59.273"/>
</kw>
<status status="FAIL" starttime="20210513 16:36:59.301" endtime="20210513 16:41:59.273"/>
</kw>
<msg timestamp="20210513 16:41:59.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 16:36:59.300" endtime="20210513 16:41:59.273"/>
</kw>
<status status="FAIL" starttime="20210513 16:36:59.300" endtime="20210513 16:41:59.274"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<status status="NOT RUN" starttime="20210513 16:41:59.274" endtime="20210513 16:41:59.274"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Status: Success</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 16:41:59.274" endtime="20210513 16:41:59.274"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210513 16:36:59.270" endtime="20210513 16:41:59.274">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" starttime="20210513 16:36:59.090" endtime="20210513 16:41:59.277"/>
</suite>
<suite id="s1-s1-s2" name="Getconf" source="/opt/hadoop/smoketest/basic/getconf.robot">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:41:59.288" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:02.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:02.091" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210513 16:41:59.285" endtime="20210513 16:42:02.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:02.092" level="INFO">om</msg>
<status status="PASS" starttime="20210513 16:42:02.091" endtime="20210513 16:42:02.092"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:02.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:02.092" endtime="20210513 16:42:02.093"/>
</kw>
<status status="PASS" starttime="20210513 16:41:59.284" endtime="20210513 16:42:02.093"/>
</kw>
<msg timestamp="20210513 16:42:02.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:41:59.284" endtime="20210513 16:42:02.093"/>
</kw>
<msg timestamp="20210513 16:42:02.094" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210513 16:41:59.283" endtime="20210513 16:42:02.094"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:02.094" endtime="20210513 16:42:02.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -ozonemanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:02.106" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:05.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:05.585" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210513 16:42:02.100" endtime="20210513 16:42:05.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:05.586" level="INFO">om</msg>
<status status="PASS" starttime="20210513 16:42:05.586" endtime="20210513 16:42:05.587"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:05.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:05.587" endtime="20210513 16:42:05.587"/>
</kw>
<status status="PASS" starttime="20210513 16:42:02.098" endtime="20210513 16:42:05.588"/>
</kw>
<msg timestamp="20210513 16:42:05.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:02.097" endtime="20210513 16:42:05.588"/>
</kw>
<msg timestamp="20210513 16:42:05.588" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210513 16:42:02.094" endtime="20210513 16:42:05.588"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:05.588" endtime="20210513 16:42:05.589"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 16:41:59.282" endtime="20210513 16:42:05.589"/>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:05.598" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:08.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:08.515" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:42:05.595" endtime="20210513 16:42:08.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:08.516" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:42:08.515" endtime="20210513 16:42:08.516"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:08.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:08.516" endtime="20210513 16:42:08.517"/>
</kw>
<status status="PASS" starttime="20210513 16:42:05.594" endtime="20210513 16:42:08.517"/>
</kw>
<msg timestamp="20210513 16:42:08.517" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:05.594" endtime="20210513 16:42:08.517"/>
</kw>
<msg timestamp="20210513 16:42:08.517" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210513 16:42:05.593" endtime="20210513 16:42:08.518"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:08.518" endtime="20210513 16:42:08.518"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -storagecontainermanagers</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:08.522" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:11.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:11.360" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:42:08.520" endtime="20210513 16:42:11.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:11.363" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:42:11.361" endtime="20210513 16:42:11.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:11.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:11.363" endtime="20210513 16:42:11.364"/>
</kw>
<status status="PASS" starttime="20210513 16:42:08.519" endtime="20210513 16:42:11.364"/>
</kw>
<msg timestamp="20210513 16:42:11.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:08.519" endtime="20210513 16:42:11.364"/>
</kw>
<msg timestamp="20210513 16:42:11.365" level="INFO">${result} = scm</msg>
<status status="PASS" starttime="20210513 16:42:08.518" endtime="20210513 16:42:11.365"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>scm</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:11.365" endtime="20210513 16:42:11.365"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 16:42:05.591" endtime="20210513 16:42:11.365"/>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:11.373" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:14.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:14.031" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210513 16:42:11.370" endtime="20210513 16:42:14.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:14.032" level="INFO">om</msg>
<status status="PASS" starttime="20210513 16:42:14.032" endtime="20210513 16:42:14.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:14.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:14.033" endtime="20210513 16:42:14.033"/>
</kw>
<status status="PASS" starttime="20210513 16:42:11.370" endtime="20210513 16:42:14.033"/>
</kw>
<msg timestamp="20210513 16:42:14.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:11.369" endtime="20210513 16:42:14.034"/>
</kw>
<msg timestamp="20210513 16:42:14.034" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210513 16:42:11.368" endtime="20210513 16:42:14.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:14.034" endtime="20210513 16:42:14.034"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:14.035" endtime="20210513 16:42:14.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey ozone.om.address</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:14.041" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:16.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:16.392" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210513 16:42:14.038" endtime="20210513 16:42:16.392"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:16.393" level="INFO">om</msg>
<status status="PASS" starttime="20210513 16:42:16.393" endtime="20210513 16:42:16.394"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:16.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:16.394" endtime="20210513 16:42:16.394"/>
</kw>
<status status="PASS" starttime="20210513 16:42:14.037" endtime="20210513 16:42:16.395"/>
</kw>
<msg timestamp="20210513 16:42:16.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:14.037" endtime="20210513 16:42:16.395"/>
</kw>
<msg timestamp="20210513 16:42:16.396" level="INFO">${result} = om</msg>
<status status="PASS" starttime="20210513 16:42:14.036" endtime="20210513 16:42:16.396"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>om</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:16.397" endtime="20210513 16:42:16.398"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>is missing</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:16.398" endtime="20210513 16:42:16.399"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 16:42:11.367" endtime="20210513 16:42:16.400"/>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:16.408" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:19.050" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:42:19.050" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210513 16:42:16.404" endtime="20210513 16:42:19.050"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:19.051" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210513 16:42:19.050" endtime="20210513 16:42:19.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:19.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:19.051" endtime="20210513 16:42:19.052"/>
</kw>
<msg timestamp="20210513 16:42:19.052" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210513 16:42:16.403" endtime="20210513 16:42:19.052"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:19.053" endtime="20210513 16:42:19.053"/>
</kw>
<kw name="Execute and checkrc" library="os">
<var>${result}</var>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:19.057" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:21.174" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:42:21.174" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210513 16:42:19.054" endtime="20210513 16:42:21.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:21.176" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210513 16:42:21.175" endtime="20210513 16:42:21.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:21.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:21.176" endtime="20210513 16:42:21.177"/>
</kw>
<msg timestamp="20210513 16:42:21.178" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" starttime="20210513 16:42:19.053" endtime="20210513 16:42:21.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:42:21.178" endtime="20210513 16:42:21.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 16:42:16.401" endtime="20210513 16:42:21.179"/>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" starttime="20210513 16:41:59.278" endtime="20210513 16:42:21.180"/>
</suite>
<suite id="s1-s1-s3" name="Links" source="/opt/hadoop/smoketest/basic/links.robot">
<kw name="Create volumes" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210513 16:42:21.199" level="INFO">${random} = 37828</msg>
<status status="PASS" starttime="20210513 16:42:21.199" endtime="20210513 16:42:21.199"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${source}</arg>
<arg>${random}-source</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:42:21.201" level="INFO">${source} = 37828-source</msg>
<status status="PASS" starttime="20210513 16:42:21.199" endtime="20210513 16:42:21.201"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${target}</arg>
<arg>${random}-target</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:42:21.204" level="INFO">${target} = 37828-target</msg>
<status status="PASS" starttime="20210513 16:42:21.202" endtime="20210513 16:42:21.204"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:21.208" level="INFO">Running command 'ozone sh volume create 37828-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:27.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:27.630" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:42:21.205" endtime="20210513 16:42:27.630"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:27.631" level="INFO"/>
<status status="PASS" starttime="20210513 16:42:27.630" endtime="20210513 16:42:27.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:27.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:27.631" endtime="20210513 16:42:27.632"/>
</kw>
<status status="PASS" starttime="20210513 16:42:21.205" endtime="20210513 16:42:27.632"/>
</kw>
<msg timestamp="20210513 16:42:27.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:21.204" endtime="20210513 16:42:27.632"/>
</kw>
<status status="PASS" starttime="20210513 16:42:21.204" endtime="20210513 16:42:27.632"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:27.637" level="INFO">Running command 'ozone sh volume create 37828-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:33.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:33.855" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:42:27.635" endtime="20210513 16:42:33.855"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:33.857" level="INFO"/>
<status status="PASS" starttime="20210513 16:42:33.856" endtime="20210513 16:42:33.858"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:33.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:33.858" endtime="20210513 16:42:33.859"/>
</kw>
<status status="PASS" starttime="20210513 16:42:27.634" endtime="20210513 16:42:33.860"/>
</kw>
<msg timestamp="20210513 16:42:33.860" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:27.634" endtime="20210513 16:42:33.860"/>
</kw>
<status status="PASS" starttime="20210513 16:42:27.633" endtime="20210513 16:42:33.861"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:33.870" level="INFO">Running command 'ozone sh bucket create 37828-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:42:40.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:42:40.319" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:42:33.867" endtime="20210513 16:42:40.319"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:42:40.321" level="INFO"/>
<status status="PASS" starttime="20210513 16:42:40.320" endtime="20210513 16:42:40.322"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:42:40.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:42:40.322" endtime="20210513 16:42:40.323"/>
</kw>
<status status="PASS" starttime="20210513 16:42:33.866" endtime="20210513 16:42:40.324"/>
</kw>
<msg timestamp="20210513 16:42:40.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:33.863" endtime="20210513 16:42:40.324"/>
</kw>
<status status="PASS" starttime="20210513 16:42:33.863" endtime="20210513 16:42:40.325"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:42:40.331" level="INFO">Running command 'ozone sh key put 37828-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:45:49.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:45:49.084" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:42:40.328" endtime="20210513 16:45:49.084"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:45:49.085" level="INFO"/>
<status status="PASS" starttime="20210513 16:45:49.084" endtime="20210513 16:45:49.085"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:45:49.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:45:49.085" endtime="20210513 16:45:49.085"/>
</kw>
<status status="PASS" starttime="20210513 16:42:40.327" endtime="20210513 16:45:49.086"/>
</kw>
<msg timestamp="20210513 16:45:49.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:42:40.326" endtime="20210513 16:45:49.086"/>
</kw>
<status status="PASS" starttime="20210513 16:42:40.325" endtime="20210513 16:45:49.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:45:49.090" level="INFO">Running command 'ozone sh bucket create 37828-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:45:54.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:45:54.882" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:45:49.088" endtime="20210513 16:45:54.882"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:45:54.883" level="INFO"/>
<status status="PASS" starttime="20210513 16:45:54.882" endtime="20210513 16:45:54.883"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:45:54.884" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:45:54.883" endtime="20210513 16:45:54.884"/>
</kw>
<status status="PASS" starttime="20210513 16:45:49.087" endtime="20210513 16:45:54.884"/>
</kw>
<msg timestamp="20210513 16:45:54.884" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:45:49.087" endtime="20210513 16:45:54.885"/>
</kw>
<status status="PASS" starttime="20210513 16:45:49.086" endtime="20210513 16:45:54.885"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:45:54.891" level="INFO">Running command 'ozone sh bucket link 37828-source/readable-bucket 37828-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:02.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:02.196" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:45:54.888" endtime="20210513 16:46:02.196"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:02.198" level="INFO"/>
<status status="PASS" starttime="20210513 16:46:02.197" endtime="20210513 16:46:02.199"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:02.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:02.199" endtime="20210513 16:46:02.200"/>
</kw>
<status status="PASS" starttime="20210513 16:45:54.887" endtime="20210513 16:46:02.200"/>
</kw>
<msg timestamp="20210513 16:46:02.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:45:54.886" endtime="20210513 16:46:02.200"/>
</kw>
<status status="PASS" starttime="20210513 16:45:54.885" endtime="20210513 16:46:02.200"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:02.206" level="INFO">Running command 'ozone sh bucket link 37828-source/readable-bucket 37828-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:07.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:07.235" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:46:02.202" endtime="20210513 16:46:07.235"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:07.236" level="INFO"/>
<status status="PASS" starttime="20210513 16:46:07.236" endtime="20210513 16:46:07.236"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:07.237" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:07.237" endtime="20210513 16:46:07.237"/>
</kw>
<status status="PASS" starttime="20210513 16:46:02.202" endtime="20210513 16:46:07.237"/>
</kw>
<msg timestamp="20210513 16:46:07.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:02.202" endtime="20210513 16:46:07.238"/>
</kw>
<status status="PASS" starttime="20210513 16:46:02.200" endtime="20210513 16:46:07.238"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:07.246" level="INFO">Running command 'ozone sh bucket link 37828-source/unreadable-bucket 37828-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:13.738" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:13.738" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:46:07.241" endtime="20210513 16:46:13.738"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:13.739" level="INFO"/>
<status status="PASS" starttime="20210513 16:46:13.739" endtime="20210513 16:46:13.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:13.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:13.740" endtime="20210513 16:46:13.740"/>
</kw>
<status status="PASS" starttime="20210513 16:46:07.240" endtime="20210513 16:46:13.740"/>
</kw>
<msg timestamp="20210513 16:46:13.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:07.239" endtime="20210513 16:46:13.741"/>
</kw>
<status status="PASS" starttime="20210513 16:46:07.238" endtime="20210513 16:46:13.741"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:13.747" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 37828-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:20.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:20.481" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:13.744" endtime="20210513 16:46:20.481"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:20.482" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:20.482" endtime="20210513 16:46:20.483"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:20.484" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:20.483" endtime="20210513 16:46:20.484"/>
</kw>
<status status="PASS" starttime="20210513 16:46:13.743" endtime="20210513 16:46:20.485"/>
</kw>
<msg timestamp="20210513 16:46:20.485" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:13.742" endtime="20210513 16:46:20.486"/>
</kw>
<status status="PASS" starttime="20210513 16:46:13.741" endtime="20210513 16:46:20.486"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:20.494" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 37828-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:25.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:25.174" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:20.490" endtime="20210513 16:46:25.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:25.176" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:25.175" endtime="20210513 16:46:25.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:25.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:25.176" endtime="20210513 16:46:25.176"/>
</kw>
<status status="PASS" starttime="20210513 16:46:20.489" endtime="20210513 16:46:25.177"/>
</kw>
<msg timestamp="20210513 16:46:25.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:20.488" endtime="20210513 16:46:25.177"/>
</kw>
<status status="PASS" starttime="20210513 16:46:20.487" endtime="20210513 16:46:25.177"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:25.181" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 37828-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:31.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:31.105" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:25.179" endtime="20210513 16:46:31.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:31.106" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:31.106" endtime="20210513 16:46:31.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:31.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:31.107" endtime="20210513 16:46:31.107"/>
</kw>
<status status="PASS" starttime="20210513 16:46:25.178" endtime="20210513 16:46:31.108"/>
</kw>
<msg timestamp="20210513 16:46:31.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:25.178" endtime="20210513 16:46:31.108"/>
</kw>
<status status="PASS" starttime="20210513 16:46:25.177" endtime="20210513 16:46:31.108"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/readable-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:31.112" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 37828-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:37.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:37.651" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:31.109" endtime="20210513 16:46:37.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:37.653" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:37.652" endtime="20210513 16:46:37.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:37.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:37.654" endtime="20210513 16:46:37.654"/>
</kw>
<status status="PASS" starttime="20210513 16:46:31.109" endtime="20210513 16:46:37.655"/>
</kw>
<msg timestamp="20210513 16:46:37.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:31.109" endtime="20210513 16:46:37.655"/>
</kw>
<status status="PASS" starttime="20210513 16:46:31.108" endtime="20210513 16:46:37.655"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:testuser2/${SCM}@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:37.659" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 37828-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:43.774" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:43.775" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:37.657" endtime="20210513 16:46:43.775"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:43.776" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:46:43.775" endtime="20210513 16:46:43.776"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:43.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:43.776" endtime="20210513 16:46:43.777"/>
</kw>
<status status="PASS" starttime="20210513 16:46:37.656" endtime="20210513 16:46:43.777"/>
</kw>
<msg timestamp="20210513 16:46:43.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:37.656" endtime="20210513 16:46:43.777"/>
</kw>
<status status="PASS" starttime="20210513 16:46:37.656" endtime="20210513 16:46:43.777"/>
</kw>
<status status="PASS" starttime="20210513 16:42:33.862" endtime="20210513 16:46:43.777"/>
</kw>
<status status="PASS" starttime="20210513 16:42:33.861" endtime="20210513 16:46:43.778"/>
</kw>
<status status="PASS" starttime="20210513 16:42:21.198" endtime="20210513 16:46:43.778"/>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:43.788" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:43.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:43.792" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:46:43.785" endtime="20210513 16:46:43.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:43.795" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:46:43.793" endtime="20210513 16:46:43.795"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:43.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:43.795" endtime="20210513 16:46:43.797"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.784" endtime="20210513 16:46:43.798"/>
</kw>
<msg timestamp="20210513 16:46:43.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:43.783" endtime="20210513 16:46:43.798"/>
</kw>
<msg timestamp="20210513 16:46:43.798" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:46:43.781" endtime="20210513 16:46:43.799"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:46:43.802" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:46:43.799" endtime="20210513 16:46:43.802"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:43.808" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:43.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:43.859" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:46:43.805" endtime="20210513 16:46:43.859"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:43.860" level="INFO"/>
<status status="PASS" starttime="20210513 16:46:43.859" endtime="20210513 16:46:43.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:43.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:43.860" endtime="20210513 16:46:43.861"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.804" endtime="20210513 16:46:43.861"/>
</kw>
<msg timestamp="20210513 16:46:43.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:43.804" endtime="20210513 16:46:43.862"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.803" endtime="20210513 16:46:43.862"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.802" endtime="20210513 16:46:43.862"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.780" endtime="20210513 16:46:43.862"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.779" endtime="20210513 16:46:43.862"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:43.866" level="INFO">Running command 'ozone sh bucket link 37828-source/no-such-bucket 37828-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:50.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:50.565" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:46:43.864" endtime="20210513 16:46:50.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:50.567" level="INFO"/>
<status status="PASS" starttime="20210513 16:46:50.566" endtime="20210513 16:46:50.567"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:50.568" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:50.567" endtime="20210513 16:46:50.568"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.863" endtime="20210513 16:46:50.568"/>
</kw>
<msg timestamp="20210513 16:46:50.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:43.863" endtime="20210513 16:46:50.568"/>
</kw>
<status status="PASS" starttime="20210513 16:46:43.862" endtime="20210513 16:46:50.568"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/dangling-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:50.572" level="INFO">Running command 'ozone sh key list 37828-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:56.636" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:46:56.636" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210513 16:46:50.569" endtime="20210513 16:46:56.636"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:56.638" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210513 16:46:56.637" endtime="20210513 16:46:56.638"/>
</kw>
<msg timestamp="20210513 16:46:56.638" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" starttime="20210513 16:46:50.569" endtime="20210513 16:46:56.638"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:46:56.638" endtime="20210513 16:46:56.639"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:46:43.778" endtime="20210513 16:46:56.640"/>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:56.648" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:56.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:56.652" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:46:56.645" endtime="20210513 16:46:56.652"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:56.653" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:46:56.652" endtime="20210513 16:46:56.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:56.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:56.653" endtime="20210513 16:46:56.654"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.644" endtime="20210513 16:46:56.654"/>
</kw>
<msg timestamp="20210513 16:46:56.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:56.644" endtime="20210513 16:46:56.655"/>
</kw>
<msg timestamp="20210513 16:46:56.655" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:46:56.643" endtime="20210513 16:46:56.655"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:46:56.656" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:46:56.655" endtime="20210513 16:46:56.656"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:56.661" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:46:56.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:46:56.669" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:46:56.659" endtime="20210513 16:46:56.669"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:46:56.671" level="INFO"/>
<status status="PASS" starttime="20210513 16:46:56.670" endtime="20210513 16:46:56.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:46:56.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:46:56.671" endtime="20210513 16:46:56.672"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.658" endtime="20210513 16:46:56.672"/>
</kw>
<msg timestamp="20210513 16:46:56.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:56.658" endtime="20210513 16:46:56.672"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.657" endtime="20210513 16:46:56.673"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.656" endtime="20210513 16:46:56.673"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.643" endtime="20210513 16:46:56.673"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.642" endtime="20210513 16:46:56.674"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:46:56.677" level="INFO">Running command 'ozone sh bucket link 37828-source/bucket1 37828-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:47:03.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:47:03.272" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:46:56.675" endtime="20210513 16:47:03.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:47:03.273" level="INFO"/>
<status status="PASS" starttime="20210513 16:47:03.272" endtime="20210513 16:47:03.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:47:03.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:47:03.273" endtime="20210513 16:47:03.274"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.675" endtime="20210513 16:47:03.274"/>
</kw>
<msg timestamp="20210513 16:47:03.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:46:56.674" endtime="20210513 16:47:03.275"/>
</kw>
<status status="PASS" starttime="20210513 16:46:56.674" endtime="20210513 16:47:03.275"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:47:03.280" level="INFO">Running command 'ozone sh bucket create 37828-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:47:09.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:47:09.408" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:47:03.277" endtime="20210513 16:47:09.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:47:09.409" level="INFO"/>
<status status="PASS" starttime="20210513 16:47:09.409" endtime="20210513 16:47:09.409"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:47:09.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:47:09.410" endtime="20210513 16:47:09.410"/>
</kw>
<status status="PASS" starttime="20210513 16:47:03.276" endtime="20210513 16:47:09.411"/>
</kw>
<msg timestamp="20210513 16:47:09.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:47:03.276" endtime="20210513 16:47:09.411"/>
</kw>
<status status="PASS" starttime="20210513 16:47:03.275" endtime="20210513 16:47:09.411"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:47:09.415" level="INFO">Running command 'ozone sh key put 37828-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:48:56.641" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 16:47:09.413" endtime="20210513 16:48:56.641"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 16:48:56.643" endtime="20210513 16:48:56.643"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 16:48:56.643" endtime="20210513 16:48:56.643"/>
</kw>
<status status="FAIL" starttime="20210513 16:47:09.412" endtime="20210513 16:48:56.644"/>
</kw>
<msg timestamp="20210513 16:48:56.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 16:47:09.412" endtime="20210513 16:48:56.644"/>
</kw>
<status status="FAIL" starttime="20210513 16:47:09.411" endtime="20210513 16:48:56.644"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
<status status="NOT RUN" starttime="20210513 16:48:56.644" endtime="20210513 16:48:56.644"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210513 16:46:56.640" endtime="20210513 16:48:56.645">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:48:56.652" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:48:56.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:48:56.656" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:48:56.649" endtime="20210513 16:48:56.656"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:48:56.657" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:48:56.656" endtime="20210513 16:48:56.657"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:48:56.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:48:56.657" endtime="20210513 16:48:56.658"/>
</kw>
<status status="PASS" starttime="20210513 16:48:56.649" endtime="20210513 16:48:56.658"/>
</kw>
<msg timestamp="20210513 16:48:56.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:48:56.649" endtime="20210513 16:48:56.658"/>
</kw>
<msg timestamp="20210513 16:48:56.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:48:56.648" endtime="20210513 16:48:56.658"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:48:56.660" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:48:56.659" endtime="20210513 16:48:56.660"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:48:56.666" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:48:56.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:48:56.675" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:48:56.663" endtime="20210513 16:48:56.675"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:48:56.677" level="INFO"/>
<status status="PASS" starttime="20210513 16:48:56.676" endtime="20210513 16:48:56.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:48:56.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:48:56.677" endtime="20210513 16:48:56.678"/>
</kw>
<status status="PASS" starttime="20210513 16:48:56.662" endtime="20210513 16:48:56.679"/>
</kw>
<msg timestamp="20210513 16:48:56.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:48:56.662" endtime="20210513 16:48:56.679"/>
</kw>
<status status="PASS" starttime="20210513 16:48:56.661" endtime="20210513 16:48:56.680"/>
</kw>
<status status="PASS" starttime="20210513 16:48:56.660" endtime="20210513 16:48:56.680"/>
</kw>
<status status="PASS" starttime="20210513 16:48:56.648" endtime="20210513 16:48:56.680"/>
</kw>
<status status="PASS" starttime="20210513 16:48:56.647" endtime="20210513 16:48:56.680"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:48:56.685" level="INFO">Running command 'ozone sh key put 37828-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:50:56.649" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 16:48:56.682" endtime="20210513 16:50:56.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 16:50:56.650" endtime="20210513 16:50:56.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 16:50:56.650" endtime="20210513 16:50:56.650"/>
</kw>
<status status="FAIL" starttime="20210513 16:48:56.682" endtime="20210513 16:50:56.651"/>
</kw>
<msg timestamp="20210513 16:50:56.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 16:48:56.681" endtime="20210513 16:50:56.651"/>
</kw>
<status status="FAIL" starttime="20210513 16:48:56.680" endtime="20210513 16:50:56.651"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
<status status="NOT RUN" starttime="20210513 16:50:56.651" endtime="20210513 16:50:56.651"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210513 16:48:56.646" endtime="20210513 16:50:56.652">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:50:56.659" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:50:56.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:50:56.661" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:50:56.656" endtime="20210513 16:50:56.661"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:50:56.662" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:50:56.662" endtime="20210513 16:50:56.662"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:50:56.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:50:56.662" endtime="20210513 16:50:56.663"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.655" endtime="20210513 16:50:56.664"/>
</kw>
<msg timestamp="20210513 16:50:56.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:50:56.655" endtime="20210513 16:50:56.664"/>
</kw>
<msg timestamp="20210513 16:50:56.665" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:50:56.654" endtime="20210513 16:50:56.665"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:50:56.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:50:56.665" endtime="20210513 16:50:56.666"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:50:56.671" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:50:56.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:50:56.682" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:50:56.669" endtime="20210513 16:50:56.682"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:50:56.685" level="INFO"/>
<status status="PASS" starttime="20210513 16:50:56.683" endtime="20210513 16:50:56.685"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:50:56.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:50:56.685" endtime="20210513 16:50:56.687"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.668" endtime="20210513 16:50:56.688"/>
</kw>
<msg timestamp="20210513 16:50:56.688" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:50:56.667" endtime="20210513 16:50:56.688"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.666" endtime="20210513 16:50:56.689"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.666" endtime="20210513 16:50:56.689"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.654" endtime="20210513 16:50:56.689"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.653" endtime="20210513 16:50:56.689"/>
</kw>
<kw name="Execute" library="os">
<var>${target_list}</var>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:50:56.694" level="INFO">Running command 'ozone sh key list 37828-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:03.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:03.670" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210513 16:50:56.691" endtime="20210513 16:51:03.670"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:03.671" level="INFO">key1</msg>
<status status="PASS" starttime="20210513 16:51:03.670" endtime="20210513 16:51:03.671"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:03.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:03.671" endtime="20210513 16:51:03.672"/>
</kw>
<status status="PASS" starttime="20210513 16:50:56.690" endtime="20210513 16:51:03.673"/>
</kw>
<msg timestamp="20210513 16:51:03.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:50:56.690" endtime="20210513 16:51:03.673"/>
</kw>
<msg timestamp="20210513 16:51:03.673" level="INFO">${target_list} = key1</msg>
<status status="PASS" starttime="20210513 16:50:56.689" endtime="20210513 16:51:03.673"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:03.677" level="INFO">Running command 'ozone sh key list 37828-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:10.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:10.203" level="INFO">${output} = key1</msg>
<status status="PASS" starttime="20210513 16:51:03.675" endtime="20210513 16:51:10.203"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:10.205" level="INFO">key1</msg>
<status status="PASS" starttime="20210513 16:51:10.204" endtime="20210513 16:51:10.205"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:10.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:10.205" endtime="20210513 16:51:10.206"/>
</kw>
<status status="PASS" starttime="20210513 16:51:03.674" endtime="20210513 16:51:10.207"/>
</kw>
<msg timestamp="20210513 16:51:10.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:03.674" endtime="20210513 16:51:10.207"/>
</kw>
<msg timestamp="20210513 16:51:10.207" level="INFO">${source_list} = key1</msg>
<status status="PASS" starttime="20210513 16:51:03.673" endtime="20210513 16:51:10.207"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${target_list}</arg>
<arg>${source_list}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:51:10.208" endtime="20210513 16:51:10.209"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:51:10.209" endtime="20210513 16:51:10.210"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20210513 16:51:10.211" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" starttime="20210513 16:51:10.210" endtime="20210513 16:51:10.211"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210513 16:50:56.652" endtime="20210513 16:51:10.212">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:10.219" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:10.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:10.223" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:51:10.217" endtime="20210513 16:51:10.223"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:10.227" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:51:10.224" endtime="20210513 16:51:10.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:10.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:10.227" endtime="20210513 16:51:10.228"/>
</kw>
<status status="PASS" starttime="20210513 16:51:10.216" endtime="20210513 16:51:10.228"/>
</kw>
<msg timestamp="20210513 16:51:10.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:10.216" endtime="20210513 16:51:10.229"/>
</kw>
<msg timestamp="20210513 16:51:10.229" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:51:10.215" endtime="20210513 16:51:10.229"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:51:10.230" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:51:10.229" endtime="20210513 16:51:10.230"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:10.236" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:10.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:10.245" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:51:10.233" endtime="20210513 16:51:10.245"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:10.246" level="INFO"/>
<status status="PASS" starttime="20210513 16:51:10.245" endtime="20210513 16:51:10.246"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:10.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:10.247" endtime="20210513 16:51:10.247"/>
</kw>
<status status="PASS" starttime="20210513 16:51:10.232" endtime="20210513 16:51:10.248"/>
</kw>
<msg timestamp="20210513 16:51:10.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:10.231" endtime="20210513 16:51:10.248"/>
</kw>
<status status="PASS" starttime="20210513 16:51:10.230" endtime="20210513 16:51:10.248"/>
</kw>
<status status="PASS" starttime="20210513 16:51:10.230" endtime="20210513 16:51:10.249"/>
</kw>
<status status="PASS" starttime="20210513 16:51:10.215" endtime="20210513 16:51:10.249"/>
</kw>
<status status="PASS" starttime="20210513 16:51:10.214" endtime="20210513 16:51:10.249"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${target}/link1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:10.255" level="INFO">Running command 'ozone sh key delete 37828-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:17.265" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:51:17.266" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210513 16:51:10.252" endtime="20210513 16:51:17.266"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:17.270" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" starttime="20210513 16:51:17.267" endtime="20210513 16:51:17.271"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:17.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210513 16:51:17.277" level="FAIL">255 != 0</msg>
<status status="FAIL" starttime="20210513 16:51:17.272" endtime="20210513 16:51:17.277"/>
</kw>
<status status="FAIL" starttime="20210513 16:51:10.251" endtime="20210513 16:51:17.278"/>
</kw>
<msg timestamp="20210513 16:51:17.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 16:51:10.250" endtime="20210513 16:51:17.278"/>
</kw>
<status status="FAIL" starttime="20210513 16:51:10.249" endtime="20210513 16:51:17.278"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210513 16:51:17.279" endtime="20210513 16:51:17.279"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key2</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 16:51:17.280" endtime="20210513 16:51:17.281"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210513 16:51:10.213" endtime="20210513 16:51:17.281">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:17.288" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:17.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:17.295" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:51:17.285" endtime="20210513 16:51:17.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:17.298" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:51:17.296" endtime="20210513 16:51:17.298"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:17.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:17.298" endtime="20210513 16:51:17.300"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.285" endtime="20210513 16:51:17.301"/>
</kw>
<msg timestamp="20210513 16:51:17.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:17.285" endtime="20210513 16:51:17.302"/>
</kw>
<msg timestamp="20210513 16:51:17.303" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:51:17.284" endtime="20210513 16:51:17.303"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:51:17.306" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:51:17.304" endtime="20210513 16:51:17.306"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:17.321" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:17.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:17.333" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:51:17.316" endtime="20210513 16:51:17.333"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:17.336" level="INFO"/>
<status status="PASS" starttime="20210513 16:51:17.334" endtime="20210513 16:51:17.336"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:17.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:17.336" endtime="20210513 16:51:17.338"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.314" endtime="20210513 16:51:17.339"/>
</kw>
<msg timestamp="20210513 16:51:17.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:17.311" endtime="20210513 16:51:17.340"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.309" endtime="20210513 16:51:17.340"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.307" endtime="20210513 16:51:17.340"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.284" endtime="20210513 16:51:17.341"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.283" endtime="20210513 16:51:17.341"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:17.351" level="INFO">Running command 'ozone sh bucket list 37828-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:24.848" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:24.849" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210513 16:51:17.345" endtime="20210513 16:51:24.849"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:24.850" level="INFO">{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:50.336Z",
  "modificationTime" : "2021-05-13T16:46:50.336Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:13.505Z",
  "modificationTime" : "2021-05-13T16:46:43.675Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:47:03.058Z",
  "modificationTime" : "2021-05-13T16:47:03.058Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:01.922Z",
  "modificationTime" : "2021-05-13T16:46:37.424Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:06.928Z",
  "modificationTime" : "2021-05-13T16:46:06.928Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210513 16:51:24.849" endtime="20210513 16:51:24.850"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:24.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:24.850" endtime="20210513 16:51:24.851"/>
</kw>
<status status="PASS" starttime="20210513 16:51:17.344" endtime="20210513 16:51:24.852"/>
</kw>
<msg timestamp="20210513 16:51:24.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:17.343" endtime="20210513 16:51:24.852"/>
</kw>
<msg timestamp="20210513 16:51:24.852" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" starttime="20210513 16:51:17.342" endtime="20210513 16:51:24.852"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:51:24.852" endtime="20210513 16:51:24.853"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>dangling-link</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:51:24.853" endtime="20210513 16:51:24.853"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:51:17.282" endtime="20210513 16:51:24.854"/>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:24.861" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:24.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:24.865" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:51:24.858" endtime="20210513 16:51:24.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:24.866" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:51:24.865" endtime="20210513 16:51:24.866"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:24.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:24.866" endtime="20210513 16:51:24.867"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.857" endtime="20210513 16:51:24.867"/>
</kw>
<msg timestamp="20210513 16:51:24.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:24.857" endtime="20210513 16:51:24.868"/>
</kw>
<msg timestamp="20210513 16:51:24.868" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:51:24.857" endtime="20210513 16:51:24.868"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:51:24.869" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:51:24.868" endtime="20210513 16:51:24.869"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:24.874" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:24.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:24.883" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:51:24.872" endtime="20210513 16:51:24.883"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:24.885" level="INFO"/>
<status status="PASS" starttime="20210513 16:51:24.884" endtime="20210513 16:51:24.885"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:24.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:24.885" endtime="20210513 16:51:24.886"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.871" endtime="20210513 16:51:24.886"/>
</kw>
<msg timestamp="20210513 16:51:24.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:24.870" endtime="20210513 16:51:24.886"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.870" endtime="20210513 16:51:24.886"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.869" endtime="20210513 16:51:24.887"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.856" endtime="20210513 16:51:24.887"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.856" endtime="20210513 16:51:24.887"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:24.891" level="INFO">Running command 'ozone sh bucket info 37828-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:32.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:32.020" level="INFO">${output} = 37828-source bucket1</msg>
<status status="PASS" starttime="20210513 16:51:24.889" endtime="20210513 16:51:32.020"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:32.023" level="INFO">37828-source bucket1</msg>
<status status="PASS" starttime="20210513 16:51:32.021" endtime="20210513 16:51:32.023"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:32.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:32.024" endtime="20210513 16:51:32.025"/>
</kw>
<status status="PASS" starttime="20210513 16:51:24.888" endtime="20210513 16:51:32.026"/>
</kw>
<msg timestamp="20210513 16:51:32.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:24.888" endtime="20210513 16:51:32.027"/>
</kw>
<msg timestamp="20210513 16:51:32.027" level="INFO">${result} = 37828-source bucket1</msg>
<status status="PASS" starttime="20210513 16:51:24.887" endtime="20210513 16:51:32.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${source} bucket1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:51:32.028" endtime="20210513 16:51:32.029"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:51:24.855" endtime="20210513 16:51:32.029"/>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:32.041" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:32.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:32.046" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:51:32.039" endtime="20210513 16:51:32.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:32.048" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:51:32.047" endtime="20210513 16:51:32.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:32.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:32.048" endtime="20210513 16:51:32.049"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.038" endtime="20210513 16:51:32.050"/>
</kw>
<msg timestamp="20210513 16:51:32.050" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:32.037" endtime="20210513 16:51:32.050"/>
</kw>
<msg timestamp="20210513 16:51:32.050" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:51:32.036" endtime="20210513 16:51:32.051"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:51:32.052" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:51:32.051" endtime="20210513 16:51:32.052"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:32.058" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:32.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:32.067" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:51:32.055" endtime="20210513 16:51:32.067"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:32.069" level="INFO"/>
<status status="PASS" starttime="20210513 16:51:32.068" endtime="20210513 16:51:32.069"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:32.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:32.069" endtime="20210513 16:51:32.070"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.054" endtime="20210513 16:51:32.070"/>
</kw>
<msg timestamp="20210513 16:51:32.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:32.054" endtime="20210513 16:51:32.071"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.053" endtime="20210513 16:51:32.071"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.052" endtime="20210513 16:51:32.071"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.035" endtime="20210513 16:51:32.071"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.034" endtime="20210513 16:51:32.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:32.076" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 37828-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:38.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:38.586" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:51:32.074" endtime="20210513 16:51:38.587"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:38.588" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:51:38.587" endtime="20210513 16:51:38.588"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:38.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:38.588" endtime="20210513 16:51:38.589"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.073" endtime="20210513 16:51:38.589"/>
</kw>
<msg timestamp="20210513 16:51:38.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:32.073" endtime="20210513 16:51:38.589"/>
</kw>
<status status="PASS" starttime="20210513 16:51:32.072" endtime="20210513 16:51:38.589"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:38.595" level="INFO">Running command 'ozone sh bucket getacl 37828-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:45.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:45.662" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210513 16:51:38.592" endtime="20210513 16:51:45.662"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:45.664" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210513 16:51:45.663" endtime="20210513 16:51:45.664"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:45.666" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:45.665" endtime="20210513 16:51:45.666"/>
</kw>
<status status="PASS" starttime="20210513 16:51:38.592" endtime="20210513 16:51:45.667"/>
</kw>
<msg timestamp="20210513 16:51:45.667" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:38.591" endtime="20210513 16:51:45.667"/>
</kw>
<msg timestamp="20210513 16:51:45.668" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" starttime="20210513 16:51:38.590" endtime="20210513 16:51:45.668"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:51:45.668" endtime="20210513 16:51:45.669"/>
</kw>
<status status="PASS" starttime="20210513 16:51:38.590" endtime="20210513 16:51:45.669"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:45.681" level="INFO">Running command 'ozone sh bucket getacl 37828-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:52.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:52.231" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:51:45.677" endtime="20210513 16:51:52.231"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:52.233" level="INFO"/>
<status status="PASS" starttime="20210513 16:51:52.232" endtime="20210513 16:51:52.233"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:52.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:52.233" endtime="20210513 16:51:52.234"/>
</kw>
<status status="PASS" starttime="20210513 16:51:45.674" endtime="20210513 16:51:52.235"/>
</kw>
<msg timestamp="20210513 16:51:52.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:45.674" endtime="20210513 16:51:52.235"/>
</kw>
<msg timestamp="20210513 16:51:52.235" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210513 16:51:45.672" endtime="20210513 16:51:52.235"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:51:52.236" endtime="20210513 16:51:52.237"/>
</kw>
<status status="PASS" starttime="20210513 16:51:45.669" endtime="20210513 16:51:52.237"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:52.245" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 37828-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:51:59.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:51:59.068" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:51:52.242" endtime="20210513 16:51:59.068"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:51:59.070" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 16:51:59.069" endtime="20210513 16:51:59.071"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:51:59.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:51:59.071" endtime="20210513 16:51:59.072"/>
</kw>
<status status="PASS" starttime="20210513 16:51:52.239" endtime="20210513 16:51:59.073"/>
</kw>
<msg timestamp="20210513 16:51:59.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:52.238" endtime="20210513 16:51:59.073"/>
</kw>
<status status="PASS" starttime="20210513 16:51:52.237" endtime="20210513 16:51:59.074"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:51:59.084" level="INFO">Running command 'ozone sh bucket getacl 37828-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:07.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:07.651" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:51:59.080" endtime="20210513 16:52:07.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:07.653" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:07.652" endtime="20210513 16:52:07.653"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:07.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:07.653" endtime="20210513 16:52:07.654"/>
</kw>
<status status="PASS" starttime="20210513 16:51:59.079" endtime="20210513 16:52:07.654"/>
</kw>
<msg timestamp="20210513 16:52:07.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:51:59.079" endtime="20210513 16:52:07.655"/>
</kw>
<msg timestamp="20210513 16:52:07.655" level="INFO">${actual_acls} = </msg>
<status status="PASS" starttime="20210513 16:51:59.077" endtime="20210513 16:52:07.655"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:52:07.655" endtime="20210513 16:52:07.656"/>
</kw>
<status status="PASS" starttime="20210513 16:51:59.074" endtime="20210513 16:52:07.656"/>
</kw>
<kw name="Verify ACL" library="shell">
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
<kw name="Execute" library="os">
<var>${actual_acls}</var>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:07.664" level="INFO">Running command 'ozone sh bucket getacl 37828-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:14.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:14.584" level="INFO">${output} = READ</msg>
<status status="PASS" starttime="20210513 16:52:07.660" endtime="20210513 16:52:14.585"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:14.586" level="INFO">READ</msg>
<status status="PASS" starttime="20210513 16:52:14.585" endtime="20210513 16:52:14.586"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:14.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:14.586" endtime="20210513 16:52:14.587"/>
</kw>
<status status="PASS" starttime="20210513 16:52:07.659" endtime="20210513 16:52:14.587"/>
</kw>
<msg timestamp="20210513 16:52:14.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:07.659" endtime="20210513 16:52:14.588"/>
</kw>
<msg timestamp="20210513 16:52:14.588" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" starttime="20210513 16:52:07.657" endtime="20210513 16:52:14.588"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:52:14.589" endtime="20210513 16:52:14.589"/>
</kw>
<status status="PASS" starttime="20210513 16:52:07.656" endtime="20210513 16:52:14.590"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:51:32.033" endtime="20210513 16:52:14.590"/>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:14.600" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:14.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:14.602" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:14.596" endtime="20210513 16:52:14.602"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:14.604" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:14.603" endtime="20210513 16:52:14.604"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:14.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:14.605" endtime="20210513 16:52:14.605"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.596" endtime="20210513 16:52:14.606"/>
</kw>
<msg timestamp="20210513 16:52:14.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:14.595" endtime="20210513 16:52:14.606"/>
</kw>
<msg timestamp="20210513 16:52:14.607" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:14.595" endtime="20210513 16:52:14.607"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:14.608" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:14.607" endtime="20210513 16:52:14.608"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:14.615" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:14.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:14.648" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:14.611" endtime="20210513 16:52:14.648"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:14.650" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:14.649" endtime="20210513 16:52:14.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:14.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:14.650" endtime="20210513 16:52:14.651"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.610" endtime="20210513 16:52:14.651"/>
</kw>
<msg timestamp="20210513 16:52:14.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:14.610" endtime="20210513 16:52:14.651"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.609" endtime="20210513 16:52:14.651"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.608" endtime="20210513 16:52:14.651"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.594" endtime="20210513 16:52:14.652"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.592" endtime="20210513 16:52:14.652"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:14.656" level="INFO">Running command 'ozone sh bucket link 37828-source/bucket2 37828-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:18.713" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:18.713" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:14.654" endtime="20210513 16:52:18.713"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:18.715" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:18.714" endtime="20210513 16:52:18.715"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:18.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:18.715" endtime="20210513 16:52:18.716"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.653" endtime="20210513 16:52:18.717"/>
</kw>
<msg timestamp="20210513 16:52:18.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:14.653" endtime="20210513 16:52:18.717"/>
</kw>
<status status="PASS" starttime="20210513 16:52:14.652" endtime="20210513 16:52:18.717"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket create ${target}/link2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:18.721" level="INFO">Running command 'ozone sh bucket create 37828-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:24.994" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:52:24.994" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210513 16:52:18.718" endtime="20210513 16:52:24.994"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:24.995" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210513 16:52:24.994" endtime="20210513 16:52:24.995"/>
</kw>
<msg timestamp="20210513 16:52:24.996" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210513 16:52:18.717" endtime="20210513 16:52:24.996"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:52:24.996" endtime="20210513 16:52:24.996"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${target}/bucket3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:25.001" level="INFO">Running command 'ozone sh bucket create 37828-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:31.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:31.079" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:24.998" endtime="20210513 16:52:31.079"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:31.081" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:31.080" endtime="20210513 16:52:31.082"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:31.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:31.082" endtime="20210513 16:52:31.083"/>
</kw>
<status status="PASS" starttime="20210513 16:52:24.998" endtime="20210513 16:52:31.083"/>
</kw>
<msg timestamp="20210513 16:52:31.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:24.997" endtime="20210513 16:52:31.084"/>
</kw>
<status status="PASS" starttime="20210513 16:52:24.996" endtime="20210513 16:52:31.084"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:31.088" level="INFO">Running command 'ozone sh bucket link 37828-source/bucket1 37828-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:37.126" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:52:37.126" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210513 16:52:31.085" endtime="20210513 16:52:37.126"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:37.127" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210513 16:52:37.126" endtime="20210513 16:52:37.127"/>
</kw>
<msg timestamp="20210513 16:52:37.128" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" starttime="20210513 16:52:31.084" endtime="20210513 16:52:37.128"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:52:37.128" endtime="20210513 16:52:37.129"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:52:14.591" endtime="20210513 16:52:37.129"/>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:37.137" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:37.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:37.141" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:37.134" endtime="20210513 16:52:37.141"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:37.142" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:37.141" endtime="20210513 16:52:37.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:37.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:37.143" endtime="20210513 16:52:37.144"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.134" endtime="20210513 16:52:37.144"/>
</kw>
<msg timestamp="20210513 16:52:37.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:37.133" endtime="20210513 16:52:37.144"/>
</kw>
<msg timestamp="20210513 16:52:37.145" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:37.133" endtime="20210513 16:52:37.145"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:37.145" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:37.145" endtime="20210513 16:52:37.146"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:37.151" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:37.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:37.159" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:37.148" endtime="20210513 16:52:37.160"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:37.161" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:37.160" endtime="20210513 16:52:37.161"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:37.162" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:37.161" endtime="20210513 16:52:37.162"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.148" endtime="20210513 16:52:37.163"/>
</kw>
<msg timestamp="20210513 16:52:37.163" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:37.147" endtime="20210513 16:52:37.163"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.146" endtime="20210513 16:52:37.164"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.146" endtime="20210513 16:52:37.164"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.132" endtime="20210513 16:52:37.164"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.131" endtime="20210513 16:52:37.164"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:37.170" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:37.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:37.174" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:37.167" endtime="20210513 16:52:37.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:37.176" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:37.175" endtime="20210513 16:52:37.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:37.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:37.177" endtime="20210513 16:52:37.178"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.167" endtime="20210513 16:52:37.179"/>
</kw>
<msg timestamp="20210513 16:52:37.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:37.166" endtime="20210513 16:52:37.179"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.165" endtime="20210513 16:52:37.179"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:37.185" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:37.188" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:37.188" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:37.182" endtime="20210513 16:52:37.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:37.190" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:37.189" endtime="20210513 16:52:37.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:37.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:37.190" endtime="20210513 16:52:37.191"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.181" endtime="20210513 16:52:37.191"/>
</kw>
<msg timestamp="20210513 16:52:37.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:37.181" endtime="20210513 16:52:37.192"/>
</kw>
<msg timestamp="20210513 16:52:37.192" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:37.180" endtime="20210513 16:52:37.192"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:37.193" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:37.192" endtime="20210513 16:52:37.194"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:37.199" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:37.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:37.208" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:37.196" endtime="20210513 16:52:37.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:37.210" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:37.209" endtime="20210513 16:52:37.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:37.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:37.210" endtime="20210513 16:52:37.211"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.196" endtime="20210513 16:52:37.212"/>
</kw>
<msg timestamp="20210513 16:52:37.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:37.195" endtime="20210513 16:52:37.212"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.194" endtime="20210513 16:52:37.212"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.194" endtime="20210513 16:52:37.212"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.180" endtime="20210513 16:52:37.213"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.179" endtime="20210513 16:52:37.213"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/readable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:37.216" level="INFO">Running command 'ozone sh key list 37828-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:44.115" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:44.115" level="INFO">${output} = {
  "volumeName" : "37828-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-05-13T16:42:45.717Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210513 16:52:37.214" endtime="20210513 16:52:44.115"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:44.117" level="INFO">{
  "volumeName" : "37828-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-05-13T16:42:45.717Z",
  "modificationTime" : "2021-05-13T16:45:48.293Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" starttime="20210513 16:52:44.116" endtime="20210513 16:52:44.117"/>
</kw>
<msg timestamp="20210513 16:52:44.117" level="INFO">${result} = {
  "volumeName" : "37828-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-05-13T16:42:45.717Z",
  "modificationTime" : "2...</msg>
<status status="PASS" starttime="20210513 16:52:37.213" endtime="20210513 16:52:44.117"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:52:44.117" endtime="20210513 16:52:44.118"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.165" endtime="20210513 16:52:44.118"/>
</kw>
<status status="PASS" starttime="20210513 16:52:37.164" endtime="20210513 16:52:44.118"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:52:37.130" endtime="20210513 16:52:44.118"/>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:44.126" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:44.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:44.129" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:44.123" endtime="20210513 16:52:44.129"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:44.130" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:44.130" endtime="20210513 16:52:44.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:44.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:44.131" endtime="20210513 16:52:44.132"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.122" endtime="20210513 16:52:44.133"/>
</kw>
<msg timestamp="20210513 16:52:44.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:44.122" endtime="20210513 16:52:44.133"/>
</kw>
<msg timestamp="20210513 16:52:44.133" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:44.122" endtime="20210513 16:52:44.133"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:44.134" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:44.134" endtime="20210513 16:52:44.134"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:44.140" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:44.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:44.148" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:44.137" endtime="20210513 16:52:44.148"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:44.149" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:44.148" endtime="20210513 16:52:44.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:44.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:44.149" endtime="20210513 16:52:44.150"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.137" endtime="20210513 16:52:44.150"/>
</kw>
<msg timestamp="20210513 16:52:44.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:44.136" endtime="20210513 16:52:44.151"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.135" endtime="20210513 16:52:44.151"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.134" endtime="20210513 16:52:44.151"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.121" endtime="20210513 16:52:44.151"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.120" endtime="20210513 16:52:44.151"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:44.157" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:44.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:44.161" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:44.154" endtime="20210513 16:52:44.161"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:44.162" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:44.162" endtime="20210513 16:52:44.163"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:44.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:44.163" endtime="20210513 16:52:44.163"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.154" endtime="20210513 16:52:44.164"/>
</kw>
<msg timestamp="20210513 16:52:44.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:44.153" endtime="20210513 16:52:44.164"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.153" endtime="20210513 16:52:44.164"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:44.169" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:44.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:44.174" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:44.167" endtime="20210513 16:52:44.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:44.176" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:44.175" endtime="20210513 16:52:44.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:44.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:44.176" endtime="20210513 16:52:44.179"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.166" endtime="20210513 16:52:44.179"/>
</kw>
<msg timestamp="20210513 16:52:44.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:44.166" endtime="20210513 16:52:44.179"/>
</kw>
<msg timestamp="20210513 16:52:44.180" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:44.165" endtime="20210513 16:52:44.180"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:44.181" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:44.180" endtime="20210513 16:52:44.181"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:44.186" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:44.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:44.195" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:44.184" endtime="20210513 16:52:44.195"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:44.197" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:44.196" endtime="20210513 16:52:44.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:44.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:44.197" endtime="20210513 16:52:44.198"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.183" endtime="20210513 16:52:44.198"/>
</kw>
<msg timestamp="20210513 16:52:44.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:44.182" endtime="20210513 16:52:44.198"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.182" endtime="20210513 16:52:44.199"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.181" endtime="20210513 16:52:44.199"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.165" endtime="20210513 16:52:44.199"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.164" endtime="20210513 16:52:44.199"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/unreadable-link</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:44.203" level="INFO">Running command 'ozone sh key list 37828-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:50.949" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:52:50.949" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 37828-target unreadable-link null</msg>
<status status="PASS" starttime="20210513 16:52:44.200" endtime="20210513 16:52:50.949"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:50.951" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 37828-target unreadable-link null</msg>
<status status="PASS" starttime="20210513 16:52:50.950" endtime="20210513 16:52:50.951"/>
</kw>
<msg timestamp="20210513 16:52:50.951" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 37828-target unreadable-link null</msg>
<status status="PASS" starttime="20210513 16:52:44.199" endtime="20210513 16:52:50.951"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:52:50.951" endtime="20210513 16:52:50.952"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.152" endtime="20210513 16:52:50.952"/>
</kw>
<status status="PASS" starttime="20210513 16:52:44.152" endtime="20210513 16:52:50.952"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:52:44.119" endtime="20210513 16:52:50.952"/>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:50.961" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:50.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:50.965" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:50.958" endtime="20210513 16:52:50.965"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:50.967" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:50.966" endtime="20210513 16:52:50.967"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:50.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:50.967" endtime="20210513 16:52:50.968"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.957" endtime="20210513 16:52:50.968"/>
</kw>
<msg timestamp="20210513 16:52:50.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:50.957" endtime="20210513 16:52:50.969"/>
</kw>
<msg timestamp="20210513 16:52:50.969" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:50.956" endtime="20210513 16:52:50.969"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:50.970" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:50.969" endtime="20210513 16:52:50.970"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:50.977" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:50.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:50.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:50.974" endtime="20210513 16:52:50.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:50.987" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:50.986" endtime="20210513 16:52:50.987"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:50.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:50.988" endtime="20210513 16:52:50.988"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.973" endtime="20210513 16:52:50.989"/>
</kw>
<msg timestamp="20210513 16:52:50.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:50.972" endtime="20210513 16:52:50.989"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.971" endtime="20210513 16:52:50.989"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.970" endtime="20210513 16:52:50.989"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.955" endtime="20210513 16:52:50.990"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.955" endtime="20210513 16:52:50.990"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arg>kdestroy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:50.996" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:51.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:51.000" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:50.993" endtime="20210513 16:52:51.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:51.002" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:51.001" endtime="20210513 16:52:51.002"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:51.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:51.002" endtime="20210513 16:52:51.003"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.992" endtime="20210513 16:52:51.003"/>
</kw>
<msg timestamp="20210513 16:52:51.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:50.992" endtime="20210513 16:52:51.004"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.991" endtime="20210513 16:52:51.004"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:51.009" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:51.012" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:51.012" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:52:51.007" endtime="20210513 16:52:51.012"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:51.014" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:52:51.013" endtime="20210513 16:52:51.014"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:51.015" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:51.014" endtime="20210513 16:52:51.015"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.006" endtime="20210513 16:52:51.016"/>
</kw>
<msg timestamp="20210513 16:52:51.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:51.006" endtime="20210513 16:52:51.016"/>
</kw>
<msg timestamp="20210513 16:52:51.016" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:52:51.005" endtime="20210513 16:52:51.016"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:52:51.017" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:52:51.017" endtime="20210513 16:52:51.017"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:51.023" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:51.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:51.033" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:52:51.021" endtime="20210513 16:52:51.033"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:51.034" level="INFO"/>
<status status="PASS" starttime="20210513 16:52:51.034" endtime="20210513 16:52:51.034"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:51.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:51.035" endtime="20210513 16:52:51.035"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.020" endtime="20210513 16:52:51.035"/>
</kw>
<msg timestamp="20210513 16:52:51.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:51.019" endtime="20210513 16:52:51.036"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.018" endtime="20210513 16:52:51.036"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.018" endtime="20210513 16:52:51.036"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.005" endtime="20210513 16:52:51.036"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.004" endtime="20210513 16:52:51.036"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:51.040" level="INFO">Running command 'ozone sh bucket info 37828-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:52:57.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:52:57.515" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210513 16:52:51.038" endtime="20210513 16:52:57.515"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:52:57.517" level="INFO">{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:13.505Z",
  "modificationTime" : "2021-05-13T16:46:43.675Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210513 16:52:57.516" endtime="20210513 16:52:57.517"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:52:57.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:52:57.518" endtime="20210513 16:52:57.519"/>
</kw>
<status status="PASS" starttime="20210513 16:52:51.037" endtime="20210513 16:52:57.520"/>
</kw>
<msg timestamp="20210513 16:52:57.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:52:51.037" endtime="20210513 16:52:57.520"/>
</kw>
<msg timestamp="20210513 16:52:57.521" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" starttime="20210513 16:52:51.036" endtime="20210513 16:52:57.521"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:52:57.521" endtime="20210513 16:52:57.522"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:52:57.522" endtime="20210513 16:52:57.523"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:52:57.528" level="INFO">Running command 'ozone sh key list 37828-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:03.732" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:53:03.732" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 37828-source unreadable-bucket </msg>
<status status="PASS" starttime="20210513 16:52:57.525" endtime="20210513 16:53:03.732"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:03.735" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 37828-source unreadable-bucket </msg>
<status status="PASS" starttime="20210513 16:53:03.733" endtime="20210513 16:53:03.735"/>
</kw>
<msg timestamp="20210513 16:53:03.736" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 37828-source unreadable-bucket </msg>
<status status="PASS" starttime="20210513 16:52:57.523" endtime="20210513 16:53:03.736"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:53:03.736" endtime="20210513 16:53:03.738"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.991" endtime="20210513 16:53:03.738"/>
</kw>
<status status="PASS" starttime="20210513 16:52:50.990" endtime="20210513 16:53:03.738"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:52:50.953" endtime="20210513 16:53:03.739"/>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:03.750" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:03.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:03.754" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:53:03.747" endtime="20210513 16:53:03.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:03.756" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:53:03.755" endtime="20210513 16:53:03.757"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:03.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:03.757" endtime="20210513 16:53:03.758"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.747" endtime="20210513 16:53:03.759"/>
</kw>
<msg timestamp="20210513 16:53:03.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:03.746" endtime="20210513 16:53:03.759"/>
</kw>
<msg timestamp="20210513 16:53:03.759" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:53:03.746" endtime="20210513 16:53:03.759"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:53:03.761" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:53:03.760" endtime="20210513 16:53:03.761"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:03.769" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:03.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:03.780" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:53:03.766" endtime="20210513 16:53:03.780"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:03.782" level="INFO"/>
<status status="PASS" starttime="20210513 16:53:03.780" endtime="20210513 16:53:03.782"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:03.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:03.782" endtime="20210513 16:53:03.783"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.765" endtime="20210513 16:53:03.784"/>
</kw>
<msg timestamp="20210513 16:53:03.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:03.763" endtime="20210513 16:53:03.785"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.762" endtime="20210513 16:53:03.785"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.761" endtime="20210513 16:53:03.785"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.744" endtime="20210513 16:53:03.785"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.743" endtime="20210513 16:53:03.785"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:03.792" level="INFO">Running command 'ozone sh bucket link 37828-target/loop1 37828-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:09.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:09.140" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:53:03.789" endtime="20210513 16:53:09.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:09.141" level="INFO"/>
<status status="PASS" starttime="20210513 16:53:09.140" endtime="20210513 16:53:09.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:09.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:09.141" endtime="20210513 16:53:09.142"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.788" endtime="20210513 16:53:09.142"/>
</kw>
<msg timestamp="20210513 16:53:09.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:03.787" endtime="20210513 16:53:09.142"/>
</kw>
<status status="PASS" starttime="20210513 16:53:03.786" endtime="20210513 16:53:09.143"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:09.147" level="INFO">Running command 'ozone sh bucket link 37828-target/loop2 37828-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:15.166" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:15.166" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:53:09.144" endtime="20210513 16:53:15.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:15.167" level="INFO"/>
<status status="PASS" starttime="20210513 16:53:15.166" endtime="20210513 16:53:15.167"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:15.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:15.167" endtime="20210513 16:53:15.168"/>
</kw>
<status status="PASS" starttime="20210513 16:53:09.144" endtime="20210513 16:53:15.168"/>
</kw>
<msg timestamp="20210513 16:53:15.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:09.144" endtime="20210513 16:53:15.168"/>
</kw>
<status status="PASS" starttime="20210513 16:53:09.143" endtime="20210513 16:53:15.169"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:15.173" level="INFO">Running command 'ozone sh bucket link 37828-target/loop3 37828-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:20.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:20.941" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:53:15.171" endtime="20210513 16:53:20.941"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:20.943" level="INFO"/>
<status status="PASS" starttime="20210513 16:53:20.942" endtime="20210513 16:53:20.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:20.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:20.944" endtime="20210513 16:53:20.945"/>
</kw>
<status status="PASS" starttime="20210513 16:53:15.170" endtime="20210513 16:53:20.946"/>
</kw>
<msg timestamp="20210513 16:53:20.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:15.170" endtime="20210513 16:53:20.946"/>
</kw>
<status status="PASS" starttime="20210513 16:53:15.169" endtime="20210513 16:53:20.947"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key list ${target}/loop2</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:20.952" level="INFO">Running command 'ozone sh key list 37828-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:25.846" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:53:25.846" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210513 16:53:20.949" endtime="20210513 16:53:25.846"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:25.847" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210513 16:53:25.846" endtime="20210513 16:53:25.850"/>
</kw>
<msg timestamp="20210513 16:53:25.851" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" starttime="20210513 16:53:20.947" endtime="20210513 16:53:25.851"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:53:25.851" endtime="20210513 16:53:25.851"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:53:03.740" endtime="20210513 16:53:25.852"/>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:25.858" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:25.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:25.861" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:53:25.856" endtime="20210513 16:53:25.861"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:25.862" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:53:25.861" endtime="20210513 16:53:25.862"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:25.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:25.862" endtime="20210513 16:53:25.863"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.856" endtime="20210513 16:53:25.863"/>
</kw>
<msg timestamp="20210513 16:53:25.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:25.855" endtime="20210513 16:53:25.863"/>
</kw>
<msg timestamp="20210513 16:53:25.864" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:53:25.855" endtime="20210513 16:53:25.864"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:53:25.864" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:53:25.864" endtime="20210513 16:53:25.865"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:25.869" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:25.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:25.876" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:53:25.866" endtime="20210513 16:53:25.876"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:25.877" level="INFO"/>
<status status="PASS" starttime="20210513 16:53:25.876" endtime="20210513 16:53:25.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:25.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:25.877" endtime="20210513 16:53:25.878"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.866" endtime="20210513 16:53:25.878"/>
</kw>
<msg timestamp="20210513 16:53:25.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:25.866" endtime="20210513 16:53:25.878"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.865" endtime="20210513 16:53:25.878"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.865" endtime="20210513 16:53:25.879"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.854" endtime="20210513 16:53:25.879"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.853" endtime="20210513 16:53:25.879"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:25.883" level="INFO">Running command 'ozone sh bucket link 37828-source/bucket1 37828-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:53:32.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:53:32.361" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:53:25.881" endtime="20210513 16:53:32.361"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:53:32.363" level="INFO"/>
<status status="PASS" starttime="20210513 16:53:32.361" endtime="20210513 16:53:32.363"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:53:32.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:53:32.363" endtime="20210513 16:53:32.364"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.880" endtime="20210513 16:53:32.364"/>
</kw>
<msg timestamp="20210513 16:53:32.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:53:25.880" endtime="20210513 16:53:32.364"/>
</kw>
<status status="PASS" starttime="20210513 16:53:25.879" endtime="20210513 16:53:32.365"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:53:32.370" level="INFO">Running command 'ozone sh key put 37828-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:25.853" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 16:53:32.366" endtime="20210513 16:55:25.853"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 16:55:25.854" endtime="20210513 16:55:25.854"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 16:55:25.854" endtime="20210513 16:55:25.854"/>
</kw>
<status status="FAIL" starttime="20210513 16:53:32.366" endtime="20210513 16:55:25.855"/>
</kw>
<msg timestamp="20210513 16:55:25.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 16:53:32.365" endtime="20210513 16:55:25.855"/>
</kw>
<status status="FAIL" starttime="20210513 16:53:32.365" endtime="20210513 16:55:25.855"/>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
<status status="NOT RUN" starttime="20210513 16:55:25.855" endtime="20210513 16:55:25.855"/>
</kw>
<timeout value="2 minutes"/>
<status status="FAIL" starttime="20210513 16:53:25.852" endtime="20210513 16:55:25.856">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:25.862" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:25.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:55:25.865" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:55:25.860" endtime="20210513 16:55:25.865"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:25.867" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:55:25.866" endtime="20210513 16:55:25.868"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:55:25.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:55:25.868" endtime="20210513 16:55:25.869"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.859" endtime="20210513 16:55:25.869"/>
</kw>
<msg timestamp="20210513 16:55:25.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:25.859" endtime="20210513 16:55:25.870"/>
</kw>
<msg timestamp="20210513 16:55:25.870" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:55:25.859" endtime="20210513 16:55:25.871"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:55:25.872" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:55:25.871" endtime="20210513 16:55:25.872"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:25.878" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:25.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:55:25.887" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:55:25.876" endtime="20210513 16:55:25.887"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:25.888" level="INFO"/>
<status status="PASS" starttime="20210513 16:55:25.887" endtime="20210513 16:55:25.888"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:55:25.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:55:25.888" endtime="20210513 16:55:25.889"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.875" endtime="20210513 16:55:25.889"/>
</kw>
<msg timestamp="20210513 16:55:25.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:25.874" endtime="20210513 16:55:25.889"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.873" endtime="20210513 16:55:25.889"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.872" endtime="20210513 16:55:25.889"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.858" endtime="20210513 16:55:25.889"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.858" endtime="20210513 16:55:25.890"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${target}/link1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:25.894" level="INFO">Running command 'ozone sh bucket delete 37828-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:32.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:55:32.093" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:55:25.892" endtime="20210513 16:55:32.093"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:32.101" level="INFO"/>
<status status="PASS" starttime="20210513 16:55:32.100" endtime="20210513 16:55:32.101"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:55:32.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:55:32.101" endtime="20210513 16:55:32.102"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.891" endtime="20210513 16:55:32.107"/>
</kw>
<msg timestamp="20210513 16:55:32.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:25.890" endtime="20210513 16:55:32.107"/>
</kw>
<status status="PASS" starttime="20210513 16:55:25.890" endtime="20210513 16:55:32.107"/>
</kw>
<kw name="Execute" library="os">
<var>${bucket_list}</var>
<arg>ozone sh bucket list ${target}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:32.115" level="INFO">Running command 'ozone sh bucket list 37828-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:39.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:55:39.053" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T...</msg>
<status status="PASS" starttime="20210513 16:55:32.109" endtime="20210513 16:55:39.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:39.055" level="INFO">{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:52:30.993Z",
  "modificationTime" : "2021-05-13T16:52:30.993Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:50.336Z",
  "modificationTime" : "2021-05-13T16:46:50.336Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:13.505Z",
  "modificationTime" : "2021-05-13T16:46:43.675Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:52:18.561Z",
  "modificationTime" : "2021-05-13T16:52:18.561Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:53:32.109Z",
  "modificationTime" : "2021-05-13T16:53:32.109Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:53:20.835Z",
  "modificationTime" : "2021-05-13T16:53:20.835Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:53:09.071Z",
  "modificationTime" : "2021-05-13T16:53:09.071Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:53:14.941Z",
  "modificationTime" : "2021-05-13T16:53:14.941Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:01.922Z",
  "modificationTime" : "2021-05-13T16:46:37.424Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T16:46:06.928Z",
  "modificationTime" : "2021-05-13T16:46:06.928Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37828-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210513 16:55:39.054" endtime="20210513 16:55:39.056"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:55:39.056" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:55:39.056" endtime="20210513 16:55:39.057"/>
</kw>
<status status="PASS" starttime="20210513 16:55:32.108" endtime="20210513 16:55:39.057"/>
</kw>
<msg timestamp="20210513 16:55:39.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:32.108" endtime="20210513 16:55:39.057"/>
</kw>
<msg timestamp="20210513 16:55:39.057" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "37828-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-13T...</msg>
<status status="PASS" starttime="20210513 16:55:32.107" endtime="20210513 16:55:39.057"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${bucket_list}</arg>
<arg>link1</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:55:39.058" endtime="20210513 16:55:39.058"/>
</kw>
<kw name="Execute" library="os">
<var>${source_list}</var>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:39.062" level="INFO">Running command 'ozone sh key list 37828-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:46.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:55:46.539" level="INFO">${output} = key1
key2</msg>
<status status="PASS" starttime="20210513 16:55:39.060" endtime="20210513 16:55:46.539"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:46.540" level="INFO">key1
key2</msg>
<status status="PASS" starttime="20210513 16:55:46.539" endtime="20210513 16:55:46.540"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:55:46.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:55:46.540" endtime="20210513 16:55:46.541"/>
</kw>
<status status="PASS" starttime="20210513 16:55:39.059" endtime="20210513 16:55:46.541"/>
</kw>
<msg timestamp="20210513 16:55:46.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:39.059" endtime="20210513 16:55:46.541"/>
</kw>
<msg timestamp="20210513 16:55:46.542" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" starttime="20210513 16:55:39.058" endtime="20210513 16:55:46.542"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${source_list}</arg>
<arg>key1</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:55:46.542" endtime="20210513 16:55:46.542"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:55:25.857" endtime="20210513 16:55:46.543"/>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" starttime="20210513 16:42:21.184" endtime="20210513 16:55:46.545"/>
</suite>
<suite id="s1-s1-s4" name="Ozone-Shell-Single" source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210513 16:55:46.588" level="INFO">${random} = 96102</msg>
<status status="PASS" starttime="20210513 16:55:46.588" endtime="20210513 16:55:46.588"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:55:46.589" level="INFO">${prefix} = 96102</msg>
<status status="PASS" starttime="20210513 16:55:46.589" endtime="20210513 16:55:46.589"/>
</kw>
<status status="PASS" starttime="20210513 16:55:46.587" endtime="20210513 16:55:46.590"/>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:46.597" level="INFO">Running command 'ozone sh volume info /96102-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:52.527" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 16:55:52.528" level="INFO">${output} = VOLUME_NOT_FOUND Volume 96102-rpcbasic is not found</msg>
<status status="PASS" starttime="20210513 16:55:46.594" endtime="20210513 16:55:52.528"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:52.529" level="INFO">VOLUME_NOT_FOUND Volume 96102-rpcbasic is not found</msg>
<status status="PASS" starttime="20210513 16:55:52.528" endtime="20210513 16:55:52.529"/>
</kw>
<msg timestamp="20210513 16:55:52.530" level="INFO">${result} = VOLUME_NOT_FOUND Volume 96102-rpcbasic is not found</msg>
<status status="PASS" starttime="20210513 16:55:46.593" endtime="20210513 16:55:52.530"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:55:52.530" endtime="20210513 16:55:52.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:52.535" level="INFO">Running command 'ozone sh volume create /96102-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:55:58.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:55:58.649" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:55:52.532" endtime="20210513 16:55:58.649"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:55:58.650" level="INFO"/>
<status status="PASS" starttime="20210513 16:55:58.649" endtime="20210513 16:55:58.650"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:55:58.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:55:58.650" endtime="20210513 16:55:58.651"/>
</kw>
<status status="PASS" starttime="20210513 16:55:52.532" endtime="20210513 16:55:58.651"/>
</kw>
<msg timestamp="20210513 16:55:58.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:52.531" endtime="20210513 16:55:58.652"/>
</kw>
<msg timestamp="20210513 16:55:58.652" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210513 16:55:52.530" endtime="20210513 16:55:58.652"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:55:58.652" endtime="20210513 16:55:58.653"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:55:58.657" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="96102-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:05.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:05.388" level="INFO">${output} = {
  "metadata": {},
  "name": "96102-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 16:55:58.655" endtime="20210513 16:56:05.388"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:05.390" level="INFO">{
  "metadata": {},
  "name": "96102-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T16:55:58.451Z",
  "modificationTime": "2021-05-13T16:55:58.451Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 16:56:05.389" endtime="20210513 16:56:05.390"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:05.391" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:05.390" endtime="20210513 16:56:05.391"/>
</kw>
<status status="PASS" starttime="20210513 16:55:58.654" endtime="20210513 16:56:05.391"/>
</kw>
<msg timestamp="20210513 16:56:05.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:55:58.654" endtime="20210513 16:56:05.391"/>
</kw>
<msg timestamp="20210513 16:56:05.392" level="INFO">${result} = {
  "metadata": {},
  "name": "96102-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 16:55:58.653" endtime="20210513 16:56:05.392"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:56:05.392" endtime="20210513 16:56:05.392"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:05.397" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="96102-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:12.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:12.434" level="INFO">${output} = {
  "metadata": {},
  "name": "96102-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 16:56:05.394" endtime="20210513 16:56:12.434"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:12.437" level="INFO">{
  "metadata": {},
  "name": "96102-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T16:55:58.451Z",
  "modificationTime": "2021-05-13T16:55:58.451Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 16:56:12.435" endtime="20210513 16:56:12.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:12.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:12.438" endtime="20210513 16:56:12.439"/>
</kw>
<status status="PASS" starttime="20210513 16:56:05.394" endtime="20210513 16:56:12.440"/>
</kw>
<msg timestamp="20210513 16:56:12.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:05.393" endtime="20210513 16:56:12.440"/>
</kw>
<msg timestamp="20210513 16:56:12.441" level="INFO">${result} = {
  "metadata": {},
  "name": "96102-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 16:56:05.392" endtime="20210513 16:56:12.441"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 16:56:12.441" endtime="20210513 16:56:12.442"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:12.449" level="INFO">Running command 'ozone sh volume setquota /96102-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:18.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:18.658" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:56:12.446" endtime="20210513 16:56:18.658"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:18.659" level="INFO"/>
<status status="PASS" starttime="20210513 16:56:18.659" endtime="20210513 16:56:18.660"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:18.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:18.660" endtime="20210513 16:56:18.660"/>
</kw>
<status status="PASS" starttime="20210513 16:56:12.445" endtime="20210513 16:56:18.661"/>
</kw>
<msg timestamp="20210513 16:56:18.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:12.444" endtime="20210513 16:56:18.661"/>
</kw>
<status status="PASS" starttime="20210513 16:56:12.443" endtime="20210513 16:56:18.661"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:18.667" level="INFO">Running command 'ozone sh volume info /96102-rpcbasic | jq -r '. | select(.name=="96102-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:25.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:25.751" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 16:56:18.664" endtime="20210513 16:56:25.751"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:25.752" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 16:56:25.751" endtime="20210513 16:56:25.752"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:25.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:25.752" endtime="20210513 16:56:25.753"/>
</kw>
<status status="PASS" starttime="20210513 16:56:18.662" endtime="20210513 16:56:25.753"/>
</kw>
<msg timestamp="20210513 16:56:25.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:18.662" endtime="20210513 16:56:25.754"/>
</kw>
<msg timestamp="20210513 16:56:25.754" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 16:56:18.661" endtime="20210513 16:56:25.754"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:56:25.755" endtime="20210513 16:56:25.756"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:25.769" level="INFO">Running command 'ozone sh bucket create /96102-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:31.279" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:31.279" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:56:25.763" endtime="20210513 16:56:31.279"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:31.280" level="INFO"/>
<status status="PASS" starttime="20210513 16:56:31.279" endtime="20210513 16:56:31.280"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:31.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:31.280" endtime="20210513 16:56:31.281"/>
</kw>
<status status="PASS" starttime="20210513 16:56:25.758" endtime="20210513 16:56:31.281"/>
</kw>
<msg timestamp="20210513 16:56:31.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:25.757" endtime="20210513 16:56:31.281"/>
</kw>
<status status="PASS" starttime="20210513 16:56:25.756" endtime="20210513 16:56:31.282"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:31.286" level="INFO">Running command 'ozone sh bucket info /96102-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:36.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:36.478" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210513 16:56:31.283" endtime="20210513 16:56:36.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:36.480" level="INFO">DISK</msg>
<status status="PASS" starttime="20210513 16:56:36.479" endtime="20210513 16:56:36.480"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:36.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:36.480" endtime="20210513 16:56:36.481"/>
</kw>
<status status="PASS" starttime="20210513 16:56:31.283" endtime="20210513 16:56:36.481"/>
</kw>
<msg timestamp="20210513 16:56:36.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:31.283" endtime="20210513 16:56:36.482"/>
</kw>
<msg timestamp="20210513 16:56:36.482" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210513 16:56:31.282" endtime="20210513 16:56:36.482"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:56:36.482" endtime="20210513 16:56:36.483"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:36.489" level="INFO">Running command 'ozone sh bucket info /96102-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:44.216" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:44.217" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 16:56:36.486" endtime="20210513 16:56:44.217"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:44.219" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 16:56:44.218" endtime="20210513 16:56:44.219"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:44.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:44.220" endtime="20210513 16:56:44.221"/>
</kw>
<status status="PASS" starttime="20210513 16:56:36.485" endtime="20210513 16:56:44.222"/>
</kw>
<msg timestamp="20210513 16:56:44.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:36.485" endtime="20210513 16:56:44.223"/>
</kw>
<msg timestamp="20210513 16:56:44.223" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 16:56:36.483" endtime="20210513 16:56:44.223"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:56:44.224" endtime="20210513 16:56:44.224"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:44.230" level="INFO">Running command 'ozone sh bucket info /96102-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:51.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:51.273" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210513 16:56:44.227" endtime="20210513 16:56:51.273"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:51.275" level="INFO">100</msg>
<status status="PASS" starttime="20210513 16:56:51.274" endtime="20210513 16:56:51.275"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:51.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:51.275" endtime="20210513 16:56:51.276"/>
</kw>
<status status="PASS" starttime="20210513 16:56:44.226" endtime="20210513 16:56:51.276"/>
</kw>
<msg timestamp="20210513 16:56:51.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:44.226" endtime="20210513 16:56:51.277"/>
</kw>
<msg timestamp="20210513 16:56:51.277" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210513 16:56:44.225" endtime="20210513 16:56:51.277"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:56:51.278" endtime="20210513 16:56:51.279"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:51.285" level="INFO">Running command 'ozone sh bucket setquota /96102-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:56:57.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:56:57.444" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:56:51.281" endtime="20210513 16:56:57.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:56:57.446" level="INFO"/>
<status status="PASS" starttime="20210513 16:56:57.444" endtime="20210513 16:56:57.446"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:56:57.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:56:57.446" endtime="20210513 16:56:57.447"/>
</kw>
<status status="PASS" starttime="20210513 16:56:51.280" endtime="20210513 16:56:57.447"/>
</kw>
<msg timestamp="20210513 16:56:57.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:51.280" endtime="20210513 16:56:57.448"/>
</kw>
<status status="PASS" starttime="20210513 16:56:51.279" endtime="20210513 16:56:57.448"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:56:57.456" level="INFO">Running command 'ozone sh bucket info /96102-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:57:04.139" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:57:04.139" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210513 16:56:57.451" endtime="20210513 16:57:04.139"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:57:04.141" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210513 16:57:04.140" endtime="20210513 16:57:04.141"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:57:04.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:57:04.141" endtime="20210513 16:57:04.142"/>
</kw>
<status status="PASS" starttime="20210513 16:56:57.450" endtime="20210513 16:57:04.142"/>
</kw>
<msg timestamp="20210513 16:57:04.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:56:57.450" endtime="20210513 16:57:04.142"/>
</kw>
<msg timestamp="20210513 16:57:04.142" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210513 16:56:57.448" endtime="20210513 16:57:04.142"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:57:04.143" endtime="20210513 16:57:04.143"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:57:04.149" level="INFO">Running command 'ozone sh bucket info /96102-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:57:11.373" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:57:11.374" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210513 16:57:04.146" endtime="20210513 16:57:11.374"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:57:11.377" level="INFO">1000</msg>
<status status="PASS" starttime="20210513 16:57:11.375" endtime="20210513 16:57:11.377"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:57:11.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:57:11.378" endtime="20210513 16:57:11.378"/>
</kw>
<status status="PASS" starttime="20210513 16:57:04.145" endtime="20210513 16:57:11.379"/>
</kw>
<msg timestamp="20210513 16:57:11.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:57:04.145" endtime="20210513 16:57:11.380"/>
</kw>
<msg timestamp="20210513 16:57:11.380" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210513 16:57:04.144" endtime="20210513 16:57:11.380"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:57:11.381" endtime="20210513 16:57:11.382"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:57:11.386" level="INFO">Running command 'ozone sh bucket list /96102-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:57:17.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:57:17.976" level="INFO">${output} = 96102-rpcbasic</msg>
<status status="PASS" starttime="20210513 16:57:11.384" endtime="20210513 16:57:17.976"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:57:17.977" level="INFO">96102-rpcbasic</msg>
<status status="PASS" starttime="20210513 16:57:17.976" endtime="20210513 16:57:17.977"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:57:17.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:57:17.977" endtime="20210513 16:57:17.978"/>
</kw>
<status status="PASS" starttime="20210513 16:57:11.383" endtime="20210513 16:57:17.978"/>
</kw>
<msg timestamp="20210513 16:57:17.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:57:11.383" endtime="20210513 16:57:17.978"/>
</kw>
<msg timestamp="20210513 16:57:17.979" level="INFO">${result} = 96102-rpcbasic</msg>
<status status="PASS" starttime="20210513 16:57:11.382" endtime="20210513 16:57:17.979"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 16:57:17.979" endtime="20210513 16:57:17.979"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:57:17.986" level="INFO">Running command 'ozone sh key put /96102-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:27.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:27.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:57:17.982" endtime="20210513 17:00:27.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:27.137" level="INFO"/>
<status status="PASS" starttime="20210513 17:00:27.136" endtime="20210513 17:00:27.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:27.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:27.137" endtime="20210513 17:00:27.138"/>
</kw>
<status status="PASS" starttime="20210513 16:57:17.981" endtime="20210513 17:00:27.139"/>
</kw>
<msg timestamp="20210513 17:00:27.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:57:17.981" endtime="20210513 17:00:27.140"/>
</kw>
<status status="PASS" starttime="20210513 16:57:17.981" endtime="20210513 17:00:27.140"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:27.147" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:27.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:27.153" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:00:27.144" endtime="20210513 17:00:27.153"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:27.156" level="INFO"/>
<status status="PASS" starttime="20210513 17:00:27.155" endtime="20210513 17:00:27.156"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:27.157" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:27.156" endtime="20210513 17:00:27.157"/>
</kw>
<status status="PASS" starttime="20210513 17:00:27.143" endtime="20210513 17:00:27.158"/>
</kw>
<msg timestamp="20210513 17:00:27.158" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:27.142" endtime="20210513 17:00:27.158"/>
</kw>
<status status="PASS" starttime="20210513 17:00:27.141" endtime="20210513 17:00:27.159"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:27.166" level="INFO">Running command 'ozone sh key get /96102-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:36.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:36.451" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:00:27.162" endtime="20210513 17:00:36.451"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:36.453" level="INFO"/>
<status status="PASS" starttime="20210513 17:00:36.452" endtime="20210513 17:00:36.453"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:36.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:36.453" endtime="20210513 17:00:36.453"/>
</kw>
<status status="PASS" starttime="20210513 17:00:27.161" endtime="20210513 17:00:36.454"/>
</kw>
<msg timestamp="20210513 17:00:36.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:27.161" endtime="20210513 17:00:36.454"/>
</kw>
<status status="PASS" starttime="20210513 17:00:27.159" endtime="20210513 17:00:36.454"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:36.459" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:36.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:36.463" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:00:36.456" endtime="20210513 17:00:36.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:36.465" level="INFO"/>
<status status="PASS" starttime="20210513 17:00:36.464" endtime="20210513 17:00:36.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:36.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:36.465" endtime="20210513 17:00:36.466"/>
</kw>
<status status="PASS" starttime="20210513 17:00:36.455" endtime="20210513 17:00:36.467"/>
</kw>
<msg timestamp="20210513 17:00:36.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:36.455" endtime="20210513 17:00:36.468"/>
</kw>
<status status="PASS" starttime="20210513 17:00:36.454" endtime="20210513 17:00:36.468"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:36.474" level="INFO">Running command 'ozone sh key put -t RATIS /96102-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:46.591" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 17:00:36.471" endtime="20210513 17:00:46.592"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.593" endtime="20210513 17:00:46.593"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.593" endtime="20210513 17:00:46.593"/>
</kw>
<status status="FAIL" starttime="20210513 17:00:36.470" endtime="20210513 17:00:46.594"/>
</kw>
<msg timestamp="20210513 17:00:46.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 17:00:36.469" endtime="20210513 17:00:46.594"/>
</kw>
<status status="FAIL" starttime="20210513 17:00:36.468" endtime="20210513 17:00:46.595"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.595" endtime="20210513 17:00:46.595"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.595" endtime="20210513 17:00:46.595"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.596" endtime="20210513 17:00:46.596"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.597" endtime="20210513 17:00:46.597"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.597" endtime="20210513 17:00:46.597"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.597" endtime="20210513 17:00:46.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.598" endtime="20210513 17:00:46.598"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.598" endtime="20210513 17:00:46.598"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.598" endtime="20210513 17:00:46.598"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.598" endtime="20210513 17:00:46.599"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.599" endtime="20210513 17:00:46.599"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.599" endtime="20210513 17:00:46.600"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.601" endtime="20210513 17:00:46.601"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.601" endtime="20210513 17:00:46.602"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.602" endtime="20210513 17:00:46.602"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.603" endtime="20210513 17:00:46.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.603" endtime="20210513 17:00:46.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.605" endtime="20210513 17:00:46.605"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.605" endtime="20210513 17:00:46.606"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.606" endtime="20210513 17:00:46.606"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.607" endtime="20210513 17:00:46.607"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.607" endtime="20210513 17:00:46.607"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.608" endtime="20210513 17:00:46.608"/>
</kw>
<status status="FAIL" starttime="20210513 16:57:17.980" endtime="20210513 17:00:46.609"/>
</kw>
<status status="FAIL" starttime="20210513 16:57:17.980" endtime="20210513 17:00:46.610"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.610" endtime="20210513 17:00:46.610"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.610" endtime="20210513 17:00:46.610"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.611" endtime="20210513 17:00:46.611"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.612" endtime="20210513 17:00:46.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.612" endtime="20210513 17:00:46.612"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.612" endtime="20210513 17:00:46.612"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.612" endtime="20210513 17:00:46.612"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.613" endtime="20210513 17:00:46.613"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.614" endtime="20210513 17:00:46.614"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.614" endtime="20210513 17:00:46.614"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.614" endtime="20210513 17:00:46.615"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.615" endtime="20210513 17:00:46.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.615" endtime="20210513 17:00:46.615"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.616" endtime="20210513 17:00:46.616"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.616" endtime="20210513 17:00:46.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.616" endtime="20210513 17:00:46.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.616" endtime="20210513 17:00:46.616"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.616" endtime="20210513 17:00:46.616"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.616" endtime="20210513 17:00:46.617"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.617" endtime="20210513 17:00:46.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.617" endtime="20210513 17:00:46.617"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.617" endtime="20210513 17:00:46.617"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.617" endtime="20210513 17:00:46.617"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:00:46.617" endtime="20210513 17:00:46.618"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.618" endtime="20210513 17:00:46.618"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:00:46.618" endtime="20210513 17:00:46.618"/>
</kw>
<status status="FAIL" starttime="20210513 16:55:46.591" endtime="20210513 17:00:46.618"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210513 16:55:46.590" endtime="20210513 17:00:46.619">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210513 16:55:46.550" endtime="20210513 17:00:46.621"/>
</suite>
<suite id="s1-s1-s5" name="Ozone-Shell" source="/opt/hadoop/smoketest/basic/ozone-shell.robot">
<kw name="Generate prefix" library="ozone-shell-lib" type="SETUP">
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210513 17:00:46.648" level="INFO">${random} = 45119</msg>
<status status="PASS" starttime="20210513 17:00:46.648" endtime="20210513 17:00:46.649"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${prefix}</arg>
<arg>${random}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:00:46.650" level="INFO">${prefix} = 45119</msg>
<status status="PASS" starttime="20210513 17:00:46.649" endtime="20210513 17:00:46.650"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.647" endtime="20210513 17:00:46.650"/>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:46.662" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:46.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:46.668" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:00:46.658" endtime="20210513 17:00:46.668"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:46.670" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:00:46.669" endtime="20210513 17:00:46.670"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:46.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:46.671" endtime="20210513 17:00:46.672"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.657" endtime="20210513 17:00:46.675"/>
</kw>
<msg timestamp="20210513 17:00:46.675" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:46.657" endtime="20210513 17:00:46.675"/>
</kw>
<msg timestamp="20210513 17:00:46.675" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:00:46.656" endtime="20210513 17:00:46.675"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:00:46.677" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:00:46.676" endtime="20210513 17:00:46.677"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:46.683" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:46.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:46.732" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:00:46.680" endtime="20210513 17:00:46.733"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:46.734" level="INFO"/>
<status status="PASS" starttime="20210513 17:00:46.733" endtime="20210513 17:00:46.734"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:46.735" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:46.734" endtime="20210513 17:00:46.735"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.680" endtime="20210513 17:00:46.736"/>
</kw>
<msg timestamp="20210513 17:00:46.736" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:46.679" endtime="20210513 17:00:46.736"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.678" endtime="20210513 17:00:46.736"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.678" endtime="20210513 17:00:46.736"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.656" endtime="20210513 17:00:46.737"/>
</kw>
<status status="PASS" starttime="20210513 17:00:46.654" endtime="20210513 17:00:46.737"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:46.741" level="INFO">Running command 'ozone sh volume info o3://om:9862/45119-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:53.274" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 17:00:53.274" level="INFO">${output} = VOLUME_NOT_FOUND Volume 45119-rpcwoport is not found</msg>
<status status="PASS" starttime="20210513 17:00:46.738" endtime="20210513 17:00:53.274"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:53.277" level="INFO">VOLUME_NOT_FOUND Volume 45119-rpcwoport is not found</msg>
<status status="PASS" starttime="20210513 17:00:53.276" endtime="20210513 17:00:53.277"/>
</kw>
<msg timestamp="20210513 17:00:53.278" level="INFO">${result} = VOLUME_NOT_FOUND Volume 45119-rpcwoport is not found</msg>
<status status="PASS" starttime="20210513 17:00:46.738" endtime="20210513 17:00:53.278"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:00:53.278" endtime="20210513 17:00:53.279"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:53.286" level="INFO">Running command 'ozone sh volume create o3://om:9862/45119-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:00:59.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:00:59.566" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:00:53.283" endtime="20210513 17:00:59.566"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:00:59.570" level="INFO"/>
<status status="PASS" starttime="20210513 17:00:59.567" endtime="20210513 17:00:59.570"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:00:59.571" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:00:59.570" endtime="20210513 17:00:59.571"/>
</kw>
<status status="PASS" starttime="20210513 17:00:53.282" endtime="20210513 17:00:59.571"/>
</kw>
<msg timestamp="20210513 17:00:59.571" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:53.281" endtime="20210513 17:00:59.572"/>
</kw>
<msg timestamp="20210513 17:00:59.572" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210513 17:00:53.280" endtime="20210513 17:00:59.572"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:00:59.572" endtime="20210513 17:00:59.573"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:00:59.583" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="45119-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:06.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:06.031" level="INFO">${output} = {
  "metadata": {},
  "name": "45119-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210513 17:00:59.579" endtime="20210513 17:01:06.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:06.033" level="INFO">{
  "metadata": {},
  "name": "45119-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T17:00:59.316Z",
  "modificationTime": "2021-05-13T17:00:59.316Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 17:01:06.032" endtime="20210513 17:01:06.033"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:06.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:06.033" endtime="20210513 17:01:06.034"/>
</kw>
<status status="PASS" starttime="20210513 17:00:59.577" endtime="20210513 17:01:06.034"/>
</kw>
<msg timestamp="20210513 17:01:06.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:00:59.576" endtime="20210513 17:01:06.034"/>
</kw>
<msg timestamp="20210513 17:01:06.034" level="INFO">${result} = {
  "metadata": {},
  "name": "45119-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210513 17:00:59.573" endtime="20210513 17:01:06.034"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:01:06.035" endtime="20210513 17:01:06.035"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:06.040" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="45119-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:13.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:13.142" level="INFO">${output} = {
  "metadata": {},
  "name": "45119-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210513 17:01:06.037" endtime="20210513 17:01:13.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:13.144" level="INFO">{
  "metadata": {},
  "name": "45119-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T17:00:59.316Z",
  "modificationTime": "2021-05-13T17:00:59.316Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 17:01:13.143" endtime="20210513 17:01:13.144"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:13.145" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:13.144" endtime="20210513 17:01:13.145"/>
</kw>
<status status="PASS" starttime="20210513 17:01:06.036" endtime="20210513 17:01:13.145"/>
</kw>
<msg timestamp="20210513 17:01:13.145" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:06.036" endtime="20210513 17:01:13.146"/>
</kw>
<msg timestamp="20210513 17:01:13.146" level="INFO">${result} = {
  "metadata": {},
  "name": "45119-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" starttime="20210513 17:01:06.035" endtime="20210513 17:01:13.146"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:01:13.146" endtime="20210513 17:01:13.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:13.154" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/45119-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:19.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:19.039" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:01:13.151" endtime="20210513 17:01:19.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:19.040" level="INFO"/>
<status status="PASS" starttime="20210513 17:01:19.040" endtime="20210513 17:01:19.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:19.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:19.041" endtime="20210513 17:01:19.041"/>
</kw>
<status status="PASS" starttime="20210513 17:01:13.149" endtime="20210513 17:01:19.042"/>
</kw>
<msg timestamp="20210513 17:01:19.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:13.148" endtime="20210513 17:01:19.042"/>
</kw>
<status status="PASS" starttime="20210513 17:01:13.147" endtime="20210513 17:01:19.043"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:19.050" level="INFO">Running command 'ozone sh volume info o3://om:9862/45119-rpcwoport | jq -r '. | select(.name=="45119-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:26.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:26.072" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:01:19.047" endtime="20210513 17:01:26.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:26.073" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 17:01:26.073" endtime="20210513 17:01:26.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:26.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:26.074" endtime="20210513 17:01:26.075"/>
</kw>
<status status="PASS" starttime="20210513 17:01:19.046" endtime="20210513 17:01:26.075"/>
</kw>
<msg timestamp="20210513 17:01:26.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:19.045" endtime="20210513 17:01:26.076"/>
</kw>
<msg timestamp="20210513 17:01:26.076" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:01:19.043" endtime="20210513 17:01:26.076"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:01:26.077" endtime="20210513 17:01:26.078"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:26.084" level="INFO">Running command 'ozone sh bucket create o3://om:9862/45119-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:32.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:32.337" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:01:26.081" endtime="20210513 17:01:32.338"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:32.339" level="INFO"/>
<status status="PASS" starttime="20210513 17:01:32.338" endtime="20210513 17:01:32.339"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:32.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:32.339" endtime="20210513 17:01:32.340"/>
</kw>
<status status="PASS" starttime="20210513 17:01:26.080" endtime="20210513 17:01:32.340"/>
</kw>
<msg timestamp="20210513 17:01:32.340" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:26.079" endtime="20210513 17:01:32.340"/>
</kw>
<status status="PASS" starttime="20210513 17:01:26.078" endtime="20210513 17:01:32.340"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:32.346" level="INFO">Running command 'ozone sh bucket info o3://om:9862/45119-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:39.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:40.000" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210513 17:01:32.343" endtime="20210513 17:01:40.000"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:40.001" level="INFO">DISK</msg>
<status status="PASS" starttime="20210513 17:01:40.000" endtime="20210513 17:01:40.001"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:40.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:40.002" endtime="20210513 17:01:40.002"/>
</kw>
<status status="PASS" starttime="20210513 17:01:32.342" endtime="20210513 17:01:40.003"/>
</kw>
<msg timestamp="20210513 17:01:40.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:32.341" endtime="20210513 17:01:40.003"/>
</kw>
<msg timestamp="20210513 17:01:40.003" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210513 17:01:32.341" endtime="20210513 17:01:40.003"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:01:40.003" endtime="20210513 17:01:40.004"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:40.009" level="INFO">Running command 'ozone sh bucket info o3://om:9862/45119-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:46.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:46.918" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:01:40.006" endtime="20210513 17:01:46.918"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:46.921" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 17:01:46.919" endtime="20210513 17:01:46.921"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:46.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:46.921" endtime="20210513 17:01:46.923"/>
</kw>
<status status="PASS" starttime="20210513 17:01:40.005" endtime="20210513 17:01:46.924"/>
</kw>
<msg timestamp="20210513 17:01:46.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:40.005" endtime="20210513 17:01:46.924"/>
</kw>
<msg timestamp="20210513 17:01:46.925" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:01:40.004" endtime="20210513 17:01:46.925"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:01:46.926" endtime="20210513 17:01:46.927"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:46.935" level="INFO">Running command 'ozone sh bucket info o3://om:9862/45119-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:53.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:53.758" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210513 17:01:46.931" endtime="20210513 17:01:53.759"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:53.760" level="INFO">100</msg>
<status status="PASS" starttime="20210513 17:01:53.759" endtime="20210513 17:01:53.760"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:53.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:53.760" endtime="20210513 17:01:53.761"/>
</kw>
<status status="PASS" starttime="20210513 17:01:46.930" endtime="20210513 17:01:53.761"/>
</kw>
<msg timestamp="20210513 17:01:53.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:46.929" endtime="20210513 17:01:53.761"/>
</kw>
<msg timestamp="20210513 17:01:53.761" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210513 17:01:46.927" endtime="20210513 17:01:53.761"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:01:53.762" endtime="20210513 17:01:53.762"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:53.769" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/45119-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:01:59.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:01:59.983" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:01:53.766" endtime="20210513 17:01:59.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:01:59.984" level="INFO"/>
<status status="PASS" starttime="20210513 17:01:59.984" endtime="20210513 17:01:59.985"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:01:59.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:01:59.985" endtime="20210513 17:01:59.985"/>
</kw>
<status status="PASS" starttime="20210513 17:01:53.765" endtime="20210513 17:01:59.986"/>
</kw>
<msg timestamp="20210513 17:01:59.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:53.764" endtime="20210513 17:01:59.986"/>
</kw>
<status status="PASS" starttime="20210513 17:01:53.763" endtime="20210513 17:01:59.986"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:01:59.994" level="INFO">Running command 'ozone sh bucket info o3://om:9862/45119-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:02:06.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:02:06.615" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210513 17:01:59.990" endtime="20210513 17:02:06.615"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:02:06.620" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210513 17:02:06.616" endtime="20210513 17:02:06.620"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:02:06.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:02:06.621" endtime="20210513 17:02:06.622"/>
</kw>
<status status="PASS" starttime="20210513 17:01:59.989" endtime="20210513 17:02:06.622"/>
</kw>
<msg timestamp="20210513 17:02:06.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:01:59.988" endtime="20210513 17:02:06.623"/>
</kw>
<msg timestamp="20210513 17:02:06.623" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210513 17:01:59.986" endtime="20210513 17:02:06.623"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:02:06.624" endtime="20210513 17:02:06.625"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:02:06.633" level="INFO">Running command 'ozone sh bucket info o3://om:9862/45119-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:02:13.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:02:13.290" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210513 17:02:06.630" endtime="20210513 17:02:13.290"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:02:13.292" level="INFO">1000</msg>
<status status="PASS" starttime="20210513 17:02:13.290" endtime="20210513 17:02:13.292"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:02:13.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:02:13.292" endtime="20210513 17:02:13.293"/>
</kw>
<status status="PASS" starttime="20210513 17:02:06.628" endtime="20210513 17:02:13.293"/>
</kw>
<msg timestamp="20210513 17:02:13.293" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:02:06.628" endtime="20210513 17:02:13.294"/>
</kw>
<msg timestamp="20210513 17:02:13.294" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210513 17:02:06.625" endtime="20210513 17:02:13.294"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:02:13.294" endtime="20210513 17:02:13.295"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:02:13.300" level="INFO">Running command 'ozone sh bucket list o3://om:9862/45119-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:02:19.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:02:19.840" level="INFO">${output} = 45119-rpcwoport</msg>
<status status="PASS" starttime="20210513 17:02:13.298" endtime="20210513 17:02:19.840"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:02:19.841" level="INFO">45119-rpcwoport</msg>
<status status="PASS" starttime="20210513 17:02:19.841" endtime="20210513 17:02:19.842"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:02:19.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:02:19.842" endtime="20210513 17:02:19.843"/>
</kw>
<status status="PASS" starttime="20210513 17:02:13.297" endtime="20210513 17:02:19.843"/>
</kw>
<msg timestamp="20210513 17:02:19.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:02:13.297" endtime="20210513 17:02:19.843"/>
</kw>
<msg timestamp="20210513 17:02:19.843" level="INFO">${result} = 45119-rpcwoport</msg>
<status status="PASS" starttime="20210513 17:02:13.295" endtime="20210513 17:02:19.843"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:02:19.844" endtime="20210513 17:02:19.844"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:02:19.873" level="INFO">Running command 'ozone sh key put o3://om:9862/45119-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:30.072" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:30.072" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:02:19.869" endtime="20210513 17:05:30.072"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:30.075" level="INFO"/>
<status status="PASS" starttime="20210513 17:05:30.073" endtime="20210513 17:05:30.075"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:30.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:30.076" endtime="20210513 17:05:30.077"/>
</kw>
<status status="PASS" starttime="20210513 17:02:19.846" endtime="20210513 17:05:30.077"/>
</kw>
<msg timestamp="20210513 17:05:30.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:02:19.846" endtime="20210513 17:05:30.078"/>
</kw>
<status status="PASS" starttime="20210513 17:02:19.845" endtime="20210513 17:05:30.078"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:30.086" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:30.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:30.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:05:30.082" endtime="20210513 17:05:30.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:30.094" level="INFO"/>
<status status="PASS" starttime="20210513 17:05:30.093" endtime="20210513 17:05:30.094"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:30.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:30.094" endtime="20210513 17:05:30.095"/>
</kw>
<status status="PASS" starttime="20210513 17:05:30.081" endtime="20210513 17:05:30.096"/>
</kw>
<msg timestamp="20210513 17:05:30.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:30.080" endtime="20210513 17:05:30.096"/>
</kw>
<status status="PASS" starttime="20210513 17:05:30.079" endtime="20210513 17:05:30.097"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:30.104" level="INFO">Running command 'ozone sh key get o3://om:9862/45119-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:40.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:40.468" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:05:30.100" endtime="20210513 17:05:40.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:40.469" level="INFO"/>
<status status="PASS" starttime="20210513 17:05:40.468" endtime="20210513 17:05:40.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:40.470" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:40.470" endtime="20210513 17:05:40.470"/>
</kw>
<status status="PASS" starttime="20210513 17:05:30.099" endtime="20210513 17:05:40.470"/>
</kw>
<msg timestamp="20210513 17:05:40.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:30.099" endtime="20210513 17:05:40.471"/>
</kw>
<status status="PASS" starttime="20210513 17:05:30.097" endtime="20210513 17:05:40.471"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:40.475" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:40.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:40.478" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:05:40.472" endtime="20210513 17:05:40.478"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:40.479" level="INFO"/>
<status status="PASS" starttime="20210513 17:05:40.478" endtime="20210513 17:05:40.479"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:40.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:40.480" endtime="20210513 17:05:40.481"/>
</kw>
<status status="PASS" starttime="20210513 17:05:40.472" endtime="20210513 17:05:40.481"/>
</kw>
<msg timestamp="20210513 17:05:40.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:40.472" endtime="20210513 17:05:40.482"/>
</kw>
<status status="PASS" starttime="20210513 17:05:40.471" endtime="20210513 17:05:40.482"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:40.486" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/45119-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:46.654" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 17:05:40.484" endtime="20210513 17:05:46.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.656" endtime="20210513 17:05:46.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.656" endtime="20210513 17:05:46.656"/>
</kw>
<status status="FAIL" starttime="20210513 17:05:40.483" endtime="20210513 17:05:46.657"/>
</kw>
<msg timestamp="20210513 17:05:46.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 17:05:40.483" endtime="20210513 17:05:46.657"/>
</kw>
<status status="FAIL" starttime="20210513 17:05:40.482" endtime="20210513 17:05:46.657"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.659" endtime="20210513 17:05:46.659"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.659" endtime="20210513 17:05:46.660"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.660" endtime="20210513 17:05:46.660"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.660" endtime="20210513 17:05:46.660"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.660" endtime="20210513 17:05:46.660"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.660" endtime="20210513 17:05:46.660"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.660" endtime="20210513 17:05:46.660"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.661" endtime="20210513 17:05:46.661"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.661" endtime="20210513 17:05:46.661"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.661" endtime="20210513 17:05:46.661"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.661" endtime="20210513 17:05:46.661"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.661" endtime="20210513 17:05:46.661"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.661" endtime="20210513 17:05:46.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.662" endtime="20210513 17:05:46.662"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.662" endtime="20210513 17:05:46.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.662" endtime="20210513 17:05:46.662"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.662" endtime="20210513 17:05:46.662"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.662" endtime="20210513 17:05:46.662"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.669" endtime="20210513 17:05:46.669"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.669" endtime="20210513 17:05:46.669"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.671" endtime="20210513 17:05:46.671"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.671" endtime="20210513 17:05:46.671"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.672" endtime="20210513 17:05:46.672"/>
</kw>
<status status="FAIL" starttime="20210513 17:02:19.845" endtime="20210513 17:05:46.672"/>
</kw>
<status status="FAIL" starttime="20210513 17:02:19.844" endtime="20210513 17:05:46.672"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.672" endtime="20210513 17:05:46.672"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.672" endtime="20210513 17:05:46.672"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.672" endtime="20210513 17:05:46.673"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.689" endtime="20210513 17:05:46.689"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.689" endtime="20210513 17:05:46.689"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.689" endtime="20210513 17:05:46.689"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.689" endtime="20210513 17:05:46.689"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.689" endtime="20210513 17:05:46.690"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.690" endtime="20210513 17:05:46.690"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.690" endtime="20210513 17:05:46.690"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.690" endtime="20210513 17:05:46.690"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.690" endtime="20210513 17:05:46.690"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.690" endtime="20210513 17:05:46.690"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.690" endtime="20210513 17:05:46.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.691" endtime="20210513 17:05:46.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.691" endtime="20210513 17:05:46.691"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.691" endtime="20210513 17:05:46.691"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.691" endtime="20210513 17:05:46.691"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.691" endtime="20210513 17:05:46.691"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.691" endtime="20210513 17:05:46.692"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.692" endtime="20210513 17:05:46.692"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.699" endtime="20210513 17:05:46.699"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.699" endtime="20210513 17:05:46.699"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:05:46.699" endtime="20210513 17:05:46.699"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.700" endtime="20210513 17:05:46.700"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:05:46.700" endtime="20210513 17:05:46.700"/>
</kw>
<status status="FAIL" starttime="20210513 17:00:46.737" endtime="20210513 17:05:46.712"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210513 17:00:46.650" endtime="20210513 17:05:46.713">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:46.739" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:46.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:46.751" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:05:46.726" endtime="20210513 17:05:46.752"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:46.753" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:05:46.752" endtime="20210513 17:05:46.753"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:46.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:46.753" endtime="20210513 17:05:46.757"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.725" endtime="20210513 17:05:46.757"/>
</kw>
<msg timestamp="20210513 17:05:46.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:46.725" endtime="20210513 17:05:46.758"/>
</kw>
<msg timestamp="20210513 17:05:46.759" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:05:46.724" endtime="20210513 17:05:46.759"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:05:46.760" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:05:46.760" endtime="20210513 17:05:46.760"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:46.780" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:46.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:46.836" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:05:46.762" endtime="20210513 17:05:46.836"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:46.837" level="INFO"/>
<status status="PASS" starttime="20210513 17:05:46.836" endtime="20210513 17:05:46.837"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:46.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:46.837" endtime="20210513 17:05:46.838"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.762" endtime="20210513 17:05:46.838"/>
</kw>
<msg timestamp="20210513 17:05:46.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:46.762" endtime="20210513 17:05:46.839"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.761" endtime="20210513 17:05:46.839"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.761" endtime="20210513 17:05:46.839"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.723" endtime="20210513 17:05:46.840"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.721" endtime="20210513 17:05:46.840"/>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:46.851" level="INFO">Running command 'ozone sh volume create o3://om:9862/45119-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:05:57.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:05:57.116" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:05:46.842" endtime="20210513 17:05:57.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:05:57.117" level="INFO"/>
<status status="PASS" starttime="20210513 17:05:57.117" endtime="20210513 17:05:57.117"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:05:57.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:05:57.118" endtime="20210513 17:05:57.118"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.842" endtime="20210513 17:05:57.119"/>
</kw>
<msg timestamp="20210513 17:05:57.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:46.841" endtime="20210513 17:05:57.119"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.841" endtime="20210513 17:05:57.119"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:05:57.123" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/45119-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:03.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:03.643" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:05:57.121" endtime="20210513 17:06:03.643"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:03.646" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:06:03.644" endtime="20210513 17:06:03.646"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:03.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:03.647" endtime="20210513 17:06:03.648"/>
</kw>
<status status="PASS" starttime="20210513 17:05:57.120" endtime="20210513 17:06:03.648"/>
</kw>
<msg timestamp="20210513 17:06:03.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:05:57.120" endtime="20210513 17:06:03.649"/>
</kw>
<msg timestamp="20210513 17:06:03.649" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:05:57.119" endtime="20210513 17:06:03.649"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:06:03.649" endtime="20210513 17:06:03.651"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:03.658" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/45119-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:10.280" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:10.280" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210513 17:06:03.655" endtime="20210513 17:06:10.280"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:10.281" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210513 17:06:10.280" endtime="20210513 17:06:10.281"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:10.282" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:10.281" endtime="20210513 17:06:10.283"/>
</kw>
<status status="PASS" starttime="20210513 17:06:03.654" endtime="20210513 17:06:10.284"/>
</kw>
<msg timestamp="20210513 17:06:10.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:03.653" endtime="20210513 17:06:10.284"/>
</kw>
<msg timestamp="20210513 17:06:10.285" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210513 17:06:03.651" endtime="20210513 17:06:10.285"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:10.292" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/45119-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:17.208" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:17.208" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:06:10.288" endtime="20210513 17:06:17.208"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:17.210" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:06:17.209" endtime="20210513 17:06:17.210"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:17.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:17.210" endtime="20210513 17:06:17.211"/>
</kw>
<status status="PASS" starttime="20210513 17:06:10.287" endtime="20210513 17:06:17.211"/>
</kw>
<msg timestamp="20210513 17:06:17.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:10.287" endtime="20210513 17:06:17.211"/>
</kw>
<msg timestamp="20210513 17:06:17.211" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:06:10.285" endtime="20210513 17:06:17.211"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:06:17.212" endtime="20210513 17:06:17.212"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:17.220" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/45119-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:23.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:23.671" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:06:17.214" endtime="20210513 17:06:23.671"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:23.676" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:06:23.673" endtime="20210513 17:06:23.677"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:23.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:23.678" endtime="20210513 17:06:23.681"/>
</kw>
<status status="PASS" starttime="20210513 17:06:17.214" endtime="20210513 17:06:23.681"/>
</kw>
<msg timestamp="20210513 17:06:23.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:17.213" endtime="20210513 17:06:23.681"/>
</kw>
<msg timestamp="20210513 17:06:23.681" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:06:17.213" endtime="20210513 17:06:23.681"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:23.700" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/45119-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:31.631" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:31.631" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:06:23.692" endtime="20210513 17:06:31.631"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:31.633" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:06:31.632" endtime="20210513 17:06:31.633"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:31.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:31.633" endtime="20210513 17:06:31.635"/>
</kw>
<status status="PASS" starttime="20210513 17:06:23.691" endtime="20210513 17:06:31.635"/>
</kw>
<msg timestamp="20210513 17:06:31.635" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:23.682" endtime="20210513 17:06:31.635"/>
</kw>
<msg timestamp="20210513 17:06:31.636" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:06:23.682" endtime="20210513 17:06:31.636"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:06:31.636" endtime="20210513 17:06:31.637"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:31.641" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/45119-rpcwoport2 -al user:superuser1:rwxy[DEFAULT],group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:38.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:38.133" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:06:31.639" endtime="20210513 17:06:38.133"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:38.137" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:06:38.134" endtime="20210513 17:06:38.138"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:38.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:38.138" endtime="20210513 17:06:38.140"/>
</kw>
<status status="PASS" starttime="20210513 17:06:31.638" endtime="20210513 17:06:38.141"/>
</kw>
<msg timestamp="20210513 17:06:38.141" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:31.638" endtime="20210513 17:06:38.141"/>
</kw>
<msg timestamp="20210513 17:06:38.142" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:06:31.637" endtime="20210513 17:06:38.142"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:38.151" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/45119-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:44.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:44.952" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210513 17:06:38.147" endtime="20210513 17:06:44.952"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:44.953" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:06:44.952" endtime="20210513 17:06:44.953"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:44.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:44.954" endtime="20210513 17:06:44.955"/>
</kw>
<status status="PASS" starttime="20210513 17:06:38.145" endtime="20210513 17:06:44.955"/>
</kw>
<msg timestamp="20210513 17:06:44.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:38.144" endtime="20210513 17:06:44.956"/>
</kw>
<msg timestamp="20210513 17:06:44.956" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210513 17:06:38.142" endtime="20210513 17:06:44.956"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:06:44.957" endtime="20210513 17:06:44.957"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:06:44.957" endtime="20210513 17:06:44.958"/>
</kw>
<status status="PASS" starttime="20210513 17:05:46.840" endtime="20210513 17:06:44.958"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 17:05:46.717" endtime="20210513 17:06:44.959"/>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:44.968" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:44.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:44.969" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:06:44.964" endtime="20210513 17:06:44.969"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:44.971" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:06:44.970" endtime="20210513 17:06:44.971"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:44.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:44.971" endtime="20210513 17:06:44.971"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.964" endtime="20210513 17:06:44.972"/>
</kw>
<msg timestamp="20210513 17:06:44.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:44.963" endtime="20210513 17:06:44.972"/>
</kw>
<msg timestamp="20210513 17:06:44.972" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:06:44.963" endtime="20210513 17:06:44.972"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:06:44.973" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:06:44.973" endtime="20210513 17:06:44.973"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:44.978" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:44.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:44.986" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:06:44.976" endtime="20210513 17:06:44.986"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:44.988" level="INFO"/>
<status status="PASS" starttime="20210513 17:06:44.987" endtime="20210513 17:06:44.988"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:44.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:44.988" endtime="20210513 17:06:44.989"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.975" endtime="20210513 17:06:44.989"/>
</kw>
<msg timestamp="20210513 17:06:44.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:44.975" endtime="20210513 17:06:44.989"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.974" endtime="20210513 17:06:44.989"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.974" endtime="20210513 17:06:44.989"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.962" endtime="20210513 17:06:44.990"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.961" endtime="20210513 17:06:44.990"/>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:44.995" level="INFO">Running command 'ozone sh bucket create o3://om:9862/45119-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:51.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:51.512" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:06:44.992" endtime="20210513 17:06:51.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:51.513" level="INFO"/>
<status status="PASS" starttime="20210513 17:06:51.512" endtime="20210513 17:06:51.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:51.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:51.513" endtime="20210513 17:06:51.514"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.991" endtime="20210513 17:06:51.514"/>
</kw>
<msg timestamp="20210513 17:06:51.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:44.991" endtime="20210513 17:06:51.515"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.991" endtime="20210513 17:06:51.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:51.522" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/45119-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:06:56.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:06:56.518" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:06:51.518" endtime="20210513 17:06:56.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:06:56.519" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:06:56.519" endtime="20210513 17:06:56.519"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:06:56.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:06:56.520" endtime="20210513 17:06:56.520"/>
</kw>
<status status="PASS" starttime="20210513 17:06:51.517" endtime="20210513 17:06:56.521"/>
</kw>
<msg timestamp="20210513 17:06:56.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:51.517" endtime="20210513 17:06:56.521"/>
</kw>
<msg timestamp="20210513 17:06:56.521" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:06:51.515" endtime="20210513 17:06:56.521"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:06:56.521" endtime="20210513 17:06:56.522"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:06:56.526" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/45119-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:02.723" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:02.723" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210513 17:06:56.524" endtime="20210513 17:07:02.723"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:02.725" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210513 17:07:02.724" endtime="20210513 17:07:02.725"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:02.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:02.726" endtime="20210513 17:07:02.727"/>
</kw>
<status status="PASS" starttime="20210513 17:06:56.523" endtime="20210513 17:07:02.727"/>
</kw>
<msg timestamp="20210513 17:07:02.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:06:56.523" endtime="20210513 17:07:02.728"/>
</kw>
<msg timestamp="20210513 17:07:02.728" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" starttime="20210513 17:06:56.522" endtime="20210513 17:07:02.728"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:02.734" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/45119-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:09.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:09.701" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:07:02.731" endtime="20210513 17:07:09.702"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:09.705" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:07:09.703" endtime="20210513 17:07:09.705"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:09.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:09.705" endtime="20210513 17:07:09.707"/>
</kw>
<status status="PASS" starttime="20210513 17:07:02.731" endtime="20210513 17:07:09.708"/>
</kw>
<msg timestamp="20210513 17:07:09.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:02.730" endtime="20210513 17:07:09.708"/>
</kw>
<msg timestamp="20210513 17:07:09.709" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:07:02.729" endtime="20210513 17:07:09.709"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:07:09.710" endtime="20210513 17:07:09.712"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:09.722" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/45119-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:16.106" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:16.106" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:07:09.716" endtime="20210513 17:07:16.106"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:16.109" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:07:16.107" endtime="20210513 17:07:16.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:16.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:16.110" endtime="20210513 17:07:16.111"/>
</kw>
<status status="PASS" starttime="20210513 17:07:09.715" endtime="20210513 17:07:16.112"/>
</kw>
<msg timestamp="20210513 17:07:16.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:09.714" endtime="20210513 17:07:16.114"/>
</kw>
<msg timestamp="20210513 17:07:16.115" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:07:09.713" endtime="20210513 17:07:16.115"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:16.121" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/45119-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:22.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:22.898" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:07:16.118" endtime="20210513 17:07:22.898"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:22.900" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:07:22.898" endtime="20210513 17:07:22.900"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:22.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:22.900" endtime="20210513 17:07:22.900"/>
</kw>
<status status="PASS" starttime="20210513 17:07:16.116" endtime="20210513 17:07:22.901"/>
</kw>
<msg timestamp="20210513 17:07:22.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:16.116" endtime="20210513 17:07:22.901"/>
</kw>
<msg timestamp="20210513 17:07:22.902" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:07:16.115" endtime="20210513 17:07:22.902"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:07:22.902" endtime="20210513 17:07:22.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:22.909" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/45119-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:29.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:29.174" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:07:22.906" endtime="20210513 17:07:29.174"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:29.175" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:07:29.175" endtime="20210513 17:07:29.175"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:29.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:29.176" endtime="20210513 17:07:29.176"/>
</kw>
<status status="PASS" starttime="20210513 17:07:22.905" endtime="20210513 17:07:29.176"/>
</kw>
<msg timestamp="20210513 17:07:29.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:22.905" endtime="20210513 17:07:29.177"/>
</kw>
<msg timestamp="20210513 17:07:29.177" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:07:22.903" endtime="20210513 17:07:29.177"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:29.182" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/45119-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:36.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:36.781" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210513 17:07:29.179" endtime="20210513 17:07:36.781"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:36.783" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:07:36.782" endtime="20210513 17:07:36.784"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:36.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:36.784" endtime="20210513 17:07:36.785"/>
</kw>
<status status="PASS" starttime="20210513 17:07:29.178" endtime="20210513 17:07:36.785"/>
</kw>
<msg timestamp="20210513 17:07:36.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:29.178" endtime="20210513 17:07:36.785"/>
</kw>
<msg timestamp="20210513 17:07:36.786" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210513 17:07:29.177" endtime="20210513 17:07:36.786"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:07:36.786" endtime="20210513 17:07:36.786"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:07:36.786" endtime="20210513 17:07:36.787"/>
</kw>
<status status="PASS" starttime="20210513 17:06:44.990" endtime="20210513 17:07:36.787"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 17:06:44.960" endtime="20210513 17:07:36.788"/>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:36.794" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:36.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:36.798" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:07:36.792" endtime="20210513 17:07:36.798"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:36.800" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:07:36.799" endtime="20210513 17:07:36.800"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:36.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:36.800" endtime="20210513 17:07:36.801"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.791" endtime="20210513 17:07:36.801"/>
</kw>
<msg timestamp="20210513 17:07:36.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:36.791" endtime="20210513 17:07:36.802"/>
</kw>
<msg timestamp="20210513 17:07:36.802" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:07:36.791" endtime="20210513 17:07:36.802"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:07:36.804" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:07:36.803" endtime="20210513 17:07:36.804"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:36.808" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:07:36.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:07:36.817" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:07:36.806" endtime="20210513 17:07:36.817"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:07:36.819" level="INFO"/>
<status status="PASS" starttime="20210513 17:07:36.818" endtime="20210513 17:07:36.820"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:07:36.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:07:36.820" endtime="20210513 17:07:36.821"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.805" endtime="20210513 17:07:36.821"/>
</kw>
<msg timestamp="20210513 17:07:36.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:36.805" endtime="20210513 17:07:36.822"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.804" endtime="20210513 17:07:36.822"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.804" endtime="20210513 17:07:36.822"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.790" endtime="20210513 17:07:36.822"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.790" endtime="20210513 17:07:36.822"/>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:07:36.829" level="INFO">Running command 'ozone sh key put o3://om:9862/45119-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:10:48.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:10:48.949" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:07:36.825" endtime="20210513 17:10:48.950"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:10:48.952" level="INFO"/>
<status status="PASS" starttime="20210513 17:10:48.950" endtime="20210513 17:10:48.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:10:48.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:10:48.953" endtime="20210513 17:10:48.954"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.824" endtime="20210513 17:10:48.954"/>
</kw>
<msg timestamp="20210513 17:10:48.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:07:36.824" endtime="20210513 17:10:48.955"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.823" endtime="20210513 17:10:48.955"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:10:48.961" level="INFO">Running command 'ozone sh key getacl o3://om:9862/45119-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:10:54.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:10:54.090" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:10:48.958" endtime="20210513 17:10:54.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:10:54.091" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:10:54.091" endtime="20210513 17:10:54.091"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:10:54.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:10:54.092" endtime="20210513 17:10:54.092"/>
</kw>
<status status="PASS" starttime="20210513 17:10:48.958" endtime="20210513 17:10:54.092"/>
</kw>
<msg timestamp="20210513 17:10:54.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:10:48.957" endtime="20210513 17:10:54.093"/>
</kw>
<msg timestamp="20210513 17:10:54.093" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:10:48.956" endtime="20210513 17:10:54.093"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:10:54.093" endtime="20210513 17:10:54.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:10:54.103" level="INFO">Running command 'ozone sh key addacl o3://om:9862/45119-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:00.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:00.328" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 17:10:54.097" endtime="20210513 17:11:00.328"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:00.333" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 17:11:00.329" endtime="20210513 17:11:00.333"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:00.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:00.334" endtime="20210513 17:11:00.335"/>
</kw>
<status status="PASS" starttime="20210513 17:10:54.096" endtime="20210513 17:11:00.336"/>
</kw>
<msg timestamp="20210513 17:11:00.336" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:10:54.095" endtime="20210513 17:11:00.336"/>
</kw>
<msg timestamp="20210513 17:11:00.336" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" starttime="20210513 17:10:54.094" endtime="20210513 17:11:00.336"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:00.345" level="INFO">Running command 'ozone sh key getacl o3://om:9862/45119-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:07.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:07.193" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:11:00.338" endtime="20210513 17:11:07.194"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:07.196" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:11:07.195" endtime="20210513 17:11:07.197"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:07.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:07.197" endtime="20210513 17:11:07.199"/>
</kw>
<status status="PASS" starttime="20210513 17:11:00.337" endtime="20210513 17:11:07.200"/>
</kw>
<msg timestamp="20210513 17:11:07.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:00.337" endtime="20210513 17:11:07.200"/>
</kw>
<msg timestamp="20210513 17:11:07.202" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:11:00.336" endtime="20210513 17:11:07.202"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:11:07.202" endtime="20210513 17:11:07.204"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:07.212" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/45119-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:13.691" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:13.691" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:11:07.208" endtime="20210513 17:11:13.691"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:13.692" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:11:13.692" endtime="20210513 17:11:13.693"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:13.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:13.693" endtime="20210513 17:11:13.693"/>
</kw>
<status status="PASS" starttime="20210513 17:11:07.207" endtime="20210513 17:11:13.694"/>
</kw>
<msg timestamp="20210513 17:11:13.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:07.206" endtime="20210513 17:11:13.694"/>
</kw>
<msg timestamp="20210513 17:11:13.694" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" starttime="20210513 17:11:07.205" endtime="20210513 17:11:13.694"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:13.699" level="INFO">Running command 'ozone sh key getacl o3://om:9862/45119-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:20.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:20.189" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:11:13.696" endtime="20210513 17:11:20.189"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:20.190" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:11:20.189" endtime="20210513 17:11:20.190"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:20.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:20.190" endtime="20210513 17:11:20.191"/>
</kw>
<status status="PASS" starttime="20210513 17:11:13.696" endtime="20210513 17:11:20.191"/>
</kw>
<msg timestamp="20210513 17:11:20.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:13.695" endtime="20210513 17:11:20.191"/>
</kw>
<msg timestamp="20210513 17:11:20.192" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:11:13.694" endtime="20210513 17:11:20.192"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:11:20.192" endtime="20210513 17:11:20.192"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/${SCM}@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:20.197" level="INFO">Running command 'ozone sh key setacl o3://om:9862/45119-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:26.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:26.039" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:11:20.194" endtime="20210513 17:11:26.039"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:26.040" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:11:26.039" endtime="20210513 17:11:26.040"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:26.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:26.040" endtime="20210513 17:11:26.041"/>
</kw>
<status status="PASS" starttime="20210513 17:11:20.194" endtime="20210513 17:11:26.041"/>
</kw>
<msg timestamp="20210513 17:11:26.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:20.193" endtime="20210513 17:11:26.041"/>
</kw>
<msg timestamp="20210513 17:11:26.042" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:11:20.192" endtime="20210513 17:11:26.042"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:26.047" level="INFO">Running command 'ozone sh key getacl o3://om:9862/45119-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:31.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:31.408" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210513 17:11:26.043" endtime="20210513 17:11:31.408"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:31.411" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:11:31.409" endtime="20210513 17:11:31.412"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:31.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:31.412" endtime="20210513 17:11:31.413"/>
</kw>
<status status="PASS" starttime="20210513 17:11:26.043" endtime="20210513 17:11:31.414"/>
</kw>
<msg timestamp="20210513 17:11:31.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:26.043" endtime="20210513 17:11:31.414"/>
</kw>
<msg timestamp="20210513 17:11:31.415" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" starttime="20210513 17:11:26.042" endtime="20210513 17:11:31.415"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:11:31.415" endtime="20210513 17:11:31.416"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:11:31.416" endtime="20210513 17:11:31.417"/>
</kw>
<status status="PASS" starttime="20210513 17:07:36.822" endtime="20210513 17:11:31.418"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 17:07:36.789" endtime="20210513 17:11:31.418"/>
</test>
<test id="s1-s1-s5-t5" name="RpcClient prefix acls">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:31.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:31.436" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:31.436" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:11:31.428" endtime="20210513 17:11:31.436"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:31.438" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:11:31.437" endtime="20210513 17:11:31.438"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:31.438" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:31.438" endtime="20210513 17:11:31.439"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.427" endtime="20210513 17:11:31.439"/>
</kw>
<msg timestamp="20210513 17:11:31.439" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:31.427" endtime="20210513 17:11:31.439"/>
</kw>
<msg timestamp="20210513 17:11:31.440" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:11:31.426" endtime="20210513 17:11:31.440"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:11:31.441" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:11:31.440" endtime="20210513 17:11:31.441"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:31.446" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:31.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:31.484" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:11:31.443" endtime="20210513 17:11:31.484"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:31.486" level="INFO"/>
<status status="PASS" starttime="20210513 17:11:31.485" endtime="20210513 17:11:31.486"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:31.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:31.486" endtime="20210513 17:11:31.487"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.443" endtime="20210513 17:11:31.487"/>
</kw>
<msg timestamp="20210513 17:11:31.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:31.442" endtime="20210513 17:11:31.487"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.441" endtime="20210513 17:11:31.487"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.441" endtime="20210513 17:11:31.487"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.425" endtime="20210513 17:11:31.487"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.421" endtime="20210513 17:11:31.488"/>
</kw>
<kw name="Test prefix Acls" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
<kw name="Execute" library="os">
<arg>ozone sh prefix addacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:31.492" level="INFO">Running command 'ozone sh prefix addacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/ -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:36.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:36.873" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210513 17:11:31.490" endtime="20210513 17:11:36.873"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:36.875" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" starttime="20210513 17:11:36.874" endtime="20210513 17:11:36.875"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:36.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:36.875" endtime="20210513 17:11:36.876"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.489" endtime="20210513 17:11:36.876"/>
</kw>
<msg timestamp="20210513 17:11:36.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:31.489" endtime="20210513 17:11:36.876"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.488" endtime="20210513 17:11:36.876"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:36.880" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:42.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:42.561" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210513 17:11:36.878" endtime="20210513 17:11:42.561"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:42.562" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:11:42.562" endtime="20210513 17:11:42.563"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:42.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:42.563" endtime="20210513 17:11:42.564"/>
</kw>
<status status="PASS" starttime="20210513 17:11:36.878" endtime="20210513 17:11:42.564"/>
</kw>
<msg timestamp="20210513 17:11:42.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:36.877" endtime="20210513 17:11:42.565"/>
</kw>
<msg timestamp="20210513 17:11:42.565" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210513 17:11:36.876" endtime="20210513 17:11:42.565"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:11:42.565" endtime="20210513 17:11:42.566"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix removeacl ${protocol}${server}/${volume}/bb1/prefix1/ -a user:superuser1:xy</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:42.572" level="INFO">Running command 'ozone sh prefix removeacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/ -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:48.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:48.874" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210513 17:11:42.569" endtime="20210513 17:11:48.874"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:48.876" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210513 17:11:48.875" endtime="20210513 17:11:48.877"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:48.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:48.877" endtime="20210513 17:11:48.879"/>
</kw>
<status status="PASS" starttime="20210513 17:11:42.568" endtime="20210513 17:11:48.879"/>
</kw>
<msg timestamp="20210513 17:11:48.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:42.567" endtime="20210513 17:11:48.879"/>
</kw>
<msg timestamp="20210513 17:11:48.880" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" starttime="20210513 17:11:42.566" endtime="20210513 17:11:48.880"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:48.884" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:11:55.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:11:55.131" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210513 17:11:48.881" endtime="20210513 17:11:55.131"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:11:55.133" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:11:55.132" endtime="20210513 17:11:55.133"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:11:55.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:11:55.133" endtime="20210513 17:11:55.134"/>
</kw>
<status status="PASS" starttime="20210513 17:11:48.881" endtime="20210513 17:11:55.134"/>
</kw>
<msg timestamp="20210513 17:11:55.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:48.880" endtime="20210513 17:11:55.135"/>
</kw>
<msg timestamp="20210513 17:11:55.135" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "A...</msg>
<status status="PASS" starttime="20210513 17:11:48.880" endtime="20210513 17:11:55.135"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:11:55.135" endtime="20210513 17:11:55.136"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix setacl ${protocol}${server}/${volume}/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:11:55.143" level="INFO">Running command 'ozone sh prefix setacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/ -al user:superuser1:rwxy[DEFAULT],group:superuser1:a[DEFAULT],user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:12:01.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:12:01.364" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:11:55.140" endtime="20210513 17:12:01.364"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:12:01.366" level="INFO">ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:12:01.364" endtime="20210513 17:12:01.367"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:12:01.367" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:12:01.367" endtime="20210513 17:12:01.367"/>
</kw>
<status status="PASS" starttime="20210513 17:11:55.138" endtime="20210513 17:12:01.368"/>
</kw>
<msg timestamp="20210513 17:12:01.368" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:11:55.138" endtime="20210513 17:12:01.368"/>
</kw>
<msg timestamp="20210513 17:12:01.368" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" starttime="20210513 17:11:55.137" endtime="20210513 17:12:01.368"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh prefix getacl ${protocol}${server}/${volume}/bb1/prefix1/</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:12:01.373" level="INFO">Running command 'ozone sh prefix getacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:12:08.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:12:08.116" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210513 17:12:01.370" endtime="20210513 17:12:08.116"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:12:08.119" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:12:08.117" endtime="20210513 17:12:08.119"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:12:08.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:12:08.119" endtime="20210513 17:12:08.121"/>
</kw>
<status status="PASS" starttime="20210513 17:12:01.369" endtime="20210513 17:12:08.121"/>
</kw>
<msg timestamp="20210513 17:12:08.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:12:01.369" endtime="20210513 17:12:08.122"/>
</kw>
<msg timestamp="20210513 17:12:08.122" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "D...</msg>
<status status="PASS" starttime="20210513 17:12:01.368" endtime="20210513 17:12:08.123"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:12:08.123" endtime="20210513 17:12:08.124"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:12:08.124" endtime="20210513 17:12:08.125"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:12:08.131" level="INFO">Running command 'ozone sh key put o3://om:9862/45119-rpcwoport2/bb1/prefix1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:18.031" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:18.031" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:12:08.128" endtime="20210513 17:15:18.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:18.032" level="INFO"/>
<status status="PASS" starttime="20210513 17:15:18.032" endtime="20210513 17:15:18.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:18.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:18.033" endtime="20210513 17:15:18.033"/>
</kw>
<status status="PASS" starttime="20210513 17:12:08.127" endtime="20210513 17:15:18.034"/>
</kw>
<msg timestamp="20210513 17:15:18.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:12:08.127" endtime="20210513 17:15:18.034"/>
</kw>
<status status="PASS" starttime="20210513 17:12:08.125" endtime="20210513 17:15:18.034"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/prefix1/key1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:18.040" level="INFO">Running command 'ozone sh key getacl o3://om:9862/45119-rpcwoport2/bb1/prefix1/key1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:25.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:25.030" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:15:18.037" endtime="20210513 17:15:25.031"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:25.032" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" starttime="20210513 17:15:25.031" endtime="20210513 17:15:25.032"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:25.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:25.032" endtime="20210513 17:15:25.033"/>
</kw>
<status status="PASS" starttime="20210513 17:15:18.036" endtime="20210513 17:15:25.033"/>
</kw>
<msg timestamp="20210513 17:15:25.033" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:18.035" endtime="20210513 17:15:25.033"/>
</kw>
<msg timestamp="20210513 17:15:25.034" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" starttime="20210513 17:15:18.034" endtime="20210513 17:15:25.034"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:15:25.034" endtime="20210513 17:15:25.034"/>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<status status="PASS" starttime="20210513 17:15:25.034" endtime="20210513 17:15:25.035"/>
</kw>
<status status="PASS" starttime="20210513 17:11:31.488" endtime="20210513 17:15:25.035"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210513 17:11:31.420" endtime="20210513 17:15:25.036"/>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without host">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:25.043" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:25.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:25.048" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:15:25.041" endtime="20210513 17:15:25.048"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:25.050" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:15:25.049" endtime="20210513 17:15:25.050"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:25.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:25.050" endtime="20210513 17:15:25.051"/>
</kw>
<status status="PASS" starttime="20210513 17:15:25.040" endtime="20210513 17:15:25.052"/>
</kw>
<msg timestamp="20210513 17:15:25.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:25.039" endtime="20210513 17:15:25.053"/>
</kw>
<msg timestamp="20210513 17:15:25.053" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:15:25.039" endtime="20210513 17:15:25.054"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:15:25.055" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:15:25.054" endtime="20210513 17:15:25.055"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:25.063" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:25.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:25.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:15:25.059" endtime="20210513 17:15:25.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:25.073" level="INFO"/>
<status status="PASS" starttime="20210513 17:15:25.072" endtime="20210513 17:15:25.074"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:25.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:25.074" endtime="20210513 17:15:25.075"/>
</kw>
<status status="PASS" starttime="20210513 17:15:25.058" endtime="20210513 17:15:25.076"/>
</kw>
<msg timestamp="20210513 17:15:25.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:25.058" endtime="20210513 17:15:25.076"/>
</kw>
<status status="PASS" starttime="20210513 17:15:25.056" endtime="20210513 17:15:25.077"/>
</kw>
<status status="PASS" starttime="20210513 17:15:25.055" endtime="20210513 17:15:25.077"/>
</kw>
<status status="PASS" starttime="20210513 17:15:25.038" endtime="20210513 17:15:25.077"/>
</kw>
<status status="PASS" starttime="20210513 17:15:25.038" endtime="20210513 17:15:25.078"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:25.085" level="INFO">Running command 'ozone sh volume info o3:///45119-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:31.512" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 17:15:31.512" level="INFO">${output} = VOLUME_NOT_FOUND Volume 45119-rpcwport is not found</msg>
<status status="PASS" starttime="20210513 17:15:25.082" endtime="20210513 17:15:31.512"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:31.514" level="INFO">VOLUME_NOT_FOUND Volume 45119-rpcwport is not found</msg>
<status status="PASS" starttime="20210513 17:15:31.513" endtime="20210513 17:15:31.514"/>
</kw>
<msg timestamp="20210513 17:15:31.514" level="INFO">${result} = VOLUME_NOT_FOUND Volume 45119-rpcwport is not found</msg>
<status status="PASS" starttime="20210513 17:15:25.081" endtime="20210513 17:15:31.514"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:15:31.514" endtime="20210513 17:15:31.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:31.520" level="INFO">Running command 'ozone sh volume create o3:///45119-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:38.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:38.447" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:15:31.517" endtime="20210513 17:15:38.447"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:38.448" level="INFO"/>
<status status="PASS" starttime="20210513 17:15:38.447" endtime="20210513 17:15:38.448"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:38.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:38.448" endtime="20210513 17:15:38.449"/>
</kw>
<status status="PASS" starttime="20210513 17:15:31.516" endtime="20210513 17:15:38.449"/>
</kw>
<msg timestamp="20210513 17:15:38.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:31.516" endtime="20210513 17:15:38.450"/>
</kw>
<msg timestamp="20210513 17:15:38.450" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210513 17:15:31.515" endtime="20210513 17:15:38.450"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:15:38.450" endtime="20210513 17:15:38.450"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:38.455" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="45119-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:45.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:45.604" level="INFO">${output} = {
  "metadata": {},
  "name": "45119-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 17:15:38.453" endtime="20210513 17:15:45.604"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:45.606" level="INFO">{
  "metadata": {},
  "name": "45119-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T17:15:38.222Z",
  "modificationTime": "2021-05-13T17:15:38.222Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 17:15:45.605" endtime="20210513 17:15:45.606"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:45.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:45.606" endtime="20210513 17:15:45.607"/>
</kw>
<status status="PASS" starttime="20210513 17:15:38.452" endtime="20210513 17:15:45.607"/>
</kw>
<msg timestamp="20210513 17:15:45.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:38.452" endtime="20210513 17:15:45.608"/>
</kw>
<msg timestamp="20210513 17:15:45.608" level="INFO">${result} = {
  "metadata": {},
  "name": "45119-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 17:15:38.451" endtime="20210513 17:15:45.608"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:15:45.608" endtime="20210513 17:15:45.608"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:45.613" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="45119-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:52.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:52.435" level="INFO">${output} = {
  "metadata": {},
  "name": "45119-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 17:15:45.610" endtime="20210513 17:15:52.435"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:52.437" level="INFO">{
  "metadata": {},
  "name": "45119-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T17:15:38.222Z",
  "modificationTime": "2021-05-13T17:15:38.222Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 17:15:52.436" endtime="20210513 17:15:52.437"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:52.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:52.437" endtime="20210513 17:15:52.438"/>
</kw>
<status status="PASS" starttime="20210513 17:15:45.609" endtime="20210513 17:15:52.438"/>
</kw>
<msg timestamp="20210513 17:15:52.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:45.609" endtime="20210513 17:15:52.438"/>
</kw>
<msg timestamp="20210513 17:15:52.439" level="INFO">${result} = {
  "metadata": {},
  "name": "45119-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" starttime="20210513 17:15:45.608" endtime="20210513 17:15:52.439"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:15:52.439" endtime="20210513 17:15:52.440"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:52.444" level="INFO">Running command 'ozone sh volume setquota o3:///45119-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:15:59.146" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:15:59.146" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:15:52.442" endtime="20210513 17:15:59.146"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:15:59.149" level="INFO"/>
<status status="PASS" starttime="20210513 17:15:59.147" endtime="20210513 17:15:59.149"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:15:59.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:15:59.150" endtime="20210513 17:15:59.151"/>
</kw>
<status status="PASS" starttime="20210513 17:15:52.441" endtime="20210513 17:15:59.152"/>
</kw>
<msg timestamp="20210513 17:15:59.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:52.441" endtime="20210513 17:15:59.152"/>
</kw>
<status status="PASS" starttime="20210513 17:15:52.440" endtime="20210513 17:15:59.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:15:59.161" level="INFO">Running command 'ozone sh volume info o3:///45119-rpcwport | jq -r '. | select(.name=="45119-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:05.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:05.509" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:15:59.158" endtime="20210513 17:16:05.509"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:05.510" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 17:16:05.509" endtime="20210513 17:16:05.510"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:05.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:05.510" endtime="20210513 17:16:05.511"/>
</kw>
<status status="PASS" starttime="20210513 17:15:59.156" endtime="20210513 17:16:05.511"/>
</kw>
<msg timestamp="20210513 17:16:05.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:15:59.155" endtime="20210513 17:16:05.512"/>
</kw>
<msg timestamp="20210513 17:16:05.512" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:15:59.153" endtime="20210513 17:16:05.512"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:05.512" endtime="20210513 17:16:05.512"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:05.517" level="INFO">Running command 'ozone sh bucket create o3:///45119-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:12.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:12.145" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:16:05.514" endtime="20210513 17:16:12.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:12.148" level="INFO"/>
<status status="PASS" starttime="20210513 17:16:12.146" endtime="20210513 17:16:12.148"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:12.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:12.148" endtime="20210513 17:16:12.149"/>
</kw>
<status status="PASS" starttime="20210513 17:16:05.514" endtime="20210513 17:16:12.152"/>
</kw>
<msg timestamp="20210513 17:16:12.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:05.513" endtime="20210513 17:16:12.153"/>
</kw>
<status status="PASS" starttime="20210513 17:16:05.513" endtime="20210513 17:16:12.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:12.159" level="INFO">Running command 'ozone sh bucket info o3:///45119-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:16.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:16.828" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210513 17:16:12.156" endtime="20210513 17:16:16.828"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:16.830" level="INFO">DISK</msg>
<status status="PASS" starttime="20210513 17:16:16.829" endtime="20210513 17:16:16.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:16.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:16.830" endtime="20210513 17:16:16.831"/>
</kw>
<status status="PASS" starttime="20210513 17:16:12.155" endtime="20210513 17:16:16.831"/>
</kw>
<msg timestamp="20210513 17:16:16.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:12.154" endtime="20210513 17:16:16.831"/>
</kw>
<msg timestamp="20210513 17:16:16.832" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210513 17:16:12.153" endtime="20210513 17:16:16.832"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:16.832" endtime="20210513 17:16:16.832"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:16.836" level="INFO">Running command 'ozone sh bucket info o3:///45119-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:23.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:23.487" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:16:16.834" endtime="20210513 17:16:23.487"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:23.488" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 17:16:23.487" endtime="20210513 17:16:23.488"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:23.489" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:23.488" endtime="20210513 17:16:23.489"/>
</kw>
<status status="PASS" starttime="20210513 17:16:16.834" endtime="20210513 17:16:23.490"/>
</kw>
<msg timestamp="20210513 17:16:23.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:16.833" endtime="20210513 17:16:23.490"/>
</kw>
<msg timestamp="20210513 17:16:23.490" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:16:16.832" endtime="20210513 17:16:23.490"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:23.490" endtime="20210513 17:16:23.491"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:23.496" level="INFO">Running command 'ozone sh bucket info o3:///45119-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:29.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:29.655" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210513 17:16:23.493" endtime="20210513 17:16:29.655"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:29.656" level="INFO">100</msg>
<status status="PASS" starttime="20210513 17:16:29.655" endtime="20210513 17:16:29.656"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:29.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:29.656" endtime="20210513 17:16:29.657"/>
</kw>
<status status="PASS" starttime="20210513 17:16:23.492" endtime="20210513 17:16:29.657"/>
</kw>
<msg timestamp="20210513 17:16:29.657" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:23.492" endtime="20210513 17:16:29.657"/>
</kw>
<msg timestamp="20210513 17:16:29.658" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210513 17:16:23.491" endtime="20210513 17:16:29.658"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:29.658" endtime="20210513 17:16:29.658"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:29.662" level="INFO">Running command 'ozone sh bucket setquota o3:///45119-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:35.046" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:35.046" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:16:29.660" endtime="20210513 17:16:35.046"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:35.048" level="INFO"/>
<status status="PASS" starttime="20210513 17:16:35.047" endtime="20210513 17:16:35.048"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:35.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:35.048" endtime="20210513 17:16:35.049"/>
</kw>
<status status="PASS" starttime="20210513 17:16:29.659" endtime="20210513 17:16:35.049"/>
</kw>
<msg timestamp="20210513 17:16:35.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:29.659" endtime="20210513 17:16:35.049"/>
</kw>
<status status="PASS" starttime="20210513 17:16:29.658" endtime="20210513 17:16:35.049"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:35.055" level="INFO">Running command 'ozone sh bucket info o3:///45119-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:42.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:42.022" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210513 17:16:35.052" endtime="20210513 17:16:42.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:42.024" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210513 17:16:42.022" endtime="20210513 17:16:42.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:42.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:42.025" endtime="20210513 17:16:42.026"/>
</kw>
<status status="PASS" starttime="20210513 17:16:35.051" endtime="20210513 17:16:42.026"/>
</kw>
<msg timestamp="20210513 17:16:42.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:35.051" endtime="20210513 17:16:42.027"/>
</kw>
<msg timestamp="20210513 17:16:42.027" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210513 17:16:35.050" endtime="20210513 17:16:42.027"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:42.028" endtime="20210513 17:16:42.029"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:42.036" level="INFO">Running command 'ozone sh bucket info o3:///45119-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:49.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:49.005" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210513 17:16:42.033" endtime="20210513 17:16:49.005"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:49.006" level="INFO">1000</msg>
<status status="PASS" starttime="20210513 17:16:49.005" endtime="20210513 17:16:49.006"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:49.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:49.006" endtime="20210513 17:16:49.007"/>
</kw>
<status status="PASS" starttime="20210513 17:16:42.032" endtime="20210513 17:16:49.007"/>
</kw>
<msg timestamp="20210513 17:16:49.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:42.031" endtime="20210513 17:16:49.007"/>
</kw>
<msg timestamp="20210513 17:16:49.008" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210513 17:16:42.029" endtime="20210513 17:16:49.008"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:49.008" endtime="20210513 17:16:49.008"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:49.014" level="INFO">Running command 'ozone sh bucket list o3:///45119-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:16:56.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:16:56.169" level="INFO">${output} = 45119-rpcwport</msg>
<status status="PASS" starttime="20210513 17:16:49.011" endtime="20210513 17:16:56.169"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:16:56.172" level="INFO">45119-rpcwport</msg>
<status status="PASS" starttime="20210513 17:16:56.170" endtime="20210513 17:16:56.172"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:16:56.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:16:56.172" endtime="20210513 17:16:56.174"/>
</kw>
<status status="PASS" starttime="20210513 17:16:49.010" endtime="20210513 17:16:56.174"/>
</kw>
<msg timestamp="20210513 17:16:56.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:49.010" endtime="20210513 17:16:56.175"/>
</kw>
<msg timestamp="20210513 17:16:56.176" level="INFO">${result} = 45119-rpcwport</msg>
<status status="PASS" starttime="20210513 17:16:49.009" endtime="20210513 17:16:56.176"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:16:56.176" endtime="20210513 17:16:56.177"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:16:56.185" level="INFO">Running command 'ozone sh key put o3:///45119-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:07.076" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:07.076" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:16:56.182" endtime="20210513 17:20:07.076"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:07.077" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:07.076" endtime="20210513 17:20:07.077"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:07.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:07.077" endtime="20210513 17:20:07.078"/>
</kw>
<status status="PASS" starttime="20210513 17:16:56.181" endtime="20210513 17:20:07.078"/>
</kw>
<msg timestamp="20210513 17:20:07.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:16:56.180" endtime="20210513 17:20:07.104"/>
</kw>
<status status="PASS" starttime="20210513 17:16:56.179" endtime="20210513 17:20:07.104"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:07.120" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:07.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:07.130" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:20:07.106" endtime="20210513 17:20:07.130"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:07.131" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:07.130" endtime="20210513 17:20:07.131"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:07.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:07.131" endtime="20210513 17:20:07.132"/>
</kw>
<status status="PASS" starttime="20210513 17:20:07.106" endtime="20210513 17:20:07.132"/>
</kw>
<msg timestamp="20210513 17:20:07.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:07.105" endtime="20210513 17:20:07.132"/>
</kw>
<status status="PASS" starttime="20210513 17:20:07.105" endtime="20210513 17:20:07.133"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:07.137" level="INFO">Running command 'ozone sh key get o3:///45119-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:17.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:17.816" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:20:07.134" endtime="20210513 17:20:17.816"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:17.818" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:17.817" endtime="20210513 17:20:17.818"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:17.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:17.818" endtime="20210513 17:20:17.818"/>
</kw>
<status status="PASS" starttime="20210513 17:20:07.134" endtime="20210513 17:20:17.819"/>
</kw>
<msg timestamp="20210513 17:20:17.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:07.133" endtime="20210513 17:20:17.819"/>
</kw>
<status status="PASS" starttime="20210513 17:20:07.133" endtime="20210513 17:20:17.820"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:17.823" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:17.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:17.827" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:20:17.821" endtime="20210513 17:20:17.827"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:17.830" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:17.829" endtime="20210513 17:20:17.830"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:17.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:17.831" endtime="20210513 17:20:17.831"/>
</kw>
<status status="PASS" starttime="20210513 17:20:17.821" endtime="20210513 17:20:17.832"/>
</kw>
<msg timestamp="20210513 17:20:17.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:17.820" endtime="20210513 17:20:17.832"/>
</kw>
<status status="PASS" starttime="20210513 17:20:17.820" endtime="20210513 17:20:17.832"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:17.837" level="INFO">Running command 'ozone sh key put -t RATIS o3:///45119-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:25.041" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 17:20:17.834" endtime="20210513 17:20:25.043"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.044" endtime="20210513 17:20:25.044"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.044" endtime="20210513 17:20:25.044"/>
</kw>
<status status="FAIL" starttime="20210513 17:20:17.833" endtime="20210513 17:20:25.044"/>
</kw>
<msg timestamp="20210513 17:20:25.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 17:20:17.833" endtime="20210513 17:20:25.045"/>
</kw>
<status status="FAIL" starttime="20210513 17:20:17.832" endtime="20210513 17:20:25.045"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.045" endtime="20210513 17:20:25.045"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.046" endtime="20210513 17:20:25.046"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.046" endtime="20210513 17:20:25.046"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.046" endtime="20210513 17:20:25.046"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.047" endtime="20210513 17:20:25.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.049" endtime="20210513 17:20:25.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.049" endtime="20210513 17:20:25.049"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.049" endtime="20210513 17:20:25.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.049" endtime="20210513 17:20:25.049"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.050" endtime="20210513 17:20:25.050"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.050" endtime="20210513 17:20:25.050"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.050" endtime="20210513 17:20:25.050"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.050" endtime="20210513 17:20:25.051"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.052" endtime="20210513 17:20:25.053"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.057" endtime="20210513 17:20:25.057"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.057" endtime="20210513 17:20:25.057"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.058" endtime="20210513 17:20:25.058"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.058" endtime="20210513 17:20:25.058"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.061" endtime="20210513 17:20:25.062"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.062" endtime="20210513 17:20:25.062"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.064" endtime="20210513 17:20:25.065"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.066" endtime="20210513 17:20:25.066"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.066" endtime="20210513 17:20:25.066"/>
</kw>
<status status="FAIL" starttime="20210513 17:16:56.178" endtime="20210513 17:20:25.068"/>
</kw>
<status status="FAIL" starttime="20210513 17:16:56.177" endtime="20210513 17:20:25.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.069" endtime="20210513 17:20:25.070"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.070" endtime="20210513 17:20:25.070"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.071" endtime="20210513 17:20:25.071"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.071" endtime="20210513 17:20:25.072"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.072" endtime="20210513 17:20:25.072"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.072" endtime="20210513 17:20:25.072"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.076" endtime="20210513 17:20:25.080"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.080" endtime="20210513 17:20:25.080"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.082" endtime="20210513 17:20:25.082"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.082" endtime="20210513 17:20:25.082"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.084" endtime="20210513 17:20:25.084"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.084" endtime="20210513 17:20:25.085"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.085" endtime="20210513 17:20:25.086"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.092" endtime="20210513 17:20:25.092"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.093" endtime="20210513 17:20:25.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.094" endtime="20210513 17:20:25.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.094" endtime="20210513 17:20:25.094"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.094" endtime="20210513 17:20:25.094"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.094" endtime="20210513 17:20:25.095"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.096" endtime="20210513 17:20:25.096"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.097" endtime="20210513 17:20:25.097"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.097" endtime="20210513 17:20:25.098"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.098" endtime="20210513 17:20:25.098"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:20:25.099" endtime="20210513 17:20:25.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.100" endtime="20210513 17:20:25.100"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:20:25.101" endtime="20210513 17:20:25.101"/>
</kw>
<status status="FAIL" starttime="20210513 17:15:25.078" endtime="20210513 17:20:25.102"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210513 17:15:25.037" endtime="20210513 17:20:25.103">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t7" name="RpcClient without scheme">
<kw name="Run Keyword If" library="BuiltIn" type="SETUP">
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Kinit test user" library="commonlib">
<arg>testuser</arg>
<arg>testuser.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:25.129" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:25.145" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:25.145" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 17:20:25.118" endtime="20210513 17:20:25.145"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:25.147" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 17:20:25.146" endtime="20210513 17:20:25.147"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:25.148" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:25.147" endtime="20210513 17:20:25.148"/>
</kw>
<status status="PASS" starttime="20210513 17:20:25.116" endtime="20210513 17:20:25.148"/>
</kw>
<msg timestamp="20210513 17:20:25.148" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:25.115" endtime="20210513 17:20:25.149"/>
</kw>
<msg timestamp="20210513 17:20:25.149" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 17:20:25.114" endtime="20210513 17:20:25.149"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 17:20:25.150" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 17:20:25.149" endtime="20210513 17:20:25.150"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:25.167" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:25.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:25.220" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:20:25.156" endtime="20210513 17:20:25.220"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:25.223" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:25.221" endtime="20210513 17:20:25.223"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:25.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:25.223" endtime="20210513 17:20:25.227"/>
</kw>
<status status="PASS" starttime="20210513 17:20:25.155" endtime="20210513 17:20:25.228"/>
</kw>
<msg timestamp="20210513 17:20:25.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:25.153" endtime="20210513 17:20:25.228"/>
</kw>
<status status="PASS" starttime="20210513 17:20:25.151" endtime="20210513 17:20:25.229"/>
</kw>
<status status="PASS" starttime="20210513 17:20:25.150" endtime="20210513 17:20:25.229"/>
</kw>
<status status="PASS" starttime="20210513 17:20:25.111" endtime="20210513 17:20:25.229"/>
</kw>
<status status="PASS" starttime="20210513 17:20:25.109" endtime="20210513 17:20:25.229"/>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:25.264" level="INFO">Running command 'ozone sh volume info /45119-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:32.105" level="INFO">${rc} = 255</msg>
<msg timestamp="20210513 17:20:32.105" level="INFO">${output} = VOLUME_NOT_FOUND Volume 45119-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210513 17:20:25.242" endtime="20210513 17:20:32.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:32.107" level="INFO">VOLUME_NOT_FOUND Volume 45119-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210513 17:20:32.106" endtime="20210513 17:20:32.107"/>
</kw>
<msg timestamp="20210513 17:20:32.108" level="INFO">${result} = VOLUME_NOT_FOUND Volume 45119-rpcwoscheme is not found</msg>
<status status="PASS" starttime="20210513 17:20:25.241" endtime="20210513 17:20:32.108"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:20:32.108" endtime="20210513 17:20:32.108"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:32.113" level="INFO">Running command 'ozone sh volume create /45119-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:38.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:38.772" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:20:32.110" endtime="20210513 17:20:38.772"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:38.773" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:38.772" endtime="20210513 17:20:38.773"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:38.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:38.773" endtime="20210513 17:20:38.774"/>
</kw>
<status status="PASS" starttime="20210513 17:20:32.109" endtime="20210513 17:20:38.774"/>
</kw>
<msg timestamp="20210513 17:20:38.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:32.109" endtime="20210513 17:20:38.775"/>
</kw>
<msg timestamp="20210513 17:20:38.775" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210513 17:20:32.108" endtime="20210513 17:20:38.775"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:20:38.775" endtime="20210513 17:20:38.776"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:38.780" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="45119-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:45.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:45.598" level="INFO">${output} = {
  "metadata": {},
  "name": "45119-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210513 17:20:38.777" endtime="20210513 17:20:45.598"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:45.600" level="INFO">{
  "metadata": {},
  "name": "45119-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T17:20:38.691Z",
  "modificationTime": "2021-05-13T17:20:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 17:20:45.598" endtime="20210513 17:20:45.600"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:45.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:45.601" endtime="20210513 17:20:45.602"/>
</kw>
<status status="PASS" starttime="20210513 17:20:38.777" endtime="20210513 17:20:45.602"/>
</kw>
<msg timestamp="20210513 17:20:45.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:38.777" endtime="20210513 17:20:45.603"/>
</kw>
<msg timestamp="20210513 17:20:45.603" level="INFO">${result} = {
  "metadata": {},
  "name": "45119-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210513 17:20:38.776" endtime="20210513 17:20:45.603"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:20:45.603" endtime="20210513 17:20:45.604"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:45.610" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="45119-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:52.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:52.697" level="INFO">${output} = {
  "metadata": {},
  "name": "45119-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210513 17:20:45.607" endtime="20210513 17:20:52.697"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:52.700" level="INFO">{
  "metadata": {},
  "name": "45119-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-05-13T17:20:38.691Z",
  "modificationTime": "2021-05-13T17:20:38.691Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" starttime="20210513 17:20:52.698" endtime="20210513 17:20:52.700"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:52.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:52.700" endtime="20210513 17:20:52.701"/>
</kw>
<status status="PASS" starttime="20210513 17:20:45.606" endtime="20210513 17:20:52.702"/>
</kw>
<msg timestamp="20210513 17:20:52.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:45.606" endtime="20210513 17:20:52.702"/>
</kw>
<msg timestamp="20210513 17:20:52.702" level="INFO">${result} = {
  "metadata": {},
  "name": "45119-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" starttime="20210513 17:20:45.605" endtime="20210513 17:20:52.702"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210513 17:20:52.703" endtime="20210513 17:20:52.703"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:52.708" level="INFO">Running command 'ozone sh volume setquota /45119-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:20:59.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:20:59.090" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:20:52.705" endtime="20210513 17:20:59.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:20:59.095" level="INFO"/>
<status status="PASS" starttime="20210513 17:20:59.092" endtime="20210513 17:20:59.095"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:20:59.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:20:59.096" endtime="20210513 17:20:59.096"/>
</kw>
<status status="PASS" starttime="20210513 17:20:52.705" endtime="20210513 17:20:59.097"/>
</kw>
<msg timestamp="20210513 17:20:59.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:52.704" endtime="20210513 17:20:59.097"/>
</kw>
<status status="PASS" starttime="20210513 17:20:52.703" endtime="20210513 17:20:59.097"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:20:59.105" level="INFO">Running command 'ozone sh volume info /45119-rpcwoscheme | jq -r '. | select(.name=="45119-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:05.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:05.586" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:20:59.101" endtime="20210513 17:21:05.586"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:05.588" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 17:21:05.587" endtime="20210513 17:21:05.589"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:05.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:05.589" endtime="20210513 17:21:05.590"/>
</kw>
<status status="PASS" starttime="20210513 17:20:59.101" endtime="20210513 17:21:05.591"/>
</kw>
<msg timestamp="20210513 17:21:05.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:20:59.101" endtime="20210513 17:21:05.591"/>
</kw>
<msg timestamp="20210513 17:21:05.592" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:20:59.097" endtime="20210513 17:21:05.592"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:05.592" endtime="20210513 17:21:05.593"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:05.598" level="INFO">Running command 'ozone sh bucket create /45119-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:12.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:12.271" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:21:05.596" endtime="20210513 17:21:12.271"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:12.272" level="INFO"/>
<status status="PASS" starttime="20210513 17:21:12.272" endtime="20210513 17:21:12.273"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:12.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:12.273" endtime="20210513 17:21:12.273"/>
</kw>
<status status="PASS" starttime="20210513 17:21:05.595" endtime="20210513 17:21:12.274"/>
</kw>
<msg timestamp="20210513 17:21:12.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:05.594" endtime="20210513 17:21:12.274"/>
</kw>
<status status="PASS" starttime="20210513 17:21:05.593" endtime="20210513 17:21:12.274"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:12.279" level="INFO">Running command 'ozone sh bucket info /45119-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:18.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:18.700" level="INFO">${output} = DISK</msg>
<status status="PASS" starttime="20210513 17:21:12.277" endtime="20210513 17:21:18.700"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:18.702" level="INFO">DISK</msg>
<status status="PASS" starttime="20210513 17:21:18.701" endtime="20210513 17:21:18.702"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:18.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:18.703" endtime="20210513 17:21:18.704"/>
</kw>
<status status="PASS" starttime="20210513 17:21:12.276" endtime="20210513 17:21:18.705"/>
</kw>
<msg timestamp="20210513 17:21:18.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:12.276" endtime="20210513 17:21:18.705"/>
</kw>
<msg timestamp="20210513 17:21:18.706" level="INFO">${result} = DISK</msg>
<status status="PASS" starttime="20210513 17:21:12.274" endtime="20210513 17:21:18.706"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>DISK</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:18.706" endtime="20210513 17:21:18.707"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:18.714" level="INFO">Running command 'ozone sh bucket info /45119-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:24.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:24.959" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:21:18.711" endtime="20210513 17:21:24.959"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:24.961" level="INFO">10995116277760</msg>
<status status="PASS" starttime="20210513 17:21:24.960" endtime="20210513 17:21:24.961"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:24.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:24.961" endtime="20210513 17:21:24.962"/>
</kw>
<status status="PASS" starttime="20210513 17:21:18.710" endtime="20210513 17:21:24.962"/>
</kw>
<msg timestamp="20210513 17:21:24.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:18.709" endtime="20210513 17:21:24.963"/>
</kw>
<msg timestamp="20210513 17:21:24.963" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" starttime="20210513 17:21:18.707" endtime="20210513 17:21:24.963"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>10995116277760</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:24.963" endtime="20210513 17:21:24.965"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:24.971" level="INFO">Running command 'ozone sh bucket info /45119-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:31.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:31.543" level="INFO">${output} = 100</msg>
<status status="PASS" starttime="20210513 17:21:24.968" endtime="20210513 17:21:31.543"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:31.545" level="INFO">100</msg>
<status status="PASS" starttime="20210513 17:21:31.544" endtime="20210513 17:21:31.545"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:31.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:31.546" endtime="20210513 17:21:31.547"/>
</kw>
<status status="PASS" starttime="20210513 17:21:24.967" endtime="20210513 17:21:31.547"/>
</kw>
<msg timestamp="20210513 17:21:31.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:24.967" endtime="20210513 17:21:31.547"/>
</kw>
<msg timestamp="20210513 17:21:31.548" level="INFO">${result} = 100</msg>
<status status="PASS" starttime="20210513 17:21:24.965" endtime="20210513 17:21:31.548"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>100</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:31.548" endtime="20210513 17:21:31.549"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:31.556" level="INFO">Running command 'ozone sh bucket setquota /45119-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:37.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:37.546" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:21:31.552" endtime="20210513 17:21:37.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:37.549" level="INFO"/>
<status status="PASS" starttime="20210513 17:21:37.547" endtime="20210513 17:21:37.549"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:37.551" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:37.550" endtime="20210513 17:21:37.551"/>
</kw>
<status status="PASS" starttime="20210513 17:21:31.550" endtime="20210513 17:21:37.552"/>
</kw>
<msg timestamp="20210513 17:21:37.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:31.550" endtime="20210513 17:21:37.552"/>
</kw>
<status status="PASS" starttime="20210513 17:21:31.549" endtime="20210513 17:21:37.553"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:37.560" level="INFO">Running command 'ozone sh bucket info /45119-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:44.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:44.175" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" starttime="20210513 17:21:37.557" endtime="20210513 17:21:44.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:44.177" level="INFO">1099511627776</msg>
<status status="PASS" starttime="20210513 17:21:44.176" endtime="20210513 17:21:44.177"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:44.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:44.178" endtime="20210513 17:21:44.179"/>
</kw>
<status status="PASS" starttime="20210513 17:21:37.556" endtime="20210513 17:21:44.180"/>
</kw>
<msg timestamp="20210513 17:21:44.180" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:37.555" endtime="20210513 17:21:44.180"/>
</kw>
<msg timestamp="20210513 17:21:44.181" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" starttime="20210513 17:21:37.553" endtime="20210513 17:21:44.181"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1099511627776</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:44.181" endtime="20210513 17:21:44.182"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:44.189" level="INFO">Running command 'ozone sh bucket info /45119-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:50.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:50.511" level="INFO">${output} = 1000</msg>
<status status="PASS" starttime="20210513 17:21:44.186" endtime="20210513 17:21:50.511"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:50.513" level="INFO">1000</msg>
<status status="PASS" starttime="20210513 17:21:50.512" endtime="20210513 17:21:50.513"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:50.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:50.513" endtime="20210513 17:21:50.514"/>
</kw>
<status status="PASS" starttime="20210513 17:21:44.185" endtime="20210513 17:21:50.514"/>
</kw>
<msg timestamp="20210513 17:21:50.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:44.185" endtime="20210513 17:21:50.514"/>
</kw>
<msg timestamp="20210513 17:21:50.514" level="INFO">${result} = 1000</msg>
<status status="PASS" starttime="20210513 17:21:44.182" endtime="20210513 17:21:50.514"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>1000</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:50.515" endtime="20210513 17:21:50.515"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:50.520" level="INFO">Running command 'ozone sh bucket list /45119-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:21:57.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:21:57.262" level="INFO">${output} = 45119-rpcwoscheme</msg>
<status status="PASS" starttime="20210513 17:21:50.517" endtime="20210513 17:21:57.263"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:21:57.264" level="INFO">45119-rpcwoscheme</msg>
<status status="PASS" starttime="20210513 17:21:57.263" endtime="20210513 17:21:57.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:21:57.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:21:57.264" endtime="20210513 17:21:57.265"/>
</kw>
<status status="PASS" starttime="20210513 17:21:50.516" endtime="20210513 17:21:57.265"/>
</kw>
<msg timestamp="20210513 17:21:57.265" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:50.516" endtime="20210513 17:21:57.265"/>
</kw>
<msg timestamp="20210513 17:21:57.266" level="INFO">${result} = 45119-rpcwoscheme</msg>
<status status="PASS" starttime="20210513 17:21:50.515" endtime="20210513 17:21:57.266"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>${volume}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" starttime="20210513 17:21:57.266" endtime="20210513 17:21:57.266"/>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<doc>Executes the given keyword with the given arguments.</doc>
<kw name="Test key handling" library="ozone-shell-lib">
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
<kw name="Execute" library="os">
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:21:57.273" level="INFO">Running command 'ozone sh key put /45119-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:25:09.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:25:09.022" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:21:57.269" endtime="20210513 17:25:09.022"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:25:09.024" level="INFO"/>
<status status="PASS" starttime="20210513 17:25:09.023" endtime="20210513 17:25:09.024"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:25:09.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:25:09.025" endtime="20210513 17:25:09.026"/>
</kw>
<status status="PASS" starttime="20210513 17:21:57.269" endtime="20210513 17:25:09.027"/>
</kw>
<msg timestamp="20210513 17:25:09.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:21:57.268" endtime="20210513 17:25:09.027"/>
</kw>
<status status="PASS" starttime="20210513 17:21:57.268" endtime="20210513 17:25:09.028"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:25:09.034" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:25:09.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:25:09.038" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:25:09.031" endtime="20210513 17:25:09.038"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:25:09.039" level="INFO"/>
<status status="PASS" starttime="20210513 17:25:09.038" endtime="20210513 17:25:09.039"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:25:09.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:25:09.040" endtime="20210513 17:25:09.040"/>
</kw>
<status status="PASS" starttime="20210513 17:25:09.030" endtime="20210513 17:25:09.041"/>
</kw>
<msg timestamp="20210513 17:25:09.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:25:09.029" endtime="20210513 17:25:09.041"/>
</kw>
<status status="PASS" starttime="20210513 17:25:09.028" endtime="20210513 17:25:09.041"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:25:09.045" level="INFO">Running command 'ozone sh key get /45119-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:25:19.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:25:19.092" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:25:09.043" endtime="20210513 17:25:19.092"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:25:19.093" level="INFO"/>
<status status="PASS" starttime="20210513 17:25:19.092" endtime="20210513 17:25:19.093"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:25:19.094" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:25:19.093" endtime="20210513 17:25:19.094"/>
</kw>
<status status="PASS" starttime="20210513 17:25:09.043" endtime="20210513 17:25:19.094"/>
</kw>
<msg timestamp="20210513 17:25:19.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:25:09.042" endtime="20210513 17:25:19.095"/>
</kw>
<status status="PASS" starttime="20210513 17:25:09.042" endtime="20210513 17:25:19.095"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:25:19.100" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:25:19.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 17:25:19.102" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 17:25:19.097" endtime="20210513 17:25:19.102"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 17:25:19.103" level="INFO"/>
<status status="PASS" starttime="20210513 17:25:19.102" endtime="20210513 17:25:19.103"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 17:25:19.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 17:25:19.103" endtime="20210513 17:25:19.104"/>
</kw>
<status status="PASS" starttime="20210513 17:25:19.096" endtime="20210513 17:25:19.104"/>
</kw>
<msg timestamp="20210513 17:25:19.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 17:25:19.096" endtime="20210513 17:25:19.104"/>
</kw>
<status status="PASS" starttime="20210513 17:25:19.095" endtime="20210513 17:25:19.104"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 17:25:19.108" level="INFO">Running command 'ozone sh key put -t RATIS /45119-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 17:25:25.109" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" starttime="20210513 17:25:19.106" endtime="20210513 17:25:25.109"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.110" endtime="20210513 17:25:25.110"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.110" endtime="20210513 17:25:25.110"/>
</kw>
<status status="FAIL" starttime="20210513 17:25:19.105" endtime="20210513 17:25:25.118"/>
</kw>
<msg timestamp="20210513 17:25:25.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210513 17:25:19.105" endtime="20210513 17:25:25.118"/>
</kw>
<status status="FAIL" starttime="20210513 17:25:19.104" endtime="20210513 17:25:25.118"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.120" endtime="20210513 17:25:25.120"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1_RATIS /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.120" endtime="20210513 17:25:25.120"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.120" endtime="20210513 17:25:25.120"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1_RATIS | jq -r '. | select(.name=="key1_RATIS")'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.120" endtime="20210513 17:25:25.120"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>RATIS</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.121" endtime="20210513 17:25:25.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1_RATIS</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.121" endtime="20210513 17:25:25.121"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key cp ${protocol}${server}/${volume}/bb1 key1 key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.121" endtime="20210513 17:25:25.122"/>
</kw>
<kw name="Execute" library="os">
<arg>rm -f /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.131" endtime="20210513 17:25:25.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1-copy /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.131" endtime="20210513 17:25:25.131"/>
</kw>
<kw name="Execute" library="os">
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.131" endtime="20210513 17:25:25.131"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key1-copy</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.131" endtime="20210513 17:25:25.131"/>
</kw>
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.131" endtime="20210513 17:25:25.132"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.132" endtime="20210513 17:25:25.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key get --force ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.132" endtime="20210513 17:25:25.132"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOTICE.txt.1 exists</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.132" endtime="20210513 17:25:25.132"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key info ${protocol}${server}/${volume}/bb1/key1 | jq -r '. | select(.name=="key1")'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.140" endtime="20210513 17:25:25.140"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>creationTime</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.141" endtime="20210513 17:25:25.141"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="key1") | .name'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.141" endtime="20210513 17:25:25.141"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.141" endtime="20210513 17:25:25.145"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key rename ${protocol}${server}/${volume}/bb1 key1 key2</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.145" endtime="20210513 17:25:25.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh key list ${protocol}${server}/${volume}/bb1 | jq -r '.name'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.146" endtime="20210513 17:25:25.146"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>key2</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.146" endtime="20210513 17:25:25.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key delete ${protocol}${server}/${volume}/bb1/key2</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.146" endtime="20210513 17:25:25.146"/>
</kw>
<status status="FAIL" starttime="20210513 17:21:57.267" endtime="20210513 17:25:25.146"/>
</kw>
<status status="FAIL" starttime="20210513 17:21:57.266" endtime="20210513 17:25:25.146"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --space-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.149" endtime="20210513 17:25:25.149"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.150" endtime="20210513 17:25:25.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.150" endtime="20210513 17:25:25.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume clrquota --namespace-quota ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.150" endtime="20210513 17:25:25.150"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.150" endtime="20210513 17:25:25.150"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.150" endtime="20210513 17:25:25.150"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --space-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.153" endtime="20210513 17:25:25.153"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.153" endtime="20210513 17:25:25.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.157" endtime="20210513 17:25:25.157"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket clrquota --namespace-quota ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.157" endtime="20210513 17:25:25.157"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.157" endtime="20210513 17:25:25.157"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.158" endtime="20210513 17:25:25.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.158" endtime="20210513 17:25:25.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.158" endtime="20210513 17:25:25.158"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.158" endtime="20210513 17:25:25.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.158" endtime="20210513 17:25:25.158"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.158" endtime="20210513 17:25:25.158"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.160" endtime="20210513 17:25:25.164"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.164" endtime="20210513 17:25:25.164"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.165" endtime="20210513 17:25:25.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.165" endtime="20210513 17:25:25.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.165" endtime="20210513 17:25:25.165"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.165" endtime="20210513 17:25:25.165"/>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<arg>${result}</arg>
<arg>-1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="NOT RUN" starttime="20210513 17:25:25.165" endtime="20210513 17:25:25.165"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh bucket delete ${protocol}${server}/${volume}/bb1</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.166" endtime="20210513 17:25:25.166"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh volume delete ${protocol}${server}/${volume}</arg>
<status status="NOT RUN" starttime="20210513 17:25:25.166" endtime="20210513 17:25:25.166"/>
</kw>
<status status="FAIL" starttime="20210513 17:20:25.239" endtime="20210513 17:25:25.166"/>
</kw>
<timeout value="5 minutes"/>
<status status="FAIL" starttime="20210513 17:20:25.105" endtime="20210513 17:25:25.166">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" starttime="20210513 17:00:46.627" endtime="20210513 17:25:25.176"/>
</suite>
<status status="FAIL" starttime="20210513 16:36:59.062" endtime="20210513 17:25:25.195"/>
</suite>
<suite id="s1-s2" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${hostname}</var>
<arg>hostname</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:53.734" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:53.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:53.737" level="INFO">${output} = scm</msg>
<status status="PASS" starttime="20210513 16:36:53.730" endtime="20210513 16:36:53.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:53.739" level="INFO">scm</msg>
<status status="PASS" starttime="20210513 16:36:53.738" endtime="20210513 16:36:53.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:53.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:53.740" endtime="20210513 16:36:53.741"/>
</kw>
<status status="PASS" starttime="20210513 16:36:53.730" endtime="20210513 16:36:53.741"/>
</kw>
<msg timestamp="20210513 16:36:53.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:53.729" endtime="20210513 16:36:53.741"/>
</kw>
<msg timestamp="20210513 16:36:53.741" level="INFO">${hostname} = scm</msg>
<status status="PASS" starttime="20210513 16:36:53.729" endtime="20210513 16:36:53.742"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210513 16:36:53.742" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210513 16:36:53.742" endtime="20210513 16:36:53.743"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210513 16:36:53.747" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210513 16:36:53.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210513 16:36:53.754" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210513 16:36:53.745" endtime="20210513 16:36:53.754"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210513 16:36:53.755" level="INFO"/>
<status status="PASS" starttime="20210513 16:36:53.754" endtime="20210513 16:36:53.755"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210513 16:36:53.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210513 16:36:53.755" endtime="20210513 16:36:53.756"/>
</kw>
<status status="PASS" starttime="20210513 16:36:53.744" endtime="20210513 16:36:53.756"/>
</kw>
<msg timestamp="20210513 16:36:53.756" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210513 16:36:53.744" endtime="20210513 16:36:53.756"/>
</kw>
<status status="PASS" starttime="20210513 16:36:53.743" endtime="20210513 16:36:53.756"/>
</kw>
<status status="PASS" starttime="20210513 16:36:53.743" endtime="20210513 16:36:53.757"/>
</kw>
<status status="PASS" starttime="20210513 16:36:53.728" endtime="20210513 16:36:53.757"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210513 16:36:53.727" endtime="20210513 16:36:53.757"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210513 16:36:53.672" endtime="20210513 16:36:53.758"/>
</suite>
<status status="FAIL" starttime="N/A" endtime="N/A" elapsedtime="2906219"/>
</suite>
<statistics>
<total>
<stat pass="20" fail="10" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="20" fail="10" skip="0" id="s1" name="ozonesecure">ozonesecure</stat>
<stat pass="19" fail="10" skip="0" id="s1-s1" name="Basic">ozonesecure.Basic</stat>
<stat pass="1" fail="1" skip="0" id="s1-s1-s1" name="Basic">ozonesecure.Basic.Basic</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s2" name="Getconf">ozonesecure.Basic.Getconf</stat>
<stat pass="10" fail="5" skip="0" id="s1-s1-s3" name="Links">ozonesecure.Basic.Links</stat>
<stat pass="0" fail="1" skip="0" id="s1-s1-s4" name="Ozone-Shell-Single">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat pass="4" fail="3" skip="0" id="s1-s1-s5" name="Ozone-Shell">ozonesecure.Basic.Ozone-Shell</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="Kinit">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
