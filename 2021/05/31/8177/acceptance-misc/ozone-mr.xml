<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210531 14:25:05.179" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite id="s1-s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:14:53.663" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:03.166" level="INFO">${rc} = 255</msg>
<msg timestamp="20210531 14:15:03.166" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:14:53.655" endtime="20210531 14:15:03.166"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:03.168" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:15:03.167" endtime="20210531 14:15:03.168"/>
</kw>
<msg timestamp="20210531 14:15:03.168" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:14:53.653" endtime="20210531 14:15:03.168"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:03.176" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:06.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:06.049" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:03.172" endtime="20210531 14:15:06.049"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:06.051" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:06.050" endtime="20210531 14:15:06.051"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:06.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:06.051" endtime="20210531 14:15:06.052"/>
</kw>
<status status="PASS" starttime="20210531 14:15:03.171" endtime="20210531 14:15:06.052"/>
</kw>
<msg timestamp="20210531 14:15:06.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:03.170" endtime="20210531 14:15:06.052"/>
</kw>
<msg timestamp="20210531 14:15:06.053" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210531 14:15:03.170" endtime="20210531 14:15:06.053"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:15:06.053" endtime="20210531 14:15:06.053"/>
</kw>
<status status="PASS" starttime="20210531 14:15:03.169" endtime="20210531 14:15:06.054"/>
</kw>
<status status="PASS" starttime="20210531 14:15:03.169" endtime="20210531 14:15:06.054"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:06.059" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:08.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:08.464" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:06.057" endtime="20210531 14:15:08.464"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:08.465" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:08.464" endtime="20210531 14:15:08.465"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:08.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:08.466" endtime="20210531 14:15:08.466"/>
</kw>
<status status="PASS" starttime="20210531 14:15:06.056" endtime="20210531 14:15:08.467"/>
</kw>
<msg timestamp="20210531 14:15:08.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:06.056" endtime="20210531 14:15:08.467"/>
</kw>
<status status="PASS" starttime="20210531 14:15:06.055" endtime="20210531 14:15:08.467"/>
</kw>
<status status="PASS" starttime="20210531 14:15:06.054" endtime="20210531 14:15:08.467"/>
</kw>
<status status="PASS" starttime="20210531 14:15:06.054" endtime="20210531 14:15:08.467"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210531 14:15:08.468" endtime="20210531 14:15:08.468"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:08.472" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:10.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:10.950" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:15...</msg>
<status status="PASS" starttime="20210531 14:15:08.470" endtime="20210531 14:15:10.951"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:10.952" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:15:08.430Z",
  "modificationTime" : "2021-05-31T14:15:08.430Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210531 14:15:10.951" endtime="20210531 14:15:10.952"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:10.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:10.952" endtime="20210531 14:15:10.953"/>
</kw>
<status status="PASS" starttime="20210531 14:15:08.469" endtime="20210531 14:15:10.953"/>
</kw>
<msg timestamp="20210531 14:15:10.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:08.469" endtime="20210531 14:15:10.954"/>
</kw>
<msg timestamp="20210531 14:15:10.954" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:15...</msg>
<status status="PASS" starttime="20210531 14:15:08.468" endtime="20210531 14:15:10.954"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:15:10.954" endtime="20210531 14:15:10.954"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:15:10.960" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:15:10.959" endtime="20210531 14:15:10.960"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:15:10.961" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:15:10.960" endtime="20210531 14:15:10.961"/>
</kw>
<status status="PASS" starttime="20210531 14:15:10.959" endtime="20210531 14:15:10.961"/>
</kw>
<msg timestamp="20210531 14:15:10.961" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:15:10.957" endtime="20210531 14:15:10.961"/>
</kw>
<status status="PASS" starttime="20210531 14:15:10.956" endtime="20210531 14:15:10.962"/>
</kw>
<msg timestamp="20210531 14:15:10.962" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 14:15:10.956" endtime="20210531 14:15:10.962"/>
</kw>
<msg timestamp="20210531 14:15:10.962" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 14:15:10.955" endtime="20210531 14:15:10.962"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:10.966" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:13.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:13.550" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:10.964" endtime="20210531 14:15:13.550"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:13.551" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:13.551" endtime="20210531 14:15:13.551"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:13.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:13.552" endtime="20210531 14:15:13.552"/>
</kw>
<status status="PASS" starttime="20210531 14:15:10.963" endtime="20210531 14:15:13.553"/>
</kw>
<msg timestamp="20210531 14:15:13.553" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:10.963" endtime="20210531 14:15:13.553"/>
</kw>
<status status="PASS" starttime="20210531 14:15:10.962" endtime="20210531 14:15:13.553"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:13.557" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:19.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:19.182" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:13.555" endtime="20210531 14:15:19.182"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:19.184" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:19.182" endtime="20210531 14:15:19.184"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:19.185" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:19.184" endtime="20210531 14:15:19.185"/>
</kw>
<status status="PASS" starttime="20210531 14:15:13.555" endtime="20210531 14:15:19.185"/>
</kw>
<msg timestamp="20210531 14:15:19.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:13.554" endtime="20210531 14:15:19.185"/>
</kw>
<status status="PASS" starttime="20210531 14:15:13.553" endtime="20210531 14:15:19.186"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:19.191" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:24.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:24.192" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:19.189" endtime="20210531 14:15:24.192"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:24.193" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:24.192" endtime="20210531 14:15:24.193"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:24.194" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:24.194" endtime="20210531 14:15:24.194"/>
</kw>
<status status="PASS" starttime="20210531 14:15:19.188" endtime="20210531 14:15:24.195"/>
</kw>
<msg timestamp="20210531 14:15:24.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:19.188" endtime="20210531 14:15:24.195"/>
</kw>
<status status="PASS" starttime="20210531 14:15:19.186" endtime="20210531 14:15:24.195"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:24.200" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:28.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:28.737" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:24.198" endtime="20210531 14:15:28.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:28.739" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:28.738" endtime="20210531 14:15:28.739"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:28.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:28.739" endtime="20210531 14:15:28.740"/>
</kw>
<status status="PASS" starttime="20210531 14:15:24.197" endtime="20210531 14:15:28.740"/>
</kw>
<msg timestamp="20210531 14:15:28.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:24.196" endtime="20210531 14:15:28.741"/>
</kw>
<status status="PASS" starttime="20210531 14:15:24.195" endtime="20210531 14:15:28.741"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:14:53.652" endtime="20210531 14:15:28.741"/>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:15:28.748" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:15:28.747" endtime="20210531 14:15:28.748"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:15:28.749" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:15:28.748" endtime="20210531 14:15:28.749"/>
</kw>
<status status="PASS" starttime="20210531 14:15:28.747" endtime="20210531 14:15:28.750"/>
</kw>
<msg timestamp="20210531 14:15:28.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:15:28.745" endtime="20210531 14:15:28.750"/>
</kw>
<status status="PASS" starttime="20210531 14:15:28.744" endtime="20210531 14:15:28.750"/>
</kw>
<msg timestamp="20210531 14:15:28.750" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:15:28.744" endtime="20210531 14:15:28.750"/>
</kw>
<msg timestamp="20210531 14:15:28.751" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:15:28.743" endtime="20210531 14:15:28.751"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:28.756" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:31.288" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:31.288" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:28.752" endtime="20210531 14:15:31.288"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:31.290" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:31.288" endtime="20210531 14:15:31.290"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:31.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:31.290" endtime="20210531 14:15:31.291"/>
</kw>
<status status="PASS" starttime="20210531 14:15:28.752" endtime="20210531 14:15:31.291"/>
</kw>
<msg timestamp="20210531 14:15:31.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:28.751" endtime="20210531 14:15:31.291"/>
</kw>
<status status="PASS" starttime="20210531 14:15:28.751" endtime="20210531 14:15:31.291"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:31.295" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:33.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:33.666" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:15:31.293" endtime="20210531 14:15:33.666"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:33.667" level="INFO"/>
<status status="PASS" starttime="20210531 14:15:33.666" endtime="20210531 14:15:33.667"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:33.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:33.667" endtime="20210531 14:15:33.668"/>
</kw>
<status status="PASS" starttime="20210531 14:15:31.292" endtime="20210531 14:15:33.669"/>
</kw>
<msg timestamp="20210531 14:15:33.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:31.292" endtime="20210531 14:15:33.669"/>
</kw>
<status status="PASS" starttime="20210531 14:15:31.292" endtime="20210531 14:15:33.669"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:15:28.742" endtime="20210531 14:15:33.670"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210531 14:14:53.576" endtime="20210531 14:15:33.671"/>
</suite>
<suite id="s1-s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:17:17.005" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:17:17.004" endtime="20210531 14:17:17.005"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:17:17.006" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:17:17.005" endtime="20210531 14:17:17.006"/>
</kw>
<status status="PASS" starttime="20210531 14:17:17.004" endtime="20210531 14:17:17.006"/>
</kw>
<msg timestamp="20210531 14:17:17.006" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:17:17.003" endtime="20210531 14:17:17.006"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:17:17.007" endtime="20210531 14:17:17.007"/>
</kw>
<msg timestamp="20210531 14:17:17.008" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:17:17.006" endtime="20210531 14:17:17.008"/>
</kw>
<status status="PASS" starttime="20210531 14:17:17.003" endtime="20210531 14:17:17.008"/>
</kw>
<msg timestamp="20210531 14:17:17.008" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:17:17.002" endtime="20210531 14:17:17.008"/>
</kw>
<msg timestamp="20210531 14:17:17.008" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:17:17.001" endtime="20210531 14:17:17.008"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:17:17.009" level="INFO">${random} = 08972</msg>
<status status="PASS" starttime="20210531 14:17:17.009" endtime="20210531 14:17:17.009"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:17:17.015" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-08972 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:17:20.693" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:17:20.693" level="INFO">${output} = 2021-05-31 14:17:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:17:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 ...</msg>
<status status="PASS" starttime="20210531 14:17:17.010" endtime="20210531 14:17:20.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:17:20.694" level="INFO">2021-05-31 14:17:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:17:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 14:17:19 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-05-31 14:17:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:17:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BC77EB4A371D-&gt;ecbbd5b0-58c5-4763-b7cc-0aa2a50b3d5f
2021-05-31 14:17:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 14:17:20.693" endtime="20210531 14:17:20.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:17:20.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:17:20.694" endtime="20210531 14:17:20.695"/>
</kw>
<status status="PASS" starttime="20210531 14:17:17.010" endtime="20210531 14:17:20.695"/>
</kw>
<msg timestamp="20210531 14:17:20.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:17:17.010" endtime="20210531 14:17:20.696"/>
</kw>
<msg timestamp="20210531 14:17:20.696" level="INFO">${result} = 2021-05-31 14:17:19 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:17:19 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 ...</msg>
<status status="PASS" starttime="20210531 14:17:17.009" endtime="20210531 14:17:20.696"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:17:20.700" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:17:22.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:17:22.683" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:17 ofs://om/volume1/bucket1/ozone-08972
-rw-...</msg>
<status status="PASS" starttime="20210531 14:17:20.698" endtime="20210531 14:17:22.683"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:17:22.684" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:17 ofs://om/volume1/bucket1/ozone-08972
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:15 ofs://om/volume1/bucket1/ozone-85513
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:16 ofs://om/volume1/bucket1/wordcount-85coEZHr.txt</msg>
<status status="PASS" starttime="20210531 14:17:22.683" endtime="20210531 14:17:22.684"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:17:22.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:17:22.685" endtime="20210531 14:17:22.685"/>
</kw>
<status status="PASS" starttime="20210531 14:17:20.697" endtime="20210531 14:17:22.686"/>
</kw>
<msg timestamp="20210531 14:17:22.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:17:20.697" endtime="20210531 14:17:22.686"/>
</kw>
<msg timestamp="20210531 14:17:22.686" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:17 ofs://om/volume1/bucket1/ozone-08972
-rw-...</msg>
<status status="PASS" starttime="20210531 14:17:20.696" endtime="20210531 14:17:22.686"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:17:22.686" endtime="20210531 14:17:22.687"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 14:17:17.000" endtime="20210531 14:17:22.687"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 14:17:16.936" endtime="20210531 14:17:22.688"/>
</suite>
<suite id="s1-s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:15:38.788" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:15:38.788" endtime="20210531 14:15:38.788"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:15:38.789" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:15:38.789" endtime="20210531 14:15:38.789"/>
</kw>
<status status="PASS" starttime="20210531 14:15:38.787" endtime="20210531 14:15:38.790"/>
</kw>
<msg timestamp="20210531 14:15:38.790" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:15:38.786" endtime="20210531 14:15:38.790"/>
</kw>
<status status="PASS" starttime="20210531 14:15:38.786" endtime="20210531 14:15:38.790"/>
</kw>
<msg timestamp="20210531 14:15:38.790" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:15:38.785" endtime="20210531 14:15:38.790"/>
</kw>
<msg timestamp="20210531 14:15:38.791" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:15:38.784" endtime="20210531 14:15:38.791"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:15:38.791" level="INFO">${random} = 85513</msg>
<status status="PASS" starttime="20210531 14:15:38.791" endtime="20210531 14:15:38.791"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:38.797" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-85513 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:43.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:43.142" level="INFO">${output} = 2021-05-31 14:15:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:15:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 ...</msg>
<status status="PASS" starttime="20210531 14:15:38.793" endtime="20210531 14:15:43.142"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:43.143" level="INFO">2021-05-31 14:15:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:15:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 14:15:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-05-31 14:15:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:15:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-56264D689C16-&gt;d51836cb-9bed-4087-b0a2-4466376f2af6
2021-05-31 14:15:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 14:15:43.142" endtime="20210531 14:15:43.143"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:43.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:43.143" endtime="20210531 14:15:43.144"/>
</kw>
<status status="PASS" starttime="20210531 14:15:38.792" endtime="20210531 14:15:43.144"/>
</kw>
<msg timestamp="20210531 14:15:43.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:38.792" endtime="20210531 14:15:43.144"/>
</kw>
<msg timestamp="20210531 14:15:43.145" level="INFO">${result} = 2021-05-31 14:15:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:15:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 ...</msg>
<status status="PASS" starttime="20210531 14:15:38.791" endtime="20210531 14:15:43.145"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:43.148" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:45.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:45.150" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:15 o3fs://bucket1.volume1.om/ozone-85513
dr...</msg>
<status status="PASS" starttime="20210531 14:15:43.147" endtime="20210531 14:15:45.150"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:45.151" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:15 o3fs://bucket1.volume1.om/ozone-85513
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:15:45.151" endtime="20210531 14:15:45.151"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:45.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:45.152" endtime="20210531 14:15:45.152"/>
</kw>
<status status="PASS" starttime="20210531 14:15:43.146" endtime="20210531 14:15:45.153"/>
</kw>
<msg timestamp="20210531 14:15:45.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:43.146" endtime="20210531 14:15:45.153"/>
</kw>
<msg timestamp="20210531 14:15:45.153" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-05-31 14:15 o3fs://bucket1.volume1.om/ozone-85513
dr...</msg>
<status status="PASS" starttime="20210531 14:15:43.145" endtime="20210531 14:15:45.153"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:15:45.153" endtime="20210531 14:15:45.154"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 14:15:38.782" endtime="20210531 14:15:45.154"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 14:15:38.711" endtime="20210531 14:15:45.155"/>
</suite>
<suite id="s1-s1-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:17:27.774" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:17:27.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:17:27.792" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:17:27.770" endtime="20210531 14:17:27.792"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:17:27.793" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:17:27.793" endtime="20210531 14:17:27.794"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:17:27.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:17:27.794" endtime="20210531 14:17:27.794"/>
</kw>
<status status="PASS" starttime="20210531 14:17:27.770" endtime="20210531 14:17:27.795"/>
</kw>
<msg timestamp="20210531 14:17:27.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:17:27.769" endtime="20210531 14:17:27.795"/>
</kw>
<msg timestamp="20210531 14:17:27.795" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:17:27.769" endtime="20210531 14:17:27.795"/>
</kw>
<msg timestamp="20210531 14:17:27.795" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:17:27.768" endtime="20210531 14:17:27.796"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:17:27.801" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:17:27.800" endtime="20210531 14:17:27.801"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:17:27.801" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:17:27.801" endtime="20210531 14:17:27.801"/>
</kw>
<status status="PASS" starttime="20210531 14:17:27.800" endtime="20210531 14:17:27.801"/>
</kw>
<msg timestamp="20210531 14:17:27.802" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:17:27.799" endtime="20210531 14:17:27.802"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:17:27.802" endtime="20210531 14:17:27.803"/>
</kw>
<msg timestamp="20210531 14:17:27.803" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:17:27.802" endtime="20210531 14:17:27.803"/>
</kw>
<status status="PASS" starttime="20210531 14:17:27.798" endtime="20210531 14:17:27.804"/>
</kw>
<msg timestamp="20210531 14:17:27.804" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:17:27.798" endtime="20210531 14:17:27.804"/>
</kw>
<msg timestamp="20210531 14:17:27.804" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:17:27.796" endtime="20210531 14:17:27.804"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:17:27.812" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:18:09.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:18:09.937" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:17:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:17:30 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210531 14:17:27.806" endtime="20210531 14:18:09.938"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:18:09.939" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:17:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:17:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 14:17:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-05-31 14:17:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:17:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7697336D6087-&gt;d51836cb-9bed-4087-b0a2-4466376f2af6
2021-05-31 14:17:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-31 14:17:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:17:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:17:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79ECE7A66392-&gt;ecbbd5b0-58c5-4763-b7cc-0aa2a50b3d5f
2021-05-31 14:17:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:17:31 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-05-31 14:17:34 INFO  JobSubmitter:198 - number of splits:3
2021-05-31 14:17:34 INFO  JobSubmitter:287 - Submitting tokens for job: job_1622470453298_0003
2021-05-31 14:17:34 INFO  YarnClientImpl:273 - Submitted application application_1622470453298_0003
2021-05-31 14:17:34 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1622470453298_0003/
2021-05-31 14:17:34 INFO  Job:1339 - Running job: job_1622470453298_0003
2021-05-31 14:17:42 INFO  Job:1360 - Job job_1622470453298_0003 running in uber mode : false
2021-05-31 14:17:42 INFO  Job:1367 -  map 0% reduce 0%
2021-05-31 14:17:49 INFO  Job:1367 -  map 33% reduce 0%
2021-05-31 14:17:54 INFO  Job:1367 -  map 67% reduce 0%
2021-05-31 14:17:59 INFO  Job:1367 -  map 100% reduce 0%
2021-05-31 14:18:06 INFO  Job:1367 -  map 100% reduce 100%
2021-05-31 14:18:09 INFO  Job:1378 - Job job_1622470453298_0003 completed successfully
2021-05-31 14:18:09 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=633165
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43076
		Total time spent by all reduces in occupied slots (ms)=25348
		Total time spent by all map tasks (ms)=10769
		Total time spent by all reduce tasks (ms)=6337
		Total vcore-milliseconds taken by all map tasks=10769
		Total vcore-milliseconds taken by all reduce tasks=6337
		Total megabyte-milliseconds taken by all map tasks=44109824
		Total megabyte-milliseconds taken by all reduce tasks=25956352
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=815
		CPU time spent (ms)=6710
		Physical memory (bytes) snapshot=1466511360
		Virtual memory (bytes) snapshot=15747497984
		Total committed heap usage (bytes)=1300758528
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.986 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 14:18:09.938" endtime="20210531 14:18:09.939"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:18:09.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:18:09.939" endtime="20210531 14:18:09.940"/>
</kw>
<status status="PASS" starttime="20210531 14:17:27.805" endtime="20210531 14:18:09.940"/>
</kw>
<msg timestamp="20210531 14:18:09.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:17:27.805" endtime="20210531 14:18:09.940"/>
</kw>
<msg timestamp="20210531 14:18:09.941" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:17:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:17:30 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210531 14:17:27.804" endtime="20210531 14:18:09.941"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:18:09.941" endtime="20210531 14:18:09.942"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:17:27.768" endtime="20210531 14:18:09.942"/>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:18:09.951" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:18:09.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:18:09.956" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:18:09.949" endtime="20210531 14:18:09.957"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:18:09.957" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:18:09.957" endtime="20210531 14:18:09.958"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:18:09.958" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:18:09.958" endtime="20210531 14:18:09.958"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.948" endtime="20210531 14:18:09.959"/>
</kw>
<msg timestamp="20210531 14:18:09.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:18:09.947" endtime="20210531 14:18:09.959"/>
</kw>
<msg timestamp="20210531 14:18:09.959" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:18:09.946" endtime="20210531 14:18:09.959"/>
</kw>
<msg timestamp="20210531 14:18:09.960" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:18:09.945" endtime="20210531 14:18:09.960"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:18:09.961" level="INFO">${random} = sH74HACy</msg>
<status status="PASS" starttime="20210531 14:18:09.960" endtime="20210531 14:18:09.961"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:18:09.965" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:18:09.964" endtime="20210531 14:18:09.965"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:18:09.966" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:18:09.965" endtime="20210531 14:18:09.966"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.964" endtime="20210531 14:18:09.966"/>
</kw>
<msg timestamp="20210531 14:18:09.966" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:18:09.963" endtime="20210531 14:18:09.967"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:18:09.967" endtime="20210531 14:18:09.968"/>
</kw>
<msg timestamp="20210531 14:18:09.968" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:18:09.967" endtime="20210531 14:18:09.968"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.962" endtime="20210531 14:18:09.968"/>
</kw>
<msg timestamp="20210531 14:18:09.968" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:18:09.962" endtime="20210531 14:18:09.968"/>
</kw>
<msg timestamp="20210531 14:18:09.969" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:18:09.961" endtime="20210531 14:18:09.969"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:18:09.973" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:18:09.973" endtime="20210531 14:18:09.973"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:18:09.974" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:18:09.973" endtime="20210531 14:18:09.974"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.972" endtime="20210531 14:18:09.974"/>
</kw>
<msg timestamp="20210531 14:18:09.974" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:18:09.971" endtime="20210531 14:18:09.974"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:18:09.976" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210531 14:18:09.976" endtime="20210531 14:18:09.976"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:18:09.977" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210531 14:18:09.976" endtime="20210531 14:18:09.977"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.975" endtime="20210531 14:18:09.977"/>
</kw>
<msg timestamp="20210531 14:18:09.978" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210531 14:18:09.974" endtime="20210531 14:18:09.978"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.970" endtime="20210531 14:18:09.978"/>
</kw>
<msg timestamp="20210531 14:18:09.978" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 14:18:09.970" endtime="20210531 14:18:09.978"/>
</kw>
<msg timestamp="20210531 14:18:09.978" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 14:18:09.969" endtime="20210531 14:18:09.978"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:18:09.983" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:18:09.982" endtime="20210531 14:18:09.983"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:18:09.983" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:18:09.983" endtime="20210531 14:18:09.983"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.981" endtime="20210531 14:18:09.984"/>
</kw>
<msg timestamp="20210531 14:18:09.984" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:18:09.981" endtime="20210531 14:18:09.984"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:18:09.986" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210531 14:18:09.985" endtime="20210531 14:18:09.986"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:18:09.986" level="INFO">${result} = /wordcount-sH74HACy.txt</msg>
<status status="PASS" starttime="20210531 14:18:09.986" endtime="20210531 14:18:09.986"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.985" endtime="20210531 14:18:09.987"/>
</kw>
<msg timestamp="20210531 14:18:09.987" level="INFO">${path_with_leading} = /wordcount-sH74HACy.txt</msg>
<status status="PASS" starttime="20210531 14:18:09.984" endtime="20210531 14:18:09.987"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.980" endtime="20210531 14:18:09.987"/>
</kw>
<msg timestamp="20210531 14:18:09.987" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-sH74HACy.txt</msg>
<status status="PASS" starttime="20210531 14:18:09.979" endtime="20210531 14:18:09.987"/>
</kw>
<msg timestamp="20210531 14:18:09.987" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-sH74HACy.txt</msg>
<status status="PASS" starttime="20210531 14:18:09.979" endtime="20210531 14:18:09.987"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:18:09.991" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-sH74HACy.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:18:51.736" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:18:51.736" level="INFO">${output} = 2021-05-31 14:18:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:18:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210531 14:18:09.989" endtime="20210531 14:18:51.736"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:18:51.737" level="INFO">2021-05-31 14:18:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:18:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:18:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:18:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 14:18:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-05-31 14:18:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:18:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-167E1175A472-&gt;ecbbd5b0-58c5-4763-b7cc-0aa2a50b3d5f
2021-05-31 14:18:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:18:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-05-31 14:18:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B326925B550A-&gt;d51836cb-9bed-4087-b0a2-4466376f2af6
2021-05-31 14:18:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:18:16 INFO  JobSubmitter:198 - number of splits:3
2021-05-31 14:18:16 INFO  JobSubmitter:287 - Submitting tokens for job: job_1622470453298_0004
2021-05-31 14:18:16 INFO  YarnClientImpl:273 - Submitted application application_1622470453298_0004
2021-05-31 14:18:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1622470453298_0004/
2021-05-31 14:18:16 INFO  Job:1339 - Running job: job_1622470453298_0004
2021-05-31 14:18:24 INFO  Job:1360 - Job job_1622470453298_0004 running in uber mode : false
2021-05-31 14:18:24 INFO  Job:1367 -  map 0% reduce 0%
2021-05-31 14:18:31 INFO  Job:1367 -  map 33% reduce 0%
2021-05-31 14:18:36 INFO  Job:1367 -  map 67% reduce 0%
2021-05-31 14:18:42 INFO  Job:1367 -  map 100% reduce 0%
2021-05-31 14:18:48 INFO  Job:1367 -  map 100% reduce 100%
2021-05-31 14:18:51 INFO  Job:1378 - Job job_1622470453298_0004 completed successfully
2021-05-31 14:18:51 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=696045
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39773
		OFS: Number of bytes written=22252
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43572
		Total time spent by all reduces in occupied slots (ms)=25260
		Total time spent by all map tasks (ms)=10893
		Total time spent by all reduce tasks (ms)=6315
		Total vcore-milliseconds taken by all map tasks=10893
		Total vcore-milliseconds taken by all reduce tasks=6315
		Total megabyte-milliseconds taken by all map tasks=44617728
		Total megabyte-milliseconds taken by all reduce tasks=25866240
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=749
		CPU time spent (ms)=8050
		Physical memory (bytes) snapshot=1545797632
		Virtual memory (bytes) snapshot=15780012032
		Total committed heap usage (bytes)=1335361536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 14:18:51.737" endtime="20210531 14:18:51.737"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:18:51.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:18:51.738" endtime="20210531 14:18:51.738"/>
</kw>
<status status="PASS" starttime="20210531 14:18:09.989" endtime="20210531 14:18:51.739"/>
</kw>
<msg timestamp="20210531 14:18:51.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:18:09.988" endtime="20210531 14:18:51.739"/>
</kw>
<msg timestamp="20210531 14:18:51.739" level="INFO">${output} = 2021-05-31 14:18:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:18:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210531 14:18:09.988" endtime="20210531 14:18:51.739"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:18:51.740" endtime="20210531 14:18:51.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:18:51.740" endtime="20210531 14:18:51.740"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:18:09.943" endtime="20210531 14:18:51.741"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 14:17:27.705" endtime="20210531 14:18:51.743"/>
</suite>
<suite id="s1-s1-s5" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:50.205" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:15:50.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:15:50.210" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:15:50.201" endtime="20210531 14:15:50.210"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:15:50.211" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:15:50.210" endtime="20210531 14:15:50.211"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:15:50.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:15:50.211" endtime="20210531 14:15:50.212"/>
</kw>
<status status="PASS" starttime="20210531 14:15:50.200" endtime="20210531 14:15:50.212"/>
</kw>
<msg timestamp="20210531 14:15:50.212" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:50.200" endtime="20210531 14:15:50.212"/>
</kw>
<msg timestamp="20210531 14:15:50.212" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:15:50.200" endtime="20210531 14:15:50.212"/>
</kw>
<msg timestamp="20210531 14:15:50.213" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:15:50.199" endtime="20210531 14:15:50.213"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:15:50.218" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:15:50.217" endtime="20210531 14:15:50.218"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:15:50.219" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:15:50.218" endtime="20210531 14:15:50.219"/>
</kw>
<status status="PASS" starttime="20210531 14:15:50.217" endtime="20210531 14:15:50.219"/>
</kw>
<msg timestamp="20210531 14:15:50.219" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:15:50.216" endtime="20210531 14:15:50.219"/>
</kw>
<status status="PASS" starttime="20210531 14:15:50.215" endtime="20210531 14:15:50.219"/>
</kw>
<msg timestamp="20210531 14:15:50.220" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:15:50.215" endtime="20210531 14:15:50.220"/>
</kw>
<msg timestamp="20210531 14:15:50.220" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:15:50.213" endtime="20210531 14:15:50.220"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:15:50.223" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:16:34.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:16:34.678" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:15:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:15:52 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210531 14:15:50.222" endtime="20210531 14:16:34.678"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:16:34.679" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:15:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:15:52 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 14:15:52 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-05-31 14:15:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:15:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-78E58C75C0CB-&gt;ecbbd5b0-58c5-4763-b7cc-0aa2a50b3d5f
2021-05-31 14:15:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-05-31 14:15:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8FF8F44A6206-&gt;d51836cb-9bed-4087-b0a2-4466376f2af6
2021-05-31 14:15:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-05-31 14:15:56 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:15:56 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-05-31 14:15:56 INFO  JobSubmitter:198 - number of splits:3
2021-05-31 14:15:57 INFO  JobSubmitter:287 - Submitting tokens for job: job_1622470453298_0001
2021-05-31 14:15:57 INFO  YarnClientImpl:273 - Submitted application application_1622470453298_0001
2021-05-31 14:15:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1622470453298_0001/
2021-05-31 14:15:57 INFO  Job:1339 - Running job: job_1622470453298_0001
2021-05-31 14:16:07 INFO  Job:1360 - Job job_1622470453298_0001 running in uber mode : false
2021-05-31 14:16:07 INFO  Job:1367 -  map 0% reduce 0%
2021-05-31 14:16:14 INFO  Job:1367 -  map 33% reduce 0%
2021-05-31 14:16:20 INFO  Job:1367 -  map 67% reduce 0%
2021-05-31 14:16:25 INFO  Job:1367 -  map 100% reduce 0%
2021-05-31 14:16:32 INFO  Job:1367 -  map 100% reduce 100%
2021-05-31 14:16:33 INFO  Job:1378 - Job job_1622470453298_0001 completed successfully
2021-05-31 14:16:34 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=633385
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44644
		Total time spent by all reduces in occupied slots (ms)=26912
		Total time spent by all map tasks (ms)=11161
		Total time spent by all reduce tasks (ms)=6728
		Total vcore-milliseconds taken by all map tasks=11161
		Total vcore-milliseconds taken by all reduce tasks=6728
		Total megabyte-milliseconds taken by all map tasks=45715456
		Total megabyte-milliseconds taken by all reduce tasks=27557888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=625
		CPU time spent (ms)=8000
		Physical memory (bytes) snapshot=1365278720
		Virtual memory (bytes) snapshot=15787503616
		Total committed heap usage (bytes)=1149239296
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.865 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 14:16:34.678" endtime="20210531 14:16:34.679"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:16:34.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:16:34.679" endtime="20210531 14:16:34.680"/>
</kw>
<status status="PASS" starttime="20210531 14:15:50.221" endtime="20210531 14:16:34.680"/>
</kw>
<msg timestamp="20210531 14:16:34.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:15:50.221" endtime="20210531 14:16:34.680"/>
</kw>
<msg timestamp="20210531 14:16:34.681" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:15:52 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:15:52 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" starttime="20210531 14:15:50.220" endtime="20210531 14:16:34.681"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:16:34.681" endtime="20210531 14:16:34.682"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:15:50.198" endtime="20210531 14:16:34.682"/>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:16:34.696" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:16:34.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:16:34.705" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:16:34.693" endtime="20210531 14:16:34.705"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:16:34.706" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:16:34.706" endtime="20210531 14:16:34.706"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:16:34.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:16:34.707" endtime="20210531 14:16:34.708"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.692" endtime="20210531 14:16:34.708"/>
</kw>
<msg timestamp="20210531 14:16:34.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:16:34.692" endtime="20210531 14:16:34.708"/>
</kw>
<msg timestamp="20210531 14:16:34.709" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:16:34.691" endtime="20210531 14:16:34.709"/>
</kw>
<msg timestamp="20210531 14:16:34.709" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" starttime="20210531 14:16:34.691" endtime="20210531 14:16:34.709"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:16:34.709" level="INFO">${random} = 85coEZHr</msg>
<status status="PASS" starttime="20210531 14:16:34.709" endtime="20210531 14:16:34.710"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:16:34.714" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:16:34.713" endtime="20210531 14:16:34.714"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:16:34.715" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:16:34.714" endtime="20210531 14:16:34.715"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.713" endtime="20210531 14:16:34.715"/>
</kw>
<msg timestamp="20210531 14:16:34.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:16:34.712" endtime="20210531 14:16:34.715"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.711" endtime="20210531 14:16:34.716"/>
</kw>
<msg timestamp="20210531 14:16:34.716" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:16:34.711" endtime="20210531 14:16:34.716"/>
</kw>
<msg timestamp="20210531 14:16:34.716" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:16:34.710" endtime="20210531 14:16:34.716"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:16:34.720" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:16:34.720" endtime="20210531 14:16:34.720"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:16:34.721" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:16:34.720" endtime="20210531 14:16:34.721"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.719" endtime="20210531 14:16:34.721"/>
</kw>
<msg timestamp="20210531 14:16:34.721" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:16:34.718" endtime="20210531 14:16:34.721"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.718" endtime="20210531 14:16:34.722"/>
</kw>
<msg timestamp="20210531 14:16:34.722" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 14:16:34.717" endtime="20210531 14:16:34.722"/>
</kw>
<msg timestamp="20210531 14:16:34.722" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 14:16:34.716" endtime="20210531 14:16:34.722"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:16:34.726" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:16:34.726" endtime="20210531 14:16:34.726"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:16:34.727" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:16:34.726" endtime="20210531 14:16:34.727"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.725" endtime="20210531 14:16:34.727"/>
</kw>
<msg timestamp="20210531 14:16:34.727" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:16:34.725" endtime="20210531 14:16:34.727"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.724" endtime="20210531 14:16:34.728"/>
</kw>
<msg timestamp="20210531 14:16:34.728" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-85coEZHr.txt</msg>
<status status="PASS" starttime="20210531 14:16:34.723" endtime="20210531 14:16:34.728"/>
</kw>
<msg timestamp="20210531 14:16:34.728" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-85coEZHr.txt</msg>
<status status="PASS" starttime="20210531 14:16:34.722" endtime="20210531 14:16:34.728"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:16:34.732" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-85coEZHr.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:17:11.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:17:11.842" level="INFO">${output} = 2021-05-31 14:16:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:16:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210531 14:16:34.730" endtime="20210531 14:17:11.842"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:17:11.844" level="INFO">2021-05-31 14:16:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:16:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:16:37 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-05-31 14:16:37 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-05-31 14:16:37 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-05-31 14:16:37 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:16:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3F1D19A9F57F-&gt;d51836cb-9bed-4087-b0a2-4466376f2af6
2021-05-31 14:16:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:16:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-05-31 14:16:38 INFO  JobSubmitter:198 - number of splits:3
2021-05-31 14:16:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1622470453298_0002
2021-05-31 14:16:39 INFO  YarnClientImpl:273 - Submitted application application_1622470453298_0002
2021-05-31 14:16:39 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1622470453298_0002/
2021-05-31 14:16:39 INFO  Job:1339 - Running job: job_1622470453298_0002
2021-05-31 14:16:47 INFO  Job:1360 - Job job_1622470453298_0002 running in uber mode : false
2021-05-31 14:16:47 INFO  Job:1367 -  map 0% reduce 0%
2021-05-31 14:16:53 INFO  Job:1367 -  map 33% reduce 0%
2021-05-31 14:16:58 INFO  Job:1367 -  map 67% reduce 0%
2021-05-31 14:17:03 INFO  Job:1367 -  map 100% reduce 0%
2021-05-31 14:17:08 INFO  Job:1367 -  map 100% reduce 100%
2021-05-31 14:17:11 INFO  Job:1378 - Job job_1622470453298_0002 completed successfully
2021-05-31 14:17:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=696129
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39776
		O3FS: Number of bytes written=22252
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42792
		Total time spent by all reduces in occupied slots (ms)=15664
		Total time spent by all map tasks (ms)=10698
		Total time spent by all reduce tasks (ms)=3916
		Total vcore-milliseconds taken by all map tasks=10698
		Total vcore-milliseconds taken by all reduce tasks=3916
		Total megabyte-milliseconds taken by all map tasks=43819008
		Total megabyte-milliseconds taken by all reduce tasks=16039936
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=556
		CPU time spent (ms)=6400
		Physical memory (bytes) snapshot=1267986432
		Virtual memory (bytes) snapshot=15746035712
		Total committed heap usage (bytes)=1114112000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 14:17:11.843" endtime="20210531 14:17:11.844"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:17:11.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:17:11.844" endtime="20210531 14:17:11.845"/>
</kw>
<status status="PASS" starttime="20210531 14:16:34.729" endtime="20210531 14:17:11.845"/>
</kw>
<msg timestamp="20210531 14:17:11.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:16:34.729" endtime="20210531 14:17:11.845"/>
</kw>
<msg timestamp="20210531 14:17:11.846" level="INFO">${output} = 2021-05-31 14:16:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.8:8032
2021-05-31 14:16:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" starttime="20210531 14:16:34.728" endtime="20210531 14:17:11.846"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:17:11.846" endtime="20210531 14:17:11.847"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:17:11.847" endtime="20210531 14:17:11.848"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:16:34.683" endtime="20210531 14:17:11.848"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 14:15:50.130" endtime="20210531 14:17:11.850"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="218049"/>
</suite>
<suite id="s1-s2" name="hadoop32">
<suite id="s1-s2-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:20:47.546" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:20:51.716" level="INFO">${rc} = 255</msg>
<msg timestamp="20210531 14:20:51.717" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:20:47.532" endtime="20210531 14:20:51.717"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:20:51.718" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:20:51.717" endtime="20210531 14:20:51.718"/>
</kw>
<msg timestamp="20210531 14:20:51.719" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:20:47.530" endtime="20210531 14:20:51.719"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:20:51.731" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:20:55.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:20:55.472" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:20:51.727" endtime="20210531 14:20:55.472"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:20:55.474" level="INFO"/>
<status status="PASS" starttime="20210531 14:20:55.473" endtime="20210531 14:20:55.474"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:20:55.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:20:55.474" endtime="20210531 14:20:55.475"/>
</kw>
<status status="PASS" starttime="20210531 14:20:51.726" endtime="20210531 14:20:55.475"/>
</kw>
<msg timestamp="20210531 14:20:55.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:20:51.725" endtime="20210531 14:20:55.475"/>
</kw>
<msg timestamp="20210531 14:20:55.476" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210531 14:20:51.724" endtime="20210531 14:20:55.476"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:20:55.476" endtime="20210531 14:20:55.476"/>
</kw>
<status status="PASS" starttime="20210531 14:20:51.724" endtime="20210531 14:20:55.477"/>
</kw>
<status status="PASS" starttime="20210531 14:20:51.719" endtime="20210531 14:20:55.477"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:20:55.487" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:20:58.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:20:58.850" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:20:55.480" endtime="20210531 14:20:58.850"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:20:58.851" level="INFO"/>
<status status="PASS" starttime="20210531 14:20:58.850" endtime="20210531 14:20:58.852"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:20:58.853" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:20:58.852" endtime="20210531 14:20:58.853"/>
</kw>
<status status="PASS" starttime="20210531 14:20:55.479" endtime="20210531 14:20:58.853"/>
</kw>
<msg timestamp="20210531 14:20:58.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:20:55.479" endtime="20210531 14:20:58.853"/>
</kw>
<status status="PASS" starttime="20210531 14:20:55.478" endtime="20210531 14:20:58.853"/>
</kw>
<status status="PASS" starttime="20210531 14:20:55.478" endtime="20210531 14:20:58.854"/>
</kw>
<status status="PASS" starttime="20210531 14:20:55.477" endtime="20210531 14:20:58.854"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210531 14:20:58.854" endtime="20210531 14:20:58.855"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:20:58.859" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:02.462" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:02.462" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:20...</msg>
<status status="PASS" starttime="20210531 14:20:58.856" endtime="20210531 14:21:02.463"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:02.464" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:20:58.755Z",
  "modificationTime" : "2021-05-31T14:20:58.755Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210531 14:21:02.463" endtime="20210531 14:21:02.464"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:02.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:02.464" endtime="20210531 14:21:02.465"/>
</kw>
<status status="PASS" starttime="20210531 14:20:58.856" endtime="20210531 14:21:02.466"/>
</kw>
<msg timestamp="20210531 14:21:02.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:20:58.855" endtime="20210531 14:21:02.466"/>
</kw>
<msg timestamp="20210531 14:21:02.466" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:20...</msg>
<status status="PASS" starttime="20210531 14:20:58.855" endtime="20210531 14:21:02.466"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:21:02.466" endtime="20210531 14:21:02.467"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:21:02.472" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:21:02.472" endtime="20210531 14:21:02.472"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:21:02.473" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:21:02.473" endtime="20210531 14:21:02.473"/>
</kw>
<status status="PASS" starttime="20210531 14:21:02.471" endtime="20210531 14:21:02.474"/>
</kw>
<msg timestamp="20210531 14:21:02.474" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:21:02.470" endtime="20210531 14:21:02.474"/>
</kw>
<status status="PASS" starttime="20210531 14:21:02.469" endtime="20210531 14:21:02.474"/>
</kw>
<msg timestamp="20210531 14:21:02.474" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 14:21:02.468" endtime="20210531 14:21:02.474"/>
</kw>
<msg timestamp="20210531 14:21:02.475" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 14:21:02.467" endtime="20210531 14:21:02.475"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:02.478" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:06.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:06.071" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:21:02.477" endtime="20210531 14:21:06.071"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:06.073" level="INFO"/>
<status status="PASS" starttime="20210531 14:21:06.072" endtime="20210531 14:21:06.073"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:06.074" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:06.073" endtime="20210531 14:21:06.074"/>
</kw>
<status status="PASS" starttime="20210531 14:21:02.476" endtime="20210531 14:21:06.074"/>
</kw>
<msg timestamp="20210531 14:21:06.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:02.476" endtime="20210531 14:21:06.074"/>
</kw>
<status status="PASS" starttime="20210531 14:21:02.475" endtime="20210531 14:21:06.074"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:06.079" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:13.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:13.756" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:21:06.077" endtime="20210531 14:21:13.757"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:13.758" level="INFO"/>
<status status="PASS" starttime="20210531 14:21:13.757" endtime="20210531 14:21:13.758"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:13.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:13.758" endtime="20210531 14:21:13.759"/>
</kw>
<status status="PASS" starttime="20210531 14:21:06.076" endtime="20210531 14:21:13.759"/>
</kw>
<msg timestamp="20210531 14:21:13.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:06.076" endtime="20210531 14:21:13.760"/>
</kw>
<status status="PASS" starttime="20210531 14:21:06.075" endtime="20210531 14:21:13.760"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:13.764" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:19.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:19.833" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:21:13.762" endtime="20210531 14:21:19.833"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:19.834" level="INFO"/>
<status status="PASS" starttime="20210531 14:21:19.833" endtime="20210531 14:21:19.834"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:19.835" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:19.834" endtime="20210531 14:21:19.835"/>
</kw>
<status status="PASS" starttime="20210531 14:21:13.761" endtime="20210531 14:21:19.836"/>
</kw>
<msg timestamp="20210531 14:21:19.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:13.761" endtime="20210531 14:21:19.836"/>
</kw>
<status status="PASS" starttime="20210531 14:21:13.760" endtime="20210531 14:21:19.836"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:19.840" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:25.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:25.890" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:21:19.838" endtime="20210531 14:21:25.890"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:25.891" level="INFO"/>
<status status="PASS" starttime="20210531 14:21:25.890" endtime="20210531 14:21:25.891"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:25.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:25.891" endtime="20210531 14:21:25.892"/>
</kw>
<status status="PASS" starttime="20210531 14:21:19.837" endtime="20210531 14:21:25.893"/>
</kw>
<msg timestamp="20210531 14:21:25.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:19.837" endtime="20210531 14:21:25.893"/>
</kw>
<status status="PASS" starttime="20210531 14:21:19.836" endtime="20210531 14:21:25.893"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:20:47.530" endtime="20210531 14:21:25.893"/>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:21:25.902" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:21:25.901" endtime="20210531 14:21:25.902"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:21:25.903" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:21:25.902" endtime="20210531 14:21:25.903"/>
</kw>
<status status="PASS" starttime="20210531 14:21:25.900" endtime="20210531 14:21:25.903"/>
</kw>
<msg timestamp="20210531 14:21:25.903" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:21:25.898" endtime="20210531 14:21:25.903"/>
</kw>
<status status="PASS" starttime="20210531 14:21:25.897" endtime="20210531 14:21:25.904"/>
</kw>
<msg timestamp="20210531 14:21:25.904" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:21:25.896" endtime="20210531 14:21:25.904"/>
</kw>
<msg timestamp="20210531 14:21:25.904" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:21:25.896" endtime="20210531 14:21:25.904"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:25.908" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:29.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:29.225" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:21:25.906" endtime="20210531 14:21:29.225"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:29.227" level="INFO"/>
<status status="PASS" starttime="20210531 14:21:29.226" endtime="20210531 14:21:29.227"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:29.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:29.227" endtime="20210531 14:21:29.228"/>
</kw>
<status status="PASS" starttime="20210531 14:21:25.905" endtime="20210531 14:21:29.228"/>
</kw>
<msg timestamp="20210531 14:21:29.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:25.905" endtime="20210531 14:21:29.229"/>
</kw>
<status status="PASS" starttime="20210531 14:21:25.904" endtime="20210531 14:21:29.229"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:29.233" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:32.815" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:32.815" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:21:29.231" endtime="20210531 14:21:32.815"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:32.816" level="INFO"/>
<status status="PASS" starttime="20210531 14:21:32.815" endtime="20210531 14:21:32.816"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:32.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:32.817" endtime="20210531 14:21:32.817"/>
</kw>
<status status="PASS" starttime="20210531 14:21:29.230" endtime="20210531 14:21:32.818"/>
</kw>
<msg timestamp="20210531 14:21:32.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:29.230" endtime="20210531 14:21:32.818"/>
</kw>
<status status="PASS" starttime="20210531 14:21:29.229" endtime="20210531 14:21:32.818"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:21:25.895" endtime="20210531 14:21:32.819"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210531 14:20:47.460" endtime="20210531 14:21:32.821"/>
</suite>
<suite id="s1-s2-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:23:22.516" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:23:22.515" endtime="20210531 14:23:22.516"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:23:22.517" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:23:22.516" endtime="20210531 14:23:22.517"/>
</kw>
<status status="PASS" starttime="20210531 14:23:22.515" endtime="20210531 14:23:22.517"/>
</kw>
<msg timestamp="20210531 14:23:22.517" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:23:22.514" endtime="20210531 14:23:22.517"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:23:22.518" endtime="20210531 14:23:22.518"/>
</kw>
<msg timestamp="20210531 14:23:22.519" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:23:22.518" endtime="20210531 14:23:22.519"/>
</kw>
<status status="PASS" starttime="20210531 14:23:22.514" endtime="20210531 14:23:22.519"/>
</kw>
<msg timestamp="20210531 14:23:22.519" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:23:22.513" endtime="20210531 14:23:22.519"/>
</kw>
<msg timestamp="20210531 14:23:22.519" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:23:22.512" endtime="20210531 14:23:22.520"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:23:22.520" level="INFO">${random} = 68036</msg>
<status status="PASS" starttime="20210531 14:23:22.520" endtime="20210531 14:23:22.520"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:23:22.526" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-68036 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:23:26.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:23:26.594" level="INFO">${output} = 2021-05-31 14:23:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:23:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:23:22.522" endtime="20210531 14:23:26.594"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:23:26.595" level="INFO">2021-05-31 14:23:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:23:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:23:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:23:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:23:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-995653AFE9FA-&gt;da0e8e30-dfc0-4e57-aab4-4d5b50637440
2021-05-31 14:23:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 14:23:26.594" endtime="20210531 14:23:26.595"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:23:26.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:23:26.595" endtime="20210531 14:23:26.596"/>
</kw>
<status status="PASS" starttime="20210531 14:23:22.521" endtime="20210531 14:23:26.596"/>
</kw>
<msg timestamp="20210531 14:23:26.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:23:22.521" endtime="20210531 14:23:26.596"/>
</kw>
<msg timestamp="20210531 14:23:26.597" level="INFO">${result} = 2021-05-31 14:23:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:23:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:23:22.520" endtime="20210531 14:23:26.597"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:23:26.601" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:23:28.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:23:28.568" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:21 ofs://om/volume1/bucket1/ozone-21823
-rw-...</msg>
<status status="PASS" starttime="20210531 14:23:26.598" endtime="20210531 14:23:28.568"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:23:28.569" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:21 ofs://om/volume1/bucket1/ozone-21823
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:23 ofs://om/volume1/bucket1/ozone-68036
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:22 ofs://om/volume1/bucket1/wordcount-JB5U8C5k.txt</msg>
<status status="PASS" starttime="20210531 14:23:28.568" endtime="20210531 14:23:28.569"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:23:28.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:23:28.569" endtime="20210531 14:23:28.570"/>
</kw>
<status status="PASS" starttime="20210531 14:23:26.598" endtime="20210531 14:23:28.570"/>
</kw>
<msg timestamp="20210531 14:23:28.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:23:26.598" endtime="20210531 14:23:28.570"/>
</kw>
<msg timestamp="20210531 14:23:28.571" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:21 ofs://om/volume1/bucket1/ozone-21823
-rw-...</msg>
<status status="PASS" starttime="20210531 14:23:26.597" endtime="20210531 14:23:28.571"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:23:28.571" endtime="20210531 14:23:28.572"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 14:23:22.510" endtime="20210531 14:23:28.572"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 14:23:22.445" endtime="20210531 14:23:28.574"/>
</suite>
<suite id="s1-s2-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:21:37.891" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:21:37.890" endtime="20210531 14:21:37.891"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:21:37.892" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:21:37.891" endtime="20210531 14:21:37.892"/>
</kw>
<status status="PASS" starttime="20210531 14:21:37.890" endtime="20210531 14:21:37.892"/>
</kw>
<msg timestamp="20210531 14:21:37.892" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:21:37.889" endtime="20210531 14:21:37.892"/>
</kw>
<status status="PASS" starttime="20210531 14:21:37.888" endtime="20210531 14:21:37.893"/>
</kw>
<msg timestamp="20210531 14:21:37.893" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:21:37.888" endtime="20210531 14:21:37.893"/>
</kw>
<msg timestamp="20210531 14:21:37.893" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:21:37.886" endtime="20210531 14:21:37.893"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:21:37.894" level="INFO">${random} = 21823</msg>
<status status="PASS" starttime="20210531 14:21:37.894" endtime="20210531 14:21:37.894"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:37.901" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-21823 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:42.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:42.466" level="INFO">${output} = 2021-05-31 14:21:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:21:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:21:37.896" endtime="20210531 14:21:42.466"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:42.467" level="INFO">2021-05-31 14:21:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:21:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:21:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:21:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:21:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B1F64986B2A0-&gt;80ce80a0-1852-4b82-a44e-9fc642e94b49
2021-05-31 14:21:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 14:21:42.466" endtime="20210531 14:21:42.467"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:42.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:42.467" endtime="20210531 14:21:42.468"/>
</kw>
<status status="PASS" starttime="20210531 14:21:37.895" endtime="20210531 14:21:42.468"/>
</kw>
<msg timestamp="20210531 14:21:42.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:37.895" endtime="20210531 14:21:42.469"/>
</kw>
<msg timestamp="20210531 14:21:42.469" level="INFO">${result} = 2021-05-31 14:21:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:21:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:21:37.894" endtime="20210531 14:21:42.469"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:42.473" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:44.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:44.480" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:21 o3fs://bucket1.volume1.om/ozone-21823
dr...</msg>
<status status="PASS" starttime="20210531 14:21:42.471" endtime="20210531 14:21:44.480"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:44.481" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:21 o3fs://bucket1.volume1.om/ozone-21823
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:21:44.480" endtime="20210531 14:21:44.481"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:44.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:44.481" endtime="20210531 14:21:44.482"/>
</kw>
<status status="PASS" starttime="20210531 14:21:42.470" endtime="20210531 14:21:44.482"/>
</kw>
<msg timestamp="20210531 14:21:44.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:42.470" endtime="20210531 14:21:44.482"/>
</kw>
<msg timestamp="20210531 14:21:44.483" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:21 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:21 o3fs://bucket1.volume1.om/ozone-21823
dr...</msg>
<status status="PASS" starttime="20210531 14:21:42.469" endtime="20210531 14:21:44.483"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:21:44.483" endtime="20210531 14:21:44.484"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 14:21:37.885" endtime="20210531 14:21:44.484"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 14:21:37.805" endtime="20210531 14:21:44.485"/>
</suite>
<suite id="s1-s2-s4" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:23:33.646" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:23:33.651" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:23:33.651" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:23:33.641" endtime="20210531 14:23:33.651"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:23:33.652" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:23:33.651" endtime="20210531 14:23:33.652"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:23:33.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:23:33.652" endtime="20210531 14:23:33.653"/>
</kw>
<status status="PASS" starttime="20210531 14:23:33.641" endtime="20210531 14:23:33.653"/>
</kw>
<msg timestamp="20210531 14:23:33.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:23:33.640" endtime="20210531 14:23:33.653"/>
</kw>
<msg timestamp="20210531 14:23:33.653" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:23:33.640" endtime="20210531 14:23:33.654"/>
</kw>
<msg timestamp="20210531 14:23:33.655" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:23:33.639" endtime="20210531 14:23:33.655"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:23:33.659" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:23:33.658" endtime="20210531 14:23:33.659"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:23:33.659" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:23:33.659" endtime="20210531 14:23:33.659"/>
</kw>
<status status="PASS" starttime="20210531 14:23:33.657" endtime="20210531 14:23:33.660"/>
</kw>
<msg timestamp="20210531 14:23:33.660" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:23:33.657" endtime="20210531 14:23:33.660"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:23:33.661" endtime="20210531 14:23:33.661"/>
</kw>
<msg timestamp="20210531 14:23:33.661" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:23:33.660" endtime="20210531 14:23:33.661"/>
</kw>
<status status="PASS" starttime="20210531 14:23:33.656" endtime="20210531 14:23:33.662"/>
</kw>
<msg timestamp="20210531 14:23:33.662" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:23:33.656" endtime="20210531 14:23:33.662"/>
</kw>
<msg timestamp="20210531 14:23:33.662" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:23:33.655" endtime="20210531 14:23:33.662"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:23:33.666" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:24:14.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:24:14.295" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:23:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:23:35 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:23:33.664" endtime="20210531 14:24:14.295"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:24:14.296" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:23:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:23:35 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:23:35 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:23:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:23:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DD5D3F234DD5-&gt;da0e8e30-dfc0-4e57-aab4-4d5b50637440
2021-05-31 14:23:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-05-31 14:23:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A1307C9716FE-&gt;80ce80a0-1852-4b82-a44e-9fc642e94b49
2021-05-31 14:23:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-31 14:23:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:23:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:23:37 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:23:40 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:23:40 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622470782799_0003
2021-05-31 14:23:40 INFO  JobSubmitter:299 - Executing with tokens: []
2021-05-31 14:23:41 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:23:41 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:23:41 INFO  YarnClientImpl:329 - Submitted application application_1622470782799_0003
2021-05-31 14:23:41 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622470782799_0003/
2021-05-31 14:23:41 INFO  Job:1614 - Running job: job_1622470782799_0003
2021-05-31 14:23:49 INFO  Job:1635 - Job job_1622470782799_0003 running in uber mode : false
2021-05-31 14:23:49 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:23:55 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:24:01 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:24:07 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:24:13 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:24:13 INFO  Job:1653 - Job job_1622470782799_0003 completed successfully
2021-05-31 14:24:13 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1116985
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43728
		Total time spent by all reduces in occupied slots (ms)=16480
		Total time spent by all map tasks (ms)=10932
		Total time spent by all reduce tasks (ms)=4120
		Total vcore-milliseconds taken by all map tasks=10932
		Total vcore-milliseconds taken by all reduce tasks=4120
		Total megabyte-milliseconds taken by all map tasks=44777472
		Total megabyte-milliseconds taken by all reduce tasks=16875520
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=612
		CPU time spent (ms)=7290
		Physical memory (bytes) snapshot=1460707328
		Virtual memory (bytes) snapshot=15815069696
		Total committed heap usage (bytes)=1634205696
		Peak Map Physical memory (bytes)=371122176
		Peak Map Virtual memory (bytes)=3952033792
		Peak Reduce Physical memory (bytes)=396722176
		Peak Reduce Virtual memory (bytes)=3971141632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.48 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 14:24:14.296" endtime="20210531 14:24:14.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:24:14.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:24:14.297" endtime="20210531 14:24:14.297"/>
</kw>
<status status="PASS" starttime="20210531 14:23:33.663" endtime="20210531 14:24:14.298"/>
</kw>
<msg timestamp="20210531 14:24:14.298" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:23:33.663" endtime="20210531 14:24:14.298"/>
</kw>
<msg timestamp="20210531 14:24:14.299" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:23:35 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:23:35 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:23:33.662" endtime="20210531 14:24:14.299"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:24:14.299" endtime="20210531 14:24:14.300"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:23:33.638" endtime="20210531 14:24:14.300"/>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:24:14.306" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:24:14.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:24:14.312" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:24:14.304" endtime="20210531 14:24:14.312"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:24:14.313" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:24:14.313" endtime="20210531 14:24:14.313"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:24:14.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:24:14.314" endtime="20210531 14:24:14.314"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.303" endtime="20210531 14:24:14.315"/>
</kw>
<msg timestamp="20210531 14:24:14.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:24:14.303" endtime="20210531 14:24:14.315"/>
</kw>
<msg timestamp="20210531 14:24:14.315" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:24:14.302" endtime="20210531 14:24:14.315"/>
</kw>
<msg timestamp="20210531 14:24:14.316" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:24:14.302" endtime="20210531 14:24:14.316"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:24:14.316" level="INFO">${random} = tcUTLazW</msg>
<status status="PASS" starttime="20210531 14:24:14.316" endtime="20210531 14:24:14.316"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:24:14.321" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:24:14.320" endtime="20210531 14:24:14.321"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:24:14.322" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:24:14.321" endtime="20210531 14:24:14.322"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.320" endtime="20210531 14:24:14.323"/>
</kw>
<msg timestamp="20210531 14:24:14.323" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:24:14.319" endtime="20210531 14:24:14.323"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:24:14.324" endtime="20210531 14:24:14.324"/>
</kw>
<msg timestamp="20210531 14:24:14.324" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:24:14.323" endtime="20210531 14:24:14.324"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.318" endtime="20210531 14:24:14.324"/>
</kw>
<msg timestamp="20210531 14:24:14.325" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:24:14.317" endtime="20210531 14:24:14.325"/>
</kw>
<msg timestamp="20210531 14:24:14.325" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:24:14.317" endtime="20210531 14:24:14.325"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:24:14.329" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:24:14.329" endtime="20210531 14:24:14.329"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:24:14.330" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:24:14.329" endtime="20210531 14:24:14.330"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.328" endtime="20210531 14:24:14.330"/>
</kw>
<msg timestamp="20210531 14:24:14.330" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:24:14.327" endtime="20210531 14:24:14.330"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:24:14.333" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210531 14:24:14.332" endtime="20210531 14:24:14.333"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:24:14.333" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210531 14:24:14.333" endtime="20210531 14:24:14.333"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.332" endtime="20210531 14:24:14.334"/>
</kw>
<msg timestamp="20210531 14:24:14.334" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210531 14:24:14.331" endtime="20210531 14:24:14.334"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.327" endtime="20210531 14:24:14.334"/>
</kw>
<msg timestamp="20210531 14:24:14.334" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 14:24:14.326" endtime="20210531 14:24:14.334"/>
</kw>
<msg timestamp="20210531 14:24:14.335" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 14:24:14.325" endtime="20210531 14:24:14.335"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:24:14.339" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:24:14.338" endtime="20210531 14:24:14.339"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:24:14.340" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:24:14.339" endtime="20210531 14:24:14.340"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.338" endtime="20210531 14:24:14.340"/>
</kw>
<msg timestamp="20210531 14:24:14.340" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:24:14.337" endtime="20210531 14:24:14.340"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:24:14.342" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210531 14:24:14.342" endtime="20210531 14:24:14.342"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:24:14.343" level="INFO">${result} = /wordcount-tcUTLazW.txt</msg>
<status status="PASS" starttime="20210531 14:24:14.342" endtime="20210531 14:24:14.343"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.341" endtime="20210531 14:24:14.343"/>
</kw>
<msg timestamp="20210531 14:24:14.343" level="INFO">${path_with_leading} = /wordcount-tcUTLazW.txt</msg>
<status status="PASS" starttime="20210531 14:24:14.340" endtime="20210531 14:24:14.343"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.336" endtime="20210531 14:24:14.344"/>
</kw>
<msg timestamp="20210531 14:24:14.344" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-tcUTLazW.txt</msg>
<status status="PASS" starttime="20210531 14:24:14.336" endtime="20210531 14:24:14.344"/>
</kw>
<msg timestamp="20210531 14:24:14.344" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-tcUTLazW.txt</msg>
<status status="PASS" starttime="20210531 14:24:14.335" endtime="20210531 14:24:14.344"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:24:14.348" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-tcUTLazW.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:24:57.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:24:57.858" level="INFO">${output} = 2021-05-31 14:24:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:24:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210531 14:24:14.346" endtime="20210531 14:24:57.858"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:24:57.859" level="INFO">2021-05-31 14:24:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:24:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:24:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:24:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:24:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:24:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:24:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7D0D577D6399-&gt;80ce80a0-1852-4b82-a44e-9fc642e94b49
2021-05-31 14:24:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:24:18 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:24:18 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:24:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622470782799_0004
2021-05-31 14:24:18 INFO  JobSubmitter:299 - Executing with tokens: []
2021-05-31 14:24:18 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:24:18 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:24:18 INFO  YarnClientImpl:329 - Submitted application application_1622470782799_0004
2021-05-31 14:24:18 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622470782799_0004/
2021-05-31 14:24:18 INFO  Job:1614 - Running job: job_1622470782799_0004
2021-05-31 14:24:27 INFO  Job:1635 - Job job_1622470782799_0004 running in uber mode : false
2021-05-31 14:24:27 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:24:34 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:24:40 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:24:46 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:24:51 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:24:57 INFO  Job:1653 - Job job_1622470782799_0004 completed successfully
2021-05-31 14:24:57 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1179757
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39773
		OFS: Number of bytes written=22252
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44596
		Total time spent by all reduces in occupied slots (ms)=16268
		Total time spent by all map tasks (ms)=11149
		Total time spent by all reduce tasks (ms)=4067
		Total vcore-milliseconds taken by all map tasks=11149
		Total vcore-milliseconds taken by all reduce tasks=4067
		Total megabyte-milliseconds taken by all map tasks=45666304
		Total megabyte-milliseconds taken by all reduce tasks=16658432
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=651
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1378594816
		Virtual memory (bytes) snapshot=15802400768
		Total committed heap usage (bytes)=1451753472
		Peak Map Physical memory (bytes)=368586752
		Peak Map Virtual memory (bytes)=3956162560
		Peak Reduce Physical memory (bytes)=397537280
		Peak Reduce Virtual memory (bytes)=3969175552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 14:24:57.858" endtime="20210531 14:24:57.860"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:24:57.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:24:57.860" endtime="20210531 14:24:57.860"/>
</kw>
<status status="PASS" starttime="20210531 14:24:14.345" endtime="20210531 14:24:57.861"/>
</kw>
<msg timestamp="20210531 14:24:57.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:24:14.345" endtime="20210531 14:24:57.861"/>
</kw>
<msg timestamp="20210531 14:24:57.862" level="INFO">${output} = 2021-05-31 14:24:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:24:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210531 14:24:14.344" endtime="20210531 14:24:57.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:24:57.862" endtime="20210531 14:24:57.862"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:24:57.862" endtime="20210531 14:24:57.863"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:24:14.301" endtime="20210531 14:24:57.863"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 14:23:33.572" endtime="20210531 14:24:57.865"/>
</suite>
<suite id="s1-s2-s5" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:49.634" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:21:49.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:21:49.640" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:21:49.631" endtime="20210531 14:21:49.640"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:21:49.641" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:21:49.640" endtime="20210531 14:21:49.641"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:21:49.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:21:49.641" endtime="20210531 14:21:49.641"/>
</kw>
<status status="PASS" starttime="20210531 14:21:49.630" endtime="20210531 14:21:49.642"/>
</kw>
<msg timestamp="20210531 14:21:49.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:49.630" endtime="20210531 14:21:49.642"/>
</kw>
<msg timestamp="20210531 14:21:49.642" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:21:49.629" endtime="20210531 14:21:49.643"/>
</kw>
<msg timestamp="20210531 14:21:49.644" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:21:49.629" endtime="20210531 14:21:49.644"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:21:49.648" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:21:49.647" endtime="20210531 14:21:49.648"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:21:49.649" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:21:49.648" endtime="20210531 14:21:49.649"/>
</kw>
<status status="PASS" starttime="20210531 14:21:49.647" endtime="20210531 14:21:49.649"/>
</kw>
<msg timestamp="20210531 14:21:49.649" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:21:49.646" endtime="20210531 14:21:49.649"/>
</kw>
<status status="PASS" starttime="20210531 14:21:49.645" endtime="20210531 14:21:49.650"/>
</kw>
<msg timestamp="20210531 14:21:49.650" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:21:49.645" endtime="20210531 14:21:49.650"/>
</kw>
<msg timestamp="20210531 14:21:49.650" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:21:49.644" endtime="20210531 14:21:49.650"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:21:49.653" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:22:36.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:22:36.503" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:21:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:21:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:21:49.652" endtime="20210531 14:22:36.503"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:22:36.505" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:21:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:21:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:21:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:21:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:21:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-64330ECC3EA4-&gt;80ce80a0-1852-4b82-a44e-9fc642e94b49
2021-05-31 14:21:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-05-31 14:21:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ECC228A26847-&gt;da0e8e30-dfc0-4e57-aab4-4d5b50637440
2021-05-31 14:21:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-31 14:21:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:21:56 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:21:56 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:21:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622470782799_0001
2021-05-31 14:21:56 INFO  JobSubmitter:299 - Executing with tokens: []
2021-05-31 14:21:57 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:21:57 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:21:57 INFO  YarnClientImpl:329 - Submitted application application_1622470782799_0001
2021-05-31 14:21:57 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622470782799_0001/
2021-05-31 14:21:57 INFO  Job:1614 - Running job: job_1622470782799_0001
2021-05-31 14:22:07 INFO  Job:1635 - Job job_1622470782799_0001 running in uber mode : false
2021-05-31 14:22:07 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:22:14 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:22:20 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:22:26 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:22:32 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:22:35 INFO  Job:1653 - Job job_1622470782799_0001 completed successfully
2021-05-31 14:22:35 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1117209
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45124
		Total time spent by all reduces in occupied slots (ms)=17020
		Total time spent by all map tasks (ms)=11281
		Total time spent by all reduce tasks (ms)=4255
		Total vcore-milliseconds taken by all map tasks=11281
		Total vcore-milliseconds taken by all reduce tasks=4255
		Total megabyte-milliseconds taken by all map tasks=46206976
		Total megabyte-milliseconds taken by all reduce tasks=17428480
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=702
		CPU time spent (ms)=7940
		Physical memory (bytes) snapshot=1393659904
		Virtual memory (bytes) snapshot=15825629184
		Total committed heap usage (bytes)=1460142080
		Peak Map Physical memory (bytes)=382607360
		Peak Map Virtual memory (bytes)=3955310592
		Peak Reduce Physical memory (bytes)=314216448
		Peak Reduce Virtual memory (bytes)=3973632000
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.104 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 14:22:36.504" endtime="20210531 14:22:36.505"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:22:36.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:22:36.505" endtime="20210531 14:22:36.506"/>
</kw>
<status status="PASS" starttime="20210531 14:21:49.651" endtime="20210531 14:22:36.506"/>
</kw>
<msg timestamp="20210531 14:22:36.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:21:49.651" endtime="20210531 14:22:36.506"/>
</kw>
<msg timestamp="20210531 14:22:36.507" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:21:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:21:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:21:49.650" endtime="20210531 14:22:36.507"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:22:36.507" endtime="20210531 14:22:36.507"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:21:49.627" endtime="20210531 14:22:36.508"/>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:22:36.514" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:22:36.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:22:36.521" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:22:36.511" endtime="20210531 14:22:36.521"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:22:36.522" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:22:36.521" endtime="20210531 14:22:36.523"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:22:36.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:22:36.523" endtime="20210531 14:22:36.523"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.510" endtime="20210531 14:22:36.524"/>
</kw>
<msg timestamp="20210531 14:22:36.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:22:36.510" endtime="20210531 14:22:36.524"/>
</kw>
<msg timestamp="20210531 14:22:36.524" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:22:36.510" endtime="20210531 14:22:36.524"/>
</kw>
<msg timestamp="20210531 14:22:36.525" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:22:36.509" endtime="20210531 14:22:36.525"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:22:36.525" level="INFO">${random} = JB5U8C5k</msg>
<status status="PASS" starttime="20210531 14:22:36.525" endtime="20210531 14:22:36.525"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:22:36.529" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:22:36.529" endtime="20210531 14:22:36.529"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:22:36.530" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:22:36.529" endtime="20210531 14:22:36.530"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.528" endtime="20210531 14:22:36.530"/>
</kw>
<msg timestamp="20210531 14:22:36.530" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:22:36.528" endtime="20210531 14:22:36.530"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.527" endtime="20210531 14:22:36.531"/>
</kw>
<msg timestamp="20210531 14:22:36.531" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:22:36.526" endtime="20210531 14:22:36.531"/>
</kw>
<msg timestamp="20210531 14:22:36.531" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:22:36.525" endtime="20210531 14:22:36.531"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:22:36.535" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:22:36.535" endtime="20210531 14:22:36.535"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:22:36.536" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:22:36.535" endtime="20210531 14:22:36.536"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.534" endtime="20210531 14:22:36.536"/>
</kw>
<msg timestamp="20210531 14:22:36.536" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:22:36.534" endtime="20210531 14:22:36.536"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.533" endtime="20210531 14:22:36.537"/>
</kw>
<msg timestamp="20210531 14:22:36.537" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 14:22:36.532" endtime="20210531 14:22:36.537"/>
</kw>
<msg timestamp="20210531 14:22:36.537" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 14:22:36.531" endtime="20210531 14:22:36.537"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:22:36.540" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:22:36.540" endtime="20210531 14:22:36.540"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:22:36.541" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:22:36.541" endtime="20210531 14:22:36.541"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.539" endtime="20210531 14:22:36.541"/>
</kw>
<msg timestamp="20210531 14:22:36.541" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:22:36.539" endtime="20210531 14:22:36.541"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.538" endtime="20210531 14:22:36.542"/>
</kw>
<msg timestamp="20210531 14:22:36.542" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-JB5U8C5k.txt</msg>
<status status="PASS" starttime="20210531 14:22:36.538" endtime="20210531 14:22:36.542"/>
</kw>
<msg timestamp="20210531 14:22:36.542" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-JB5U8C5k.txt</msg>
<status status="PASS" starttime="20210531 14:22:36.537" endtime="20210531 14:22:36.542"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:22:36.546" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-JB5U8C5k.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:23:17.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:23:17.417" level="INFO">${output} = 2021-05-31 14:22:38 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:22:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210531 14:22:36.544" endtime="20210531 14:23:17.417"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:23:17.419" level="INFO">2021-05-31 14:22:38 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:22:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:22:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:22:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:22:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:22:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:22:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-71DD3B4E4B47-&gt;80ce80a0-1852-4b82-a44e-9fc642e94b49
2021-05-31 14:22:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:22:40 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:22:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-46354187176B-&gt;da0e8e30-dfc0-4e57-aab4-4d5b50637440
2021-05-31 14:22:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:22:40 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:22:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622470782799_0002
2021-05-31 14:22:41 INFO  JobSubmitter:299 - Executing with tokens: []
2021-05-31 14:22:41 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:22:41 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:22:41 INFO  YarnClientImpl:329 - Submitted application application_1622470782799_0002
2021-05-31 14:22:41 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622470782799_0002/
2021-05-31 14:22:41 INFO  Job:1614 - Running job: job_1622470782799_0002
2021-05-31 14:22:49 INFO  Job:1635 - Job job_1622470782799_0002 running in uber mode : false
2021-05-31 14:22:49 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:22:56 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:23:01 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:23:07 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:23:13 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:23:16 INFO  Job:1653 - Job job_1622470782799_0002 completed successfully
2021-05-31 14:23:16 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1179841
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39776
		O3FS: Number of bytes written=22252
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44972
		Total time spent by all reduces in occupied slots (ms)=17396
		Total time spent by all map tasks (ms)=11243
		Total time spent by all reduce tasks (ms)=4349
		Total vcore-milliseconds taken by all map tasks=11243
		Total vcore-milliseconds taken by all reduce tasks=4349
		Total megabyte-milliseconds taken by all map tasks=46051328
		Total megabyte-milliseconds taken by all reduce tasks=17813504
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=649
		CPU time spent (ms)=7930
		Physical memory (bytes) snapshot=1461411840
		Virtual memory (bytes) snapshot=15821946880
		Total committed heap usage (bytes)=1595408384
		Peak Map Physical memory (bytes)=371957760
		Peak Map Virtual memory (bytes)=3951714304
		Peak Reduce Physical memory (bytes)=399892480
		Peak Reduce Virtual memory (bytes)=3972780032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 14:23:17.418" endtime="20210531 14:23:17.419"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:23:17.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:23:17.419" endtime="20210531 14:23:17.420"/>
</kw>
<status status="PASS" starttime="20210531 14:22:36.544" endtime="20210531 14:23:17.421"/>
</kw>
<msg timestamp="20210531 14:23:17.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:22:36.543" endtime="20210531 14:23:17.421"/>
</kw>
<msg timestamp="20210531 14:23:17.421" level="INFO">${output} = 2021-05-31 14:22:38 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-05-31 14:22:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" starttime="20210531 14:22:36.543" endtime="20210531 14:23:17.421"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:23:17.422" endtime="20210531 14:23:17.422"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:23:17.422" endtime="20210531 14:23:17.423"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:22:36.508" endtime="20210531 14:23:17.423"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 14:21:49.559" endtime="20210531 14:23:17.424"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="230328"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="448377"/>
</suite>
<statistics>
<total>
<stat pass="16" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="16" fail="0" skip="0" id="s1" name="ozone-mr">ozone-mr</stat>
<stat pass="8" fail="0" skip="0" id="s1-s1" name="hadoop27">ozone-mr.hadoop27</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s1" name="Createmrenv">ozone-mr.hadoop27.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="hadoopfs-ofs">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s3" name="hadoopfs-o3fs">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s4" name="mapreduce-ofs">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s5" name="mapreduce-o3fs">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat pass="8" fail="0" skip="0" id="s1-s2" name="hadoop32">ozone-mr.hadoop32</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s1" name="Createmrenv">ozone-mr.hadoop32.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s2" name="hadoopfs-ofs">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2-s3" name="hadoopfs-o3fs">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s4" name="mapreduce-ofs">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s5" name="mapreduce-o3fs">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
