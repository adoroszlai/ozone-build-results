<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210531 15:00:01.471" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:54:54.473" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:54:58.843" level="INFO">${rc} = 255</msg>
<msg timestamp="20210531 14:54:58.843" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:54:54.469" endtime="20210531 14:54:58.844"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:54:58.845" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:54:58.844" endtime="20210531 14:54:58.845"/>
</kw>
<msg timestamp="20210531 14:54:58.846" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 14:54:54.468" endtime="20210531 14:54:58.846"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:54:58.851" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:03.028" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:03.028" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:54:58.849" endtime="20210531 14:55:03.028"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:03.030" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:03.029" endtime="20210531 14:55:03.030"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:03.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:03.030" endtime="20210531 14:55:03.031"/>
</kw>
<status status="PASS" starttime="20210531 14:54:58.848" endtime="20210531 14:55:03.031"/>
</kw>
<msg timestamp="20210531 14:55:03.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:54:58.848" endtime="20210531 14:55:03.031"/>
</kw>
<msg timestamp="20210531 14:55:03.032" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210531 14:54:58.847" endtime="20210531 14:55:03.032"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:55:03.032" endtime="20210531 14:55:03.032"/>
</kw>
<status status="PASS" starttime="20210531 14:54:58.846" endtime="20210531 14:55:03.033"/>
</kw>
<status status="PASS" starttime="20210531 14:54:58.846" endtime="20210531 14:55:03.033"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:03.038" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:07.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:07.007" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:03.036" endtime="20210531 14:55:07.007"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:07.008" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:07.007" endtime="20210531 14:55:07.008"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:07.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:07.008" endtime="20210531 14:55:07.009"/>
</kw>
<status status="PASS" starttime="20210531 14:55:03.035" endtime="20210531 14:55:07.009"/>
</kw>
<msg timestamp="20210531 14:55:07.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:03.035" endtime="20210531 14:55:07.010"/>
</kw>
<status status="PASS" starttime="20210531 14:55:03.034" endtime="20210531 14:55:07.010"/>
</kw>
<status status="PASS" starttime="20210531 14:55:03.033" endtime="20210531 14:55:07.010"/>
</kw>
<status status="PASS" starttime="20210531 14:55:03.033" endtime="20210531 14:55:07.010"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210531 14:55:07.010" endtime="20210531 14:55:07.011"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:07.015" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:11.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:11.625" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:55...</msg>
<status status="PASS" starttime="20210531 14:55:07.013" endtime="20210531 14:55:11.626"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:11.627" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:55:06.770Z",
  "modificationTime" : "2021-05-31T14:55:06.770Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210531 14:55:11.626" endtime="20210531 14:55:11.627"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:11.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:11.628" endtime="20210531 14:55:11.628"/>
</kw>
<status status="PASS" starttime="20210531 14:55:07.012" endtime="20210531 14:55:11.629"/>
</kw>
<msg timestamp="20210531 14:55:11.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:07.012" endtime="20210531 14:55:11.629"/>
</kw>
<msg timestamp="20210531 14:55:11.629" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T14:55...</msg>
<status status="PASS" starttime="20210531 14:55:07.011" endtime="20210531 14:55:11.629"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:55:11.629" endtime="20210531 14:55:11.630"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:55:11.635" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:55:11.634" endtime="20210531 14:55:11.635"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:55:11.636" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:55:11.635" endtime="20210531 14:55:11.636"/>
</kw>
<status status="PASS" starttime="20210531 14:55:11.634" endtime="20210531 14:55:11.636"/>
</kw>
<msg timestamp="20210531 14:55:11.636" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:55:11.633" endtime="20210531 14:55:11.636"/>
</kw>
<status status="PASS" starttime="20210531 14:55:11.632" endtime="20210531 14:55:11.637"/>
</kw>
<msg timestamp="20210531 14:55:11.637" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 14:55:11.631" endtime="20210531 14:55:11.637"/>
</kw>
<msg timestamp="20210531 14:55:11.637" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 14:55:11.630" endtime="20210531 14:55:11.637"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:11.641" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:15.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:15.993" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:11.639" endtime="20210531 14:55:15.993"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:15.995" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:15.994" endtime="20210531 14:55:15.995"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:15.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:15.995" endtime="20210531 14:55:15.996"/>
</kw>
<status status="PASS" starttime="20210531 14:55:11.638" endtime="20210531 14:55:15.996"/>
</kw>
<msg timestamp="20210531 14:55:15.997" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:11.638" endtime="20210531 14:55:15.997"/>
</kw>
<status status="PASS" starttime="20210531 14:55:11.638" endtime="20210531 14:55:15.997"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:16.002" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:24.062" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:24.062" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:15.999" endtime="20210531 14:55:24.062"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:24.064" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:24.063" endtime="20210531 14:55:24.066"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:24.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:24.066" endtime="20210531 14:55:24.067"/>
</kw>
<status status="PASS" starttime="20210531 14:55:15.999" endtime="20210531 14:55:24.068"/>
</kw>
<msg timestamp="20210531 14:55:24.068" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:15.998" endtime="20210531 14:55:24.068"/>
</kw>
<status status="PASS" starttime="20210531 14:55:15.997" endtime="20210531 14:55:24.068"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:24.072" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:32.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:32.935" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:24.070" endtime="20210531 14:55:32.935"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:32.937" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:32.936" endtime="20210531 14:55:32.937"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:32.937" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:32.937" endtime="20210531 14:55:32.938"/>
</kw>
<status status="PASS" starttime="20210531 14:55:24.070" endtime="20210531 14:55:32.938"/>
</kw>
<msg timestamp="20210531 14:55:32.938" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:24.069" endtime="20210531 14:55:32.938"/>
</kw>
<status status="PASS" starttime="20210531 14:55:24.068" endtime="20210531 14:55:32.938"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:32.942" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:38.885" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:38.885" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:32.940" endtime="20210531 14:55:38.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:38.887" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:38.886" endtime="20210531 14:55:38.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:38.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:38.887" endtime="20210531 14:55:38.888"/>
</kw>
<status status="PASS" starttime="20210531 14:55:32.940" endtime="20210531 14:55:38.888"/>
</kw>
<msg timestamp="20210531 14:55:38.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:32.939" endtime="20210531 14:55:38.889"/>
</kw>
<status status="PASS" starttime="20210531 14:55:32.939" endtime="20210531 14:55:38.889"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:54:54.467" endtime="20210531 14:55:38.889"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:55:38.896" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:55:38.896" endtime="20210531 14:55:38.896"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:55:38.897" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:55:38.897" endtime="20210531 14:55:38.897"/>
</kw>
<status status="PASS" starttime="20210531 14:55:38.895" endtime="20210531 14:55:38.898"/>
</kw>
<msg timestamp="20210531 14:55:38.898" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:55:38.894" endtime="20210531 14:55:38.898"/>
</kw>
<status status="PASS" starttime="20210531 14:55:38.893" endtime="20210531 14:55:38.898"/>
</kw>
<msg timestamp="20210531 14:55:38.898" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:55:38.892" endtime="20210531 14:55:38.898"/>
</kw>
<msg timestamp="20210531 14:55:38.899" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:55:38.891" endtime="20210531 14:55:38.899"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:38.903" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:42.629" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:42.629" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:38.901" endtime="20210531 14:55:42.629"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:42.631" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:42.630" endtime="20210531 14:55:42.631"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:42.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:42.631" endtime="20210531 14:55:42.632"/>
</kw>
<status status="PASS" starttime="20210531 14:55:38.900" endtime="20210531 14:55:42.632"/>
</kw>
<msg timestamp="20210531 14:55:42.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:38.900" endtime="20210531 14:55:42.632"/>
</kw>
<status status="PASS" starttime="20210531 14:55:38.899" endtime="20210531 14:55:42.633"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:55:42.637" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:55:46.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:55:46.579" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:55:42.634" endtime="20210531 14:55:46.579"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:55:46.580" level="INFO"/>
<status status="PASS" starttime="20210531 14:55:46.579" endtime="20210531 14:55:46.580"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:55:46.581" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:55:46.581" endtime="20210531 14:55:46.581"/>
</kw>
<status status="PASS" starttime="20210531 14:55:42.634" endtime="20210531 14:55:46.582"/>
</kw>
<msg timestamp="20210531 14:55:46.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:55:42.633" endtime="20210531 14:55:46.582"/>
</kw>
<status status="PASS" starttime="20210531 14:55:42.633" endtime="20210531 14:55:46.582"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:55:38.890" endtime="20210531 14:55:46.582"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210531 14:54:54.397" endtime="20210531 14:55:46.584"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:58:21.436" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:58:21.435" endtime="20210531 14:58:21.436"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:58:21.437" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:58:21.436" endtime="20210531 14:58:21.437"/>
</kw>
<status status="PASS" starttime="20210531 14:58:21.435" endtime="20210531 14:58:21.437"/>
</kw>
<msg timestamp="20210531 14:58:21.437" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:58:21.434" endtime="20210531 14:58:21.437"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:58:21.440" endtime="20210531 14:58:21.441"/>
</kw>
<msg timestamp="20210531 14:58:21.441" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:58:21.440" endtime="20210531 14:58:21.441"/>
</kw>
<status status="PASS" starttime="20210531 14:58:21.433" endtime="20210531 14:58:21.441"/>
</kw>
<msg timestamp="20210531 14:58:21.442" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:58:21.433" endtime="20210531 14:58:21.442"/>
</kw>
<msg timestamp="20210531 14:58:21.442" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:58:21.431" endtime="20210531 14:58:21.442"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:58:21.443" level="INFO">${random} = 00555</msg>
<status status="PASS" starttime="20210531 14:58:21.442" endtime="20210531 14:58:21.443"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:58:21.450" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-00555 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:58:25.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:58:25.553" level="INFO">${output} = 2021-05-31 14:58:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:58:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:58:21.445" endtime="20210531 14:58:25.553"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:58:25.554" level="INFO">2021-05-31 14:58:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:58:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:58:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:58:24 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:58:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8B702232A454-&gt;9f5d599f-f172-40c3-af6b-7d82a5fd5c0d
2021-05-31 14:58:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 14:58:25.554" endtime="20210531 14:58:25.555"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:58:25.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:58:25.555" endtime="20210531 14:58:25.555"/>
</kw>
<status status="PASS" starttime="20210531 14:58:21.444" endtime="20210531 14:58:25.556"/>
</kw>
<msg timestamp="20210531 14:58:25.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:58:21.444" endtime="20210531 14:58:25.556"/>
</kw>
<msg timestamp="20210531 14:58:25.556" level="INFO">${result} = 2021-05-31 14:58:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:58:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:58:21.443" endtime="20210531 14:58:25.556"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:58:25.560" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:58:27.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:58:27.763" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:58 ofs://om/volume1/bucket1/ozone-00555
-rw-...</msg>
<status status="PASS" starttime="20210531 14:58:25.558" endtime="20210531 14:58:27.763"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:58:27.765" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:58 ofs://om/volume1/bucket1/ozone-00555
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:56 ofs://om/volume1/bucket1/ozone-51824
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:57 ofs://om/volume1/bucket1/wordcount-KjVxTgoC.txt</msg>
<status status="PASS" starttime="20210531 14:58:27.764" endtime="20210531 14:58:27.765"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:58:27.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:58:27.765" endtime="20210531 14:58:27.766"/>
</kw>
<status status="PASS" starttime="20210531 14:58:25.557" endtime="20210531 14:58:27.766"/>
</kw>
<msg timestamp="20210531 14:58:27.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:58:25.557" endtime="20210531 14:58:27.766"/>
</kw>
<msg timestamp="20210531 14:58:27.766" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:58 ofs://om/volume1/bucket1/ozone-00555
-rw-...</msg>
<status status="PASS" starttime="20210531 14:58:25.556" endtime="20210531 14:58:27.767"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:58:27.767" endtime="20210531 14:58:27.767"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 14:58:21.431" endtime="20210531 14:58:27.767"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 14:58:21.364" endtime="20210531 14:58:27.769"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:56:40.526" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:56:40.526" endtime="20210531 14:56:40.526"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:56:40.527" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:56:40.527" endtime="20210531 14:56:40.527"/>
</kw>
<status status="PASS" starttime="20210531 14:56:40.525" endtime="20210531 14:56:40.528"/>
</kw>
<msg timestamp="20210531 14:56:40.528" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:56:40.525" endtime="20210531 14:56:40.528"/>
</kw>
<status status="PASS" starttime="20210531 14:56:40.524" endtime="20210531 14:56:40.529"/>
</kw>
<msg timestamp="20210531 14:56:40.529" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:56:40.523" endtime="20210531 14:56:40.529"/>
</kw>
<msg timestamp="20210531 14:56:40.529" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:56:40.522" endtime="20210531 14:56:40.529"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:56:40.530" level="INFO">${random} = 51824</msg>
<status status="PASS" starttime="20210531 14:56:40.529" endtime="20210531 14:56:40.530"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:56:40.535" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-51824 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:56:45.053" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:56:45.053" level="INFO">${output} = 2021-05-31 14:56:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:56:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:56:40.531" endtime="20210531 14:56:45.053"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:56:45.054" level="INFO">2021-05-31 14:56:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:56:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:56:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:56:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:56:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9D52B65AFFA9-&gt;9f5d599f-f172-40c3-af6b-7d82a5fd5c0d
2021-05-31 14:56:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 14:56:45.053" endtime="20210531 14:56:45.054"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:56:45.055" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:56:45.054" endtime="20210531 14:56:45.055"/>
</kw>
<status status="PASS" starttime="20210531 14:56:40.531" endtime="20210531 14:56:45.055"/>
</kw>
<msg timestamp="20210531 14:56:45.055" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:56:40.530" endtime="20210531 14:56:45.055"/>
</kw>
<msg timestamp="20210531 14:56:45.056" level="INFO">${result} = 2021-05-31 14:56:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:56:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 14:56:40.530" endtime="20210531 14:56:45.056"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:56:45.060" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:56:47.174" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:56:47.175" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:56 o3fs://bucket1.volume1.om/ozone-51824
dr...</msg>
<status status="PASS" starttime="20210531 14:56:45.058" endtime="20210531 14:56:47.175"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:56:47.176" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:56 o3fs://bucket1.volume1.om/ozone-51824
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 14:56:47.175" endtime="20210531 14:56:47.176"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:56:47.177" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:56:47.176" endtime="20210531 14:56:47.177"/>
</kw>
<status status="PASS" starttime="20210531 14:56:45.057" endtime="20210531 14:56:47.177"/>
</kw>
<msg timestamp="20210531 14:56:47.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:56:45.056" endtime="20210531 14:56:47.177"/>
</kw>
<msg timestamp="20210531 14:56:47.178" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 14:55 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 14:56 o3fs://bucket1.volume1.om/ozone-51824
dr...</msg>
<status status="PASS" starttime="20210531 14:56:45.056" endtime="20210531 14:56:47.178"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:56:47.178" endtime="20210531 14:56:47.178"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 14:56:40.521" endtime="20210531 14:56:47.179"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 14:56:40.458" endtime="20210531 14:56:47.180"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:56:34.462" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:56:34.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:56:34.467" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210531 14:56:34.457" endtime="20210531 14:56:34.468"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:56:34.469" level="INFO">rm</msg>
<status status="PASS" starttime="20210531 14:56:34.468" endtime="20210531 14:56:34.469"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:56:34.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:56:34.469" endtime="20210531 14:56:34.469"/>
</kw>
<status status="PASS" starttime="20210531 14:56:34.456" endtime="20210531 14:56:34.470"/>
</kw>
<msg timestamp="20210531 14:56:34.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:56:34.456" endtime="20210531 14:56:34.470"/>
</kw>
<msg timestamp="20210531 14:56:34.470" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210531 14:56:34.455" endtime="20210531 14:56:34.470"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210531 14:56:34.472" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210531 14:56:34.470" endtime="20210531 14:56:34.472"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:56:34.476" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:56:34.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:56:34.501" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:56:34.475" endtime="20210531 14:56:34.501"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:56:34.503" level="INFO"/>
<status status="PASS" starttime="20210531 14:56:34.502" endtime="20210531 14:56:34.503"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:56:34.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:56:34.503" endtime="20210531 14:56:34.504"/>
</kw>
<status status="PASS" starttime="20210531 14:56:34.474" endtime="20210531 14:56:34.504"/>
</kw>
<msg timestamp="20210531 14:56:34.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:56:34.474" endtime="20210531 14:56:34.504"/>
</kw>
<status status="PASS" starttime="20210531 14:56:34.473" endtime="20210531 14:56:34.505"/>
</kw>
<status status="PASS" starttime="20210531 14:56:34.472" endtime="20210531 14:56:34.505"/>
</kw>
<status status="PASS" starttime="20210531 14:56:34.455" endtime="20210531 14:56:34.505"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:56:34.454" endtime="20210531 14:56:34.505"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210531 14:56:34.390" endtime="20210531 14:56:34.506"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:54:48.429" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:54:48.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:54:48.433" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210531 14:54:48.426" endtime="20210531 14:54:48.433"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:54:48.434" level="INFO">om</msg>
<status status="PASS" starttime="20210531 14:54:48.434" endtime="20210531 14:54:48.434"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:54:48.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:54:48.435" endtime="20210531 14:54:48.435"/>
</kw>
<status status="PASS" starttime="20210531 14:54:48.425" endtime="20210531 14:54:48.435"/>
</kw>
<msg timestamp="20210531 14:54:48.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:54:48.425" endtime="20210531 14:54:48.436"/>
</kw>
<msg timestamp="20210531 14:54:48.436" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210531 14:54:48.424" endtime="20210531 14:54:48.436"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210531 14:54:48.437" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210531 14:54:48.436" endtime="20210531 14:54:48.437"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:54:48.441" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:54:48.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:54:48.449" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:54:48.439" endtime="20210531 14:54:48.449"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:54:48.450" level="INFO"/>
<status status="PASS" starttime="20210531 14:54:48.449" endtime="20210531 14:54:48.450"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:54:48.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:54:48.450" endtime="20210531 14:54:48.451"/>
</kw>
<status status="PASS" starttime="20210531 14:54:48.438" endtime="20210531 14:54:48.451"/>
</kw>
<msg timestamp="20210531 14:54:48.452" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:54:48.438" endtime="20210531 14:54:48.452"/>
</kw>
<status status="PASS" starttime="20210531 14:54:48.437" endtime="20210531 14:54:48.452"/>
</kw>
<status status="PASS" starttime="20210531 14:54:48.437" endtime="20210531 14:54:48.452"/>
</kw>
<status status="PASS" starttime="20210531 14:54:48.424" endtime="20210531 14:54:48.452"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 14:54:48.423" endtime="20210531 14:54:48.453"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210531 14:54:48.361" endtime="20210531 14:54:48.454"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:58:33.916" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:58:33.923" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:58:33.923" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:58:33.913" endtime="20210531 14:58:33.923"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:58:33.925" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:58:33.924" endtime="20210531 14:58:33.925"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:58:33.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:58:33.925" endtime="20210531 14:58:33.925"/>
</kw>
<status status="PASS" starttime="20210531 14:58:33.912" endtime="20210531 14:58:33.926"/>
</kw>
<msg timestamp="20210531 14:58:33.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:58:33.912" endtime="20210531 14:58:33.926"/>
</kw>
<msg timestamp="20210531 14:58:33.926" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:58:33.911" endtime="20210531 14:58:33.927"/>
</kw>
<msg timestamp="20210531 14:58:33.928" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:58:33.910" endtime="20210531 14:58:33.928"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:58:33.931" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:58:33.931" endtime="20210531 14:58:33.931"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:58:33.932" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:58:33.932" endtime="20210531 14:58:33.932"/>
</kw>
<status status="PASS" starttime="20210531 14:58:33.930" endtime="20210531 14:58:33.932"/>
</kw>
<msg timestamp="20210531 14:58:33.932" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:58:33.930" endtime="20210531 14:58:33.933"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:58:33.933" endtime="20210531 14:58:33.933"/>
</kw>
<msg timestamp="20210531 14:58:33.934" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:58:33.933" endtime="20210531 14:58:33.934"/>
</kw>
<status status="PASS" starttime="20210531 14:58:33.929" endtime="20210531 14:58:33.934"/>
</kw>
<msg timestamp="20210531 14:58:33.934" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:58:33.929" endtime="20210531 14:58:33.934"/>
</kw>
<msg timestamp="20210531 14:58:33.934" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:58:33.928" endtime="20210531 14:58:33.934"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:58:33.940" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:59:13.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:59:13.812" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:58:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:58:36 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:58:33.936" endtime="20210531 14:59:13.812"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:59:13.814" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:58:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:58:36 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:58:36 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:58:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:58:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D1A9BB43703C-&gt;9f5d599f-f172-40c3-af6b-7d82a5fd5c0d
2021-05-31 14:58:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-05-31 14:58:37 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-375C4C95933B-&gt;1dbe4a02-2183-4924-bd91-7cfd68ca3839
2021-05-31 14:58:37 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-31 14:58:38 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:58:38 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
2021-05-31 14:58:38 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473118463, maxDate=1623077918463, sequenceNumber=3, masterKeyId=2))
2021-05-31 14:58:38 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 89 a5 bc 97 9c 2f 38 89 ad ee b7 9e 2f 40 03 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 14:58:38 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473118463, maxDate=1623077918463, sequenceNumber=3, masterKeyId=2)
2021-05-31 14:58:38 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:58:38 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:58:39 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:58:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622472834301_0003
2021-05-31 14:58:39 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473118463, maxDate=1623077918463, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 89 a5 bc 97 9c 2f 38 89 ad ee b7 9e 2f 40 03 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 14:58:39 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:58:39 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:58:39 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 14:58:40 INFO  YarnClientImpl:329 - Submitted application application_1622472834301_0003
2021-05-31 14:58:40 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622472834301_0003/
2021-05-31 14:58:40 INFO  Job:1614 - Running job: job_1622472834301_0003
2021-05-31 14:58:49 INFO  Job:1635 - Job job_1622472834301_0003 running in uber mode : false
2021-05-31 14:58:49 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:59:00 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:59:01 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:59:03 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:59:10 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:59:13 INFO  Job:1653 - Job job_1622472834301_0003 completed successfully
2021-05-31 14:59:13 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126445
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51042
		Total time spent by all reduces in occupied slots (ms)=12986
		Total time spent by all map tasks (ms)=25521
		Total time spent by all reduce tasks (ms)=6493
		Total vcore-milliseconds taken by all map tasks=25521
		Total vcore-milliseconds taken by all reduce tasks=6493
		Total megabyte-milliseconds taken by all map tasks=52267008
		Total megabyte-milliseconds taken by all reduce tasks=13297664
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1241
		CPU time spent (ms)=8050
		Physical memory (bytes) snapshot=1460973568
		Virtual memory (bytes) snapshot=14042095616
		Total committed heap usage (bytes)=1215299584
		Peak Map Physical memory (bytes)=390602752
		Peak Map Virtual memory (bytes)=3512672256
		Peak Reduce Physical memory (bytes)=302968832
		Peak Reduce Virtual memory (bytes)=3508441088
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.32 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 14:59:13.813" endtime="20210531 14:59:13.814"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:59:13.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:59:13.814" endtime="20210531 14:59:13.815"/>
</kw>
<status status="PASS" starttime="20210531 14:58:33.936" endtime="20210531 14:59:13.815"/>
</kw>
<msg timestamp="20210531 14:59:13.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:58:33.935" endtime="20210531 14:59:13.815"/>
</kw>
<msg timestamp="20210531 14:59:13.816" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:58:36 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:58:36 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:58:33.935" endtime="20210531 14:59:13.816"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:59:13.816" endtime="20210531 14:59:13.817"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:58:33.910" endtime="20210531 14:59:13.817"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:59:13.825" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:59:13.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:59:13.830" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:59:13.822" endtime="20210531 14:59:13.830"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:59:13.831" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:59:13.831" endtime="20210531 14:59:13.831"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:59:13.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:59:13.832" endtime="20210531 14:59:13.832"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.821" endtime="20210531 14:59:13.833"/>
</kw>
<msg timestamp="20210531 14:59:13.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:59:13.821" endtime="20210531 14:59:13.833"/>
</kw>
<msg timestamp="20210531 14:59:13.833" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:59:13.820" endtime="20210531 14:59:13.833"/>
</kw>
<msg timestamp="20210531 14:59:13.833" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:59:13.819" endtime="20210531 14:59:13.833"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:59:13.834" level="INFO">${random} = jTTcVVzS</msg>
<status status="PASS" starttime="20210531 14:59:13.834" endtime="20210531 14:59:13.834"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:59:13.839" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:59:13.838" endtime="20210531 14:59:13.839"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:59:13.840" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:59:13.839" endtime="20210531 14:59:13.840"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.838" endtime="20210531 14:59:13.840"/>
</kw>
<msg timestamp="20210531 14:59:13.840" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:59:13.837" endtime="20210531 14:59:13.840"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 14:59:13.841" endtime="20210531 14:59:13.841"/>
</kw>
<msg timestamp="20210531 14:59:13.841" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 14:59:13.840" endtime="20210531 14:59:13.841"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.836" endtime="20210531 14:59:13.842"/>
</kw>
<msg timestamp="20210531 14:59:13.842" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:59:13.835" endtime="20210531 14:59:13.842"/>
</kw>
<msg timestamp="20210531 14:59:13.842" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 14:59:13.834" endtime="20210531 14:59:13.842"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:59:13.847" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:59:13.846" endtime="20210531 14:59:13.847"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:59:13.847" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:59:13.847" endtime="20210531 14:59:13.847"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.846" endtime="20210531 14:59:13.848"/>
</kw>
<msg timestamp="20210531 14:59:13.848" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:59:13.845" endtime="20210531 14:59:13.848"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:59:13.850" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210531 14:59:13.849" endtime="20210531 14:59:13.850"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:59:13.851" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210531 14:59:13.850" endtime="20210531 14:59:13.851"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.849" endtime="20210531 14:59:13.851"/>
</kw>
<msg timestamp="20210531 14:59:13.851" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210531 14:59:13.848" endtime="20210531 14:59:13.851"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.844" endtime="20210531 14:59:13.852"/>
</kw>
<msg timestamp="20210531 14:59:13.852" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 14:59:13.843" endtime="20210531 14:59:13.852"/>
</kw>
<msg timestamp="20210531 14:59:13.852" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 14:59:13.842" endtime="20210531 14:59:13.852"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:59:13.857" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 14:59:13.856" endtime="20210531 14:59:13.857"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:59:13.857" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 14:59:13.857" endtime="20210531 14:59:13.857"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.855" endtime="20210531 14:59:13.858"/>
</kw>
<msg timestamp="20210531 14:59:13.858" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 14:59:13.854" endtime="20210531 14:59:13.858"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:59:13.859" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210531 14:59:13.859" endtime="20210531 14:59:13.859"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:59:13.863" level="INFO">${result} = /wordcount-jTTcVVzS.txt</msg>
<status status="PASS" starttime="20210531 14:59:13.860" endtime="20210531 14:59:13.863"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.858" endtime="20210531 14:59:13.863"/>
</kw>
<msg timestamp="20210531 14:59:13.863" level="INFO">${path_with_leading} = /wordcount-jTTcVVzS.txt</msg>
<status status="PASS" starttime="20210531 14:59:13.858" endtime="20210531 14:59:13.863"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.854" endtime="20210531 14:59:13.864"/>
</kw>
<msg timestamp="20210531 14:59:13.864" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-jTTcVVzS.txt</msg>
<status status="PASS" starttime="20210531 14:59:13.853" endtime="20210531 14:59:13.864"/>
</kw>
<msg timestamp="20210531 14:59:13.864" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-jTTcVVzS.txt</msg>
<status status="PASS" starttime="20210531 14:59:13.852" endtime="20210531 14:59:13.864"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:59:13.868" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-jTTcVVzS.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:59:52.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:59:52.886" level="INFO">${output} = 2021-05-31 14:59:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:59:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
20...</msg>
<status status="PASS" starttime="20210531 14:59:13.866" endtime="20210531 14:59:52.886"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:59:52.887" level="INFO">2021-05-31 14:59:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:59:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
2021-05-31 14:59:16 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473156489, maxDate=1623077956489, sequenceNumber=4, masterKeyId=2))
2021-05-31 14:59:16 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 89 ce be 97 9c 2f 38 89 d6 f0 b7 9e 2f 40 04 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 14:59:16 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473156489, maxDate=1623077956489, sequenceNumber=4, masterKeyId=2)
2021-05-31 14:59:16 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:59:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:59:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:59:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:59:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:59:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0C055EA1DB8C-&gt;9f5d599f-f172-40c3-af6b-7d82a5fd5c0d
2021-05-31 14:59:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:59:18 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:59:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A5B53C96AA0B-&gt;1dbe4a02-2183-4924-bd91-7cfd68ca3839
2021-05-31 14:59:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:59:18 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:59:18 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622472834301_0004
2021-05-31 14:59:18 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473156489, maxDate=1623077956489, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 89 ce be 97 9c 2f 38 89 d6 f0 b7 9e 2f 40 04 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 14:59:18 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:59:18 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:59:19 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 14:59:19 INFO  YarnClientImpl:329 - Submitted application application_1622472834301_0004
2021-05-31 14:59:20 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622472834301_0004/
2021-05-31 14:59:20 INFO  Job:1614 - Running job: job_1622472834301_0004
2021-05-31 14:59:28 INFO  Job:1635 - Job job_1622472834301_0004 running in uber mode : false
2021-05-31 14:59:28 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:59:40 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:59:41 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:59:42 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:59:46 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:59:52 INFO  Job:1653 - Job job_1622472834301_0004 completed successfully
2021-05-31 14:59:52 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1189225
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39773
		OFS: Number of bytes written=22252
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52666
		Total time spent by all reduces in occupied slots (ms)=8108
		Total time spent by all map tasks (ms)=26333
		Total time spent by all reduce tasks (ms)=4054
		Total vcore-milliseconds taken by all map tasks=26333
		Total vcore-milliseconds taken by all reduce tasks=4054
		Total megabyte-milliseconds taken by all map tasks=53929984
		Total megabyte-milliseconds taken by all reduce tasks=8302592
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1071
		CPU time spent (ms)=8640
		Physical memory (bytes) snapshot=1502261248
		Virtual memory (bytes) snapshot=14063235072
		Total committed heap usage (bytes)=1282932736
		Peak Map Physical memory (bytes)=397053952
		Peak Map Virtual memory (bytes)=3512401920
		Peak Reduce Physical memory (bytes)=326602752
		Peak Reduce Virtual memory (bytes)=3530522624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 14:59:52.887" endtime="20210531 14:59:52.887"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:59:52.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:59:52.888" endtime="20210531 14:59:52.888"/>
</kw>
<status status="PASS" starttime="20210531 14:59:13.866" endtime="20210531 14:59:52.889"/>
</kw>
<msg timestamp="20210531 14:59:52.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:59:13.865" endtime="20210531 14:59:52.889"/>
</kw>
<msg timestamp="20210531 14:59:52.889" level="INFO">${output} = 2021-05-31 14:59:16 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:59:16 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
20...</msg>
<status status="PASS" starttime="20210531 14:59:13.864" endtime="20210531 14:59:52.889"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:59:52.890" endtime="20210531 14:59:52.890"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:59:52.890" endtime="20210531 14:59:52.891"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:59:13.818" endtime="20210531 14:59:52.891"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 14:58:33.842" endtime="20210531 14:59:52.892"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:56:53.207" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:56:53.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:56:53.214" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:56:53.203" endtime="20210531 14:56:53.214"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:56:53.215" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:56:53.215" endtime="20210531 14:56:53.216"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:56:53.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:56:53.216" endtime="20210531 14:56:53.216"/>
</kw>
<status status="PASS" starttime="20210531 14:56:53.202" endtime="20210531 14:56:53.217"/>
</kw>
<msg timestamp="20210531 14:56:53.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:56:53.202" endtime="20210531 14:56:53.217"/>
</kw>
<msg timestamp="20210531 14:56:53.217" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:56:53.201" endtime="20210531 14:56:53.219"/>
</kw>
<msg timestamp="20210531 14:56:53.219" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:56:53.201" endtime="20210531 14:56:53.219"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:56:53.224" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:56:53.223" endtime="20210531 14:56:53.224"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:56:53.224" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:56:53.224" endtime="20210531 14:56:53.225"/>
</kw>
<status status="PASS" starttime="20210531 14:56:53.222" endtime="20210531 14:56:53.225"/>
</kw>
<msg timestamp="20210531 14:56:53.225" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:56:53.222" endtime="20210531 14:56:53.225"/>
</kw>
<status status="PASS" starttime="20210531 14:56:53.221" endtime="20210531 14:56:53.225"/>
</kw>
<msg timestamp="20210531 14:56:53.226" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:56:53.220" endtime="20210531 14:56:53.226"/>
</kw>
<msg timestamp="20210531 14:56:53.226" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:56:53.219" endtime="20210531 14:56:53.226"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:56:53.230" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:57:40.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:57:40.272" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:56:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:56:55 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:56:53.228" endtime="20210531 14:57:40.272"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:57:40.273" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:56:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:56:55 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:56:55 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:56:55 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:56:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5F6F9FD2AA08-&gt;1dbe4a02-2183-4924-bd91-7cfd68ca3839
2021-05-31 14:56:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-05-31 14:56:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-098AAB27DDBA-&gt;9f5d599f-f172-40c3-af6b-7d82a5fd5c0d
2021-05-31 14:56:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-05-31 14:56:59 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:57:00 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
2021-05-31 14:57:00 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473020503, maxDate=1623077820503, sequenceNumber=1, masterKeyId=2))
2021-05-31 14:57:00 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8c a6 b6 97 9c 2f 38 8c ae e8 b7 9e 2f 40 01 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 14:57:00 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473020503, maxDate=1623077820503, sequenceNumber=1, masterKeyId=2)
2021-05-31 14:57:00 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:57:01 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:57:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622472834301_0001
2021-05-31 14:57:03 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473020503, maxDate=1623077820503, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8c a6 b6 97 9c 2f 38 8c ae e8 b7 9e 2f 40 01 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 14:57:04 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:57:04 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:57:04 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 14:57:05 INFO  YarnClientImpl:329 - Submitted application application_1622472834301_0001
2021-05-31 14:57:05 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622472834301_0001/
2021-05-31 14:57:05 INFO  Job:1614 - Running job: job_1622472834301_0001
2021-05-31 14:57:17 INFO  Job:1635 - Job job_1622472834301_0001 running in uber mode : false
2021-05-31 14:57:17 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:57:28 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:57:30 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:57:31 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:57:35 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:57:39 INFO  Job:1653 - Job job_1622472834301_0001 completed successfully
2021-05-31 14:57:39 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126657
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51512
		Total time spent by all reduces in occupied slots (ms)=8874
		Total time spent by all map tasks (ms)=25756
		Total time spent by all reduce tasks (ms)=4437
		Total vcore-milliseconds taken by all map tasks=25756
		Total vcore-milliseconds taken by all reduce tasks=4437
		Total megabyte-milliseconds taken by all map tasks=52748288
		Total megabyte-milliseconds taken by all reduce tasks=9086976
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1037
		CPU time spent (ms)=8120
		Physical memory (bytes) snapshot=1503399936
		Virtual memory (bytes) snapshot=14058487808
		Total committed heap usage (bytes)=1323302912
		Peak Map Physical memory (bytes)=397557760
		Peak Map Virtual memory (bytes)=3513782272
		Peak Reduce Physical memory (bytes)=322052096
		Peak Reduce Virtual memory (bytes)=3525771264
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 40.049 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 14:57:40.272" endtime="20210531 14:57:40.274"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:57:40.274" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:57:40.274" endtime="20210531 14:57:40.274"/>
</kw>
<status status="PASS" starttime="20210531 14:56:53.227" endtime="20210531 14:57:40.275"/>
</kw>
<msg timestamp="20210531 14:57:40.275" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:56:53.227" endtime="20210531 14:57:40.275"/>
</kw>
<msg timestamp="20210531 14:57:40.282" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 14:56:55 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:56:55 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 14:56:53.226" endtime="20210531 14:57:40.282"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:57:40.282" endtime="20210531 14:57:40.282"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:56:53.200" endtime="20210531 14:57:40.282"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:57:40.289" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:57:40.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:57:40.294" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:57:40.287" endtime="20210531 14:57:40.294"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:57:40.297" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:57:40.294" endtime="20210531 14:57:40.297"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:57:40.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:57:40.297" endtime="20210531 14:57:40.304"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.286" endtime="20210531 14:57:40.304"/>
</kw>
<msg timestamp="20210531 14:57:40.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:57:40.286" endtime="20210531 14:57:40.306"/>
</kw>
<msg timestamp="20210531 14:57:40.307" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:57:40.285" endtime="20210531 14:57:40.307"/>
</kw>
<msg timestamp="20210531 14:57:40.307" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 14:57:40.284" endtime="20210531 14:57:40.307"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 14:57:40.308" level="INFO">${random} = KjVxTgoC</msg>
<status status="PASS" starttime="20210531 14:57:40.307" endtime="20210531 14:57:40.308"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:57:40.312" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:57:40.312" endtime="20210531 14:57:40.312"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:57:40.313" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:57:40.312" endtime="20210531 14:57:40.313"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.311" endtime="20210531 14:57:40.313"/>
</kw>
<msg timestamp="20210531 14:57:40.313" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:57:40.310" endtime="20210531 14:57:40.313"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.310" endtime="20210531 14:57:40.313"/>
</kw>
<msg timestamp="20210531 14:57:40.314" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:57:40.309" endtime="20210531 14:57:40.314"/>
</kw>
<msg timestamp="20210531 14:57:40.314" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 14:57:40.309" endtime="20210531 14:57:40.314"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:57:40.318" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:57:40.318" endtime="20210531 14:57:40.318"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:57:40.319" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:57:40.318" endtime="20210531 14:57:40.319"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.317" endtime="20210531 14:57:40.319"/>
</kw>
<msg timestamp="20210531 14:57:40.319" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:57:40.317" endtime="20210531 14:57:40.319"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.316" endtime="20210531 14:57:40.319"/>
</kw>
<msg timestamp="20210531 14:57:40.319" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 14:57:40.315" endtime="20210531 14:57:40.319"/>
</kw>
<msg timestamp="20210531 14:57:40.320" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 14:57:40.314" endtime="20210531 14:57:40.320"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 14:57:40.323" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 14:57:40.323" endtime="20210531 14:57:40.323"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 14:57:40.324" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 14:57:40.323" endtime="20210531 14:57:40.324"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.322" endtime="20210531 14:57:40.324"/>
</kw>
<msg timestamp="20210531 14:57:40.324" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 14:57:40.322" endtime="20210531 14:57:40.324"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.321" endtime="20210531 14:57:40.324"/>
</kw>
<msg timestamp="20210531 14:57:40.324" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-KjVxTgoC.txt</msg>
<status status="PASS" starttime="20210531 14:57:40.321" endtime="20210531 14:57:40.324"/>
</kw>
<msg timestamp="20210531 14:57:40.325" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-KjVxTgoC.txt</msg>
<status status="PASS" starttime="20210531 14:57:40.320" endtime="20210531 14:57:40.325"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:57:40.328" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-KjVxTgoC.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:58:15.317" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:58:15.317" level="INFO">${output} = 2021-05-31 14:57:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:57:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
20...</msg>
<status status="PASS" starttime="20210531 14:57:40.326" endtime="20210531 14:58:15.318"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:58:15.319" level="INFO">2021-05-31 14:57:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:57:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
2021-05-31 14:57:43 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473063142, maxDate=1623077863142, sequenceNumber=2, masterKeyId=2))
2021-05-31 14:57:43 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 f4 b8 97 9c 2f 38 f6 fc ea b7 9e 2f 40 02 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 14:57:43 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473063142, maxDate=1623077863142, sequenceNumber=2, masterKeyId=2)
2021-05-31 14:57:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 14:57:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 14:57:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 14:57:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 14:57:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 14:57:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F80BDB6C3F7A-&gt;1dbe4a02-2183-4924-bd91-7cfd68ca3839
2021-05-31 14:57:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:57:45 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 14:57:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A128FF484B00-&gt;9f5d599f-f172-40c3-af6b-7d82a5fd5c0d
2021-05-31 14:57:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 14:57:45 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 14:57:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622472834301_0002
2021-05-31 14:57:45 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622473063142, maxDate=1623077863142, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.11:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f6 f4 b8 97 9c 2f 38 f6 fc ea b7 9e 2f 40 02 48 01 5a 0d 33 36 37 39 34 31 30 35 33 34 34 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 14:57:46 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 14:57:46 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 14:57:46 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 14:57:47 INFO  YarnClientImpl:329 - Submitted application application_1622472834301_0002
2021-05-31 14:57:47 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622472834301_0002/
2021-05-31 14:57:47 INFO  Job:1614 - Running job: job_1622472834301_0002
2021-05-31 14:57:55 INFO  Job:1635 - Job job_1622472834301_0002 running in uber mode : false
2021-05-31 14:57:55 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 14:58:06 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 14:58:07 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 14:58:08 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 14:58:13 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 14:58:14 INFO  Job:1653 - Job job_1622472834301_0002 completed successfully
2021-05-31 14:58:14 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1189313
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39776
		O3FS: Number of bytes written=22252
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51226
		Total time spent by all reduces in occupied slots (ms)=8234
		Total time spent by all map tasks (ms)=25613
		Total time spent by all reduce tasks (ms)=4117
		Total vcore-milliseconds taken by all map tasks=25613
		Total vcore-milliseconds taken by all reduce tasks=4117
		Total megabyte-milliseconds taken by all map tasks=52455424
		Total megabyte-milliseconds taken by all reduce tasks=8431616
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=977
		CPU time spent (ms)=8410
		Physical memory (bytes) snapshot=1502953472
		Virtual memory (bytes) snapshot=14060085248
		Total committed heap usage (bytes)=1281359872
		Peak Map Physical memory (bytes)=399171584
		Peak Map Virtual memory (bytes)=3511607296
		Peak Reduce Physical memory (bytes)=327925760
		Peak Reduce Virtual memory (bytes)=3526848512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 14:58:15.318" endtime="20210531 14:58:15.319"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:58:15.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:58:15.319" endtime="20210531 14:58:15.320"/>
</kw>
<status status="PASS" starttime="20210531 14:57:40.326" endtime="20210531 14:58:15.320"/>
</kw>
<msg timestamp="20210531 14:58:15.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:57:40.326" endtime="20210531 14:58:15.321"/>
</kw>
<msg timestamp="20210531 14:58:15.321" level="INFO">${output} = 2021-05-31 14:57:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.8:8032
2021-05-31 14:57:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.12:10200
20...</msg>
<status status="PASS" starttime="20210531 14:57:40.325" endtime="20210531 14:58:15.321"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:58:15.322" endtime="20210531 14:58:15.322"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:58:15.322" endtime="20210531 14:58:15.322"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 14:57:40.283" endtime="20210531 14:58:15.323"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 14:56:53.135" endtime="20210531 14:58:15.324"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="226762"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
