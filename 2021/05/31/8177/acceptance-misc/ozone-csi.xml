<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210531 14:02:49.076" rpa="false" schemaversion="2">
<suite id="s1" name="ozone-csi" source="/opt/hadoop/smoketest/csi.robot">
<test id="s1-t1" name="Check if CSI server is started">
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>3min</arg>
<arg>1sec</arg>
<arg>CSI Socket check</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:37.540" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:37.541" level="INFO">${rc} = 1</msg>
<msg timestamp="20210531 14:02:37.541" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:02:37.535" endtime="20210531 14:02:37.541"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:37.542" level="INFO"/>
<status status="PASS" starttime="20210531 14:02:37.541" endtime="20210531 14:02:37.542"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:37.543" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210531 14:02:37.543" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210531 14:02:37.542" endtime="20210531 14:02:37.543"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:37.534" endtime="20210531 14:02:37.544"/>
</kw>
<msg timestamp="20210531 14:02:37.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210531 14:02:37.534" endtime="20210531 14:02:37.544"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:37.533" endtime="20210531 14:02:37.544"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:37.533" endtime="20210531 14:02:37.544"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:38.550" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:38.551" level="INFO">${rc} = 1</msg>
<msg timestamp="20210531 14:02:38.552" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:02:38.547" endtime="20210531 14:02:38.552"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:38.553" level="INFO"/>
<status status="PASS" starttime="20210531 14:02:38.552" endtime="20210531 14:02:38.553"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:38.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210531 14:02:38.554" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210531 14:02:38.553" endtime="20210531 14:02:38.554"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:38.547" endtime="20210531 14:02:38.554"/>
</kw>
<msg timestamp="20210531 14:02:38.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210531 14:02:38.546" endtime="20210531 14:02:38.554"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:38.546" endtime="20210531 14:02:38.555"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:38.545" endtime="20210531 14:02:38.555"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:39.560" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:39.563" level="INFO">${rc} = 1</msg>
<msg timestamp="20210531 14:02:39.563" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:02:39.557" endtime="20210531 14:02:39.563"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:39.564" level="INFO"/>
<status status="PASS" starttime="20210531 14:02:39.563" endtime="20210531 14:02:39.564"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:39.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210531 14:02:39.567" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210531 14:02:39.566" endtime="20210531 14:02:39.567"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:39.557" endtime="20210531 14:02:39.567"/>
</kw>
<msg timestamp="20210531 14:02:39.567" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210531 14:02:39.556" endtime="20210531 14:02:39.568"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:39.556" endtime="20210531 14:02:39.568"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:39.555" endtime="20210531 14:02:39.568"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:40.573" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:40.575" level="INFO">${rc} = 1</msg>
<msg timestamp="20210531 14:02:40.575" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:02:40.571" endtime="20210531 14:02:40.575"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:40.576" level="INFO"/>
<status status="PASS" starttime="20210531 14:02:40.576" endtime="20210531 14:02:40.577"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:40.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210531 14:02:40.578" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210531 14:02:40.577" endtime="20210531 14:02:40.578"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:40.570" endtime="20210531 14:02:40.579"/>
</kw>
<msg timestamp="20210531 14:02:40.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210531 14:02:40.570" endtime="20210531 14:02:40.579"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:40.569" endtime="20210531 14:02:40.579"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:40.569" endtime="20210531 14:02:40.579"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:41.589" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:41.599" level="INFO">${rc} = 1</msg>
<msg timestamp="20210531 14:02:41.599" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:02:41.582" endtime="20210531 14:02:41.600"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:41.601" level="INFO"/>
<status status="PASS" starttime="20210531 14:02:41.600" endtime="20210531 14:02:41.601"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:41.602" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210531 14:02:41.602" level="FAIL">1 != 0</msg>
<status status="FAIL" starttime="20210531 14:02:41.601" endtime="20210531 14:02:41.602"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:41.581" endtime="20210531 14:02:41.602"/>
</kw>
<msg timestamp="20210531 14:02:41.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" starttime="20210531 14:02:41.581" endtime="20210531 14:02:41.603"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:41.580" endtime="20210531 14:02:41.603"/>
</kw>
<status status="FAIL" starttime="20210531 14:02:41.580" endtime="20210531 14:02:41.603"/>
</kw>
<kw name="CSI Socket check">
<kw name="Execute" library="os">
<arg>[ -S /tmp/csi.sock ]</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:42.608" level="INFO">Running command '[ -S /tmp/csi.sock ] 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:42.610" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:02:42.610" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 14:02:42.606" endtime="20210531 14:02:42.610"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:42.611" level="INFO"/>
<status status="PASS" starttime="20210531 14:02:42.610" endtime="20210531 14:02:42.611"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:42.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:02:42.611" endtime="20210531 14:02:42.612"/>
</kw>
<status status="PASS" starttime="20210531 14:02:42.605" endtime="20210531 14:02:42.612"/>
</kw>
<msg timestamp="20210531 14:02:42.612" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:02:42.605" endtime="20210531 14:02:42.612"/>
</kw>
<status status="PASS" starttime="20210531 14:02:42.604" endtime="20210531 14:02:42.612"/>
</kw>
<status status="PASS" starttime="20210531 14:02:42.604" endtime="20210531 14:02:42.613"/>
</kw>
<status status="PASS" starttime="20210531 14:02:37.532" endtime="20210531 14:02:42.613"/>
</kw>
<timeout value="1 minute"/>
<status status="PASS" starttime="20210531 14:02:37.531" endtime="20210531 14:02:42.613"/>
</test>
<test id="s1-t2" name="Test CSI identity service">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>csc -e unix:///tmp/csi.sock identity plugin-info</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 14:02:42.619" level="INFO">Running command 'csc -e unix:///tmp/csi.sock identity plugin-info 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 14:02:42.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 14:02:42.974" level="INFO">${output} = "org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20210531 14:02:42.617" endtime="20210531 14:02:42.974"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 14:02:42.976" level="INFO">"org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20210531 14:02:42.975" endtime="20210531 14:02:42.976"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 14:02:42.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 14:02:42.976" endtime="20210531 14:02:42.977"/>
</kw>
<status status="PASS" starttime="20210531 14:02:42.616" endtime="20210531 14:02:42.977"/>
</kw>
<msg timestamp="20210531 14:02:42.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 14:02:42.616" endtime="20210531 14:02:42.977"/>
</kw>
<msg timestamp="20210531 14:02:42.978" level="INFO">${result} = "org.apache.hadoop.ozone"	"1.2.0-SNAPSHOT"</msg>
<status status="PASS" starttime="20210531 14:02:42.615" endtime="20210531 14:02:42.978"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>org.apache.hadoop.ozone</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 14:02:42.978" endtime="20210531 14:02:42.978"/>
</kw>
<timeout value="1 minute"/>
<status status="PASS" starttime="20210531 14:02:42.614" endtime="20210531 14:02:42.979"/>
</test>
<doc>Smoketest Ozone CSI service</doc>
<status status="PASS" starttime="20210531 14:02:37.467" endtime="20210531 14:02:42.981"/>
</suite>
<statistics>
<total>
<stat pass="2" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="0" skip="0" id="s1" name="ozone-csi">ozone-csi</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
