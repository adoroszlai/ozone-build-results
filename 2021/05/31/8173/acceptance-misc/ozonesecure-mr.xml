<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 4.0.3 (Python 3.6.9 on linux)" generated="20210531 10:02:14.405" rpa="false" schemaversion="2">
<suite id="s1" name="ozonesecure-mr">
<suite id="s1-s1" name="Createmrenv" source="/opt/hadoop/smoketest/createmrenv.robot">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:27.248" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:31.983" level="INFO">${rc} = 255</msg>
<msg timestamp="20210531 09:57:31.983" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 09:57:27.244" endtime="20210531 09:57:31.983"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:31.985" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 09:57:31.984" endtime="20210531 09:57:31.985"/>
</kw>
<msg timestamp="20210531 09:57:31.985" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" starttime="20210531 09:57:27.243" endtime="20210531 09:57:31.985"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create volume">
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:31.990" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:36.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:36.136" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:57:31.988" endtime="20210531 09:57:36.136"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:36.137" level="INFO"/>
<status status="PASS" starttime="20210531 09:57:36.137" endtime="20210531 09:57:36.137"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:36.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:36.138" endtime="20210531 09:57:36.138"/>
</kw>
<status status="PASS" starttime="20210531 09:57:31.987" endtime="20210531 09:57:36.139"/>
</kw>
<msg timestamp="20210531 09:57:36.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:31.987" endtime="20210531 09:57:36.139"/>
</kw>
<msg timestamp="20210531 09:57:36.139" level="INFO">${result} = </msg>
<status status="PASS" starttime="20210531 09:57:31.986" endtime="20210531 09:57:36.139"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>Failed</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 09:57:36.140" endtime="20210531 09:57:36.140"/>
</kw>
<status status="PASS" starttime="20210531 09:57:31.986" endtime="20210531 09:57:36.141"/>
</kw>
<status status="PASS" starttime="20210531 09:57:31.985" endtime="20210531 09:57:36.141"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:36.146" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:40.345" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:40.345" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:57:36.144" endtime="20210531 09:57:40.345"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:40.347" level="INFO"/>
<status status="PASS" starttime="20210531 09:57:40.346" endtime="20210531 09:57:40.347"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:40.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:40.347" endtime="20210531 09:57:40.349"/>
</kw>
<status status="PASS" starttime="20210531 09:57:36.143" endtime="20210531 09:57:40.349"/>
</kw>
<msg timestamp="20210531 09:57:40.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:36.143" endtime="20210531 09:57:40.350"/>
</kw>
<status status="PASS" starttime="20210531 09:57:36.142" endtime="20210531 09:57:40.350"/>
</kw>
<status status="PASS" starttime="20210531 09:57:36.141" endtime="20210531 09:57:40.350"/>
</kw>
<status status="PASS" starttime="20210531 09:57:36.141" endtime="20210531 09:57:40.350"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" starttime="20210531 09:57:40.350" endtime="20210531 09:57:40.351"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:40.355" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:44.932" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:44.932" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T09:57...</msg>
<status status="PASS" starttime="20210531 09:57:40.353" endtime="20210531 09:57:44.932"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:44.933" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T09:57:40.097Z",
  "modificationTime" : "2021-05-31T09:57:40.097Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" starttime="20210531 09:57:44.932" endtime="20210531 09:57:44.933"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:44.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:44.934" endtime="20210531 09:57:44.934"/>
</kw>
<status status="PASS" starttime="20210531 09:57:40.352" endtime="20210531 09:57:44.935"/>
</kw>
<msg timestamp="20210531 09:57:44.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:40.352" endtime="20210531 09:57:44.935"/>
</kw>
<msg timestamp="20210531 09:57:44.935" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-05-31T09:57...</msg>
<status status="PASS" starttime="20210531 09:57:40.351" endtime="20210531 09:57:44.935"/>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 09:57:44.935" endtime="20210531 09:57:44.936"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:57:44.941" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:57:44.941" endtime="20210531 09:57:44.941"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:57:44.942" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:57:44.942" endtime="20210531 09:57:44.942"/>
</kw>
<status status="PASS" starttime="20210531 09:57:44.940" endtime="20210531 09:57:44.942"/>
</kw>
<msg timestamp="20210531 09:57:44.943" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:57:44.939" endtime="20210531 09:57:44.943"/>
</kw>
<status status="PASS" starttime="20210531 09:57:44.938" endtime="20210531 09:57:44.943"/>
</kw>
<msg timestamp="20210531 09:57:44.943" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 09:57:44.937" endtime="20210531 09:57:44.943"/>
</kw>
<msg timestamp="20210531 09:57:44.944" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" starttime="20210531 09:57:44.936" endtime="20210531 09:57:44.944"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:44.949" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:48.744" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:48.744" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:57:44.945" endtime="20210531 09:57:48.744"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:48.745" level="INFO"/>
<status status="PASS" starttime="20210531 09:57:48.744" endtime="20210531 09:57:48.746"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:48.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:48.746" endtime="20210531 09:57:48.746"/>
</kw>
<status status="PASS" starttime="20210531 09:57:44.945" endtime="20210531 09:57:48.747"/>
</kw>
<msg timestamp="20210531 09:57:48.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:44.944" endtime="20210531 09:57:48.747"/>
</kw>
<status status="PASS" starttime="20210531 09:57:44.944" endtime="20210531 09:57:48.748"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:48.752" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:57.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:57.621" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:57:48.750" endtime="20210531 09:57:57.621"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:57.622" level="INFO"/>
<status status="PASS" starttime="20210531 09:57:57.621" endtime="20210531 09:57:57.622"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:57.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:57.623" endtime="20210531 09:57:57.623"/>
</kw>
<status status="PASS" starttime="20210531 09:57:48.749" endtime="20210531 09:57:57.624"/>
</kw>
<msg timestamp="20210531 09:57:57.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:48.749" endtime="20210531 09:57:57.624"/>
</kw>
<status status="PASS" starttime="20210531 09:57:48.748" endtime="20210531 09:57:57.624"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:57.628" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:58:04.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:58:04.045" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:57:57.626" endtime="20210531 09:58:04.045"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:58:04.047" level="INFO"/>
<status status="PASS" starttime="20210531 09:58:04.046" endtime="20210531 09:58:04.047"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:58:04.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:58:04.048" endtime="20210531 09:58:04.048"/>
</kw>
<status status="PASS" starttime="20210531 09:57:57.625" endtime="20210531 09:58:04.049"/>
</kw>
<msg timestamp="20210531 09:58:04.049" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:57.625" endtime="20210531 09:58:04.049"/>
</kw>
<status status="PASS" starttime="20210531 09:57:57.624" endtime="20210531 09:58:04.049"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:58:04.053" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:58:10.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:58:10.378" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:58:04.051" endtime="20210531 09:58:10.379"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:58:10.380" level="INFO"/>
<status status="PASS" starttime="20210531 09:58:10.379" endtime="20210531 09:58:10.380"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:58:10.381" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:58:10.380" endtime="20210531 09:58:10.381"/>
</kw>
<status status="PASS" starttime="20210531 09:58:04.050" endtime="20210531 09:58:10.382"/>
</kw>
<msg timestamp="20210531 09:58:10.382" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:58:04.050" endtime="20210531 09:58:10.382"/>
</kw>
<status status="PASS" starttime="20210531 09:58:04.049" endtime="20210531 09:58:10.382"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 09:57:27.242" endtime="20210531 09:58:10.382"/>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:58:10.389" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:58:10.388" endtime="20210531 09:58:10.389"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:58:10.390" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:58:10.389" endtime="20210531 09:58:10.390"/>
</kw>
<status status="PASS" starttime="20210531 09:58:10.388" endtime="20210531 09:58:10.390"/>
</kw>
<msg timestamp="20210531 09:58:10.390" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:58:10.387" endtime="20210531 09:58:10.390"/>
</kw>
<status status="PASS" starttime="20210531 09:58:10.386" endtime="20210531 09:58:10.391"/>
</kw>
<msg timestamp="20210531 09:58:10.391" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 09:58:10.385" endtime="20210531 09:58:10.391"/>
</kw>
<msg timestamp="20210531 09:58:10.391" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 09:58:10.384" endtime="20210531 09:58:10.391"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:58:10.395" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:58:14.262" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:58:14.262" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:58:10.393" endtime="20210531 09:58:14.262"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:58:14.264" level="INFO"/>
<status status="PASS" starttime="20210531 09:58:14.263" endtime="20210531 09:58:14.264"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:58:14.265" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:58:14.264" endtime="20210531 09:58:14.265"/>
</kw>
<status status="PASS" starttime="20210531 09:58:10.392" endtime="20210531 09:58:14.265"/>
</kw>
<msg timestamp="20210531 09:58:14.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:58:10.392" endtime="20210531 09:58:14.266"/>
</kw>
<status status="PASS" starttime="20210531 09:58:10.392" endtime="20210531 09:58:14.266"/>
</kw>
<kw name="Execute" library="os">
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:58:14.270" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:58:18.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:58:18.191" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:58:14.268" endtime="20210531 09:58:18.191"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:58:18.192" level="INFO"/>
<status status="PASS" starttime="20210531 09:58:18.191" endtime="20210531 09:58:18.192"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:58:18.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:58:18.193" endtime="20210531 09:58:18.193"/>
</kw>
<status status="PASS" starttime="20210531 09:58:14.267" endtime="20210531 09:58:18.193"/>
</kw>
<msg timestamp="20210531 09:58:18.194" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:58:14.267" endtime="20210531 09:58:18.194"/>
</kw>
<status status="PASS" starttime="20210531 09:58:14.266" endtime="20210531 09:58:18.194"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 09:58:10.383" endtime="20210531 09:58:18.194"/>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" starttime="20210531 09:57:27.173" endtime="20210531 09:58:18.196"/>
</suite>
<suite id="s1-s2" name="hadoopfs-ofs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:00:37.123" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 10:00:37.122" endtime="20210531 10:00:37.123"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:00:37.124" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 10:00:37.123" endtime="20210531 10:00:37.124"/>
</kw>
<status status="PASS" starttime="20210531 10:00:37.121" endtime="20210531 10:00:37.124"/>
</kw>
<msg timestamp="20210531 10:00:37.124" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 10:00:37.121" endtime="20210531 10:00:37.124"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 10:00:37.125" endtime="20210531 10:00:37.125"/>
</kw>
<msg timestamp="20210531 10:00:37.125" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 10:00:37.124" endtime="20210531 10:00:37.125"/>
</kw>
<status status="PASS" starttime="20210531 10:00:37.120" endtime="20210531 10:00:37.126"/>
</kw>
<msg timestamp="20210531 10:00:37.126" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 10:00:37.119" endtime="20210531 10:00:37.126"/>
</kw>
<msg timestamp="20210531 10:00:37.126" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 10:00:37.118" endtime="20210531 10:00:37.126"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 10:00:37.127" level="INFO">${random} = 29222</msg>
<status status="PASS" starttime="20210531 10:00:37.126" endtime="20210531 10:00:37.127"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 10:00:37.133" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-29222 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:00:40.942" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:00:40.942" level="INFO">${output} = 2021-05-31 10:00:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:00:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 10:00:37.129" endtime="20210531 10:00:40.942"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:00:40.944" level="INFO">2021-05-31 10:00:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:00:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 10:00:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 10:00:39 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 10:00:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7BB502D85062-&gt;8b2419b4-a177-4573-af00-09505f396448
2021-05-31 10:00:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 10:00:40.943" endtime="20210531 10:00:40.944"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:00:40.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:00:40.944" endtime="20210531 10:00:40.945"/>
</kw>
<status status="PASS" starttime="20210531 10:00:37.128" endtime="20210531 10:00:40.945"/>
</kw>
<msg timestamp="20210531 10:00:40.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 10:00:37.128" endtime="20210531 10:00:40.945"/>
</kw>
<msg timestamp="20210531 10:00:40.945" level="INFO">${result} = 2021-05-31 10:00:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:00:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 10:00:37.127" endtime="20210531 10:00:40.946"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 10:00:40.950" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:00:43.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:00:43.123" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 10:00 ofs://om/volume1/bucket1/ozone-29222
-rw-...</msg>
<status status="PASS" starttime="20210531 10:00:40.948" endtime="20210531 10:00:43.123"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:00:43.124" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 10:00 ofs://om/volume1/bucket1/ozone-29222
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 09:59 ofs://om/volume1/bucket1/ozone-44757
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:58 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 10:00 ofs://om/volume1/bucket1/wordcount-j86s03iG.txt</msg>
<status status="PASS" starttime="20210531 10:00:43.123" endtime="20210531 10:00:43.124"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:00:43.125" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:00:43.124" endtime="20210531 10:00:43.125"/>
</kw>
<status status="PASS" starttime="20210531 10:00:40.947" endtime="20210531 10:00:43.125"/>
</kw>
<msg timestamp="20210531 10:00:43.125" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 10:00:40.947" endtime="20210531 10:00:43.125"/>
</kw>
<msg timestamp="20210531 10:00:43.126" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:57 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 10:00 ofs://om/volume1/bucket1/ozone-29222
-rw-...</msg>
<status status="PASS" starttime="20210531 10:00:40.946" endtime="20210531 10:00:43.126"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 10:00:43.126" endtime="20210531 10:00:43.126"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 10:00:37.117" endtime="20210531 10:00:43.126"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 10:00:37.051" endtime="20210531 10:00:43.128"/>
</suite>
<suite id="s1-s3" name="hadoopfs-o3fs" source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:58:57.901" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:58:57.900" endtime="20210531 09:58:57.901"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:58:57.902" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:58:57.901" endtime="20210531 09:58:57.902"/>
</kw>
<status status="PASS" starttime="20210531 09:58:57.899" endtime="20210531 09:58:57.902"/>
</kw>
<msg timestamp="20210531 09:58:57.902" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:58:57.899" endtime="20210531 09:58:57.902"/>
</kw>
<status status="PASS" starttime="20210531 09:58:57.898" endtime="20210531 09:58:57.902"/>
</kw>
<msg timestamp="20210531 09:58:57.902" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 09:58:57.897" endtime="20210531 09:58:57.903"/>
</kw>
<msg timestamp="20210531 09:58:57.903" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 09:58:57.896" endtime="20210531 09:58:57.903"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<arg>5</arg>
<arg>[NUMBERS]</arg>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 09:58:57.903" level="INFO">${random} = 44757</msg>
<status status="PASS" starttime="20210531 09:58:57.903" endtime="20210531 09:58:57.903"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:58:57.910" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-44757 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:59:02.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:59:02.546" level="INFO">${output} = 2021-05-31 09:59:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 09:58:57.905" endtime="20210531 09:59:02.546"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:59:02.547" level="INFO">2021-05-31 09:59:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 09:59:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 09:59:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 09:59:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CA8D8DDE58BB-&gt;ffddd9fb-494a-4280-9a7f-a8d3d4602b93
2021-05-31 09:59:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" starttime="20210531 09:59:02.546" endtime="20210531 09:59:02.547"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:59:02.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:59:02.547" endtime="20210531 09:59:02.548"/>
</kw>
<status status="PASS" starttime="20210531 09:58:57.905" endtime="20210531 09:59:02.548"/>
</kw>
<msg timestamp="20210531 09:59:02.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:58:57.904" endtime="20210531 09:59:02.548"/>
</kw>
<msg timestamp="20210531 09:59:02.549" level="INFO">${result} = 2021-05-31 09:59:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" starttime="20210531 09:58:57.904" endtime="20210531 09:59:02.549"/>
</kw>
<kw name="Execute" library="os">
<var>${result}</var>
<arg>hdfs dfs -ls ${dir}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:59:02.553" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:59:04.737" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:59:04.737" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 09:59 o3fs://bucket1.volume1.om/ozone-44757
dr...</msg>
<status status="PASS" starttime="20210531 09:59:02.551" endtime="20210531 09:59:04.737"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:59:04.738" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 09:59 o3fs://bucket1.volume1.om/ozone-44757
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:58 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" starttime="20210531 09:59:04.737" endtime="20210531 09:59:04.738"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:59:04.739" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:59:04.738" endtime="20210531 09:59:04.739"/>
</kw>
<status status="PASS" starttime="20210531 09:59:02.550" endtime="20210531 09:59:04.739"/>
</kw>
<msg timestamp="20210531 09:59:04.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:59:02.550" endtime="20210531 09:59:04.739"/>
</kw>
<msg timestamp="20210531 09:59:04.740" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-05-31 09:57 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-05-31 09:59 o3fs://bucket1.volume1.om/ozone-44757
dr...</msg>
<status status="PASS" starttime="20210531 09:59:02.549" endtime="20210531 09:59:04.740"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 09:59:04.740" endtime="20210531 09:59:04.740"/>
</kw>
<timeout value="5 minutes"/>
<status status="PASS" starttime="20210531 09:58:57.895" endtime="20210531 09:59:04.741"/>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" starttime="20210531 09:58:57.830" endtime="20210531 09:59:04.742"/>
</suite>
<suite id="s1-s4" name="Kinit-Hadoop" source="/opt/ozone/smoketest/kinit-hadoop.robot">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:58:51.800" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:58:51.806" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:58:51.806" level="INFO">${output} = rm</msg>
<status status="PASS" starttime="20210531 09:58:51.796" endtime="20210531 09:58:51.806"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:58:51.807" level="INFO">rm</msg>
<status status="PASS" starttime="20210531 09:58:51.807" endtime="20210531 09:58:51.807"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:58:51.808" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:58:51.808" endtime="20210531 09:58:51.808"/>
</kw>
<status status="PASS" starttime="20210531 09:58:51.795" endtime="20210531 09:58:51.809"/>
</kw>
<msg timestamp="20210531 09:58:51.809" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:58:51.794" endtime="20210531 09:58:51.809"/>
</kw>
<msg timestamp="20210531 09:58:51.809" level="INFO">${instance} = rm</msg>
<status status="PASS" starttime="20210531 09:58:51.794" endtime="20210531 09:58:51.809"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210531 09:58:51.811" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210531 09:58:51.809" endtime="20210531 09:58:51.811"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:58:51.815" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:58:51.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:58:51.824" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:58:51.813" endtime="20210531 09:58:51.824"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:58:51.826" level="INFO"/>
<status status="PASS" starttime="20210531 09:58:51.825" endtime="20210531 09:58:51.826"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:58:51.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:58:51.826" endtime="20210531 09:58:51.827"/>
</kw>
<status status="PASS" starttime="20210531 09:58:51.812" endtime="20210531 09:58:51.827"/>
</kw>
<msg timestamp="20210531 09:58:51.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:58:51.812" endtime="20210531 09:58:51.827"/>
</kw>
<status status="PASS" starttime="20210531 09:58:51.811" endtime="20210531 09:58:51.828"/>
</kw>
<status status="PASS" starttime="20210531 09:58:51.811" endtime="20210531 09:58:51.828"/>
</kw>
<status status="PASS" starttime="20210531 09:58:51.793" endtime="20210531 09:58:51.828"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 09:58:51.792" endtime="20210531 09:58:51.828"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210531 09:58:51.728" endtime="20210531 09:58:51.830"/>
</suite>
<suite id="s1-s5" name="Kinit" source="/opt/hadoop/smoketest/kinit.robot">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
<kw name="Execute" library="os">
<var>${instance}</var>
<arg>hostname | sed 's/scm[0-9].org/scm/'</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:21.085" level="INFO">Running command 'hostname | sed 's/scm[0-9].org/scm/' 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:21.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:21.089" level="INFO">${output} = om</msg>
<status status="PASS" starttime="20210531 09:57:21.081" endtime="20210531 09:57:21.089"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:21.090" level="INFO">om</msg>
<status status="PASS" starttime="20210531 09:57:21.090" endtime="20210531 09:57:21.090"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:21.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:21.091" endtime="20210531 09:57:21.091"/>
</kw>
<status status="PASS" starttime="20210531 09:57:21.081" endtime="20210531 09:57:21.092"/>
</kw>
<msg timestamp="20210531 09:57:21.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:21.080" endtime="20210531 09:57:21.092"/>
</kw>
<msg timestamp="20210531 09:57:21.092" level="INFO">${instance} = om</msg>
<status status="PASS" starttime="20210531 09:57:21.080" endtime="20210531 09:57:21.092"/>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<arg>${TEST_USER}</arg>
<arg>${user}/${instance}@EXAMPLE.COM</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<msg timestamp="20210531 09:57:21.093" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" starttime="20210531 09:57:21.092" endtime="20210531 09:57:21.093"/>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<doc>Runs the specified keyword and retries if it fails.</doc>
<kw name="Execute" library="os">
<arg>kinit -k ${user}/${instance}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:57:21.098" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:57:21.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:57:21.105" level="INFO">${output} = </msg>
<status status="PASS" starttime="20210531 09:57:21.096" endtime="20210531 09:57:21.105"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:57:21.107" level="INFO"/>
<status status="PASS" starttime="20210531 09:57:21.106" endtime="20210531 09:57:21.107"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:57:21.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:57:21.107" endtime="20210531 09:57:21.108"/>
</kw>
<status status="PASS" starttime="20210531 09:57:21.095" endtime="20210531 09:57:21.108"/>
</kw>
<msg timestamp="20210531 09:57:21.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:57:21.094" endtime="20210531 09:57:21.108"/>
</kw>
<status status="PASS" starttime="20210531 09:57:21.094" endtime="20210531 09:57:21.108"/>
</kw>
<status status="PASS" starttime="20210531 09:57:21.093" endtime="20210531 09:57:21.108"/>
</kw>
<status status="PASS" starttime="20210531 09:57:21.079" endtime="20210531 09:57:21.109"/>
</kw>
<timeout value="2 minutes"/>
<status status="PASS" starttime="20210531 09:57:21.078" endtime="20210531 09:57:21.109"/>
</test>
<doc>Kinit test user</doc>
<status status="PASS" starttime="20210531 09:57:21.012" endtime="20210531 09:57:21.110"/>
</suite>
<suite id="s1-s6" name="mapreduce-ofs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 10:00:49.199" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:00:49.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:00:49.206" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:00:49.195" endtime="20210531 10:00:49.206"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:00:49.207" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:00:49.206" endtime="20210531 10:00:49.207"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:00:49.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:00:49.207" endtime="20210531 10:00:49.208"/>
</kw>
<status status="PASS" starttime="20210531 10:00:49.194" endtime="20210531 10:00:49.208"/>
</kw>
<msg timestamp="20210531 10:00:49.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 10:00:49.194" endtime="20210531 10:00:49.208"/>
</kw>
<msg timestamp="20210531 10:00:49.209" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:00:49.193" endtime="20210531 10:00:49.210"/>
</kw>
<msg timestamp="20210531 10:00:49.210" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:00:49.193" endtime="20210531 10:00:49.210"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:00:49.214" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 10:00:49.214" endtime="20210531 10:00:49.215"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:00:49.215" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 10:00:49.215" endtime="20210531 10:00:49.215"/>
</kw>
<status status="PASS" starttime="20210531 10:00:49.213" endtime="20210531 10:00:49.216"/>
</kw>
<msg timestamp="20210531 10:00:49.216" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 10:00:49.213" endtime="20210531 10:00:49.216"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 10:00:49.217" endtime="20210531 10:00:49.217"/>
</kw>
<msg timestamp="20210531 10:00:49.217" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 10:00:49.216" endtime="20210531 10:00:49.217"/>
</kw>
<status status="PASS" starttime="20210531 10:00:49.212" endtime="20210531 10:00:49.218"/>
</kw>
<msg timestamp="20210531 10:00:49.218" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 10:00:49.211" endtime="20210531 10:00:49.218"/>
</kw>
<msg timestamp="20210531 10:00:49.218" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 10:00:49.210" endtime="20210531 10:00:49.218"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 10:00:49.222" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:01:30.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:01:30.693" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 10:00:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:00:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 10:00:49.220" endtime="20210531 10:01:30.693"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:01:30.694" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 10:00:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:00:51 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 10:00:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 10:00:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 10:00:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-601DC4F9D204-&gt;ffddd9fb-494a-4280-9a7f-a8d3d4602b93
2021-05-31 10:00:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-05-31 10:00:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F6D202FD2FCD-&gt;8b2419b4-a177-4573-af00-09505f396448
2021-05-31 10:00:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-05-31 10:00:58 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 10:00:58 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-31 10:00:58 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455258618, maxDate=1623060058618, sequenceNumber=3, masterKeyId=2))
2021-05-31 10:00:58 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd 9a fa 8e 9c 2f 38 fd a2 ac af 9e 2f 40 03 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 10:00:58 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455258618, maxDate=1623060058618, sequenceNumber=3, masterKeyId=2)
2021-05-31 10:00:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 10:00:59 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 10:00:59 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 10:00:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622454987521_0003
2021-05-31 10:00:59 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455258618, maxDate=1623060058618, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 fd 9a fa 8e 9c 2f 38 fd a2 ac af 9e 2f 40 03 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 10:00:59 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 10:00:59 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 10:00:59 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 10:01:00 INFO  YarnClientImpl:329 - Submitted application application_1622454987521_0003
2021-05-31 10:01:00 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622454987521_0003/
2021-05-31 10:01:00 INFO  Job:1614 - Running job: job_1622454987521_0003
2021-05-31 10:01:08 INFO  Job:1635 - Job job_1622454987521_0003 running in uber mode : false
2021-05-31 10:01:08 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 10:01:19 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 10:01:21 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 10:01:22 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 10:01:25 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 10:01:29 INFO  Job:1653 - Job job_1622454987521_0003 completed successfully
2021-05-31 10:01:30 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50268
		Total time spent by all reduces in occupied slots (ms)=9058
		Total time spent by all map tasks (ms)=25134
		Total time spent by all reduce tasks (ms)=4529
		Total vcore-milliseconds taken by all map tasks=25134
		Total vcore-milliseconds taken by all reduce tasks=4529
		Total megabyte-milliseconds taken by all map tasks=51474432
		Total megabyte-milliseconds taken by all reduce tasks=9275392
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1127
		CPU time spent (ms)=7970
		Physical memory (bytes) snapshot=1432793088
		Virtual memory (bytes) snapshot=14027096064
		Total committed heap usage (bytes)=1223688192
		Peak Map Physical memory (bytes)=370552832
		Peak Map Virtual memory (bytes)=3507298304
		Peak Reduce Physical memory (bytes)=336564224
		Peak Reduce Virtual memory (bytes)=3527761920
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.054 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 10:01:30.693" endtime="20210531 10:01:30.694"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:01:30.695" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:01:30.694" endtime="20210531 10:01:30.695"/>
</kw>
<status status="PASS" starttime="20210531 10:00:49.219" endtime="20210531 10:01:30.696"/>
</kw>
<msg timestamp="20210531 10:01:30.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 10:00:49.219" endtime="20210531 10:01:30.696"/>
</kw>
<msg timestamp="20210531 10:01:30.696" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 10:00:51 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:00:51 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 10:00:49.218" endtime="20210531 10:01:30.697"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 10:01:30.697" endtime="20210531 10:01:30.697"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 10:00:49.192" endtime="20210531 10:01:30.697"/>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 10:01:30.704" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:01:30.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:01:30.710" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:01:30.702" endtime="20210531 10:01:30.710"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:01:30.711" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:01:30.710" endtime="20210531 10:01:30.711"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:01:30.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:01:30.711" endtime="20210531 10:01:30.712"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.702" endtime="20210531 10:01:30.712"/>
</kw>
<msg timestamp="20210531 10:01:30.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 10:01:30.701" endtime="20210531 10:01:30.712"/>
</kw>
<msg timestamp="20210531 10:01:30.713" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:01:30.701" endtime="20210531 10:01:30.713"/>
</kw>
<msg timestamp="20210531 10:01:30.713" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 10:01:30.700" endtime="20210531 10:01:30.713"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 10:01:30.714" level="INFO">${random} = fJ7fbjRd</msg>
<status status="PASS" starttime="20210531 10:01:30.713" endtime="20210531 10:01:30.714"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:01:30.718" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 10:01:30.718" endtime="20210531 10:01:30.718"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:01:30.719" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 10:01:30.718" endtime="20210531 10:01:30.719"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.717" endtime="20210531 10:01:30.719"/>
</kw>
<msg timestamp="20210531 10:01:30.720" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 10:01:30.717" endtime="20210531 10:01:30.720"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Set Variable" library="BuiltIn">
<arg>${EMPTY}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" starttime="20210531 10:01:30.721" endtime="20210531 10:01:30.721"/>
</kw>
<msg timestamp="20210531 10:01:30.721" level="INFO">${path_with_leading} = </msg>
<status status="PASS" starttime="20210531 10:01:30.720" endtime="20210531 10:01:30.721"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.716" endtime="20210531 10:01:30.722"/>
</kw>
<msg timestamp="20210531 10:01:30.722" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 10:01:30.715" endtime="20210531 10:01:30.722"/>
</kw>
<msg timestamp="20210531 10:01:30.722" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" starttime="20210531 10:01:30.714" endtime="20210531 10:01:30.722"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:01:30.726" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 10:01:30.726" endtime="20210531 10:01:30.726"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:01:30.727" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 10:01:30.726" endtime="20210531 10:01:30.727"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.725" endtime="20210531 10:01:30.727"/>
</kw>
<msg timestamp="20210531 10:01:30.727" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 10:01:30.725" endtime="20210531 10:01:30.727"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:01:30.729" level="INFO">${first} = i</msg>
<status status="PASS" starttime="20210531 10:01:30.729" endtime="20210531 10:01:30.729"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:01:30.730" level="INFO">${result} = /input/</msg>
<status status="PASS" starttime="20210531 10:01:30.729" endtime="20210531 10:01:30.730"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.728" endtime="20210531 10:01:30.730"/>
</kw>
<msg timestamp="20210531 10:01:30.731" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" starttime="20210531 10:01:30.728" endtime="20210531 10:01:30.731"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.724" endtime="20210531 10:01:30.731"/>
</kw>
<msg timestamp="20210531 10:01:30.731" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 10:01:30.723" endtime="20210531 10:01:30.731"/>
</kw>
<msg timestamp="20210531 10:01:30.731" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" starttime="20210531 10:01:30.722" endtime="20210531 10:01:30.731"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format ofs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_trailing}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Trailing" library="string">
<arg>/</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${last}</var>
<arg>${string}</arg>
<arg>-1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:01:30.735" level="INFO">${last} = m</msg>
<status status="PASS" starttime="20210531 10:01:30.735" endtime="20210531 10:01:30.736"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:01:30.736" level="INFO">${result} = om/</msg>
<status status="PASS" starttime="20210531 10:01:30.736" endtime="20210531 10:01:30.736"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.734" endtime="20210531 10:01:30.737"/>
</kw>
<msg timestamp="20210531 10:01:30.737" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" starttime="20210531 10:01:30.734" endtime="20210531 10:01:30.737"/>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<var>${path_with_leading}</var>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>/</arg>
<arg>${path}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 10:01:30.739" level="INFO">${first} = w</msg>
<status status="PASS" starttime="20210531 10:01:30.738" endtime="20210531 10:01:30.739"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 10:01:30.739" level="INFO">${result} = /wordcount-fJ7fbjRd.txt</msg>
<status status="PASS" starttime="20210531 10:01:30.739" endtime="20210531 10:01:30.739"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.737" endtime="20210531 10:01:30.740"/>
</kw>
<msg timestamp="20210531 10:01:30.740" level="INFO">${path_with_leading} = /wordcount-fJ7fbjRd.txt</msg>
<status status="PASS" starttime="20210531 10:01:30.737" endtime="20210531 10:01:30.740"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.733" endtime="20210531 10:01:30.740"/>
</kw>
<msg timestamp="20210531 10:01:30.741" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-fJ7fbjRd.txt</msg>
<status status="PASS" starttime="20210531 10:01:30.732" endtime="20210531 10:01:30.741"/>
</kw>
<msg timestamp="20210531 10:01:30.741" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-fJ7fbjRd.txt</msg>
<status status="PASS" starttime="20210531 10:01:30.732" endtime="20210531 10:01:30.741"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 10:01:30.745" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-fJ7fbjRd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:02:05.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:02:05.636" level="INFO">${output} = 2021-05-31 10:01:33 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 10:01:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210531 10:01:30.743" endtime="20210531 10:02:05.637"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:02:05.638" level="INFO">2021-05-31 10:01:33 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 10:01:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-31 10:01:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455293489, maxDate=1623060093489, sequenceNumber=4, masterKeyId=2))
2021-05-31 10:01:33 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 aa fc 8e 9c 2f 38 e9 b2 ae af 9e 2f 40 04 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 10:01:33 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455293489, maxDate=1623060093489, sequenceNumber=4, masterKeyId=2)
2021-05-31 10:01:33 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 10:01:33 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 10:01:33 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 10:01:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 10:01:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 10:01:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D7994BC23A57-&gt;8b2419b4-a177-4573-af00-09505f396448
2021-05-31 10:01:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 10:01:35 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 10:01:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-648E0B9B1A64-&gt;ffddd9fb-494a-4280-9a7f-a8d3d4602b93
2021-05-31 10:01:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 10:01:35 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 10:01:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622454987521_0004
2021-05-31 10:01:35 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455293489, maxDate=1623060093489, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e9 aa fc 8e 9c 2f 38 e9 b2 ae af 9e 2f 40 04 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 10:01:36 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 10:01:36 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 10:01:36 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 10:01:36 INFO  YarnClientImpl:329 - Submitted application application_1622454987521_0004
2021-05-31 10:01:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622454987521_0004/
2021-05-31 10:01:36 INFO  Job:1614 - Running job: job_1622454987521_0004
2021-05-31 10:01:45 INFO  Job:1635 - Job job_1622454987521_0004 running in uber mode : false
2021-05-31 10:01:45 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 10:01:57 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 10:01:59 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 10:02:04 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 10:02:05 INFO  Job:1653 - Job job_1622454987521_0004 completed successfully
2021-05-31 10:02:05 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1189229
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39773
		OFS: Number of bytes written=22252
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=51666
		Total time spent by all reduces in occupied slots (ms)=8262
		Total time spent by all map tasks (ms)=25833
		Total time spent by all reduce tasks (ms)=4131
		Total vcore-milliseconds taken by all map tasks=25833
		Total vcore-milliseconds taken by all reduce tasks=4131
		Total megabyte-milliseconds taken by all map tasks=52905984
		Total megabyte-milliseconds taken by all reduce tasks=8460288
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1030
		CPU time spent (ms)=8720
		Physical memory (bytes) snapshot=1491660800
		Virtual memory (bytes) snapshot=14054793216
		Total committed heap usage (bytes)=1239941120
		Peak Map Physical memory (bytes)=386949120
		Peak Map Virtual memory (bytes)=3511918592
		Peak Reduce Physical memory (bytes)=331620352
		Peak Reduce Virtual memory (bytes)=3527380992
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 10:02:05.637" endtime="20210531 10:02:05.638"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:02:05.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:02:05.638" endtime="20210531 10:02:05.639"/>
</kw>
<status status="PASS" starttime="20210531 10:01:30.742" endtime="20210531 10:02:05.639"/>
</kw>
<msg timestamp="20210531 10:02:05.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 10:01:30.742" endtime="20210531 10:02:05.639"/>
</kw>
<msg timestamp="20210531 10:02:05.640" level="INFO">${output} = 2021-05-31 10:01:33 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 10:01:33 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210531 10:01:30.741" endtime="20210531 10:02:05.640"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 10:02:05.640" endtime="20210531 10:02:05.641"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 10:02:05.641" endtime="20210531 10:02:05.641"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 10:01:30.699" endtime="20210531 10:02:05.642"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 10:00:49.120" endtime="20210531 10:02:05.644"/>
</suite>
<suite id="s1-s7" name="mapreduce-o3fs" source="/opt/ozone/smoketest/mapreduce.robot">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:59:10.786" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:59:10.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:59:10.794" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:10.783" endtime="20210531 09:59:10.795"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:59:10.796" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:10.795" endtime="20210531 09:59:10.796"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:59:10.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:59:10.796" endtime="20210531 09:59:10.796"/>
</kw>
<status status="PASS" starttime="20210531 09:59:10.782" endtime="20210531 09:59:10.797"/>
</kw>
<msg timestamp="20210531 09:59:10.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:59:10.781" endtime="20210531 09:59:10.797"/>
</kw>
<msg timestamp="20210531 09:59:10.797" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:10.781" endtime="20210531 09:59:10.798"/>
</kw>
<msg timestamp="20210531 09:59:10.798" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:10.780" endtime="20210531 09:59:10.799"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:59:10.803" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:59:10.802" endtime="20210531 09:59:10.803"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:59:10.804" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:59:10.803" endtime="20210531 09:59:10.804"/>
</kw>
<status status="PASS" starttime="20210531 09:59:10.802" endtime="20210531 09:59:10.804"/>
</kw>
<msg timestamp="20210531 09:59:10.804" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:59:10.801" endtime="20210531 09:59:10.804"/>
</kw>
<status status="PASS" starttime="20210531 09:59:10.800" endtime="20210531 09:59:10.805"/>
</kw>
<msg timestamp="20210531 09:59:10.805" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 09:59:10.800" endtime="20210531 09:59:10.805"/>
</kw>
<msg timestamp="20210531 09:59:10.805" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 09:59:10.799" endtime="20210531 09:59:10.805"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:59:10.808" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:59:53.398" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:59:53.398" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 09:59:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:13 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 09:59:10.807" endtime="20210531 09:59:53.398"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:59:53.399" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-05-31 09:59:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 09:59:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 09:59:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 09:59:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D815DD6850FA-&gt;8b2419b4-a177-4573-af00-09505f396448
2021-05-31 09:59:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-05-31 09:59:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-68B28ABC11E0-&gt;ffddd9fb-494a-4280-9a7f-a8d3d4602b93
2021-05-31 09:59:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-05-31 09:59:14 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 09:59:15 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-31 09:59:15 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455155630, maxDate=1623059955630, sequenceNumber=1, masterKeyId=2))
2021-05-31 09:59:15 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee f3 f3 8e 9c 2f 38 ee fb a5 af 9e 2f 40 01 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 09:59:15 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455155630, maxDate=1623059955630, sequenceNumber=1, masterKeyId=2)
2021-05-31 09:59:16 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 09:59:16 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 09:59:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622454987521_0001
2021-05-31 09:59:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455155630, maxDate=1623059955630, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ee f3 f3 8e 9c 2f 38 ee fb a5 af 9e 2f 40 01 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 09:59:17 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 09:59:17 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 09:59:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 09:59:19 INFO  YarnClientImpl:329 - Submitted application application_1622454987521_0001
2021-05-31 09:59:19 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622454987521_0001/
2021-05-31 09:59:19 INFO  Job:1614 - Running job: job_1622454987521_0001
2021-05-31 09:59:30 INFO  Job:1635 - Job job_1622454987521_0001 running in uber mode : false
2021-05-31 09:59:30 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 09:59:42 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 09:59:43 INFO  Job:1642 -  map 67% reduce 0%
2021-05-31 09:59:44 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 09:59:51 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 09:59:52 INFO  Job:1653 - Job job_1622454987521_0001 completed successfully
2021-05-31 09:59:52 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1126669
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52398
		Total time spent by all reduces in occupied slots (ms)=13336
		Total time spent by all map tasks (ms)=26199
		Total time spent by all reduce tasks (ms)=6668
		Total vcore-milliseconds taken by all map tasks=26199
		Total vcore-milliseconds taken by all reduce tasks=6668
		Total megabyte-milliseconds taken by all map tasks=53655552
		Total megabyte-milliseconds taken by all reduce tasks=13656064
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1057
		CPU time spent (ms)=7890
		Physical memory (bytes) snapshot=1483558912
		Virtual memory (bytes) snapshot=14040604672
		Total committed heap usage (bytes)=1289748480
		Peak Map Physical memory (bytes)=394932224
		Peak Map Virtual memory (bytes)=3510611968
		Peak Reduce Physical memory (bytes)=312745984
		Peak Reduce Virtual memory (bytes)=3511332864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.01 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" starttime="20210531 09:59:53.399" endtime="20210531 09:59:53.400"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:59:53.400" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:59:53.400" endtime="20210531 09:59:53.401"/>
</kw>
<status status="PASS" starttime="20210531 09:59:10.806" endtime="20210531 09:59:53.401"/>
</kw>
<msg timestamp="20210531 09:59:53.401" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:59:10.806" endtime="20210531 09:59:53.401"/>
</kw>
<msg timestamp="20210531 09:59:53.402" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-05-31 09:59:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:13 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" starttime="20210531 09:59:10.805" endtime="20210531 09:59:53.402"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 09:59:53.402" endtime="20210531 09:59:53.402"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 09:59:10.780" endtime="20210531 09:59:53.403"/>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<var>${exampleJar}</var>
<kw name="Execute" library="os">
<var>${jar}</var>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:59:53.409" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 09:59:53.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 09:59:53.414" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:53.406" endtime="20210531 09:59:53.414"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 09:59:53.415" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:53.414" endtime="20210531 09:59:53.416"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 09:59:53.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 09:59:53.416" endtime="20210531 09:59:53.416"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.406" endtime="20210531 09:59:53.417"/>
</kw>
<msg timestamp="20210531 09:59:53.417" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:59:53.405" endtime="20210531 09:59:53.417"/>
</kw>
<msg timestamp="20210531 09:59:53.417" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:53.405" endtime="20210531 09:59:53.417"/>
</kw>
<msg timestamp="20210531 09:59:53.417" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" starttime="20210531 09:59:53.404" endtime="20210531 09:59:53.417"/>
</kw>
<kw name="Generate Random String" library="String">
<var>${random}</var>
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<msg timestamp="20210531 09:59:53.418" level="INFO">${random} = j86s03iG</msg>
<status status="PASS" starttime="20210531 09:59:53.418" endtime="20210531 09:59:53.418"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${root}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:59:53.422" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:59:53.422" endtime="20210531 09:59:53.422"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:59:53.423" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:59:53.422" endtime="20210531 09:59:53.423"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.421" endtime="20210531 09:59:53.423"/>
</kw>
<msg timestamp="20210531 09:59:53.423" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:59:53.420" endtime="20210531 09:59:53.423"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.420" endtime="20210531 09:59:53.424"/>
</kw>
<msg timestamp="20210531 09:59:53.424" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 09:59:53.419" endtime="20210531 09:59:53.424"/>
</kw>
<msg timestamp="20210531 09:59:53.424" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" starttime="20210531 09:59:53.418" endtime="20210531 09:59:53.424"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${dir}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:59:53.429" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:59:53.428" endtime="20210531 09:59:53.429"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:59:53.430" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:59:53.429" endtime="20210531 09:59:53.430"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.428" endtime="20210531 09:59:53.430"/>
</kw>
<msg timestamp="20210531 09:59:53.430" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:59:53.427" endtime="20210531 09:59:53.430"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.426" endtime="20210531 09:59:53.431"/>
</kw>
<msg timestamp="20210531 09:59:53.431" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 09:59:53.426" endtime="20210531 09:59:53.431"/>
</kw>
<msg timestamp="20210531 09:59:53.431" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" starttime="20210531 09:59:53.424" endtime="20210531 09:59:53.431"/>
</kw>
<kw name="Format FS URL" library="fs">
<var>${result}</var>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${url}</var>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Format o3fs URL" library="fs">
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<kw name="Run Keyword If" library="BuiltIn">
<var>${om_with_leading}</var>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<kw name="Ensure Leading" library="string">
<arg>.</arg>
<arg>${om}</arg>
<kw name="Get Substring" library="String">
<var>${first}</var>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<msg timestamp="20210531 09:59:53.435" level="INFO">${first} = o</msg>
<status status="PASS" starttime="20210531 09:59:53.435" endtime="20210531 09:59:53.435"/>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<var>${result}</var>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
<doc>Sets variable based on the given condition.</doc>
<msg timestamp="20210531 09:59:53.436" level="INFO">${result} = .om</msg>
<status status="PASS" starttime="20210531 09:59:53.436" endtime="20210531 09:59:53.436"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.434" endtime="20210531 09:59:53.436"/>
</kw>
<msg timestamp="20210531 09:59:53.436" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" starttime="20210531 09:59:53.434" endtime="20210531 09:59:53.437"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.433" endtime="20210531 09:59:53.437"/>
</kw>
<msg timestamp="20210531 09:59:53.437" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-j86s03iG.txt</msg>
<status status="PASS" starttime="20210531 09:59:53.432" endtime="20210531 09:59:53.437"/>
</kw>
<msg timestamp="20210531 09:59:53.437" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-j86s03iG.txt</msg>
<status status="PASS" starttime="20210531 09:59:53.432" endtime="20210531 09:59:53.437"/>
</kw>
<kw name="Execute" library="os">
<var>${output}</var>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
<kw name="Run Keyword And Return" library="BuiltIn">
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<kw name="Execute and checkrc" library="os">
<arg>${command}</arg>
<arg>0</arg>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<var>${rc}</var>
<var>${output}</var>
<arg>${command}</arg>
<doc>Runs the given command in the system and returns the RC and output.</doc>
<msg timestamp="20210531 09:59:53.441" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-j86s03iG.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210531 10:00:30.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210531 10:00:30.901" level="INFO">${output} = 2021-05-31 09:59:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 09:59:55 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210531 09:59:53.439" endtime="20210531 10:00:30.901"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${output}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20210531 10:00:30.903" level="INFO">2021-05-31 09:59:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 09:59:55 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
2021-05-31 09:59:56 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455196080, maxDate=1623059996080, sequenceNumber=2, masterKeyId=2))
2021-05-31 09:59:56 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bc b2 f6 8e 9c 2f 38 bc ba a8 af 9e 2f 40 02 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-05-31 09:59:56 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455196080, maxDate=1623059996080, sequenceNumber=2, masterKeyId=2)
2021-05-31 09:59:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-05-31 09:59:56 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-05-31 09:59:56 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-05-31 09:59:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-05-31 09:59:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-05-31 09:59:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-746CD758F086-&gt;ffddd9fb-494a-4280-9a7f-a8d3d4602b93
2021-05-31 09:59:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 09:59:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-05-31 09:59:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D9AD0229D938-&gt;8b2419b4-a177-4573-af00-09505f396448
2021-05-31 09:59:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-05-31 09:59:58 INFO  JobSubmitter:202 - number of splits:3
2021-05-31 09:59:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1622454987521_0002
2021-05-31 09:59:58 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1622455196080, maxDate=1623059996080, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.4:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bc b2 f6 8e 9c 2f 38 bc ba a8 af 9e 2f 40 02 48 01 5a 0d 33 37 32 36 39 39 30 34 34 34 33 37 32 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-05-31 09:59:58 INFO  Configuration:2795 - resource-types.xml not found
2021-05-31 09:59:58 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-05-31 09:59:58 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-05-31 09:59:59 INFO  YarnClientImpl:329 - Submitted application application_1622454987521_0002
2021-05-31 09:59:59 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1622454987521_0002/
2021-05-31 09:59:59 INFO  Job:1614 - Running job: job_1622454987521_0002
2021-05-31 10:00:08 INFO  Job:1635 - Job job_1622454987521_0002 running in uber mode : false
2021-05-31 10:00:08 INFO  Job:1642 -  map 0% reduce 0%
2021-05-31 10:00:20 INFO  Job:1642 -  map 33% reduce 0%
2021-05-31 10:00:22 INFO  Job:1642 -  map 100% reduce 0%
2021-05-31 10:00:27 INFO  Job:1642 -  map 100% reduce 100%
2021-05-31 10:00:30 INFO  Job:1653 - Job job_1622454987521_0002 completed successfully
2021-05-31 10:00:30 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32070
		FILE: Number of bytes written=1189317
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39776
		O3FS: Number of bytes written=22252
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53950
		Total time spent by all reduces in occupied slots (ms)=8688
		Total time spent by all map tasks (ms)=26975
		Total time spent by all reduce tasks (ms)=4344
		Total vcore-milliseconds taken by all map tasks=26975
		Total vcore-milliseconds taken by all reduce tasks=4344
		Total megabyte-milliseconds taken by all map tasks=55244800
		Total megabyte-milliseconds taken by all reduce tasks=8896512
	Map-Reduce Framework
		Map input records=1053
		Map output records=4514
		Map output bytes=55133
		Map output materialized bytes=32082
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32082
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1167
		CPU time spent (ms)=8560
		Physical memory (bytes) snapshot=1529880576
		Virtual memory (bytes) snapshot=14059184128
		Total committed heap usage (bytes)=1386217472
		Peak Map Physical memory (bytes)=399077376
		Peak Map Virtual memory (bytes)=3511799808
		Peak Reduce Physical memory (bytes)=337408000
		Peak Reduce Virtual memory (bytes)=3526492160
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39473
	File Output Format Counters 
		Bytes Written=22252</msg>
<status status="PASS" starttime="20210531 10:00:30.902" endtime="20210531 10:00:30.903"/>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
<doc>Fails if objects are unequal after converting them to integers.</doc>
<msg timestamp="20210531 10:00:30.904" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" starttime="20210531 10:00:30.903" endtime="20210531 10:00:30.904"/>
</kw>
<status status="PASS" starttime="20210531 09:59:53.439" endtime="20210531 10:00:30.905"/>
</kw>
<msg timestamp="20210531 10:00:30.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" starttime="20210531 09:59:53.438" endtime="20210531 10:00:30.905"/>
</kw>
<msg timestamp="20210531 10:00:30.905" level="INFO">${output} = 2021-05-31 09:59:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.10:8032
2021-05-31 09:59:55 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.6:10200
20...</msg>
<status status="PASS" starttime="20210531 09:59:53.438" endtime="20210531 10:00:30.905"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>map tasks=3</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 10:00:30.906" endtime="20210531 10:00:30.906"/>
</kw>
<kw name="Should Contain" library="BuiltIn">
<arg>${output}</arg>
<arg>completed successfully</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" starttime="20210531 10:00:30.906" endtime="20210531 10:00:30.906"/>
</kw>
<timeout value="4 minutes"/>
<status status="PASS" starttime="20210531 09:59:53.403" endtime="20210531 10:00:30.907"/>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" starttime="20210531 09:59:10.713" endtime="20210531 10:00:30.908"/>
</suite>
<status status="PASS" starttime="N/A" endtime="N/A" elapsedtime="220931"/>
</suite>
<statistics>
<total>
<stat pass="10" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="10" fail="0" skip="0" id="s1" name="ozonesecure-mr">ozonesecure-mr</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1" name="Createmrenv">ozonesecure-mr.Createmrenv</stat>
<stat pass="1" fail="0" skip="0" id="s1-s2" name="hadoopfs-ofs">ozonesecure-mr.hadoopfs-ofs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s3" name="hadoopfs-o3fs">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat pass="1" fail="0" skip="0" id="s1-s4" name="Kinit-Hadoop">ozonesecure-mr.Kinit-Hadoop</stat>
<stat pass="1" fail="0" skip="0" id="s1-s5" name="Kinit">ozonesecure-mr.Kinit</stat>
<stat pass="2" fail="0" skip="0" id="s1-s6" name="mapreduce-ofs">ozonesecure-mr.mapreduce-ofs</stat>
<stat pass="2" fail="0" skip="0" id="s1-s7" name="mapreduce-o3fs">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
