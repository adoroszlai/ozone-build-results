<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210222 13:48:41.444" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:46.035" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:46.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:46.037" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:03:46.037" starttime="20210222 13:03:46.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.038" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:03:46.038" starttime="20210222 13:03:46.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:46.039" starttime="20210222 13:03:46.039"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.039" starttime="20210222 13:03:46.030"></status>
</kw>
<msg timestamp="20210222 13:03:46.039" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:46.040" starttime="20210222 13:03:46.030"></status>
</kw>
<msg timestamp="20210222 13:03:46.040" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:03:46.040" starttime="20210222 13:03:46.029"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:46.044" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:46.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:46.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:03:46.069" starttime="20210222 13:03:46.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.070" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:03:46.070" starttime="20210222 13:03:46.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:46.071" starttime="20210222 13:03:46.070"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.071" starttime="20210222 13:03:46.041"></status>
</kw>
<msg timestamp="20210222 13:03:46.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:46.072" starttime="20210222 13:03:46.041"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.073" starttime="20210222 13:03:46.041"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.073" starttime="20210222 13:03:46.040"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.073" starttime="20210222 13:03:46.029"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.074" starttime="20210222 13:03:46.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:46.078" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:46.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:46.199" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210222 13:03:46.199" starttime="20210222 13:03:46.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.200" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Mon, 22 Feb 2021 13:03:46 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARC+6W8m2c9dWtLzYKe+fDgcINrCRYe5Yl54sEzOcEpBUih62tqiZ7XIF8aXWUDYPYVve0C6l5SVfZlUbCEZi6Rng2Z
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1614035026186&amp;s=Ua1f6/67iXLHoTdFRcIj+Zcilo74P+/obJDbBC0Kybs="; Path=/; HttpOnly
Last-Modified: Mon, 22 Feb 2021 12:48:26 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210222 13:03:46.200" starttime="20210222 13:03:46.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:46.201" starttime="20210222 13:03:46.201"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.201" starttime="20210222 13:03:46.075"></status>
</kw>
<msg timestamp="20210222 13:03:46.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:46.202" starttime="20210222 13:03:46.074"></status>
</kw>
<msg timestamp="20210222 13:03:46.202" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210222 13:03:46.202" starttime="20210222 13:03:46.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210222 13:03:46.203" starttime="20210222 13:03:46.202"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:03:46.203" critical="yes" starttime="20210222 13:03:46.027"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:46.211" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:46.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:46.214" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:03:46.214" starttime="20210222 13:03:46.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.215" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:03:46.215" starttime="20210222 13:03:46.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:46.216" starttime="20210222 13:03:46.215"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.216" starttime="20210222 13:03:46.208"></status>
</kw>
<msg timestamp="20210222 13:03:46.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:46.216" starttime="20210222 13:03:46.207"></status>
</kw>
<msg timestamp="20210222 13:03:46.216" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:03:46.216" starttime="20210222 13:03:46.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:03:46.218" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:03:46.218" starttime="20210222 13:03:46.217"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:46.222" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:46.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:46.230" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:03:46.230" starttime="20210222 13:03:46.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.231" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:03:46.231" starttime="20210222 13:03:46.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:46.232" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:46.232" starttime="20210222 13:03:46.231"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.232" starttime="20210222 13:03:46.220"></status>
</kw>
<msg timestamp="20210222 13:03:46.232" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:46.232" starttime="20210222 13:03:46.219"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.233" starttime="20210222 13:03:46.219"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.233" starttime="20210222 13:03:46.218"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.233" starttime="20210222 13:03:46.206"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:46.233" starttime="20210222 13:03:46.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:46.237" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:08:46.205" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:08:46.205" starttime="20210222 13:03:46.235"></status>
</kw>
<status status="FAIL" endtime="20210222 13:08:46.206" starttime="20210222 13:03:46.234"></status>
</kw>
<msg timestamp="20210222 13:08:46.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:08:46.206" starttime="20210222 13:03:46.234"></status>
</kw>
<status status="FAIL" endtime="20210222 13:08:46.207" starttime="20210222 13:03:46.234"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:08:46.207" critical="yes" starttime="20210222 13:03:46.204">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210222 13:08:46.209" starttime="20210222 13:03:45.995"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:08:46.221" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:08:49.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:08:49.127" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210222 13:08:49.127" starttime="20210222 13:08:46.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:08:49.128" level="INFO">om</msg>
<status status="PASS" endtime="20210222 13:08:49.128" starttime="20210222 13:08:49.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:08:49.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:08:49.128" starttime="20210222 13:08:49.128"></status>
</kw>
<status status="PASS" endtime="20210222 13:08:49.129" starttime="20210222 13:08:46.219"></status>
</kw>
<msg timestamp="20210222 13:08:49.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:08:49.129" starttime="20210222 13:08:46.218"></status>
</kw>
<msg timestamp="20210222 13:08:49.129" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210222 13:08:49.129" starttime="20210222 13:08:46.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210222 13:08:49.130" starttime="20210222 13:08:49.130"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:08:49.135" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:08:51.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:08:51.951" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210222 13:08:51.951" starttime="20210222 13:08:49.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:08:51.953" level="INFO">om</msg>
<status status="PASS" endtime="20210222 13:08:51.953" starttime="20210222 13:08:51.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:08:51.954" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:08:51.954" starttime="20210222 13:08:51.954"></status>
</kw>
<status status="PASS" endtime="20210222 13:08:51.954" starttime="20210222 13:08:49.132"></status>
</kw>
<msg timestamp="20210222 13:08:51.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:08:51.955" starttime="20210222 13:08:49.131"></status>
</kw>
<msg timestamp="20210222 13:08:51.955" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210222 13:08:51.955" starttime="20210222 13:08:49.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210222 13:08:51.955" starttime="20210222 13:08:51.955"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:08:51.956" critical="yes" starttime="20210222 13:08:46.216"></status>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:08:51.963" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:08:54.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:08:54.849" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:08:54.850" starttime="20210222 13:08:51.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:08:54.854" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:08:54.854" starttime="20210222 13:08:54.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:08:54.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:08:54.857" starttime="20210222 13:08:54.855"></status>
</kw>
<status status="PASS" endtime="20210222 13:08:54.859" starttime="20210222 13:08:51.959"></status>
</kw>
<msg timestamp="20210222 13:08:54.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:08:54.860" starttime="20210222 13:08:51.959"></status>
</kw>
<msg timestamp="20210222 13:08:54.861" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210222 13:08:54.862" starttime="20210222 13:08:51.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210222 13:08:54.863" starttime="20210222 13:08:54.862"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:08:54.877" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:08:57.577" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:08:57.577" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:08:57.577" starttime="20210222 13:08:54.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:08:57.578" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:08:57.579" starttime="20210222 13:08:57.578"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:08:57.579" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:08:57.580" starttime="20210222 13:08:57.579"></status>
</kw>
<status status="PASS" endtime="20210222 13:08:57.580" starttime="20210222 13:08:54.868"></status>
</kw>
<msg timestamp="20210222 13:08:57.580" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:08:57.580" starttime="20210222 13:08:54.866"></status>
</kw>
<msg timestamp="20210222 13:08:57.581" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210222 13:08:57.581" starttime="20210222 13:08:54.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210222 13:08:57.581" starttime="20210222 13:08:57.581"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:08:57.581" critical="yes" starttime="20210222 13:08:51.956"></status>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:08:57.589" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:00.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:09:00.082" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210222 13:09:00.082" starttime="20210222 13:08:57.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:00.083" level="INFO">om</msg>
<status status="PASS" endtime="20210222 13:09:00.083" starttime="20210222 13:09:00.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:00.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:00.085" starttime="20210222 13:09:00.084"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:00.085" starttime="20210222 13:08:57.586"></status>
</kw>
<msg timestamp="20210222 13:09:00.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:09:00.085" starttime="20210222 13:08:57.586"></status>
</kw>
<msg timestamp="20210222 13:09:00.085" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210222 13:09:00.086" starttime="20210222 13:08:57.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210222 13:09:00.086" starttime="20210222 13:09:00.086"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210222 13:09:00.087" starttime="20210222 13:09:00.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:00.094" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:03.415" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:09:03.415" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210222 13:09:03.416" starttime="20210222 13:09:00.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:03.417" level="INFO">om</msg>
<status status="PASS" endtime="20210222 13:09:03.417" starttime="20210222 13:09:03.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:03.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:03.418" starttime="20210222 13:09:03.417"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:03.418" starttime="20210222 13:09:00.088"></status>
</kw>
<msg timestamp="20210222 13:09:03.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:09:03.419" starttime="20210222 13:09:00.087"></status>
</kw>
<msg timestamp="20210222 13:09:03.419" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210222 13:09:03.420" starttime="20210222 13:09:00.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210222 13:09:03.421" starttime="20210222 13:09:03.420"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210222 13:09:03.422" starttime="20210222 13:09:03.421"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:09:03.422" critical="yes" starttime="20210222 13:08:57.584"></status>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:03.428" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:05.930" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:09:05.930" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210222 13:09:05.930" starttime="20210222 13:09:03.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:05.932" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210222 13:09:05.932" starttime="20210222 13:09:05.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:05.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:05.932" starttime="20210222 13:09:05.932"></status>
</kw>
<msg timestamp="20210222 13:09:05.933" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210222 13:09:05.933" starttime="20210222 13:09:03.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210222 13:09:05.934" starttime="20210222 13:09:05.933"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:05.940" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:08.317" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:09:08.317" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210222 13:09:08.317" starttime="20210222 13:09:05.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:08.318" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210222 13:09:08.318" starttime="20210222 13:09:08.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:08.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:08.319" starttime="20210222 13:09:08.318"></status>
</kw>
<msg timestamp="20210222 13:09:08.319" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210222 13:09:08.319" starttime="20210222 13:09:05.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210222 13:09:08.320" starttime="20210222 13:09:08.320"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:09:08.321" critical="yes" starttime="20210222 13:09:03.423"></status>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210222 13:09:08.322" starttime="20210222 13:08:46.211"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210222 13:09:08.341" level="INFO">${random} = 94804</msg>
<status status="PASS" endtime="20210222 13:09:08.341" starttime="20210222 13:09:08.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210222 13:09:08.343" level="INFO">${source} = 94804-source</msg>
<status status="PASS" endtime="20210222 13:09:08.343" starttime="20210222 13:09:08.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210222 13:09:08.344" level="INFO">${target} = 94804-target</msg>
<status status="PASS" endtime="20210222 13:09:08.345" starttime="20210222 13:09:08.343"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:08.350" level="INFO">Running command 'ozone sh volume create 94804-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:15.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:09:15.343" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:09:15.343" starttime="20210222 13:09:08.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:15.344" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:09:15.344" starttime="20210222 13:09:15.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:15.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:15.345" starttime="20210222 13:09:15.344"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:15.345" starttime="20210222 13:09:08.346"></status>
</kw>
<msg timestamp="20210222 13:09:15.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:09:15.345" starttime="20210222 13:09:08.345"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:15.346" starttime="20210222 13:09:08.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:15.351" level="INFO">Running command 'ozone sh volume create 94804-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:22.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:09:22.336" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:09:22.336" starttime="20210222 13:09:15.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:22.338" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:09:22.338" starttime="20210222 13:09:22.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:22.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:22.339" starttime="20210222 13:09:22.338"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:22.339" starttime="20210222 13:09:15.347"></status>
</kw>
<msg timestamp="20210222 13:09:22.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:09:22.340" starttime="20210222 13:09:15.346"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:22.340" starttime="20210222 13:09:15.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:22.349" level="INFO">Running command 'ozone sh bucket create 94804-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:09:28.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:09:28.746" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:09:28.746" starttime="20210222 13:09:22.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:09:28.747" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:09:28.748" starttime="20210222 13:09:28.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:09:28.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:09:28.749" starttime="20210222 13:09:28.748"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:28.750" starttime="20210222 13:09:22.346"></status>
</kw>
<msg timestamp="20210222 13:09:28.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:09:28.750" starttime="20210222 13:09:22.345"></status>
</kw>
<status status="PASS" endtime="20210222 13:09:28.751" starttime="20210222 13:09:22.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:09:28.757" level="INFO">Running command 'ozone sh key put 94804-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:12:36.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:12:36.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:12:36.924" starttime="20210222 13:09:28.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:12:36.925" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:12:36.926" starttime="20210222 13:12:36.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:12:36.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:12:36.926" starttime="20210222 13:12:36.926"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:36.927" starttime="20210222 13:09:28.753"></status>
</kw>
<msg timestamp="20210222 13:12:36.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:12:36.927" starttime="20210222 13:09:28.752"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:36.927" starttime="20210222 13:09:28.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:12:36.931" level="INFO">Running command 'ozone sh bucket create 94804-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:12:42.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:12:42.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:12:42.904" starttime="20210222 13:12:36.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:12:42.906" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:12:42.906" starttime="20210222 13:12:42.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:12:42.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:12:42.906" starttime="20210222 13:12:42.906"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:42.907" starttime="20210222 13:12:36.928"></status>
</kw>
<msg timestamp="20210222 13:12:42.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:12:42.907" starttime="20210222 13:12:36.928"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:42.907" starttime="20210222 13:12:36.927"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:12:42.914" level="INFO">Running command 'ozone sh bucket link 94804-source/readable-bucket 94804-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:12:49.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:12:49.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:12:49.717" starttime="20210222 13:12:42.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:12:49.719" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:12:49.719" starttime="20210222 13:12:49.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:12:49.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:12:49.721" starttime="20210222 13:12:49.720"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:49.722" starttime="20210222 13:12:42.912"></status>
</kw>
<msg timestamp="20210222 13:12:49.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:12:49.722" starttime="20210222 13:12:42.908"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:49.723" starttime="20210222 13:12:42.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:12:49.731" level="INFO">Running command 'ozone sh bucket link 94804-source/readable-bucket 94804-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:12:57.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:12:57.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:12:57.510" starttime="20210222 13:12:49.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:12:57.511" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:12:57.511" starttime="20210222 13:12:57.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:12:57.511" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:12:57.511" starttime="20210222 13:12:57.511"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:57.512" starttime="20210222 13:12:49.725"></status>
</kw>
<msg timestamp="20210222 13:12:57.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:12:57.512" starttime="20210222 13:12:49.725"></status>
</kw>
<status status="PASS" endtime="20210222 13:12:57.513" starttime="20210222 13:12:49.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:12:57.516" level="INFO">Running command 'ozone sh bucket link 94804-source/unreadable-bucket 94804-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:03.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:03.729" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:13:03.729" starttime="20210222 13:12:57.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:03.730" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:13:03.730" starttime="20210222 13:13:03.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:03.730" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:03.731" starttime="20210222 13:13:03.730"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:03.731" starttime="20210222 13:12:57.514"></status>
</kw>
<msg timestamp="20210222 13:13:03.731" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:03.731" starttime="20210222 13:12:57.514"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:03.731" starttime="20210222 13:12:57.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:03.735" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94804-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:10.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:10.416" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:10.416" starttime="20210222 13:13:03.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:10.418" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:10.418" starttime="20210222 13:13:10.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:10.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:10.420" starttime="20210222 13:13:10.419"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:10.421" starttime="20210222 13:13:03.733"></status>
</kw>
<msg timestamp="20210222 13:13:10.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:10.422" starttime="20210222 13:13:03.732"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:10.422" starttime="20210222 13:13:03.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:10.429" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94804-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:17.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:17.265" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:17.265" starttime="20210222 13:13:10.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:17.266" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:17.266" starttime="20210222 13:13:17.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:17.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:17.266" starttime="20210222 13:13:17.266"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:17.267" starttime="20210222 13:13:10.423"></status>
</kw>
<msg timestamp="20210222 13:13:17.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:17.267" starttime="20210222 13:13:10.423"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:17.267" starttime="20210222 13:13:10.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:17.272" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 94804-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:23.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:23.808" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:23.808" starttime="20210222 13:13:17.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:23.810" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:23.810" starttime="20210222 13:13:23.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:23.811" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:23.811" starttime="20210222 13:13:23.810"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:23.811" starttime="20210222 13:13:17.268"></status>
</kw>
<msg timestamp="20210222 13:13:23.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:23.811" starttime="20210222 13:13:17.268"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:23.812" starttime="20210222 13:13:17.267"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:23.816" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94804-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:30.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:30.595" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:30.595" starttime="20210222 13:13:23.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:30.596" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:30.596" starttime="20210222 13:13:30.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:30.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:30.597" starttime="20210222 13:13:30.596"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:30.597" starttime="20210222 13:13:23.813"></status>
</kw>
<msg timestamp="20210222 13:13:30.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:30.597" starttime="20210222 13:13:23.812"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:30.598" starttime="20210222 13:13:23.812"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:30.603" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 94804-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:37.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:37.195" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:37.195" starttime="20210222 13:13:30.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:37.196" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:13:37.197" starttime="20210222 13:13:37.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:37.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:37.198" starttime="20210222 13:13:37.197"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.198" starttime="20210222 13:13:30.599"></status>
</kw>
<msg timestamp="20210222 13:13:37.199" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:37.199" starttime="20210222 13:13:30.598"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.199" starttime="20210222 13:13:30.598"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.200" starttime="20210222 13:09:22.342"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.200" starttime="20210222 13:09:22.341"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.201" starttime="20210222 13:09:08.340"></status>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:37.215" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:37.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:37.219" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:13:37.219" starttime="20210222 13:13:37.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:37.220" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:13:37.220" starttime="20210222 13:13:37.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:37.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:37.221" starttime="20210222 13:13:37.220"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.222" starttime="20210222 13:13:37.212"></status>
</kw>
<msg timestamp="20210222 13:13:37.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:37.222" starttime="20210222 13:13:37.212"></status>
</kw>
<msg timestamp="20210222 13:13:37.223" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:13:37.223" starttime="20210222 13:13:37.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:13:37.225" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:13:37.225" starttime="20210222 13:13:37.223"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:37.230" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:37.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:37.299" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:13:37.299" starttime="20210222 13:13:37.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:37.300" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:13:37.300" starttime="20210222 13:13:37.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:37.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:37.301" starttime="20210222 13:13:37.300"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.301" starttime="20210222 13:13:37.227"></status>
</kw>
<msg timestamp="20210222 13:13:37.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:37.301" starttime="20210222 13:13:37.227"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.302" starttime="20210222 13:13:37.226"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.302" starttime="20210222 13:13:37.225"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.302" starttime="20210222 13:13:37.206"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:37.302" starttime="20210222 13:13:37.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:37.307" level="INFO">Running command 'ozone sh bucket link 94804-source/no-such-bucket 94804-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:44.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:44.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:13:44.561" starttime="20210222 13:13:37.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:44.563" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:13:44.563" starttime="20210222 13:13:44.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:44.564" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:44.564" starttime="20210222 13:13:44.563"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:44.565" starttime="20210222 13:13:37.303"></status>
</kw>
<msg timestamp="20210222 13:13:44.565" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:44.566" starttime="20210222 13:13:37.303"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:44.566" starttime="20210222 13:13:37.302"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:44.570" level="INFO">Running command 'ozone sh key list 94804-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:50.735" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:13:50.735" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210222 13:13:50.735" starttime="20210222 13:13:44.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:50.736" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210222 13:13:50.737" starttime="20210222 13:13:50.736"></status>
</kw>
<msg timestamp="20210222 13:13:50.737" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210222 13:13:50.737" starttime="20210222 13:13:44.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210222 13:13:50.738" starttime="20210222 13:13:50.737"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:13:50.738" critical="yes" starttime="20210222 13:13:37.201"></status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:50.747" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:50.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:50.749" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:13:50.749" starttime="20210222 13:13:50.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:50.752" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:13:50.752" starttime="20210222 13:13:50.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:50.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:50.752" starttime="20210222 13:13:50.752"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:50.753" starttime="20210222 13:13:50.743"></status>
</kw>
<msg timestamp="20210222 13:13:50.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:50.753" starttime="20210222 13:13:50.742"></status>
</kw>
<msg timestamp="20210222 13:13:50.753" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:13:50.754" starttime="20210222 13:13:50.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:13:50.754" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:13:50.754" starttime="20210222 13:13:50.754"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:50.759" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:50.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:50.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:13:50.766" starttime="20210222 13:13:50.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:50.767" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:13:50.767" starttime="20210222 13:13:50.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:50.768" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:50.768" starttime="20210222 13:13:50.767"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:50.768" starttime="20210222 13:13:50.756"></status>
</kw>
<msg timestamp="20210222 13:13:50.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:50.768" starttime="20210222 13:13:50.756"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:50.769" starttime="20210222 13:13:50.755"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:50.769" starttime="20210222 13:13:50.755"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:50.769" starttime="20210222 13:13:50.741"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:50.769" starttime="20210222 13:13:50.740"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:50.774" level="INFO">Running command 'ozone sh bucket link 94804-source/bucket1 94804-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:13:57.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:13:57.296" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:13:57.296" starttime="20210222 13:13:50.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:13:57.297" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:13:57.298" starttime="20210222 13:13:57.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:13:57.298" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:13:57.298" starttime="20210222 13:13:57.298"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:57.299" starttime="20210222 13:13:50.771"></status>
</kw>
<msg timestamp="20210222 13:13:57.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:13:57.299" starttime="20210222 13:13:50.770"></status>
</kw>
<status status="PASS" endtime="20210222 13:13:57.299" starttime="20210222 13:13:50.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:13:57.305" level="INFO">Running command 'ozone sh bucket create 94804-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:14:03.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:14:03.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:14:03.684" starttime="20210222 13:13:57.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:14:03.685" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:14:03.685" starttime="20210222 13:14:03.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:14:03.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:14:03.686" starttime="20210222 13:14:03.685"></status>
</kw>
<status status="PASS" endtime="20210222 13:14:03.686" starttime="20210222 13:13:57.300"></status>
</kw>
<msg timestamp="20210222 13:14:03.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:14:03.686" starttime="20210222 13:13:57.300"></status>
</kw>
<status status="PASS" endtime="20210222 13:14:03.687" starttime="20210222 13:13:57.299"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:14:03.693" level="INFO">Running command 'ozone sh key put 94804-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:15:50.740" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:15:50.740" starttime="20210222 13:14:03.689"></status>
</kw>
<status status="FAIL" endtime="20210222 13:15:50.740" starttime="20210222 13:14:03.688"></status>
</kw>
<msg timestamp="20210222 13:15:50.740" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:15:50.741" starttime="20210222 13:14:03.687"></status>
</kw>
<status status="FAIL" endtime="20210222 13:15:50.741" starttime="20210222 13:14:03.687"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:15:50.741" critical="yes" starttime="20210222 13:13:50.739">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:15:50.748" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:15:50.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:15:50.751" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:15:50.751" starttime="20210222 13:15:50.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:15:50.752" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:15:50.752" starttime="20210222 13:15:50.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:15:50.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:15:50.753" starttime="20210222 13:15:50.752"></status>
</kw>
<status status="PASS" endtime="20210222 13:15:50.753" starttime="20210222 13:15:50.746"></status>
</kw>
<msg timestamp="20210222 13:15:50.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:15:50.753" starttime="20210222 13:15:50.745"></status>
</kw>
<msg timestamp="20210222 13:15:50.754" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:15:50.754" starttime="20210222 13:15:50.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:15:50.755" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:15:50.755" starttime="20210222 13:15:50.754"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:15:50.761" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:15:50.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:15:50.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:15:50.768" starttime="20210222 13:15:50.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:15:50.770" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:15:50.770" starttime="20210222 13:15:50.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:15:50.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:15:50.770" starttime="20210222 13:15:50.770"></status>
</kw>
<status status="PASS" endtime="20210222 13:15:50.771" starttime="20210222 13:15:50.757"></status>
</kw>
<msg timestamp="20210222 13:15:50.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:15:50.771" starttime="20210222 13:15:50.756"></status>
</kw>
<status status="PASS" endtime="20210222 13:15:50.771" starttime="20210222 13:15:50.756"></status>
</kw>
<status status="PASS" endtime="20210222 13:15:50.771" starttime="20210222 13:15:50.755"></status>
</kw>
<status status="PASS" endtime="20210222 13:15:50.771" starttime="20210222 13:15:50.744"></status>
</kw>
<status status="PASS" endtime="20210222 13:15:50.771" starttime="20210222 13:15:50.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:15:50.776" level="INFO">Running command 'ozone sh key put 94804-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:17:50.743" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:17:50.744" starttime="20210222 13:15:50.773"></status>
</kw>
<status status="FAIL" endtime="20210222 13:17:50.744" starttime="20210222 13:15:50.772"></status>
</kw>
<msg timestamp="20210222 13:17:50.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:17:50.744" starttime="20210222 13:15:50.772"></status>
</kw>
<status status="FAIL" endtime="20210222 13:17:50.745" starttime="20210222 13:15:50.772"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:17:50.745" critical="yes" starttime="20210222 13:15:50.742">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:17:50.752" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:17:50.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:17:50.755" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:17:50.756" starttime="20210222 13:17:50.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:17:50.758" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:17:50.758" starttime="20210222 13:17:50.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:17:50.759" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:17:50.759" starttime="20210222 13:17:50.759"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:50.760" starttime="20210222 13:17:50.749"></status>
</kw>
<msg timestamp="20210222 13:17:50.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:17:50.760" starttime="20210222 13:17:50.749"></status>
</kw>
<msg timestamp="20210222 13:17:50.761" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:17:50.761" starttime="20210222 13:17:50.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:17:50.762" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:17:50.762" starttime="20210222 13:17:50.761"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:17:50.770" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:17:50.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:17:50.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:17:50.781" starttime="20210222 13:17:50.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:17:50.783" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:17:50.783" starttime="20210222 13:17:50.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:17:50.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:17:50.784" starttime="20210222 13:17:50.783"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:50.784" starttime="20210222 13:17:50.766"></status>
</kw>
<msg timestamp="20210222 13:17:50.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:17:50.784" starttime="20210222 13:17:50.765"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:50.784" starttime="20210222 13:17:50.764"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:50.785" starttime="20210222 13:17:50.762"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:50.785" starttime="20210222 13:17:50.748"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:50.785" starttime="20210222 13:17:50.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:17:50.791" level="INFO">Running command 'ozone sh key list 94804-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:17:57.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:17:57.781" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210222 13:17:57.781" starttime="20210222 13:17:50.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:17:57.784" level="INFO">key1</msg>
<status status="PASS" endtime="20210222 13:17:57.784" starttime="20210222 13:17:57.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:17:57.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:17:57.786" starttime="20210222 13:17:57.785"></status>
</kw>
<status status="PASS" endtime="20210222 13:17:57.787" starttime="20210222 13:17:50.787"></status>
</kw>
<msg timestamp="20210222 13:17:57.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:17:57.788" starttime="20210222 13:17:50.787"></status>
</kw>
<msg timestamp="20210222 13:17:57.788" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210222 13:17:57.789" starttime="20210222 13:17:50.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:17:57.795" level="INFO">Running command 'ozone sh key list 94804-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:05.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:05.263" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210222 13:18:05.263" starttime="20210222 13:17:57.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:05.266" level="INFO">key1</msg>
<status status="PASS" endtime="20210222 13:18:05.266" starttime="20210222 13:18:05.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:05.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:05.268" starttime="20210222 13:18:05.267"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.269" starttime="20210222 13:17:57.791"></status>
</kw>
<msg timestamp="20210222 13:18:05.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:05.269" starttime="20210222 13:17:57.791"></status>
</kw>
<msg timestamp="20210222 13:18:05.270" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210222 13:18:05.270" starttime="20210222 13:17:57.789"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:05.271" starttime="20210222 13:18:05.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:05.272" starttime="20210222 13:18:05.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<msg timestamp="20210222 13:18:05.273" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210222 13:18:05.273" starttime="20210222 13:18:05.272"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:18:05.274" critical="yes" starttime="20210222 13:17:50.746">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:05.286" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:05.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:05.290" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:18:05.290" starttime="20210222 13:18:05.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:05.292" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:18:05.292" starttime="20210222 13:18:05.291"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:05.293" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:05.293" starttime="20210222 13:18:05.292"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.294" starttime="20210222 13:18:05.280"></status>
</kw>
<msg timestamp="20210222 13:18:05.294" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:05.294" starttime="20210222 13:18:05.280"></status>
</kw>
<msg timestamp="20210222 13:18:05.295" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:18:05.295" starttime="20210222 13:18:05.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:18:05.296" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:18:05.296" starttime="20210222 13:18:05.295"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:05.301" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:05.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:05.312" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:18:05.312" starttime="20210222 13:18:05.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:05.313" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:18:05.313" starttime="20210222 13:18:05.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:05.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:05.314" starttime="20210222 13:18:05.313"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.314" starttime="20210222 13:18:05.298"></status>
</kw>
<msg timestamp="20210222 13:18:05.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:05.315" starttime="20210222 13:18:05.298"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.315" starttime="20210222 13:18:05.297"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.315" starttime="20210222 13:18:05.296"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.316" starttime="20210222 13:18:05.278"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:05.316" starttime="20210222 13:18:05.277"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:05.322" level="INFO">Running command 'ozone sh key delete 94804-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:11.677" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:18:11.677" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210222 13:18:11.678" starttime="20210222 13:18:05.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:11.679" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210222 13:18:11.680" starttime="20210222 13:18:11.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:11.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210222 13:18:11.681" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210222 13:18:11.682" starttime="20210222 13:18:11.680"></status>
</kw>
<status status="FAIL" endtime="20210222 13:18:11.682" starttime="20210222 13:18:05.318"></status>
</kw>
<msg timestamp="20210222 13:18:11.682" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:18:11.683" starttime="20210222 13:18:05.318"></status>
</kw>
<status status="FAIL" endtime="20210222 13:18:11.683" starttime="20210222 13:18:05.316"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:18:11.684" critical="yes" starttime="20210222 13:18:05.276">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:11.695" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:11.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:11.699" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:18:11.699" starttime="20210222 13:18:11.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:11.701" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:18:11.702" starttime="20210222 13:18:11.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:11.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:11.703" starttime="20210222 13:18:11.702"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:11.703" starttime="20210222 13:18:11.691"></status>
</kw>
<msg timestamp="20210222 13:18:11.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:11.704" starttime="20210222 13:18:11.690"></status>
</kw>
<msg timestamp="20210222 13:18:11.705" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:18:11.705" starttime="20210222 13:18:11.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:18:11.706" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:18:11.706" starttime="20210222 13:18:11.705"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:11.712" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:11.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:11.721" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:18:11.721" starttime="20210222 13:18:11.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:11.722" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:18:11.722" starttime="20210222 13:18:11.721"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:11.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:11.723" starttime="20210222 13:18:11.723"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:11.724" starttime="20210222 13:18:11.709"></status>
</kw>
<msg timestamp="20210222 13:18:11.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:11.724" starttime="20210222 13:18:11.708"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:11.725" starttime="20210222 13:18:11.707"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:11.725" starttime="20210222 13:18:11.706"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:11.725" starttime="20210222 13:18:11.688"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:11.725" starttime="20210222 13:18:11.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:11.730" level="INFO">Running command 'ozone sh bucket list 94804-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:17.094" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:17.094" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210222 13:18:17.094" starttime="20210222 13:18:11.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:17.095" level="INFO">{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:13:44.161Z",
  "modificationTime" : "2021-02-22T13:13:44.161Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:13:03.654Z",
  "modificationTime" : "2021-02-22T13:13:37.095Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:13:57.178Z",
  "modificationTime" : "2021-02-22T13:13:57.178Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:12:49.402Z",
  "modificationTime" : "2021-02-22T13:13:30.518Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:12:57.450Z",
  "modificationTime" : "2021-02-22T13:12:57.450Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210222 13:18:17.096" starttime="20210222 13:18:17.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:17.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:17.097" starttime="20210222 13:18:17.096"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.097" starttime="20210222 13:18:11.727"></status>
</kw>
<msg timestamp="20210222 13:18:17.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:17.097" starttime="20210222 13:18:11.726"></status>
</kw>
<msg timestamp="20210222 13:18:17.097" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210222 13:18:17.098" starttime="20210222 13:18:11.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:17.098" starttime="20210222 13:18:17.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:17.099" starttime="20210222 13:18:17.098"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:18:17.099" critical="yes" starttime="20210222 13:18:11.686"></status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:17.108" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:17.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:17.111" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:18:17.111" starttime="20210222 13:18:17.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:17.112" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:18:17.112" starttime="20210222 13:18:17.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:17.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:17.113" starttime="20210222 13:18:17.112"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.113" starttime="20210222 13:18:17.105"></status>
</kw>
<msg timestamp="20210222 13:18:17.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:17.114" starttime="20210222 13:18:17.105"></status>
</kw>
<msg timestamp="20210222 13:18:17.114" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:18:17.114" starttime="20210222 13:18:17.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:18:17.115" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:18:17.115" starttime="20210222 13:18:17.114"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:17.119" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:17.126" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:17.126" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:18:17.126" starttime="20210222 13:18:17.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:17.128" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:18:17.128" starttime="20210222 13:18:17.127"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:17.128" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:17.129" starttime="20210222 13:18:17.128"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.129" starttime="20210222 13:18:17.116"></status>
</kw>
<msg timestamp="20210222 13:18:17.129" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:17.129" starttime="20210222 13:18:17.116"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.129" starttime="20210222 13:18:17.115"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.130" starttime="20210222 13:18:17.115"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.130" starttime="20210222 13:18:17.104"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:17.130" starttime="20210222 13:18:17.103"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:17.134" level="INFO">Running command 'ozone sh bucket info 94804-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:24.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:24.927" level="INFO">${output} = 94804-source bucket1</msg>
<status status="PASS" endtime="20210222 13:18:24.927" starttime="20210222 13:18:17.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:24.930" level="INFO">94804-source bucket1</msg>
<status status="PASS" endtime="20210222 13:18:24.930" starttime="20210222 13:18:24.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:24.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:24.931" starttime="20210222 13:18:24.930"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.931" starttime="20210222 13:18:17.132"></status>
</kw>
<msg timestamp="20210222 13:18:24.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:24.932" starttime="20210222 13:18:17.131"></status>
</kw>
<msg timestamp="20210222 13:18:24.932" level="INFO">${result} = 94804-source bucket1</msg>
<status status="PASS" endtime="20210222 13:18:24.932" starttime="20210222 13:18:17.130"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:24.933" starttime="20210222 13:18:24.933"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:18:24.934" critical="yes" starttime="20210222 13:18:17.102"></status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:24.944" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:24.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:24.954" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:18:24.954" starttime="20210222 13:18:24.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:24.955" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:18:24.955" starttime="20210222 13:18:24.954"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:24.956" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:24.956" starttime="20210222 13:18:24.955"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.956" starttime="20210222 13:18:24.940"></status>
</kw>
<msg timestamp="20210222 13:18:24.956" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:24.956" starttime="20210222 13:18:24.939"></status>
</kw>
<msg timestamp="20210222 13:18:24.957" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:18:24.957" starttime="20210222 13:18:24.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:18:24.958" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:18:24.958" starttime="20210222 13:18:24.957"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:24.962" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:24.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:24.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:18:24.970" starttime="20210222 13:18:24.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:24.971" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:18:24.971" starttime="20210222 13:18:24.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:24.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:24.972" starttime="20210222 13:18:24.971"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.973" starttime="20210222 13:18:24.959"></status>
</kw>
<msg timestamp="20210222 13:18:24.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:24.974" starttime="20210222 13:18:24.959"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.975" starttime="20210222 13:18:24.958"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.975" starttime="20210222 13:18:24.958"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.976" starttime="20210222 13:18:24.938"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:24.976" starttime="20210222 13:18:24.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:24.985" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 94804-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:31.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:31.552" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:18:31.552" starttime="20210222 13:18:24.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:31.554" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:18:31.554" starttime="20210222 13:18:31.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:31.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:31.555" starttime="20210222 13:18:31.554"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:31.556" starttime="20210222 13:18:24.979"></status>
</kw>
<msg timestamp="20210222 13:18:31.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:31.556" starttime="20210222 13:18:24.979"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:31.556" starttime="20210222 13:18:24.977"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:31.564" level="INFO">Running command 'ozone sh bucket getacl 94804-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:36.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:36.619" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210222 13:18:36.619" starttime="20210222 13:18:31.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:36.620" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210222 13:18:36.620" starttime="20210222 13:18:36.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:36.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:36.621" starttime="20210222 13:18:36.621"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:36.622" starttime="20210222 13:18:31.559"></status>
</kw>
<msg timestamp="20210222 13:18:36.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:36.622" starttime="20210222 13:18:31.558"></status>
</kw>
<msg timestamp="20210222 13:18:36.622" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210222 13:18:36.622" starttime="20210222 13:18:31.557"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:36.623" starttime="20210222 13:18:36.622"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:36.623" starttime="20210222 13:18:31.556"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:36.629" level="INFO">Running command 'ozone sh bucket getacl 94804-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:43.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:43.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:18:43.119" starttime="20210222 13:18:36.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:43.121" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:18:43.121" starttime="20210222 13:18:43.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:43.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:43.123" starttime="20210222 13:18:43.122"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:43.124" starttime="20210222 13:18:36.626"></status>
</kw>
<msg timestamp="20210222 13:18:43.124" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:43.124" starttime="20210222 13:18:36.625"></status>
</kw>
<msg timestamp="20210222 13:18:43.125" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210222 13:18:43.125" starttime="20210222 13:18:36.624"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:43.126" starttime="20210222 13:18:43.125"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:43.126" starttime="20210222 13:18:36.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:43.131" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 94804-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:49.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:49.444" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:18:49.444" starttime="20210222 13:18:43.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:49.447" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:18:49.447" starttime="20210222 13:18:49.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:49.449" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:49.450" starttime="20210222 13:18:49.448"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:49.450" starttime="20210222 13:18:43.128"></status>
</kw>
<msg timestamp="20210222 13:18:49.450" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:49.451" starttime="20210222 13:18:43.127"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:49.451" starttime="20210222 13:18:43.126"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:49.462" level="INFO">Running command 'ozone sh bucket getacl 94804-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:18:56.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:18:56.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:18:56.482" starttime="20210222 13:18:49.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:18:56.484" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:18:56.484" starttime="20210222 13:18:56.483"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:18:56.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:18:56.486" starttime="20210222 13:18:56.485"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:56.486" starttime="20210222 13:18:49.456"></status>
</kw>
<msg timestamp="20210222 13:18:56.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:18:56.487" starttime="20210222 13:18:49.456"></status>
</kw>
<msg timestamp="20210222 13:18:56.488" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210222 13:18:56.488" starttime="20210222 13:18:49.454"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:18:56.489" starttime="20210222 13:18:56.488"></status>
</kw>
<status status="PASS" endtime="20210222 13:18:56.489" starttime="20210222 13:18:49.452"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:18:56.496" level="INFO">Running command 'ozone sh bucket getacl 94804-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:04.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:04.061" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210222 13:19:04.061" starttime="20210222 13:18:56.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:04.063" level="INFO">READ</msg>
<status status="PASS" endtime="20210222 13:19:04.063" starttime="20210222 13:19:04.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:04.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:04.065" starttime="20210222 13:19:04.064"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.066" starttime="20210222 13:18:56.493"></status>
</kw>
<msg timestamp="20210222 13:19:04.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:04.066" starttime="20210222 13:18:56.492"></status>
</kw>
<msg timestamp="20210222 13:19:04.066" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210222 13:19:04.066" starttime="20210222 13:18:56.491"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:04.067" starttime="20210222 13:19:04.066"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.067" starttime="20210222 13:18:56.489"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:19:04.068" critical="yes" starttime="20210222 13:18:24.935"></status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:04.081" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:04.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:04.085" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:04.085" starttime="20210222 13:19:04.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:04.086" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:04.087" starttime="20210222 13:19:04.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:04.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:04.088" starttime="20210222 13:19:04.087"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.089" starttime="20210222 13:19:04.076"></status>
</kw>
<msg timestamp="20210222 13:19:04.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:04.089" starttime="20210222 13:19:04.076"></status>
</kw>
<msg timestamp="20210222 13:19:04.089" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:04.090" starttime="20210222 13:19:04.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:04.091" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:04.091" starttime="20210222 13:19:04.090"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:04.098" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:04.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:04.156" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:04.156" starttime="20210222 13:19:04.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:04.157" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:04.158" starttime="20210222 13:19:04.157"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:04.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:04.158" starttime="20210222 13:19:04.158"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.159" starttime="20210222 13:19:04.095"></status>
</kw>
<msg timestamp="20210222 13:19:04.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:04.159" starttime="20210222 13:19:04.094"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.159" starttime="20210222 13:19:04.093"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.159" starttime="20210222 13:19:04.092"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.159" starttime="20210222 13:19:04.074"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:04.159" starttime="20210222 13:19:04.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:04.163" level="INFO">Running command 'ozone sh bucket link 94804-source/bucket2 94804-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:10.756" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:10.756" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:10.756" starttime="20210222 13:19:04.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:10.758" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:10.759" starttime="20210222 13:19:10.757"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:10.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:10.760" starttime="20210222 13:19:10.759"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:10.760" starttime="20210222 13:19:04.161"></status>
</kw>
<msg timestamp="20210222 13:19:10.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:10.761" starttime="20210222 13:19:04.160"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:10.762" starttime="20210222 13:19:04.160"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:10.766" level="INFO">Running command 'ozone sh bucket create 94804-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:17.332" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:19:17.332" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210222 13:19:17.332" starttime="20210222 13:19:10.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:17.334" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210222 13:19:17.334" starttime="20210222 13:19:17.332"></status>
</kw>
<msg timestamp="20210222 13:19:17.335" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210222 13:19:17.335" starttime="20210222 13:19:10.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:17.336" starttime="20210222 13:19:17.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:17.342" level="INFO">Running command 'ozone sh bucket create 94804-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:24.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:24.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:24.154" starttime="20210222 13:19:17.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:24.155" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:24.155" starttime="20210222 13:19:24.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:24.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:24.156" starttime="20210222 13:19:24.155"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:24.156" starttime="20210222 13:19:17.338"></status>
</kw>
<msg timestamp="20210222 13:19:24.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:24.156" starttime="20210222 13:19:17.337"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:24.156" starttime="20210222 13:19:17.336"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:24.160" level="INFO">Running command 'ozone sh bucket link 94804-source/bucket1 94804-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:30.912" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:19:30.912" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210222 13:19:30.912" starttime="20210222 13:19:24.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.914" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210222 13:19:30.914" starttime="20210222 13:19:30.913"></status>
</kw>
<msg timestamp="20210222 13:19:30.914" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210222 13:19:30.914" starttime="20210222 13:19:24.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:30.915" starttime="20210222 13:19:30.914"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:19:30.915" critical="yes" starttime="20210222 13:19:04.070"></status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:30.924" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:30.929" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:30.929" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:30.929" starttime="20210222 13:19:30.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.931" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:30.931" starttime="20210222 13:19:30.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:30.932" starttime="20210222 13:19:30.931"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.932" starttime="20210222 13:19:30.921"></status>
</kw>
<msg timestamp="20210222 13:19:30.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:30.932" starttime="20210222 13:19:30.920"></status>
</kw>
<msg timestamp="20210222 13:19:30.933" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:30.933" starttime="20210222 13:19:30.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:30.934" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:30.934" starttime="20210222 13:19:30.933"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:30.940" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:30.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:30.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:30.950" starttime="20210222 13:19:30.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.951" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:30.951" starttime="20210222 13:19:30.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:30.952" starttime="20210222 13:19:30.951"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.952" starttime="20210222 13:19:30.936"></status>
</kw>
<msg timestamp="20210222 13:19:30.952" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:30.953" starttime="20210222 13:19:30.936"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.953" starttime="20210222 13:19:30.935"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.953" starttime="20210222 13:19:30.934"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.953" starttime="20210222 13:19:30.918"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.953" starttime="20210222 13:19:30.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:30.959" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:30.964" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:30.964" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:30.964" starttime="20210222 13:19:30.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.965" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:30.965" starttime="20210222 13:19:30.964"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.966" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:30.967" starttime="20210222 13:19:30.966"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.967" starttime="20210222 13:19:30.956"></status>
</kw>
<msg timestamp="20210222 13:19:30.967" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:30.967" starttime="20210222 13:19:30.955"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.968" starttime="20210222 13:19:30.955"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:30.973" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:30.976" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:30.976" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:30.976" starttime="20210222 13:19:30.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.978" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:30.978" starttime="20210222 13:19:30.977"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:30.979" starttime="20210222 13:19:30.978"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.980" starttime="20210222 13:19:30.970"></status>
</kw>
<msg timestamp="20210222 13:19:30.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:30.980" starttime="20210222 13:19:30.969"></status>
</kw>
<msg timestamp="20210222 13:19:30.980" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:30.980" starttime="20210222 13:19:30.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:30.981" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:30.982" starttime="20210222 13:19:30.980"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:30.986" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:30.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:30.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:30.996" starttime="20210222 13:19:30.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.998" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:30.998" starttime="20210222 13:19:30.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:30.999" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:30.999" starttime="20210222 13:19:30.998"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:30.999" starttime="20210222 13:19:30.984"></status>
</kw>
<msg timestamp="20210222 13:19:30.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:31.000" starttime="20210222 13:19:30.983"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:31.000" starttime="20210222 13:19:30.982"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:31.000" starttime="20210222 13:19:30.982"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:31.000" starttime="20210222 13:19:30.968"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:31.001" starttime="20210222 13:19:30.968"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:31.004" level="INFO">Running command 'ozone sh key list 94804-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:37.853" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:37.853" level="INFO">${output} = {
  "volumeName" : "94804-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-22T13:09:33.815Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210222 13:19:37.853" starttime="20210222 13:19:31.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.855" level="INFO">{
  "volumeName" : "94804-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-22T13:09:33.815Z",
  "modificationTime" : "2021-02-22T13:12:36.411Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210222 13:19:37.855" starttime="20210222 13:19:37.854"></status>
</kw>
<msg timestamp="20210222 13:19:37.856" level="INFO">${result} = {
  "volumeName" : "94804-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-22T13:09:33.815Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210222 13:19:37.856" starttime="20210222 13:19:31.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:37.856" starttime="20210222 13:19:37.856"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.857" starttime="20210222 13:19:30.954"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.857" starttime="20210222 13:19:30.954"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:19:37.857" critical="yes" starttime="20210222 13:19:30.917"></status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:37.867" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:37.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:37.871" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:37.871" starttime="20210222 13:19:37.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.873" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:37.873" starttime="20210222 13:19:37.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.874" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:37.875" starttime="20210222 13:19:37.874"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.875" starttime="20210222 13:19:37.864"></status>
</kw>
<msg timestamp="20210222 13:19:37.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:37.876" starttime="20210222 13:19:37.864"></status>
</kw>
<msg timestamp="20210222 13:19:37.876" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:37.876" starttime="20210222 13:19:37.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:37.878" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:37.878" starttime="20210222 13:19:37.877"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:37.883" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:37.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:37.892" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:37.892" starttime="20210222 13:19:37.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.894" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:37.894" starttime="20210222 13:19:37.893"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:37.895" starttime="20210222 13:19:37.894"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.895" starttime="20210222 13:19:37.880"></status>
</kw>
<msg timestamp="20210222 13:19:37.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:37.896" starttime="20210222 13:19:37.879"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.896" starttime="20210222 13:19:37.878"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.896" starttime="20210222 13:19:37.878"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.897" starttime="20210222 13:19:37.862"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.897" starttime="20210222 13:19:37.861"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:37.902" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:37.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:37.907" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:37.907" starttime="20210222 13:19:37.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.909" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:37.909" starttime="20210222 13:19:37.908"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.910" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:37.910" starttime="20210222 13:19:37.910"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.911" starttime="20210222 13:19:37.899"></status>
</kw>
<msg timestamp="20210222 13:19:37.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:37.911" starttime="20210222 13:19:37.899"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.911" starttime="20210222 13:19:37.898"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:37.917" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:37.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:37.921" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:37.921" starttime="20210222 13:19:37.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.922" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:37.922" starttime="20210222 13:19:37.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.923" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:37.923" starttime="20210222 13:19:37.922"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.923" starttime="20210222 13:19:37.914"></status>
</kw>
<msg timestamp="20210222 13:19:37.923" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:37.923" starttime="20210222 13:19:37.914"></status>
</kw>
<msg timestamp="20210222 13:19:37.924" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:37.924" starttime="20210222 13:19:37.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:37.925" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:37.925" starttime="20210222 13:19:37.924"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:37.930" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:37.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:37.940" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:37.940" starttime="20210222 13:19:37.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.941" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:37.942" starttime="20210222 13:19:37.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:37.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:37.942" starttime="20210222 13:19:37.942"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.943" starttime="20210222 13:19:37.928"></status>
</kw>
<msg timestamp="20210222 13:19:37.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:37.943" starttime="20210222 13:19:37.927"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.943" starttime="20210222 13:19:37.926"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.943" starttime="20210222 13:19:37.925"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.944" starttime="20210222 13:19:37.912"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:37.944" starttime="20210222 13:19:37.911"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:37.947" level="INFO">Running command 'ozone sh key list 94804-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:44.290" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:19:44.290" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94804-target unreadable-link null</msg>
<status status="PASS" endtime="20210222 13:19:44.290" starttime="20210222 13:19:37.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.291" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94804-target unreadable-link null</msg>
<status status="PASS" endtime="20210222 13:19:44.291" starttime="20210222 13:19:44.290"></status>
</kw>
<msg timestamp="20210222 13:19:44.292" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 94804-target unreadable-link null</msg>
<status status="PASS" endtime="20210222 13:19:44.292" starttime="20210222 13:19:37.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:44.294" starttime="20210222 13:19:44.292"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.294" starttime="20210222 13:19:37.897"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.294" starttime="20210222 13:19:37.897"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:19:44.295" critical="yes" starttime="20210222 13:19:37.859"></status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:44.306" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:44.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:44.309" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:44.309" starttime="20210222 13:19:44.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.311" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:44.311" starttime="20210222 13:19:44.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:44.312" starttime="20210222 13:19:44.311"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.313" starttime="20210222 13:19:44.302"></status>
</kw>
<msg timestamp="20210222 13:19:44.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:44.313" starttime="20210222 13:19:44.301"></status>
</kw>
<msg timestamp="20210222 13:19:44.313" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:44.314" starttime="20210222 13:19:44.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:44.314" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:44.314" starttime="20210222 13:19:44.314"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:44.319" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:44.329" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:44.329" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:44.329" starttime="20210222 13:19:44.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.331" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:44.331" starttime="20210222 13:19:44.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:44.332" starttime="20210222 13:19:44.331"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.332" starttime="20210222 13:19:44.317"></status>
</kw>
<msg timestamp="20210222 13:19:44.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:44.333" starttime="20210222 13:19:44.316"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.333" starttime="20210222 13:19:44.315"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.333" starttime="20210222 13:19:44.315"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.334" starttime="20210222 13:19:44.299"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.334" starttime="20210222 13:19:44.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:44.339" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:44.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:44.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:44.344" starttime="20210222 13:19:44.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.346" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:44.346" starttime="20210222 13:19:44.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.347" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:44.347" starttime="20210222 13:19:44.346"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.347" starttime="20210222 13:19:44.337"></status>
</kw>
<msg timestamp="20210222 13:19:44.348" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:44.348" starttime="20210222 13:19:44.336"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.348" starttime="20210222 13:19:44.336"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:44.354" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:44.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:44.355" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:44.355" starttime="20210222 13:19:44.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.357" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:44.357" starttime="20210222 13:19:44.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:44.358" starttime="20210222 13:19:44.357"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.358" starttime="20210222 13:19:44.350"></status>
</kw>
<msg timestamp="20210222 13:19:44.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:44.359" starttime="20210222 13:19:44.350"></status>
</kw>
<msg timestamp="20210222 13:19:44.359" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:44.359" starttime="20210222 13:19:44.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:44.360" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:44.360" starttime="20210222 13:19:44.359"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:44.365" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:44.372" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:44.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:44.372" starttime="20210222 13:19:44.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.373" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:44.373" starttime="20210222 13:19:44.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:44.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:44.374" starttime="20210222 13:19:44.373"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.374" starttime="20210222 13:19:44.362"></status>
</kw>
<msg timestamp="20210222 13:19:44.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:44.374" starttime="20210222 13:19:44.361"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.375" starttime="20210222 13:19:44.360"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.375" starttime="20210222 13:19:44.360"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.375" starttime="20210222 13:19:44.349"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:44.375" starttime="20210222 13:19:44.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:44.379" level="INFO">Running command 'ozone sh bucket info 94804-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:51.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:51.650" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210222 13:19:51.650" starttime="20210222 13:19:44.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:51.652" level="INFO">{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:13:03.654Z",
  "modificationTime" : "2021-02-22T13:13:37.095Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210222 13:19:51.652" starttime="20210222 13:19:51.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:51.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:51.654" starttime="20210222 13:19:51.653"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:51.658" starttime="20210222 13:19:44.376"></status>
</kw>
<msg timestamp="20210222 13:19:51.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:51.658" starttime="20210222 13:19:44.376"></status>
</kw>
<msg timestamp="20210222 13:19:51.659" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210222 13:19:51.659" starttime="20210222 13:19:44.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:51.660" starttime="20210222 13:19:51.660"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:51.661" starttime="20210222 13:19:51.660"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:51.666" level="INFO">Running command 'ozone sh key list 94804-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:57.969" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:19:57.969" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94804-source unreadable-bucket </msg>
<status status="PASS" endtime="20210222 13:19:57.969" starttime="20210222 13:19:51.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:57.971" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94804-source unreadable-bucket </msg>
<status status="PASS" endtime="20210222 13:19:57.971" starttime="20210222 13:19:57.970"></status>
</kw>
<msg timestamp="20210222 13:19:57.971" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 94804-source unreadable-bucket </msg>
<status status="PASS" endtime="20210222 13:19:57.971" starttime="20210222 13:19:51.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210222 13:19:57.972" starttime="20210222 13:19:57.972"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:57.973" starttime="20210222 13:19:44.335"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:57.973" starttime="20210222 13:19:44.334"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:19:57.973" critical="yes" starttime="20210222 13:19:44.297"></status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:57.983" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:57.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:57.987" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:19:57.987" starttime="20210222 13:19:57.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:57.989" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:19:57.990" starttime="20210222 13:19:57.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:57.991" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:57.991" starttime="20210222 13:19:57.990"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:57.991" starttime="20210222 13:19:57.980"></status>
</kw>
<msg timestamp="20210222 13:19:57.991" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:57.992" starttime="20210222 13:19:57.978"></status>
</kw>
<msg timestamp="20210222 13:19:57.992" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:19:57.992" starttime="20210222 13:19:57.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:19:57.993" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:19:57.993" starttime="20210222 13:19:57.992"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:58.000" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:19:58.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:19:58.009" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:19:58.009" starttime="20210222 13:19:57.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:19:58.010" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:19:58.010" starttime="20210222 13:19:58.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:19:58.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:19:58.012" starttime="20210222 13:19:58.011"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:58.012" starttime="20210222 13:19:57.996"></status>
</kw>
<msg timestamp="20210222 13:19:58.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:19:58.012" starttime="20210222 13:19:57.995"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:58.013" starttime="20210222 13:19:57.994"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:58.013" starttime="20210222 13:19:57.994"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:58.013" starttime="20210222 13:19:57.977"></status>
</kw>
<status status="PASS" endtime="20210222 13:19:58.013" starttime="20210222 13:19:57.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:19:58.018" level="INFO">Running command 'ozone sh bucket link 94804-target/loop1 94804-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:02.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:20:02.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:20:02.646" starttime="20210222 13:19:58.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:02.647" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:20:02.647" starttime="20210222 13:20:02.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:20:02.648" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:20:02.648" starttime="20210222 13:20:02.647"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:02.648" starttime="20210222 13:19:58.015"></status>
</kw>
<msg timestamp="20210222 13:20:02.648" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:20:02.649" starttime="20210222 13:19:58.014"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:02.649" starttime="20210222 13:19:58.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:02.653" level="INFO">Running command 'ozone sh bucket link 94804-target/loop2 94804-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:08.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:20:08.948" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:20:08.948" starttime="20210222 13:20:02.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:08.949" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:20:08.949" starttime="20210222 13:20:08.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:20:08.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:20:08.951" starttime="20210222 13:20:08.949"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:08.951" starttime="20210222 13:20:02.650"></status>
</kw>
<msg timestamp="20210222 13:20:08.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:20:08.951" starttime="20210222 13:20:02.650"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:08.952" starttime="20210222 13:20:02.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:08.957" level="INFO">Running command 'ozone sh bucket link 94804-target/loop3 94804-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:15.673" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:20:15.673" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:20:15.673" starttime="20210222 13:20:08.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:15.675" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:20:15.675" starttime="20210222 13:20:15.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:20:15.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:20:15.676" starttime="20210222 13:20:15.675"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:15.676" starttime="20210222 13:20:08.953"></status>
</kw>
<msg timestamp="20210222 13:20:15.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:20:15.676" starttime="20210222 13:20:08.952"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:15.677" starttime="20210222 13:20:08.952"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:15.681" level="INFO">Running command 'ozone sh key list 94804-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:22.346" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:20:22.346" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210222 13:20:22.346" starttime="20210222 13:20:15.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:22.347" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210222 13:20:22.347" starttime="20210222 13:20:22.346"></status>
</kw>
<msg timestamp="20210222 13:20:22.347" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210222 13:20:22.347" starttime="20210222 13:20:15.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210222 13:20:22.348" starttime="20210222 13:20:22.347"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:20:22.348" critical="yes" starttime="20210222 13:19:57.975"></status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:22.357" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:22.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:20:22.360" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:20:22.360" starttime="20210222 13:20:22.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:22.362" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:20:22.362" starttime="20210222 13:20:22.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:20:22.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:20:22.364" starttime="20210222 13:20:22.362"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:22.364" starttime="20210222 13:20:22.353"></status>
</kw>
<msg timestamp="20210222 13:20:22.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:20:22.365" starttime="20210222 13:20:22.352"></status>
</kw>
<msg timestamp="20210222 13:20:22.365" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:20:22.365" starttime="20210222 13:20:22.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:20:22.366" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:20:22.366" starttime="20210222 13:20:22.365"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:22.372" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:22.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:20:22.380" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:20:22.380" starttime="20210222 13:20:22.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:22.382" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:20:22.382" starttime="20210222 13:20:22.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:20:22.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:20:22.383" starttime="20210222 13:20:22.382"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:22.383" starttime="20210222 13:20:22.369"></status>
</kw>
<msg timestamp="20210222 13:20:22.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:20:22.384" starttime="20210222 13:20:22.368"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:22.384" starttime="20210222 13:20:22.367"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:22.384" starttime="20210222 13:20:22.367"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:22.384" starttime="20210222 13:20:22.351"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:22.385" starttime="20210222 13:20:22.350"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:22.389" level="INFO">Running command 'ozone sh bucket link 94804-source/bucket1 94804-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:20:29.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:20:29.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:20:29.305" starttime="20210222 13:20:22.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:20:29.308" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:20:29.308" starttime="20210222 13:20:29.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:20:29.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:20:29.310" starttime="20210222 13:20:29.309"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:29.310" starttime="20210222 13:20:22.386"></status>
</kw>
<msg timestamp="20210222 13:20:29.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:20:29.311" starttime="20210222 13:20:22.386"></status>
</kw>
<status status="PASS" endtime="20210222 13:20:29.311" starttime="20210222 13:20:22.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:20:29.319" level="INFO">Running command 'ozone sh key put 94804-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:22.350" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:22:22.350" starttime="20210222 13:20:29.315"></status>
</kw>
<status status="FAIL" endtime="20210222 13:22:22.351" starttime="20210222 13:20:29.313"></status>
</kw>
<msg timestamp="20210222 13:22:22.351" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:22:22.351" starttime="20210222 13:20:29.312"></status>
</kw>
<status status="FAIL" endtime="20210222 13:22:22.351" starttime="20210222 13:20:29.311"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:22:22.352" critical="yes" starttime="20210222 13:20:22.349">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:22.372" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:22.375" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:22:22.375" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:22:22.375" starttime="20210222 13:22:22.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:22.376" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:22:22.376" starttime="20210222 13:22:22.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:22:22.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:22:22.383" starttime="20210222 13:22:22.376"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:22.384" starttime="20210222 13:22:22.365"></status>
</kw>
<msg timestamp="20210222 13:22:22.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:22:22.384" starttime="20210222 13:22:22.361"></status>
</kw>
<msg timestamp="20210222 13:22:22.385" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:22:22.385" starttime="20210222 13:22:22.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:22:22.386" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:22:22.386" starttime="20210222 13:22:22.385"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:22.393" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:22.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:22:22.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:22:22.403" starttime="20210222 13:22:22.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:22.405" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:22:22.406" starttime="20210222 13:22:22.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:22:22.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:22:22.407" starttime="20210222 13:22:22.406"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:22.408" starttime="20210222 13:22:22.389"></status>
</kw>
<msg timestamp="20210222 13:22:22.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:22:22.408" starttime="20210222 13:22:22.388"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:22.409" starttime="20210222 13:22:22.387"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:22.409" starttime="20210222 13:22:22.386"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:22.409" starttime="20210222 13:22:22.360"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:22.409" starttime="20210222 13:22:22.359"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:22.416" level="INFO">Running command 'ozone sh bucket delete 94804-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:29.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:22:29.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:22:29.133" starttime="20210222 13:22:22.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:29.135" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:22:29.135" starttime="20210222 13:22:29.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:22:29.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:22:29.137" starttime="20210222 13:22:29.136"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:29.137" starttime="20210222 13:22:22.412"></status>
</kw>
<msg timestamp="20210222 13:22:29.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:22:29.137" starttime="20210222 13:22:22.411"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:29.138" starttime="20210222 13:22:22.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:29.143" level="INFO">Running command 'ozone sh bucket list 94804-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:36.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:22:36.124" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T...</msg>
<status status="PASS" endtime="20210222 13:22:36.124" starttime="20210222 13:22:29.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:36.125" level="INFO">{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:19:24.077Z",
  "modificationTime" : "2021-02-22T13:19:24.077Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:13:44.161Z",
  "modificationTime" : "2021-02-22T13:13:44.161Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:13:03.654Z",
  "modificationTime" : "2021-02-22T13:13:37.095Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:19:10.653Z",
  "modificationTime" : "2021-02-22T13:19:10.653Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:20:29.205Z",
  "modificationTime" : "2021-02-22T13:20:29.205Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:20:15.512Z",
  "modificationTime" : "2021-02-22T13:20:15.512Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:20:02.588Z",
  "modificationTime" : "2021-02-22T13:20:02.588Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:20:08.676Z",
  "modificationTime" : "2021-02-22T13:20:08.676Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:12:49.402Z",
  "modificationTime" : "2021-02-22T13:13:30.518Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T13:12:57.450Z",
  "modificationTime" : "2021-02-22T13:12:57.450Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "94804-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210222 13:22:36.126" starttime="20210222 13:22:36.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:22:36.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:22:36.126" starttime="20210222 13:22:36.126"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:36.127" starttime="20210222 13:22:29.140"></status>
</kw>
<msg timestamp="20210222 13:22:36.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:22:36.127" starttime="20210222 13:22:29.139"></status>
</kw>
<msg timestamp="20210222 13:22:36.127" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "94804-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-22T...</msg>
<status status="PASS" endtime="20210222 13:22:36.127" starttime="20210222 13:22:29.138"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210222 13:22:36.128" starttime="20210222 13:22:36.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:36.133" level="INFO">Running command 'ozone sh key list 94804-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:44.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:22:44.728" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210222 13:22:44.728" starttime="20210222 13:22:36.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:44.730" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210222 13:22:44.730" starttime="20210222 13:22:44.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:22:44.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:22:44.731" starttime="20210222 13:22:44.730"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:44.732" starttime="20210222 13:22:36.129"></status>
</kw>
<msg timestamp="20210222 13:22:44.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:22:44.732" starttime="20210222 13:22:36.129"></status>
</kw>
<msg timestamp="20210222 13:22:44.732" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210222 13:22:44.732" starttime="20210222 13:22:36.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210222 13:22:44.733" starttime="20210222 13:22:44.732"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:22:44.733" critical="yes" starttime="20210222 13:22:22.358"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210222 13:22:44.738" starttime="20210222 13:09:08.326"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210222 13:22:44.775" level="INFO">${random} = 53316</msg>
<status status="PASS" endtime="20210222 13:22:44.775" starttime="20210222 13:22:44.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210222 13:22:44.776" level="INFO">${prefix} = 53316</msg>
<status status="PASS" endtime="20210222 13:22:44.776" starttime="20210222 13:22:44.775"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:44.776" starttime="20210222 13:22:44.774"></status>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:44.783" level="INFO">Running command 'ozone sh volume info /53316-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:51.322" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:22:51.322" level="INFO">${output} = VOLUME_NOT_FOUND Volume 53316-rpcbasic is not found</msg>
<status status="PASS" endtime="20210222 13:22:51.322" starttime="20210222 13:22:44.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:51.323" level="INFO">VOLUME_NOT_FOUND Volume 53316-rpcbasic is not found</msg>
<status status="PASS" endtime="20210222 13:22:51.324" starttime="20210222 13:22:51.323"></status>
</kw>
<msg timestamp="20210222 13:22:51.324" level="INFO">${result} = VOLUME_NOT_FOUND Volume 53316-rpcbasic is not found</msg>
<status status="PASS" endtime="20210222 13:22:51.324" starttime="20210222 13:22:44.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210222 13:22:51.325" starttime="20210222 13:22:51.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:51.331" level="INFO">Running command 'ozone sh volume create /53316-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:22:57.701" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:22:57.701" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:22:57.701" starttime="20210222 13:22:51.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:22:57.703" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:22:57.703" starttime="20210222 13:22:57.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:22:57.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:22:57.704" starttime="20210222 13:22:57.703"></status>
</kw>
<status status="PASS" endtime="20210222 13:22:57.704" starttime="20210222 13:22:51.327"></status>
</kw>
<msg timestamp="20210222 13:22:57.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:22:57.705" starttime="20210222 13:22:51.326"></status>
</kw>
<msg timestamp="20210222 13:22:57.705" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210222 13:22:57.706" starttime="20210222 13:22:51.325"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210222 13:22:57.706" starttime="20210222 13:22:57.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:22:57.712" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="53316-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:05.609" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:05.610" level="INFO">${output} = {
  "metadata": {},
  "name": "53316-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:23:05.610" starttime="20210222 13:22:57.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:05.611" level="INFO">{
  "metadata": {},
  "name": "53316-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:22:57.477Z",
  "modificationTime": "2021-02-22T13:22:57.477Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:23:05.612" starttime="20210222 13:23:05.610"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:05.613" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:05.613" starttime="20210222 13:23:05.612"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:05.613" starttime="20210222 13:22:57.708"></status>
</kw>
<msg timestamp="20210222 13:23:05.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:05.614" starttime="20210222 13:22:57.708"></status>
</kw>
<msg timestamp="20210222 13:23:05.614" level="INFO">${result} = {
  "metadata": {},
  "name": "53316-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:23:05.614" starttime="20210222 13:22:57.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:23:05.615" starttime="20210222 13:23:05.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:05.622" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="53316-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:12.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:12.371" level="INFO">${output} = {
  "metadata": {},
  "name": "53316-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:23:12.371" starttime="20210222 13:23:05.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:12.373" level="INFO">{
  "metadata": {},
  "name": "53316-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:22:57.477Z",
  "modificationTime": "2021-02-22T13:22:57.477Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:23:12.373" starttime="20210222 13:23:12.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:12.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:12.374" starttime="20210222 13:23:12.373"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:12.374" starttime="20210222 13:23:05.617"></status>
</kw>
<msg timestamp="20210222 13:23:12.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:12.374" starttime="20210222 13:23:05.617"></status>
</kw>
<msg timestamp="20210222 13:23:12.375" level="INFO">${result} = {
  "metadata": {},
  "name": "53316-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:23:12.375" starttime="20210222 13:23:05.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:23:12.375" starttime="20210222 13:23:12.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:12.382" level="INFO">Running command 'ozone sh volume setquota /53316-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:18.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:18.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:23:18.958" starttime="20210222 13:23:12.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:18.959" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:23:18.959" starttime="20210222 13:23:18.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:18.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:18.960" starttime="20210222 13:23:18.959"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:18.960" starttime="20210222 13:23:12.376"></status>
</kw>
<msg timestamp="20210222 13:23:18.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:18.960" starttime="20210222 13:23:12.376"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:18.961" starttime="20210222 13:23:12.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:18.966" level="INFO">Running command 'ozone sh volume info /53316-rpcbasic | jq -r '. | select(.name=="53316-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:26.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:26.105" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:23:26.105" starttime="20210222 13:23:18.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:26.107" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:23:26.107" starttime="20210222 13:23:26.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:26.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:26.108" starttime="20210222 13:23:26.107"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:26.108" starttime="20210222 13:23:18.962"></status>
</kw>
<msg timestamp="20210222 13:23:26.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:26.108" starttime="20210222 13:23:18.962"></status>
</kw>
<msg timestamp="20210222 13:23:26.108" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:23:26.108" starttime="20210222 13:23:18.961"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:23:26.109" starttime="20210222 13:23:26.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:26.114" level="INFO">Running command 'ozone sh bucket create /53316-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:32.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:32.189" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:23:32.189" starttime="20210222 13:23:26.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:32.190" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:23:32.191" starttime="20210222 13:23:32.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:32.191" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:32.191" starttime="20210222 13:23:32.191"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:32.192" starttime="20210222 13:23:26.110"></status>
</kw>
<msg timestamp="20210222 13:23:32.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:32.192" starttime="20210222 13:23:26.110"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:32.193" starttime="20210222 13:23:26.109"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:32.197" level="INFO">Running command 'ozone sh bucket info /53316-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:38.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:38.728" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210222 13:23:38.728" starttime="20210222 13:23:32.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:38.731" level="INFO">DISK</msg>
<status status="PASS" endtime="20210222 13:23:38.731" starttime="20210222 13:23:38.729"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:38.731" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:38.731" starttime="20210222 13:23:38.731"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:38.732" starttime="20210222 13:23:32.194"></status>
</kw>
<msg timestamp="20210222 13:23:38.732" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:38.732" starttime="20210222 13:23:32.194"></status>
</kw>
<msg timestamp="20210222 13:23:38.732" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210222 13:23:38.732" starttime="20210222 13:23:32.193"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210222 13:23:38.733" starttime="20210222 13:23:38.733"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:38.740" level="INFO">Running command 'ozone sh bucket info /53316-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:46.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:46.085" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:23:46.085" starttime="20210222 13:23:38.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:46.086" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:23:46.086" starttime="20210222 13:23:46.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:46.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:46.087" starttime="20210222 13:23:46.087"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:46.088" starttime="20210222 13:23:38.736"></status>
</kw>
<msg timestamp="20210222 13:23:46.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:46.088" starttime="20210222 13:23:38.735"></status>
</kw>
<msg timestamp="20210222 13:23:46.089" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:23:46.089" starttime="20210222 13:23:38.734"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:23:46.089" starttime="20210222 13:23:46.089"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:46.095" level="INFO">Running command 'ozone sh bucket info /53316-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:51.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:51.070" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210222 13:23:51.070" starttime="20210222 13:23:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:51.072" level="INFO">100</msg>
<status status="PASS" endtime="20210222 13:23:51.072" starttime="20210222 13:23:51.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:51.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:51.074" starttime="20210222 13:23:51.073"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:51.074" starttime="20210222 13:23:46.091"></status>
</kw>
<msg timestamp="20210222 13:23:51.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:51.075" starttime="20210222 13:23:46.091"></status>
</kw>
<msg timestamp="20210222 13:23:51.075" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210222 13:23:51.075" starttime="20210222 13:23:46.090"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210222 13:23:51.077" starttime="20210222 13:23:51.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:51.084" level="INFO">Running command 'ozone sh bucket setquota /53316-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:23:56.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:23:56.555" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:23:56.555" starttime="20210222 13:23:51.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:23:56.556" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:23:56.556" starttime="20210222 13:23:56.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:23:56.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:23:56.557" starttime="20210222 13:23:56.556"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:56.557" starttime="20210222 13:23:51.079"></status>
</kw>
<msg timestamp="20210222 13:23:56.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:23:56.558" starttime="20210222 13:23:51.079"></status>
</kw>
<status status="PASS" endtime="20210222 13:23:56.558" starttime="20210222 13:23:51.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:23:56.563" level="INFO">Running command 'ozone sh bucket info /53316-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:24:02.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:24:02.875" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:24:02.875" starttime="20210222 13:23:56.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:24:02.876" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210222 13:24:02.876" starttime="20210222 13:24:02.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:24:02.877" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:24:02.877" starttime="20210222 13:24:02.876"></status>
</kw>
<status status="PASS" endtime="20210222 13:24:02.878" starttime="20210222 13:23:56.560"></status>
</kw>
<msg timestamp="20210222 13:24:02.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:24:02.878" starttime="20210222 13:23:56.559"></status>
</kw>
<msg timestamp="20210222 13:24:02.878" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:24:02.878" starttime="20210222 13:23:56.558"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210222 13:24:02.879" starttime="20210222 13:24:02.878"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:24:02.884" level="INFO">Running command 'ozone sh bucket info /53316-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:24:09.707" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:24:09.707" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210222 13:24:09.708" starttime="20210222 13:24:02.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:24:09.710" level="INFO">1000</msg>
<status status="PASS" endtime="20210222 13:24:09.711" starttime="20210222 13:24:09.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:24:09.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:24:09.712" starttime="20210222 13:24:09.711"></status>
</kw>
<status status="PASS" endtime="20210222 13:24:09.713" starttime="20210222 13:24:02.880"></status>
</kw>
<msg timestamp="20210222 13:24:09.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:24:09.714" starttime="20210222 13:24:02.880"></status>
</kw>
<msg timestamp="20210222 13:24:09.714" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210222 13:24:09.714" starttime="20210222 13:24:02.879"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210222 13:24:09.715" starttime="20210222 13:24:09.715"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:24:09.723" level="INFO">Running command 'ozone sh bucket list /53316-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:24:14.879" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:24:14.879" level="INFO">${output} = 53316-rpcbasic</msg>
<status status="PASS" endtime="20210222 13:24:14.879" starttime="20210222 13:24:09.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:24:14.881" level="INFO">53316-rpcbasic</msg>
<status status="PASS" endtime="20210222 13:24:14.881" starttime="20210222 13:24:14.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:24:14.882" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:24:14.882" starttime="20210222 13:24:14.881"></status>
</kw>
<status status="PASS" endtime="20210222 13:24:14.882" starttime="20210222 13:24:09.719"></status>
</kw>
<msg timestamp="20210222 13:24:14.882" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:24:14.882" starttime="20210222 13:24:09.718"></status>
</kw>
<msg timestamp="20210222 13:24:14.883" level="INFO">${result} = 53316-rpcbasic</msg>
<status status="PASS" endtime="20210222 13:24:14.883" starttime="20210222 13:24:09.716"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:24:14.884" starttime="20210222 13:24:14.883"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:24:14.890" level="INFO">Running command 'ozone sh key put /53316-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:25.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:25.272" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:27:25.272" starttime="20210222 13:24:14.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:25.274" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:27:25.275" starttime="20210222 13:27:25.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:25.276" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:25.276" starttime="20210222 13:27:25.275"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:25.277" starttime="20210222 13:24:14.887"></status>
</kw>
<msg timestamp="20210222 13:27:25.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:25.277" starttime="20210222 13:24:14.887"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:25.277" starttime="20210222 13:24:14.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:25.283" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:25.287" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:25.287" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:27:25.287" starttime="20210222 13:27:25.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:25.289" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:27:25.289" starttime="20210222 13:27:25.288"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:25.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:25.290" starttime="20210222 13:27:25.290"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:25.291" starttime="20210222 13:27:25.279"></status>
</kw>
<msg timestamp="20210222 13:27:25.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:25.291" starttime="20210222 13:27:25.279"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:25.291" starttime="20210222 13:27:25.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:25.295" level="INFO">Running command 'ozone sh key get /53316-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:36.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:36.074" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:27:36.074" starttime="20210222 13:27:25.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:36.075" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:27:36.077" starttime="20210222 13:27:36.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:36.078" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:36.078" starttime="20210222 13:27:36.077"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:36.078" starttime="20210222 13:27:25.292"></status>
</kw>
<msg timestamp="20210222 13:27:36.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:36.078" starttime="20210222 13:27:25.292"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:36.079" starttime="20210222 13:27:25.291"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:36.085" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:36.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:36.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:27:36.090" starttime="20210222 13:27:36.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:36.092" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:27:36.092" starttime="20210222 13:27:36.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:36.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:36.093" starttime="20210222 13:27:36.092"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:36.094" starttime="20210222 13:27:36.082"></status>
</kw>
<msg timestamp="20210222 13:27:36.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:36.094" starttime="20210222 13:27:36.081"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:36.094" starttime="20210222 13:27:36.079"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:36.100" level="INFO">Running command 'ozone sh key put -t RATIS /53316-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:44.778" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:27:44.778" starttime="20210222 13:27:36.097"></status>
</kw>
<status status="FAIL" endtime="20210222 13:27:44.779" starttime="20210222 13:27:36.095"></status>
</kw>
<msg timestamp="20210222 13:27:44.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:27:44.779" starttime="20210222 13:27:36.095"></status>
</kw>
<status status="FAIL" endtime="20210222 13:27:44.780" starttime="20210222 13:27:36.094"></status>
</kw>
<status status="FAIL" endtime="20210222 13:27:44.780" starttime="20210222 13:24:14.885"></status>
</kw>
<status status="FAIL" endtime="20210222 13:27:44.780" starttime="20210222 13:24:14.884"></status>
</kw>
<status status="FAIL" endtime="20210222 13:27:44.780" starttime="20210222 13:22:44.778"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:27:44.781" critical="yes" starttime="20210222 13:22:44.777">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210222 13:27:44.783" starttime="20210222 13:22:44.749"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210222 13:27:44.827" level="INFO">${random} = 59394</msg>
<status status="PASS" endtime="20210222 13:27:44.827" starttime="20210222 13:27:44.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210222 13:27:44.833" level="INFO">${prefix} = 59394</msg>
<status status="PASS" endtime="20210222 13:27:44.833" starttime="20210222 13:27:44.832"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.833" starttime="20210222 13:27:44.822"></status>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:44.861" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:44.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:44.877" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:27:44.878" starttime="20210222 13:27:44.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:44.884" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:27:44.886" starttime="20210222 13:27:44.880"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:44.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:44.889" starttime="20210222 13:27:44.886"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.891" starttime="20210222 13:27:44.846"></status>
</kw>
<msg timestamp="20210222 13:27:44.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:44.893" starttime="20210222 13:27:44.846"></status>
</kw>
<msg timestamp="20210222 13:27:44.894" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:27:44.894" starttime="20210222 13:27:44.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:27:44.900" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:27:44.900" starttime="20210222 13:27:44.895"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:44.920" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:44.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:44.973" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:27:44.973" starttime="20210222 13:27:44.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:44.977" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:27:44.978" starttime="20210222 13:27:44.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:44.979" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:44.979" starttime="20210222 13:27:44.978"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.979" starttime="20210222 13:27:44.910"></status>
</kw>
<msg timestamp="20210222 13:27:44.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:44.980" starttime="20210222 13:27:44.909"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.981" starttime="20210222 13:27:44.906"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.981" starttime="20210222 13:27:44.900"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.982" starttime="20210222 13:27:44.843"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:44.982" starttime="20210222 13:27:44.840"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:44.998" level="INFO">Running command 'ozone sh volume info o3://om:9862/59394-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:53.098" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:27:53.098" level="INFO">${output} = VOLUME_NOT_FOUND Volume 59394-rpcwoport is not found</msg>
<status status="PASS" endtime="20210222 13:27:53.098" starttime="20210222 13:27:44.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:53.101" level="INFO">VOLUME_NOT_FOUND Volume 59394-rpcwoport is not found</msg>
<status status="PASS" endtime="20210222 13:27:53.101" starttime="20210222 13:27:53.099"></status>
</kw>
<msg timestamp="20210222 13:27:53.102" level="INFO">${result} = VOLUME_NOT_FOUND Volume 59394-rpcwoport is not found</msg>
<status status="PASS" endtime="20210222 13:27:53.102" starttime="20210222 13:27:44.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210222 13:27:53.103" starttime="20210222 13:27:53.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:53.108" level="INFO">Running command 'ozone sh volume create o3://om:9862/59394-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:27:58.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:27:58.717" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:27:58.717" starttime="20210222 13:27:53.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:27:58.718" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:27:58.718" starttime="20210222 13:27:58.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:27:58.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:27:58.719" starttime="20210222 13:27:58.718"></status>
</kw>
<status status="PASS" endtime="20210222 13:27:58.720" starttime="20210222 13:27:53.104"></status>
</kw>
<msg timestamp="20210222 13:27:58.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:27:58.720" starttime="20210222 13:27:53.104"></status>
</kw>
<msg timestamp="20210222 13:27:58.720" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210222 13:27:58.720" starttime="20210222 13:27:53.103"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210222 13:27:58.721" starttime="20210222 13:27:58.720"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:27:58.725" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="59394-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:05.843" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:05.843" level="INFO">${output} = {
  "metadata": {},
  "name": "59394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210222 13:28:05.844" starttime="20210222 13:27:58.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:05.845" level="INFO">{
  "metadata": {},
  "name": "59394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:27:58.534Z",
  "modificationTime": "2021-02-22T13:27:58.534Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:28:05.846" starttime="20210222 13:28:05.844"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:05.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:05.847" starttime="20210222 13:28:05.846"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:05.847" starttime="20210222 13:27:58.722"></status>
</kw>
<msg timestamp="20210222 13:28:05.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:05.848" starttime="20210222 13:27:58.722"></status>
</kw>
<msg timestamp="20210222 13:28:05.848" level="INFO">${result} = {
  "metadata": {},
  "name": "59394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210222 13:28:05.848" starttime="20210222 13:27:58.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:28:05.849" starttime="20210222 13:28:05.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:05.857" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="59394-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:12.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:12.739" level="INFO">${output} = {
  "metadata": {},
  "name": "59394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210222 13:28:12.740" starttime="20210222 13:28:05.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:12.742" level="INFO">{
  "metadata": {},
  "name": "59394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:27:58.534Z",
  "modificationTime": "2021-02-22T13:27:58.534Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:28:12.742" starttime="20210222 13:28:12.740"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:12.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:12.744" starttime="20210222 13:28:12.743"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:12.745" starttime="20210222 13:28:05.852"></status>
</kw>
<msg timestamp="20210222 13:28:12.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:12.746" starttime="20210222 13:28:05.852"></status>
</kw>
<msg timestamp="20210222 13:28:12.746" level="INFO">${result} = {
  "metadata": {},
  "name": "59394-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210222 13:28:12.746" starttime="20210222 13:28:05.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:28:12.748" starttime="20210222 13:28:12.747"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:12.757" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/59394-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:19.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:19.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:28:19.793" starttime="20210222 13:28:12.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:19.794" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:28:19.795" starttime="20210222 13:28:19.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:19.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:19.795" starttime="20210222 13:28:19.795"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:19.796" starttime="20210222 13:28:12.751"></status>
</kw>
<msg timestamp="20210222 13:28:19.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:19.797" starttime="20210222 13:28:12.750"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:19.797" starttime="20210222 13:28:12.749"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:19.803" level="INFO">Running command 'ozone sh volume info o3://om:9862/59394-rpcwoport | jq -r '. | select(.name=="59394-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:28.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:28.153" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:28:28.153" starttime="20210222 13:28:19.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:28.155" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:28:28.155" starttime="20210222 13:28:28.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:28.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:28.156" starttime="20210222 13:28:28.156"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:28.157" starttime="20210222 13:28:19.799"></status>
</kw>
<msg timestamp="20210222 13:28:28.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:28.157" starttime="20210222 13:28:19.799"></status>
</kw>
<msg timestamp="20210222 13:28:28.158" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:28:28.158" starttime="20210222 13:28:19.798"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:28:28.158" starttime="20210222 13:28:28.158"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:28.164" level="INFO">Running command 'ozone sh bucket create o3://om:9862/59394-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:34.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:34.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:28:34.894" starttime="20210222 13:28:28.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:34.895" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:28:34.895" starttime="20210222 13:28:34.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:34.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:34.896" starttime="20210222 13:28:34.896"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:34.896" starttime="20210222 13:28:28.160"></status>
</kw>
<msg timestamp="20210222 13:28:34.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:34.897" starttime="20210222 13:28:28.160"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:34.897" starttime="20210222 13:28:28.159"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:34.902" level="INFO">Running command 'ozone sh bucket info o3://om:9862/59394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:41.664" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:41.664" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210222 13:28:41.664" starttime="20210222 13:28:34.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:41.684" level="INFO">DISK</msg>
<status status="PASS" endtime="20210222 13:28:41.684" starttime="20210222 13:28:41.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:41.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:41.686" starttime="20210222 13:28:41.684"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:41.686" starttime="20210222 13:28:34.899"></status>
</kw>
<msg timestamp="20210222 13:28:41.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:41.687" starttime="20210222 13:28:34.899"></status>
</kw>
<msg timestamp="20210222 13:28:41.687" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210222 13:28:41.687" starttime="20210222 13:28:34.897"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210222 13:28:41.688" starttime="20210222 13:28:41.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:41.694" level="INFO">Running command 'ozone sh bucket info o3://om:9862/59394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:48.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:48.786" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:28:48.786" starttime="20210222 13:28:41.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:48.787" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:28:48.788" starttime="20210222 13:28:48.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:48.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:48.788" starttime="20210222 13:28:48.788"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:48.789" starttime="20210222 13:28:41.690"></status>
</kw>
<msg timestamp="20210222 13:28:48.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:48.789" starttime="20210222 13:28:41.690"></status>
</kw>
<msg timestamp="20210222 13:28:48.789" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:28:48.789" starttime="20210222 13:28:41.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:28:48.791" starttime="20210222 13:28:48.790"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:48.796" level="INFO">Running command 'ozone sh bucket info o3://om:9862/59394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:28:55.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:28:55.973" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210222 13:28:55.974" starttime="20210222 13:28:48.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:28:55.976" level="INFO">100</msg>
<status status="PASS" endtime="20210222 13:28:55.976" starttime="20210222 13:28:55.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:28:55.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:28:55.978" starttime="20210222 13:28:55.977"></status>
</kw>
<status status="PASS" endtime="20210222 13:28:55.978" starttime="20210222 13:28:48.792"></status>
</kw>
<msg timestamp="20210222 13:28:55.978" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:28:55.979" starttime="20210222 13:28:48.792"></status>
</kw>
<msg timestamp="20210222 13:28:55.979" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210222 13:28:55.980" starttime="20210222 13:28:48.791"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210222 13:28:55.981" starttime="20210222 13:28:55.980"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:28:55.990" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/59394-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:29:02.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:29:02.682" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:29:02.682" starttime="20210222 13:28:55.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:29:02.686" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:29:02.686" starttime="20210222 13:29:02.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:29:02.687" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:29:02.687" starttime="20210222 13:29:02.686"></status>
</kw>
<status status="PASS" endtime="20210222 13:29:02.687" starttime="20210222 13:28:55.984"></status>
</kw>
<msg timestamp="20210222 13:29:02.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:29:02.687" starttime="20210222 13:28:55.983"></status>
</kw>
<status status="PASS" endtime="20210222 13:29:02.688" starttime="20210222 13:28:55.981"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:29:02.694" level="INFO">Running command 'ozone sh bucket info o3://om:9862/59394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:29:09.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:29:09.542" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:29:09.542" starttime="20210222 13:29:02.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:29:09.544" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210222 13:29:09.544" starttime="20210222 13:29:09.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:29:09.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:29:09.545" starttime="20210222 13:29:09.544"></status>
</kw>
<status status="PASS" endtime="20210222 13:29:09.545" starttime="20210222 13:29:02.690"></status>
</kw>
<msg timestamp="20210222 13:29:09.545" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:29:09.545" starttime="20210222 13:29:02.690"></status>
</kw>
<msg timestamp="20210222 13:29:09.546" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:29:09.546" starttime="20210222 13:29:02.688"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210222 13:29:09.547" starttime="20210222 13:29:09.546"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:29:09.553" level="INFO">Running command 'ozone sh bucket info o3://om:9862/59394-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:29:16.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:29:16.638" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210222 13:29:16.638" starttime="20210222 13:29:09.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:29:16.640" level="INFO">1000</msg>
<status status="PASS" endtime="20210222 13:29:16.640" starttime="20210222 13:29:16.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:29:16.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:29:16.642" starttime="20210222 13:29:16.641"></status>
</kw>
<status status="PASS" endtime="20210222 13:29:16.642" starttime="20210222 13:29:09.549"></status>
</kw>
<msg timestamp="20210222 13:29:16.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:29:16.643" starttime="20210222 13:29:09.549"></status>
</kw>
<msg timestamp="20210222 13:29:16.643" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210222 13:29:16.643" starttime="20210222 13:29:09.547"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210222 13:29:16.644" starttime="20210222 13:29:16.644"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:29:16.651" level="INFO">Running command 'ozone sh bucket list o3://om:9862/59394-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:29:24.190" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:29:24.190" level="INFO">${output} = 59394-rpcwoport</msg>
<status status="PASS" endtime="20210222 13:29:24.191" starttime="20210222 13:29:16.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:29:24.192" level="INFO">59394-rpcwoport</msg>
<status status="PASS" endtime="20210222 13:29:24.192" starttime="20210222 13:29:24.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:29:24.193" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:29:24.193" starttime="20210222 13:29:24.192"></status>
</kw>
<status status="PASS" endtime="20210222 13:29:24.193" starttime="20210222 13:29:16.647"></status>
</kw>
<msg timestamp="20210222 13:29:24.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:29:24.193" starttime="20210222 13:29:16.646"></status>
</kw>
<msg timestamp="20210222 13:29:24.194" level="INFO">${result} = 59394-rpcwoport</msg>
<status status="PASS" endtime="20210222 13:29:24.194" starttime="20210222 13:29:16.645"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:29:24.194" starttime="20210222 13:29:24.194"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:29:24.202" level="INFO">Running command 'ozone sh key put o3://om:9862/59394-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:35.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:32:35.119" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:32:35.119" starttime="20210222 13:29:24.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:32:35.121" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:32:35.121" starttime="20210222 13:32:35.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:32:35.122" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:32:35.122" starttime="20210222 13:32:35.122"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:35.123" starttime="20210222 13:29:24.197"></status>
</kw>
<msg timestamp="20210222 13:32:35.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:32:35.123" starttime="20210222 13:29:24.196"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:35.123" starttime="20210222 13:29:24.196"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:35.127" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:35.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:32:35.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:32:35.132" starttime="20210222 13:32:35.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:32:35.133" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:32:35.133" starttime="20210222 13:32:35.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:32:35.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:32:35.135" starttime="20210222 13:32:35.134"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:35.135" starttime="20210222 13:32:35.124"></status>
</kw>
<msg timestamp="20210222 13:32:35.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:32:35.136" starttime="20210222 13:32:35.124"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:35.136" starttime="20210222 13:32:35.123"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:35.141" level="INFO">Running command 'ozone sh key get o3://om:9862/59394-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:44.834" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:32:44.835" starttime="20210222 13:32:35.139"></status>
</kw>
<status status="FAIL" endtime="20210222 13:32:44.835" starttime="20210222 13:32:35.138"></status>
</kw>
<msg timestamp="20210222 13:32:44.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:32:44.843" starttime="20210222 13:32:35.137"></status>
</kw>
<status status="FAIL" endtime="20210222 13:32:44.844" starttime="20210222 13:32:35.137"></status>
</kw>
<status status="FAIL" endtime="20210222 13:32:44.845" starttime="20210222 13:29:24.195"></status>
</kw>
<status status="FAIL" endtime="20210222 13:32:44.846" starttime="20210222 13:29:24.194"></status>
</kw>
<status status="FAIL" endtime="20210222 13:32:44.847" starttime="20210222 13:27:44.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:32:44.848" critical="yes" starttime="20210222 13:27:44.833">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:44.864" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:44.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:32:44.869" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:32:44.869" starttime="20210222 13:32:44.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:32:44.871" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:32:44.872" starttime="20210222 13:32:44.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:32:44.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:32:44.873" starttime="20210222 13:32:44.872"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:44.874" starttime="20210222 13:32:44.859"></status>
</kw>
<msg timestamp="20210222 13:32:44.874" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:32:44.874" starttime="20210222 13:32:44.858"></status>
</kw>
<msg timestamp="20210222 13:32:44.875" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:32:44.875" starttime="20210222 13:32:44.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:32:44.876" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:32:44.876" starttime="20210222 13:32:44.875"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:44.884" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:44.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:32:44.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:32:44.894" starttime="20210222 13:32:44.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:32:44.896" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:32:44.896" starttime="20210222 13:32:44.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:32:44.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:32:44.898" starttime="20210222 13:32:44.897"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:44.899" starttime="20210222 13:32:44.879"></status>
</kw>
<msg timestamp="20210222 13:32:44.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:32:44.899" starttime="20210222 13:32:44.879"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:44.899" starttime="20210222 13:32:44.877"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:44.900" starttime="20210222 13:32:44.876"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:44.900" starttime="20210222 13:32:44.856"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:44.900" starttime="20210222 13:32:44.854"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:44.908" level="INFO">Running command 'ozone sh volume create o3://om:9862/59394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:51.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:32:51.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:32:51.503" starttime="20210222 13:32:44.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:32:51.506" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:32:51.506" starttime="20210222 13:32:51.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:32:51.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:32:51.508" starttime="20210222 13:32:51.507"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:51.509" starttime="20210222 13:32:44.905"></status>
</kw>
<msg timestamp="20210222 13:32:51.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:32:51.510" starttime="20210222 13:32:44.904"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:51.510" starttime="20210222 13:32:44.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:51.519" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/59394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:32:58.494" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:32:58.495" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:32:58.495" starttime="20210222 13:32:51.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:32:58.496" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:32:58.496" starttime="20210222 13:32:58.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:32:58.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:32:58.497" starttime="20210222 13:32:58.496"></status>
</kw>
<status status="PASS" endtime="20210222 13:32:58.498" starttime="20210222 13:32:51.513"></status>
</kw>
<msg timestamp="20210222 13:32:58.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:32:58.498" starttime="20210222 13:32:51.512"></status>
</kw>
<msg timestamp="20210222 13:32:58.499" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:32:58.499" starttime="20210222 13:32:51.511"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:32:58.502" starttime="20210222 13:32:58.500"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:32:58.511" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/59394-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:05.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:05.198" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210222 13:33:05.198" starttime="20210222 13:32:58.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:05.200" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210222 13:33:05.200" starttime="20210222 13:33:05.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:05.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:05.202" starttime="20210222 13:33:05.201"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:05.202" starttime="20210222 13:32:58.507"></status>
</kw>
<msg timestamp="20210222 13:33:05.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:05.203" starttime="20210222 13:32:58.504"></status>
</kw>
<msg timestamp="20210222 13:33:05.203" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210222 13:33:05.204" starttime="20210222 13:32:58.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:05.210" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/59394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:12.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:12.448" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:33:12.448" starttime="20210222 13:33:05.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:12.450" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:33:12.451" starttime="20210222 13:33:12.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:12.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:12.452" starttime="20210222 13:33:12.451"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:12.453" starttime="20210222 13:33:05.206"></status>
</kw>
<msg timestamp="20210222 13:33:12.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:12.454" starttime="20210222 13:33:05.205"></status>
</kw>
<msg timestamp="20210222 13:33:12.454" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:33:12.455" starttime="20210222 13:33:05.204"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:33:12.457" starttime="20210222 13:33:12.455"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:12.466" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/59394-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:19.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:19.038" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210222 13:33:19.038" starttime="20210222 13:33:12.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:19.039" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210222 13:33:19.039" starttime="20210222 13:33:19.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:19.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:19.040" starttime="20210222 13:33:19.040"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:19.041" starttime="20210222 13:33:12.460"></status>
</kw>
<msg timestamp="20210222 13:33:19.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:19.042" starttime="20210222 13:33:12.459"></status>
</kw>
<msg timestamp="20210222 13:33:19.042" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210222 13:33:19.042" starttime="20210222 13:33:12.458"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:19.049" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/59394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:24.514" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:24.514" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:33:24.514" starttime="20210222 13:33:19.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:24.515" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:33:24.515" starttime="20210222 13:33:24.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:24.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:24.517" starttime="20210222 13:33:24.516"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:24.518" starttime="20210222 13:33:19.045"></status>
</kw>
<msg timestamp="20210222 13:33:24.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:24.518" starttime="20210222 13:33:19.044"></status>
</kw>
<msg timestamp="20210222 13:33:24.519" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:33:24.519" starttime="20210222 13:33:19.043"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:33:24.522" starttime="20210222 13:33:24.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:24.530" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/59394-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:31.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:31.136" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:33:31.136" starttime="20210222 13:33:24.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:31.138" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:33:31.138" starttime="20210222 13:33:31.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:31.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:31.139" starttime="20210222 13:33:31.138"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:31.139" starttime="20210222 13:33:24.525"></status>
</kw>
<msg timestamp="20210222 13:33:31.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:31.139" starttime="20210222 13:33:24.524"></status>
</kw>
<msg timestamp="20210222 13:33:31.140" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:33:31.140" starttime="20210222 13:33:24.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:31.144" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/59394-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:37.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:37.795" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210222 13:33:37.795" starttime="20210222 13:33:31.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:37.796" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:33:37.797" starttime="20210222 13:33:37.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:37.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:37.797" starttime="20210222 13:33:37.797"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.798" starttime="20210222 13:33:31.141"></status>
</kw>
<msg timestamp="20210222 13:33:37.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:37.798" starttime="20210222 13:33:31.141"></status>
</kw>
<msg timestamp="20210222 13:33:37.798" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210222 13:33:37.798" starttime="20210222 13:33:31.140"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:33:37.799" starttime="20210222 13:33:37.799"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:33:37.800" starttime="20210222 13:33:37.799"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.801" starttime="20210222 13:32:44.901"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:33:37.801" critical="yes" starttime="20210222 13:32:44.852"></status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:37.811" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:37.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:37.814" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:33:37.815" starttime="20210222 13:33:37.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:37.816" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:33:37.816" starttime="20210222 13:33:37.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:37.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:37.817" starttime="20210222 13:33:37.816"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.817" starttime="20210222 13:33:37.807"></status>
</kw>
<msg timestamp="20210222 13:33:37.817" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:37.818" starttime="20210222 13:33:37.807"></status>
</kw>
<msg timestamp="20210222 13:33:37.818" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:33:37.818" starttime="20210222 13:33:37.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:33:37.819" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:33:37.819" starttime="20210222 13:33:37.818"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:37.825" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:37.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:37.882" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:33:37.882" starttime="20210222 13:33:37.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:37.884" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:33:37.884" starttime="20210222 13:33:37.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:37.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:37.885" starttime="20210222 13:33:37.884"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.886" starttime="20210222 13:33:37.821"></status>
</kw>
<msg timestamp="20210222 13:33:37.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:37.886" starttime="20210222 13:33:37.821"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.886" starttime="20210222 13:33:37.820"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.886" starttime="20210222 13:33:37.819"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.886" starttime="20210222 13:33:37.805"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:37.887" starttime="20210222 13:33:37.804"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:37.891" level="INFO">Running command 'ozone sh bucket create o3://om:9862/59394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:44.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:44.838" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:33:44.839" starttime="20210222 13:33:37.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:44.843" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:33:44.843" starttime="20210222 13:33:44.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:44.844" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:44.845" starttime="20210222 13:33:44.843"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:44.846" starttime="20210222 13:33:37.888"></status>
</kw>
<msg timestamp="20210222 13:33:44.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:44.846" starttime="20210222 13:33:37.888"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:44.847" starttime="20210222 13:33:37.887"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:44.854" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/59394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:51.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:51.718" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:33:51.718" starttime="20210222 13:33:44.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:51.720" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:33:51.720" starttime="20210222 13:33:51.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:51.721" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:51.721" starttime="20210222 13:33:51.720"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:51.722" starttime="20210222 13:33:44.850"></status>
</kw>
<msg timestamp="20210222 13:33:51.722" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:51.722" starttime="20210222 13:33:44.849"></status>
</kw>
<msg timestamp="20210222 13:33:51.722" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:33:51.722" starttime="20210222 13:33:44.847"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:33:51.723" starttime="20210222 13:33:51.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:51.727" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/59394-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:33:57.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:33:57.827" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210222 13:33:57.827" starttime="20210222 13:33:51.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:33:57.829" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210222 13:33:57.830" starttime="20210222 13:33:57.828"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:33:57.831" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:33:57.831" starttime="20210222 13:33:57.830"></status>
</kw>
<status status="PASS" endtime="20210222 13:33:57.832" starttime="20210222 13:33:51.725"></status>
</kw>
<msg timestamp="20210222 13:33:57.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:33:57.832" starttime="20210222 13:33:51.724"></status>
</kw>
<msg timestamp="20210222 13:33:57.833" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210222 13:33:57.833" starttime="20210222 13:33:51.723"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:33:57.841" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/59394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:04.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:04.760" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:34:04.760" starttime="20210222 13:33:57.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:04.762" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:34:04.762" starttime="20210222 13:34:04.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:04.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:04.763" starttime="20210222 13:34:04.762"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:04.763" starttime="20210222 13:33:57.837"></status>
</kw>
<msg timestamp="20210222 13:34:04.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:04.763" starttime="20210222 13:33:57.836"></status>
</kw>
<msg timestamp="20210222 13:34:04.763" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:34:04.763" starttime="20210222 13:33:57.835"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210222 13:34:04.765" starttime="20210222 13:34:04.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:04.771" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/59394-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:11.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:11.116" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210222 13:34:11.117" starttime="20210222 13:34:04.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:11.118" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210222 13:34:11.118" starttime="20210222 13:34:11.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:11.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:11.119" starttime="20210222 13:34:11.118"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:11.120" starttime="20210222 13:34:04.766"></status>
</kw>
<msg timestamp="20210222 13:34:11.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:11.120" starttime="20210222 13:34:04.766"></status>
</kw>
<msg timestamp="20210222 13:34:11.120" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210222 13:34:11.120" starttime="20210222 13:34:04.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:11.126" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/59394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:17.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:17.831" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:34:17.831" starttime="20210222 13:34:11.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:17.832" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:34:17.833" starttime="20210222 13:34:17.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:17.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:17.834" starttime="20210222 13:34:17.833"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:17.834" starttime="20210222 13:34:11.121"></status>
</kw>
<msg timestamp="20210222 13:34:17.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:17.834" starttime="20210222 13:34:11.121"></status>
</kw>
<msg timestamp="20210222 13:34:17.835" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:34:17.835" starttime="20210222 13:34:11.120"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210222 13:34:17.836" starttime="20210222 13:34:17.835"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:17.842" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/59394-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:24.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:24.195" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:34:24.195" starttime="20210222 13:34:17.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:24.196" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:34:24.197" starttime="20210222 13:34:24.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:24.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:24.198" starttime="20210222 13:34:24.197"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:24.198" starttime="20210222 13:34:17.838"></status>
</kw>
<msg timestamp="20210222 13:34:24.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:24.198" starttime="20210222 13:34:17.837"></status>
</kw>
<msg timestamp="20210222 13:34:24.199" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:34:24.199" starttime="20210222 13:34:17.836"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:24.204" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/59394-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:30.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:30.966" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210222 13:34:30.966" starttime="20210222 13:34:24.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:30.967" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:34:30.967" starttime="20210222 13:34:30.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:30.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:30.968" starttime="20210222 13:34:30.967"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:30.968" starttime="20210222 13:34:24.200"></status>
</kw>
<msg timestamp="20210222 13:34:30.969" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:30.969" starttime="20210222 13:34:24.200"></status>
</kw>
<msg timestamp="20210222 13:34:30.969" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210222 13:34:30.969" starttime="20210222 13:34:24.199"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210222 13:34:30.970" starttime="20210222 13:34:30.970"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:34:30.971" starttime="20210222 13:34:30.970"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:30.971" starttime="20210222 13:33:37.887"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:34:30.971" critical="yes" starttime="20210222 13:33:37.802"></status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:30.980" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:30.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:30.983" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:34:30.983" starttime="20210222 13:34:30.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:30.984" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:34:30.984" starttime="20210222 13:34:30.983"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:30.985" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:30.985" starttime="20210222 13:34:30.984"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:30.985" starttime="20210222 13:34:30.976"></status>
</kw>
<msg timestamp="20210222 13:34:30.985" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:30.986" starttime="20210222 13:34:30.976"></status>
</kw>
<msg timestamp="20210222 13:34:30.986" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:34:30.986" starttime="20210222 13:34:30.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:34:30.987" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:34:30.987" starttime="20210222 13:34:30.986"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:30.992" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:34:31.001" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:34:31.001" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:34:31.001" starttime="20210222 13:34:30.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:34:31.002" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:34:31.002" starttime="20210222 13:34:31.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:34:31.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:34:31.003" starttime="20210222 13:34:31.003"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:31.004" starttime="20210222 13:34:30.989"></status>
</kw>
<msg timestamp="20210222 13:34:31.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:34:31.004" starttime="20210222 13:34:30.988"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:31.004" starttime="20210222 13:34:30.988"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:31.004" starttime="20210222 13:34:30.987"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:31.005" starttime="20210222 13:34:30.974"></status>
</kw>
<status status="PASS" endtime="20210222 13:34:31.005" starttime="20210222 13:34:30.974"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:34:31.010" level="INFO">Running command 'ozone sh key put o3://om:9862/59394-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:37:41.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:37:41.956" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:37:41.957" starttime="20210222 13:34:31.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:37:41.962" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:37:41.962" starttime="20210222 13:37:41.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:37:41.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:37:41.963" starttime="20210222 13:37:41.962"></status>
</kw>
<status status="PASS" endtime="20210222 13:37:41.963" starttime="20210222 13:34:31.007"></status>
</kw>
<msg timestamp="20210222 13:37:41.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:37:41.963" starttime="20210222 13:34:31.006"></status>
</kw>
<status status="PASS" endtime="20210222 13:37:41.964" starttime="20210222 13:34:31.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:37:41.969" level="INFO">Running command 'ozone sh key getacl o3://om:9862/59394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:37:49.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:37:49.301" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:37:49.301" starttime="20210222 13:37:41.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:37:49.303" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:37:49.303" starttime="20210222 13:37:49.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:37:49.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:37:49.305" starttime="20210222 13:37:49.304"></status>
</kw>
<status status="PASS" endtime="20210222 13:37:49.306" starttime="20210222 13:37:41.965"></status>
</kw>
<msg timestamp="20210222 13:37:49.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:37:49.306" starttime="20210222 13:37:41.965"></status>
</kw>
<msg timestamp="20210222 13:37:49.307" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:37:49.307" starttime="20210222 13:37:41.964"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:37:49.309" starttime="20210222 13:37:49.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:37:49.316" level="INFO">Running command 'ozone sh key addacl o3://om:9862/59394-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:37:55.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:37:55.979" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:37:55.979" starttime="20210222 13:37:49.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:37:55.981" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:37:55.981" starttime="20210222 13:37:55.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:37:55.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:37:55.982" starttime="20210222 13:37:55.981"></status>
</kw>
<status status="PASS" endtime="20210222 13:37:55.982" starttime="20210222 13:37:49.311"></status>
</kw>
<msg timestamp="20210222 13:37:55.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:37:55.983" starttime="20210222 13:37:49.310"></status>
</kw>
<msg timestamp="20210222 13:37:55.983" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210222 13:37:55.983" starttime="20210222 13:37:49.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:37:55.988" level="INFO">Running command 'ozone sh key getacl o3://om:9862/59394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:02.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:02.331" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:38:02.331" starttime="20210222 13:37:55.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:02.334" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:38:02.335" starttime="20210222 13:38:02.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:02.336" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:02.337" starttime="20210222 13:38:02.335"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:02.338" starttime="20210222 13:37:55.985"></status>
</kw>
<msg timestamp="20210222 13:38:02.338" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:02.338" starttime="20210222 13:37:55.984"></status>
</kw>
<msg timestamp="20210222 13:38:02.339" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:38:02.339" starttime="20210222 13:37:55.983"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:02.342" starttime="20210222 13:38:02.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:02.347" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/59394-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:09.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:09.257" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210222 13:38:09.257" starttime="20210222 13:38:02.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:09.259" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210222 13:38:09.259" starttime="20210222 13:38:09.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:09.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:09.261" starttime="20210222 13:38:09.260"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:09.261" starttime="20210222 13:38:02.343"></status>
</kw>
<msg timestamp="20210222 13:38:09.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:09.262" starttime="20210222 13:38:02.343"></status>
</kw>
<msg timestamp="20210222 13:38:09.262" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210222 13:38:09.262" starttime="20210222 13:38:02.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:09.268" level="INFO">Running command 'ozone sh key getacl o3://om:9862/59394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:15.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:15.812" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:38:15.812" starttime="20210222 13:38:09.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:15.814" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:38:15.814" starttime="20210222 13:38:15.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:15.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:15.815" starttime="20210222 13:38:15.814"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:15.815" starttime="20210222 13:38:09.265"></status>
</kw>
<msg timestamp="20210222 13:38:15.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:15.815" starttime="20210222 13:38:09.263"></status>
</kw>
<msg timestamp="20210222 13:38:15.816" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210222 13:38:15.816" starttime="20210222 13:38:09.262"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:15.816" starttime="20210222 13:38:15.816"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:15.821" level="INFO">Running command 'ozone sh key setacl o3://om:9862/59394-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:21.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:21.690" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:38:21.690" starttime="20210222 13:38:15.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:21.691" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:38:21.691" starttime="20210222 13:38:21.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:21.692" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:21.692" starttime="20210222 13:38:21.691"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:21.692" starttime="20210222 13:38:15.818"></status>
</kw>
<msg timestamp="20210222 13:38:21.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:21.693" starttime="20210222 13:38:15.818"></status>
</kw>
<msg timestamp="20210222 13:38:21.693" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210222 13:38:21.693" starttime="20210222 13:38:15.817"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:21.698" level="INFO">Running command 'ozone sh key getacl o3://om:9862/59394-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:29.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:29.289" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210222 13:38:29.289" starttime="20210222 13:38:21.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:29.290" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210222 13:38:29.290" starttime="20210222 13:38:29.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:29.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:29.291" starttime="20210222 13:38:29.291"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.292" starttime="20210222 13:38:21.695"></status>
</kw>
<msg timestamp="20210222 13:38:29.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:29.292" starttime="20210222 13:38:21.694"></status>
</kw>
<msg timestamp="20210222 13:38:29.292" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210222 13:38:29.292" starttime="20210222 13:38:21.693"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:29.293" starttime="20210222 13:38:29.293"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:29.295" starttime="20210222 13:38:29.294"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.295" starttime="20210222 13:34:31.005"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210222 13:38:29.295" critical="yes" starttime="20210222 13:34:30.973"></status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:29.309" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:29.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:29.312" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:38:29.312" starttime="20210222 13:38:29.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:29.314" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:38:29.314" starttime="20210222 13:38:29.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:29.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:29.315" starttime="20210222 13:38:29.314"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.315" starttime="20210222 13:38:29.302"></status>
</kw>
<msg timestamp="20210222 13:38:29.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:29.316" starttime="20210222 13:38:29.301"></status>
</kw>
<msg timestamp="20210222 13:38:29.316" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:38:29.316" starttime="20210222 13:38:29.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:38:29.317" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:38:29.317" starttime="20210222 13:38:29.316"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:29.323" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:29.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:29.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:38:29.334" starttime="20210222 13:38:29.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:29.335" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:38:29.335" starttime="20210222 13:38:29.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:29.337" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:29.337" starttime="20210222 13:38:29.336"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.338" starttime="20210222 13:38:29.320"></status>
</kw>
<msg timestamp="20210222 13:38:29.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:29.339" starttime="20210222 13:38:29.319"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.339" starttime="20210222 13:38:29.318"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.339" starttime="20210222 13:38:29.318"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.340" starttime="20210222 13:38:29.299"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:29.340" starttime="20210222 13:38:29.298"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:29.344" level="INFO">Running command 'ozone sh volume info o3:///59394-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:35.582" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:38:35.582" level="INFO">${output} = VOLUME_NOT_FOUND Volume 59394-rpcwport is not found</msg>
<status status="PASS" endtime="20210222 13:38:35.583" starttime="20210222 13:38:29.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:35.584" level="INFO">VOLUME_NOT_FOUND Volume 59394-rpcwport is not found</msg>
<status status="PASS" endtime="20210222 13:38:35.584" starttime="20210222 13:38:35.583"></status>
</kw>
<msg timestamp="20210222 13:38:35.584" level="INFO">${result} = VOLUME_NOT_FOUND Volume 59394-rpcwport is not found</msg>
<status status="PASS" endtime="20210222 13:38:35.584" starttime="20210222 13:38:29.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:35.585" starttime="20210222 13:38:35.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:35.592" level="INFO">Running command 'ozone sh volume create o3:///59394-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:42.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:42.383" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:38:42.383" starttime="20210222 13:38:35.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:42.387" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:38:42.388" starttime="20210222 13:38:42.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:42.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:42.388" starttime="20210222 13:38:42.388"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:42.389" starttime="20210222 13:38:35.586"></status>
</kw>
<msg timestamp="20210222 13:38:42.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:42.389" starttime="20210222 13:38:35.586"></status>
</kw>
<msg timestamp="20210222 13:38:42.389" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210222 13:38:42.389" starttime="20210222 13:38:35.585"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:42.390" starttime="20210222 13:38:42.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:42.395" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="59394-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:48.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:48.680" level="INFO">${output} = {
  "metadata": {},
  "name": "59394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:38:48.680" starttime="20210222 13:38:42.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:48.681" level="INFO">{
  "metadata": {},
  "name": "59394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:38:42.110Z",
  "modificationTime": "2021-02-22T13:38:42.110Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:38:48.681" starttime="20210222 13:38:48.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:48.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:48.684" starttime="20210222 13:38:48.681"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:48.684" starttime="20210222 13:38:42.391"></status>
</kw>
<msg timestamp="20210222 13:38:48.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:48.685" starttime="20210222 13:38:42.391"></status>
</kw>
<msg timestamp="20210222 13:38:48.685" level="INFO">${result} = {
  "metadata": {},
  "name": "59394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:38:48.686" starttime="20210222 13:38:42.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:48.687" starttime="20210222 13:38:48.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:48.693" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="59394-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:38:55.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:38:55.794" level="INFO">${output} = {
  "metadata": {},
  "name": "59394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:38:55.794" starttime="20210222 13:38:48.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:38:55.796" level="INFO">{
  "metadata": {},
  "name": "59394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:38:42.110Z",
  "modificationTime": "2021-02-22T13:38:42.110Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:38:55.797" starttime="20210222 13:38:55.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:38:55.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:38:55.798" starttime="20210222 13:38:55.797"></status>
</kw>
<status status="PASS" endtime="20210222 13:38:55.798" starttime="20210222 13:38:48.689"></status>
</kw>
<msg timestamp="20210222 13:38:55.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:38:55.799" starttime="20210222 13:38:48.689"></status>
</kw>
<msg timestamp="20210222 13:38:55.799" level="INFO">${result} = {
  "metadata": {},
  "name": "59394-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210222 13:38:55.800" starttime="20210222 13:38:48.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:38:55.801" starttime="20210222 13:38:55.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:38:55.809" level="INFO">Running command 'ozone sh volume setquota o3:///59394-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:03.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:03.034" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:39:03.034" starttime="20210222 13:38:55.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:03.036" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:39:03.036" starttime="20210222 13:39:03.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:03.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:03.036" starttime="20210222 13:39:03.036"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:03.037" starttime="20210222 13:38:55.804"></status>
</kw>
<msg timestamp="20210222 13:39:03.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:03.037" starttime="20210222 13:38:55.803"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:03.037" starttime="20210222 13:38:55.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:03.044" level="INFO">Running command 'ozone sh volume info o3:///59394-rpcwport | jq -r '. | select(.name=="59394-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:08.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:08.491" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:39:08.491" starttime="20210222 13:39:03.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:08.493" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:39:08.493" starttime="20210222 13:39:08.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:08.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:08.495" starttime="20210222 13:39:08.493"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:08.495" starttime="20210222 13:39:03.039"></status>
</kw>
<msg timestamp="20210222 13:39:08.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:08.495" starttime="20210222 13:39:03.039"></status>
</kw>
<msg timestamp="20210222 13:39:08.496" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:39:08.496" starttime="20210222 13:39:03.038"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:39:08.497" starttime="20210222 13:39:08.496"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:08.504" level="INFO">Running command 'ozone sh bucket create o3:///59394-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:14.997" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:14.997" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:39:14.997" starttime="20210222 13:39:08.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:14.999" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:39:14.999" starttime="20210222 13:39:14.998"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:15.000" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:15.000" starttime="20210222 13:39:14.999"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:15.000" starttime="20210222 13:39:08.499"></status>
</kw>
<msg timestamp="20210222 13:39:15.000" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:15.001" starttime="20210222 13:39:08.498"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:15.001" starttime="20210222 13:39:08.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:15.005" level="INFO">Running command 'ozone sh bucket info o3:///59394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:21.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:21.641" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210222 13:39:21.642" starttime="20210222 13:39:15.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:21.643" level="INFO">DISK</msg>
<status status="PASS" endtime="20210222 13:39:21.643" starttime="20210222 13:39:21.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:21.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:21.644" starttime="20210222 13:39:21.643"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:21.644" starttime="20210222 13:39:15.003"></status>
</kw>
<msg timestamp="20210222 13:39:21.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:21.645" starttime="20210222 13:39:15.002"></status>
</kw>
<msg timestamp="20210222 13:39:21.645" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210222 13:39:21.645" starttime="20210222 13:39:15.001"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210222 13:39:21.647" starttime="20210222 13:39:21.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:21.654" level="INFO">Running command 'ozone sh bucket info o3:///59394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:28.810" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:28.810" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:39:28.810" starttime="20210222 13:39:21.651"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:28.811" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:39:28.811" starttime="20210222 13:39:28.810"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:28.812" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:28.812" starttime="20210222 13:39:28.812"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:28.812" starttime="20210222 13:39:21.649"></status>
</kw>
<msg timestamp="20210222 13:39:28.813" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:28.813" starttime="20210222 13:39:21.649"></status>
</kw>
<msg timestamp="20210222 13:39:28.813" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:39:28.813" starttime="20210222 13:39:21.647"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:39:28.814" starttime="20210222 13:39:28.813"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:28.818" level="INFO">Running command 'ozone sh bucket info o3:///59394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:36.091" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:36.092" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210222 13:39:36.092" starttime="20210222 13:39:28.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:36.093" level="INFO">100</msg>
<status status="PASS" endtime="20210222 13:39:36.093" starttime="20210222 13:39:36.092"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:36.093" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:36.094" starttime="20210222 13:39:36.093"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:36.094" starttime="20210222 13:39:28.815"></status>
</kw>
<msg timestamp="20210222 13:39:36.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:36.095" starttime="20210222 13:39:28.815"></status>
</kw>
<msg timestamp="20210222 13:39:36.096" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210222 13:39:36.096" starttime="20210222 13:39:28.814"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210222 13:39:36.098" starttime="20210222 13:39:36.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:36.105" level="INFO">Running command 'ozone sh bucket setquota o3:///59394-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:43.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:43.199" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:39:43.199" starttime="20210222 13:39:36.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:43.200" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:39:43.200" starttime="20210222 13:39:43.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:43.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:43.201" starttime="20210222 13:39:43.201"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:43.201" starttime="20210222 13:39:36.100"></status>
</kw>
<msg timestamp="20210222 13:39:43.201" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:43.202" starttime="20210222 13:39:36.099"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:43.202" starttime="20210222 13:39:36.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:43.209" level="INFO">Running command 'ozone sh bucket info o3:///59394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:50.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:50.256" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:39:50.256" starttime="20210222 13:39:43.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:50.258" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210222 13:39:50.258" starttime="20210222 13:39:50.257"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:50.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:50.259" starttime="20210222 13:39:50.258"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:50.259" starttime="20210222 13:39:43.204"></status>
</kw>
<msg timestamp="20210222 13:39:50.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:50.260" starttime="20210222 13:39:43.203"></status>
</kw>
<msg timestamp="20210222 13:39:50.260" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:39:50.260" starttime="20210222 13:39:43.202"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210222 13:39:50.261" starttime="20210222 13:39:50.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:50.266" level="INFO">Running command 'ozone sh bucket info o3:///59394-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:39:57.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:39:57.371" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210222 13:39:57.371" starttime="20210222 13:39:50.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:39:57.373" level="INFO">1000</msg>
<status status="PASS" endtime="20210222 13:39:57.373" starttime="20210222 13:39:57.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:39:57.375" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:39:57.375" starttime="20210222 13:39:57.373"></status>
</kw>
<status status="PASS" endtime="20210222 13:39:57.375" starttime="20210222 13:39:50.262"></status>
</kw>
<msg timestamp="20210222 13:39:57.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:39:57.376" starttime="20210222 13:39:50.262"></status>
</kw>
<msg timestamp="20210222 13:39:57.376" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210222 13:39:57.377" starttime="20210222 13:39:50.261"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210222 13:39:57.378" starttime="20210222 13:39:57.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:39:57.385" level="INFO">Running command 'ozone sh bucket list o3:///59394-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:40:02.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:40:02.420" level="INFO">${output} = 59394-rpcwport</msg>
<status status="PASS" endtime="20210222 13:40:02.420" starttime="20210222 13:39:57.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:40:02.423" level="INFO">59394-rpcwport</msg>
<status status="PASS" endtime="20210222 13:40:02.423" starttime="20210222 13:40:02.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:40:02.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:40:02.424" starttime="20210222 13:40:02.423"></status>
</kw>
<status status="PASS" endtime="20210222 13:40:02.425" starttime="20210222 13:39:57.380"></status>
</kw>
<msg timestamp="20210222 13:40:02.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:40:02.427" starttime="20210222 13:39:57.380"></status>
</kw>
<msg timestamp="20210222 13:40:02.427" level="INFO">${result} = 59394-rpcwport</msg>
<status status="PASS" endtime="20210222 13:40:02.427" starttime="20210222 13:39:57.378"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:40:02.428" starttime="20210222 13:40:02.427"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:40:02.437" level="INFO">Running command 'ozone sh key put o3:///59394-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:13.334" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:13.334" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:43:13.335" starttime="20210222 13:40:02.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:13.339" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:43:13.339" starttime="20210222 13:43:13.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:13.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:13.343" starttime="20210222 13:43:13.341"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:13.344" starttime="20210222 13:40:02.433"></status>
</kw>
<msg timestamp="20210222 13:43:13.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:13.346" starttime="20210222 13:40:02.431"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:13.346" starttime="20210222 13:40:02.430"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:13.357" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:13.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:13.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:43:13.364" starttime="20210222 13:43:13.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:13.370" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:43:13.371" starttime="20210222 13:43:13.366"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:13.374" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:13.375" starttime="20210222 13:43:13.371"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:13.376" starttime="20210222 13:43:13.350"></status>
</kw>
<msg timestamp="20210222 13:43:13.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:13.377" starttime="20210222 13:43:13.349"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:13.378" starttime="20210222 13:43:13.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:13.393" level="INFO">Running command 'ozone sh key get o3:///59394-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:21.482" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:21.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:43:21.483" starttime="20210222 13:43:13.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:21.485" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:43:21.486" starttime="20210222 13:43:21.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:21.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:21.488" starttime="20210222 13:43:21.486"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:21.488" starttime="20210222 13:43:13.383"></status>
</kw>
<msg timestamp="20210222 13:43:21.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:21.489" starttime="20210222 13:43:13.382"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:21.490" starttime="20210222 13:43:13.379"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:21.496" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:21.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:21.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:43:21.500" starttime="20210222 13:43:21.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:21.502" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:43:21.502" starttime="20210222 13:43:21.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:21.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:21.504" starttime="20210222 13:43:21.503"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:21.504" starttime="20210222 13:43:21.492"></status>
</kw>
<msg timestamp="20210222 13:43:21.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:21.504" starttime="20210222 13:43:21.491"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:21.505" starttime="20210222 13:43:21.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:21.511" level="INFO">Running command 'ozone sh key put -t RATIS o3:///59394-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:29.298" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:43:29.298" starttime="20210222 13:43:21.508"></status>
</kw>
<status status="FAIL" endtime="20210222 13:43:29.299" starttime="20210222 13:43:21.507"></status>
</kw>
<msg timestamp="20210222 13:43:29.299" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:43:29.299" starttime="20210222 13:43:21.506"></status>
</kw>
<status status="FAIL" endtime="20210222 13:43:29.299" starttime="20210222 13:43:21.505"></status>
</kw>
<status status="FAIL" endtime="20210222 13:43:29.300" starttime="20210222 13:40:02.428"></status>
</kw>
<status status="FAIL" endtime="20210222 13:43:29.300" starttime="20210222 13:40:02.428"></status>
</kw>
<status status="FAIL" endtime="20210222 13:43:29.300" starttime="20210222 13:38:29.340"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:43:29.301" critical="yes" starttime="20210222 13:38:29.296">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:29.335" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:29.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:29.356" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:43:29.356" starttime="20210222 13:43:29.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:29.358" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:43:29.358" starttime="20210222 13:43:29.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:29.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:29.359" starttime="20210222 13:43:29.358"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:29.359" starttime="20210222 13:43:29.312"></status>
</kw>
<msg timestamp="20210222 13:43:29.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:29.360" starttime="20210222 13:43:29.312"></status>
</kw>
<msg timestamp="20210222 13:43:29.360" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:43:29.360" starttime="20210222 13:43:29.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:43:29.361" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:43:29.361" starttime="20210222 13:43:29.360"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:29.379" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:29.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:29.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:43:29.444" starttime="20210222 13:43:29.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:29.449" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:43:29.449" starttime="20210222 13:43:29.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:29.452" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:29.452" starttime="20210222 13:43:29.449"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:29.453" starttime="20210222 13:43:29.365"></status>
</kw>
<msg timestamp="20210222 13:43:29.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:29.453" starttime="20210222 13:43:29.364"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:29.456" starttime="20210222 13:43:29.362"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:29.456" starttime="20210222 13:43:29.361"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:29.456" starttime="20210222 13:43:29.305"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:29.456" starttime="20210222 13:43:29.303"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:29.477" level="INFO">Running command 'ozone sh volume info /59394-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:36.580" level="INFO">${rc} = 255</msg>
<msg timestamp="20210222 13:43:36.580" level="INFO">${output} = VOLUME_NOT_FOUND Volume 59394-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210222 13:43:36.580" starttime="20210222 13:43:29.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:36.582" level="INFO">VOLUME_NOT_FOUND Volume 59394-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210222 13:43:36.582" starttime="20210222 13:43:36.581"></status>
</kw>
<msg timestamp="20210222 13:43:36.583" level="INFO">${result} = VOLUME_NOT_FOUND Volume 59394-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210222 13:43:36.583" starttime="20210222 13:43:29.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210222 13:43:36.585" starttime="20210222 13:43:36.584"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:36.591" level="INFO">Running command 'ozone sh volume create /59394-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:43.021" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:43.021" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:43:43.021" starttime="20210222 13:43:36.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:43.023" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:43:43.023" starttime="20210222 13:43:43.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:43.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:43.024" starttime="20210222 13:43:43.023"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:43.025" starttime="20210222 13:43:36.587"></status>
</kw>
<msg timestamp="20210222 13:43:43.025" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:43.026" starttime="20210222 13:43:36.586"></status>
</kw>
<msg timestamp="20210222 13:43:43.026" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210222 13:43:43.026" starttime="20210222 13:43:36.585"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210222 13:43:43.027" starttime="20210222 13:43:43.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:43.033" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="59394-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:49.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:49.930" level="INFO">${output} = {
  "metadata": {},
  "name": "59394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210222 13:43:49.930" starttime="20210222 13:43:43.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:49.933" level="INFO">{
  "metadata": {},
  "name": "59394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:43:42.920Z",
  "modificationTime": "2021-02-22T13:43:42.920Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:43:49.933" starttime="20210222 13:43:49.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:49.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:49.934" starttime="20210222 13:43:49.933"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:49.934" starttime="20210222 13:43:43.029"></status>
</kw>
<msg timestamp="20210222 13:43:49.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:49.934" starttime="20210222 13:43:43.029"></status>
</kw>
<msg timestamp="20210222 13:43:49.935" level="INFO">${result} = {
  "metadata": {},
  "name": "59394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210222 13:43:49.935" starttime="20210222 13:43:43.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:43:49.936" starttime="20210222 13:43:49.935"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:49.942" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="59394-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:43:58.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:43:58.201" level="INFO">${output} = {
  "metadata": {},
  "name": "59394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210222 13:43:58.201" starttime="20210222 13:43:49.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:43:58.203" level="INFO">{
  "metadata": {},
  "name": "59394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-22T13:43:42.920Z",
  "modificationTime": "2021-02-22T13:43:42.920Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210222 13:43:58.203" starttime="20210222 13:43:58.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:43:58.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:43:58.203" starttime="20210222 13:43:58.203"></status>
</kw>
<status status="PASS" endtime="20210222 13:43:58.204" starttime="20210222 13:43:49.937"></status>
</kw>
<msg timestamp="20210222 13:43:58.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:43:58.204" starttime="20210222 13:43:49.937"></status>
</kw>
<msg timestamp="20210222 13:43:58.204" level="INFO">${result} = {
  "metadata": {},
  "name": "59394-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210222 13:43:58.204" starttime="20210222 13:43:49.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210222 13:43:58.205" starttime="20210222 13:43:58.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:43:58.210" level="INFO">Running command 'ozone sh volume setquota /59394-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:04.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:04.711" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:44:04.711" starttime="20210222 13:43:58.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:04.713" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:44:04.713" starttime="20210222 13:44:04.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:04.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:04.714" starttime="20210222 13:44:04.713"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:04.715" starttime="20210222 13:43:58.206"></status>
</kw>
<msg timestamp="20210222 13:44:04.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:04.715" starttime="20210222 13:43:58.206"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:04.716" starttime="20210222 13:43:58.205"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:04.721" level="INFO">Running command 'ozone sh volume info /59394-rpcwoscheme | jq -r '. | select(.name=="59394-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:12.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:12.133" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:44:12.134" starttime="20210222 13:44:04.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:12.135" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:44:12.135" starttime="20210222 13:44:12.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:12.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:12.136" starttime="20210222 13:44:12.135"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:12.136" starttime="20210222 13:44:04.717"></status>
</kw>
<msg timestamp="20210222 13:44:12.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:12.137" starttime="20210222 13:44:04.717"></status>
</kw>
<msg timestamp="20210222 13:44:12.137" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:44:12.137" starttime="20210222 13:44:04.716"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:44:12.138" starttime="20210222 13:44:12.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:12.151" level="INFO">Running command 'ozone sh bucket create /59394-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:17.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:17.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:44:17.887" starttime="20210222 13:44:12.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:17.888" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:44:17.888" starttime="20210222 13:44:17.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:17.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:17.889" starttime="20210222 13:44:17.888"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:17.889" starttime="20210222 13:44:12.139"></status>
</kw>
<msg timestamp="20210222 13:44:17.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:17.890" starttime="20210222 13:44:12.139"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:17.890" starttime="20210222 13:44:12.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:17.895" level="INFO">Running command 'ozone sh bucket info /59394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:24.196" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:24.197" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210222 13:44:24.197" starttime="20210222 13:44:17.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:24.199" level="INFO">DISK</msg>
<status status="PASS" endtime="20210222 13:44:24.199" starttime="20210222 13:44:24.198"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:24.199" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:24.200" starttime="20210222 13:44:24.199"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:24.200" starttime="20210222 13:44:17.891"></status>
</kw>
<msg timestamp="20210222 13:44:24.200" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:24.200" starttime="20210222 13:44:17.891"></status>
</kw>
<msg timestamp="20210222 13:44:24.201" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210222 13:44:24.201" starttime="20210222 13:44:17.890"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210222 13:44:24.202" starttime="20210222 13:44:24.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:24.208" level="INFO">Running command 'ozone sh bucket info /59394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:31.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:31.394" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:44:31.394" starttime="20210222 13:44:24.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:31.396" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210222 13:44:31.396" starttime="20210222 13:44:31.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:31.397" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:31.397" starttime="20210222 13:44:31.397"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:31.398" starttime="20210222 13:44:24.204"></status>
</kw>
<msg timestamp="20210222 13:44:31.398" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:31.398" starttime="20210222 13:44:24.203"></status>
</kw>
<msg timestamp="20210222 13:44:31.398" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210222 13:44:31.398" starttime="20210222 13:44:24.202"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210222 13:44:31.399" starttime="20210222 13:44:31.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:31.406" level="INFO">Running command 'ozone sh bucket info /59394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:38.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:38.484" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210222 13:44:38.484" starttime="20210222 13:44:31.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:38.486" level="INFO">100</msg>
<status status="PASS" endtime="20210222 13:44:38.486" starttime="20210222 13:44:38.485"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:38.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:38.486" starttime="20210222 13:44:38.486"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:38.487" starttime="20210222 13:44:31.402"></status>
</kw>
<msg timestamp="20210222 13:44:38.487" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:38.487" starttime="20210222 13:44:31.401"></status>
</kw>
<msg timestamp="20210222 13:44:38.487" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210222 13:44:38.487" starttime="20210222 13:44:31.400"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210222 13:44:38.488" starttime="20210222 13:44:38.488"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:38.493" level="INFO">Running command 'ozone sh bucket setquota /59394-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:44.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:44.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:44:44.165" starttime="20210222 13:44:38.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:44.167" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:44:44.167" starttime="20210222 13:44:44.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:44.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:44.168" starttime="20210222 13:44:44.167"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:44.168" starttime="20210222 13:44:38.490"></status>
</kw>
<msg timestamp="20210222 13:44:44.168" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:44.168" starttime="20210222 13:44:38.489"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:44.168" starttime="20210222 13:44:38.488"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:44.173" level="INFO">Running command 'ozone sh bucket info /59394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:51.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:51.447" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:44:51.447" starttime="20210222 13:44:44.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:51.450" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210222 13:44:51.450" starttime="20210222 13:44:51.448"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:51.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:51.451" starttime="20210222 13:44:51.450"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:51.452" starttime="20210222 13:44:44.170"></status>
</kw>
<msg timestamp="20210222 13:44:51.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:51.453" starttime="20210222 13:44:44.170"></status>
</kw>
<msg timestamp="20210222 13:44:51.453" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210222 13:44:51.453" starttime="20210222 13:44:44.169"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210222 13:44:51.455" starttime="20210222 13:44:51.454"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:51.463" level="INFO">Running command 'ozone sh bucket info /59394-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:44:56.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:44:56.755" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210222 13:44:56.755" starttime="20210222 13:44:51.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:44:56.757" level="INFO">1000</msg>
<status status="PASS" endtime="20210222 13:44:56.757" starttime="20210222 13:44:56.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:44:56.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:44:56.758" starttime="20210222 13:44:56.757"></status>
</kw>
<status status="PASS" endtime="20210222 13:44:56.758" starttime="20210222 13:44:51.458"></status>
</kw>
<msg timestamp="20210222 13:44:56.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:44:56.758" starttime="20210222 13:44:51.457"></status>
</kw>
<msg timestamp="20210222 13:44:56.759" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210222 13:44:56.759" starttime="20210222 13:44:51.455"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210222 13:44:56.759" starttime="20210222 13:44:56.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:44:56.764" level="INFO">Running command 'ozone sh bucket list /59394-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:45:03.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:45:03.515" level="INFO">${output} = 59394-rpcwoscheme</msg>
<status status="PASS" endtime="20210222 13:45:03.516" starttime="20210222 13:44:56.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:45:03.517" level="INFO">59394-rpcwoscheme</msg>
<status status="PASS" endtime="20210222 13:45:03.517" starttime="20210222 13:45:03.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:45:03.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:45:03.518" starttime="20210222 13:45:03.517"></status>
</kw>
<status status="PASS" endtime="20210222 13:45:03.518" starttime="20210222 13:44:56.761"></status>
</kw>
<msg timestamp="20210222 13:45:03.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:45:03.518" starttime="20210222 13:44:56.761"></status>
</kw>
<msg timestamp="20210222 13:45:03.519" level="INFO">${result} = 59394-rpcwoscheme</msg>
<status status="PASS" endtime="20210222 13:45:03.519" starttime="20210222 13:44:56.760"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210222 13:45:03.520" starttime="20210222 13:45:03.519"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:45:03.528" level="INFO">Running command 'ozone sh key put /59394-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:48:15.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:48:15.277" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:48:15.277" starttime="20210222 13:45:03.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:48:15.280" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:48:15.280" starttime="20210222 13:48:15.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:48:15.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:48:15.281" starttime="20210222 13:48:15.280"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:15.282" starttime="20210222 13:45:03.523"></status>
</kw>
<msg timestamp="20210222 13:48:15.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:48:15.283" starttime="20210222 13:45:03.522"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:15.283" starttime="20210222 13:45:03.521"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:48:15.289" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:48:15.293" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:48:15.293" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:48:15.293" starttime="20210222 13:48:15.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:48:15.295" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:48:15.295" starttime="20210222 13:48:15.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:48:15.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:48:15.296" starttime="20210222 13:48:15.295"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:15.297" starttime="20210222 13:48:15.285"></status>
</kw>
<msg timestamp="20210222 13:48:15.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:48:15.297" starttime="20210222 13:48:15.284"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:15.297" starttime="20210222 13:48:15.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:48:15.302" level="INFO">Running command 'ozone sh key get /59394-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:48:26.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:48:26.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:48:26.531" starttime="20210222 13:48:15.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:48:26.533" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:48:26.533" starttime="20210222 13:48:26.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:48:26.533" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:48:26.534" starttime="20210222 13:48:26.533"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:26.534" starttime="20210222 13:48:15.299"></status>
</kw>
<msg timestamp="20210222 13:48:26.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:48:26.534" starttime="20210222 13:48:15.298"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:26.534" starttime="20210222 13:48:15.297"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:48:26.539" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:48:26.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:48:26.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:48:26.542" starttime="20210222 13:48:26.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:48:26.543" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:48:26.544" starttime="20210222 13:48:26.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:48:26.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:48:26.545" starttime="20210222 13:48:26.544"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:26.546" starttime="20210222 13:48:26.536"></status>
</kw>
<msg timestamp="20210222 13:48:26.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:48:26.546" starttime="20210222 13:48:26.535"></status>
</kw>
<status status="PASS" endtime="20210222 13:48:26.546" starttime="20210222 13:48:26.534"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:48:26.552" level="INFO">Running command 'ozone sh key put -t RATIS /59394-rpcwoscheme/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:48:29.303" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210222 13:48:29.304" starttime="20210222 13:48:26.550"></status>
</kw>
<status status="FAIL" endtime="20210222 13:48:29.304" starttime="20210222 13:48:26.548"></status>
</kw>
<msg timestamp="20210222 13:48:29.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210222 13:48:29.304" starttime="20210222 13:48:26.548"></status>
</kw>
<status status="FAIL" endtime="20210222 13:48:29.305" starttime="20210222 13:48:26.547"></status>
</kw>
<status status="FAIL" endtime="20210222 13:48:29.305" starttime="20210222 13:45:03.520"></status>
</kw>
<status status="FAIL" endtime="20210222 13:48:29.305" starttime="20210222 13:45:03.520"></status>
</kw>
<status status="FAIL" endtime="20210222 13:48:29.306" starttime="20210222 13:43:29.456"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210222 13:48:29.306" critical="yes" starttime="20210222 13:43:29.302">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210222 13:48:29.309" starttime="20210222 13:27:44.787"></status>
</suite>
<status status="FAIL" endtime="20210222 13:48:29.355" starttime="20210222 13:03:45.963"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:40.919" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:40.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:40.925" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210222 13:03:40.925" starttime="20210222 13:03:40.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:40.926" level="INFO">scm</msg>
<status status="PASS" endtime="20210222 13:03:40.926" starttime="20210222 13:03:40.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:40.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:40.927" starttime="20210222 13:03:40.926"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:40.927" starttime="20210222 13:03:40.907"></status>
</kw>
<msg timestamp="20210222 13:03:40.927" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:40.927" starttime="20210222 13:03:40.906"></status>
</kw>
<msg timestamp="20210222 13:03:40.927" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210222 13:03:40.928" starttime="20210222 13:03:40.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210222 13:03:40.928" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210222 13:03:40.928" starttime="20210222 13:03:40.928"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210222 13:03:40.933" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210222 13:03:40.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210222 13:03:40.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210222 13:03:40.941" starttime="20210222 13:03:40.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210222 13:03:40.942" level="INFO"></msg>
<status status="PASS" endtime="20210222 13:03:40.942" starttime="20210222 13:03:40.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210222 13:03:40.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210222 13:03:40.943" starttime="20210222 13:03:40.942"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:40.943" starttime="20210222 13:03:40.930"></status>
</kw>
<msg timestamp="20210222 13:03:40.943" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210222 13:03:40.943" starttime="20210222 13:03:40.930"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:40.943" starttime="20210222 13:03:40.929"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:40.943" starttime="20210222 13:03:40.929"></status>
</kw>
<status status="PASS" endtime="20210222 13:03:40.943" starttime="20210222 13:03:40.904"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210222 13:03:40.944" critical="yes" starttime="20210222 13:03:40.903"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210222 13:03:40.945" starttime="20210222 13:03:40.838"></status>
</suite>
<status status="FAIL" elapsedtime="2683499" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="10" pass="19">Critical Tests</stat>
<stat fail="10" pass="19">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" id="s1" name="ozonesecure" pass="19">ozonesecure</stat>
<stat fail="10" id="s1-s1" name="Basic" pass="18">ozonesecure.Basic</stat>
<stat fail="1" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" id="s1-s1-s5" name="Ozone-Shell" pass="3">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
