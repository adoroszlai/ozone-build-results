<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210220 02:06:56.229" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/admincli/pipeline.robot" id="s1" name="ozonescripts">
<test id="s1-t1" name="Create pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline create</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:14.768" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:16.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:16.715" level="INFO">${output} = PipelineID=7a64e6a6-302e-4cf4-8af6-5846d24ff7e0 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210220 02:06:16.715" starttime="20210220 02:06:14.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:16.716" level="INFO">PipelineID=7a64e6a6-302e-4cf4-8af6-5846d24ff7e0 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210220 02:06:16.717" starttime="20210220 02:06:16.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:16.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:16.717" starttime="20210220 02:06:16.717"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:16.718" starttime="20210220 02:06:14.763"></status>
</kw>
<msg timestamp="20210220 02:06:16.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:16.718" starttime="20210220 02:06:14.763"></status>
</kw>
<msg timestamp="20210220 02:06:16.718" level="INFO">${output} = PipelineID=7a64e6a6-302e-4cf4-8af6-5846d24ff7e0 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210220 02:06:16.718" starttime="20210220 02:06:14.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is created. Factor: ONE, Type: STAND_ALONE</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:16.719" starttime="20210220 02:06:16.718"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
</arguments>
<assign>
<var>${pipeline}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:16.724" level="INFO">Running command 'echo "PipelineID=7a64e6a6-302e-4cf4-8af6-5846d24ff7e0 is created. Factor: ONE, Type: STAND_ALONE" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:16.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:16.728" level="INFO">${output} = 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0</msg>
<status status="PASS" endtime="20210220 02:06:16.728" starttime="20210220 02:06:16.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:16.729" level="INFO">7a64e6a6-302e-4cf4-8af6-5846d24ff7e0</msg>
<status status="PASS" endtime="20210220 02:06:16.729" starttime="20210220 02:06:16.728"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:16.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:16.729" starttime="20210220 02:06:16.729"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:16.730" starttime="20210220 02:06:16.720"></status>
</kw>
<msg timestamp="20210220 02:06:16.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:16.730" starttime="20210220 02:06:16.719"></status>
</kw>
<msg timestamp="20210220 02:06:16.730" level="INFO">${pipeline} = 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0</msg>
<status status="PASS" endtime="20210220 02:06:16.730" starttime="20210220 02:06:16.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
</arguments>
<msg timestamp="20210220 02:06:16.731" level="INFO">${PIPELINE} = 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0</msg>
<status status="PASS" endtime="20210220 02:06:16.731" starttime="20210220 02:06:16.730"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:16.731" critical="yes" starttime="20210220 02:06:14.762"></status>
</test>
<test id="s1-t2" name="List pipelines">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:16.736" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:18.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:18.857" level="INFO">${output} = Pipeline[ Id: ffdbf720-eef8-4d8b-83b1-1fcb4ab0f6d7, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:18.857" starttime="20210220 02:06:16.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:18.858" level="INFO">Pipeline[ Id: ffdbf720-eef8-4d8b-83b1-1fcb4ab0f6d7, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:e353aad9-d7cf-4425-a7d0-da5301e408a1, CreationTimestamp2021-02-20T02:05:51.714Z]
Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-20T02:06:16.620Z]</msg>
<status status="PASS" endtime="20210220 02:06:18.858" starttime="20210220 02:06:18.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:18.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:18.859" starttime="20210220 02:06:18.859"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:18.859" starttime="20210220 02:06:16.733"></status>
</kw>
<msg timestamp="20210220 02:06:18.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:18.860" starttime="20210220 02:06:16.733"></status>
</kw>
<msg timestamp="20210220 02:06:18.860" level="INFO">${output} = Pipeline[ Id: ffdbf720-eef8-4d8b-83b1-1fcb4ab0f6d7, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:18.860" starttime="20210220 02:06:16.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:18.860" starttime="20210220 02:06:18.860"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:18.861" critical="yes" starttime="20210220 02:06:16.732"></status>
</test>
<test id="s1-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list --scm scm</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:18.865" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:20.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:20.718" level="INFO">${output} = Pipeline[ Id: ffdbf720-eef8-4d8b-83b1-1fcb4ab0f6d7, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:20.718" starttime="20210220 02:06:18.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:20.719" level="INFO">Pipeline[ Id: ffdbf720-eef8-4d8b-83b1-1fcb4ab0f6d7, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:e353aad9-d7cf-4425-a7d0-da5301e408a1, CreationTimestamp2021-02-20T02:05:51.714Z]
Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-20T02:06:16.620Z]</msg>
<status status="PASS" endtime="20210220 02:06:20.719" starttime="20210220 02:06:20.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:20.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:20.720" starttime="20210220 02:06:20.720"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:20.721" starttime="20210220 02:06:18.863"></status>
</kw>
<msg timestamp="20210220 02:06:20.721" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:20.721" starttime="20210220 02:06:18.862"></status>
</kw>
<msg timestamp="20210220 02:06:20.721" level="INFO">${output} = Pipeline[ Id: ffdbf720-eef8-4d8b-83b1-1fcb4ab0f6d7, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:20.721" starttime="20210220 02:06:18.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:20.722" starttime="20210220 02:06:20.721"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:20.722" critical="yes" starttime="20210220 02:06:18.861"></status>
</test>
<test id="s1-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:20.727" level="INFO">Running command 'ozone admin pipeline deactivate "7a64e6a6-302e-4cf4-8af6-5846d24ff7e0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:22.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:22.575" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:06:22.575" starttime="20210220 02:06:20.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:22.576" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:06:22.576" starttime="20210220 02:06:22.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:22.577" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:22.577" starttime="20210220 02:06:22.576"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:22.577" starttime="20210220 02:06:20.725"></status>
</kw>
<msg timestamp="20210220 02:06:22.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:22.577" starttime="20210220 02:06:20.724"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:22.577" starttime="20210220 02:06:20.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:22.581" level="INFO">Running command 'ozone admin pipeline list | grep "7a64e6a6-302e-4cf4-8af6-5846d24ff7e0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:24.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:24.307" level="INFO">${output} = Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:24.307" starttime="20210220 02:06:22.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:24.308" level="INFO">Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:DORMANT, leaderId:, CreationTimestamp2021-02-20T02:06:16.620Z]</msg>
<status status="PASS" endtime="20210220 02:06:24.309" starttime="20210220 02:06:24.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:24.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:24.309" starttime="20210220 02:06:24.309"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:24.310" starttime="20210220 02:06:22.579"></status>
</kw>
<msg timestamp="20210220 02:06:24.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:24.310" starttime="20210220 02:06:22.578"></status>
</kw>
<msg timestamp="20210220 02:06:24.310" level="INFO">${output} = Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:24.310" starttime="20210220 02:06:22.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>DORMANT</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:24.311" starttime="20210220 02:06:24.310"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:24.311" critical="yes" starttime="20210220 02:06:20.723"></status>
</test>
<test id="s1-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:24.316" level="INFO">Running command 'ozone admin pipeline activate "7a64e6a6-302e-4cf4-8af6-5846d24ff7e0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:26.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:26.089" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:06:26.089" starttime="20210220 02:06:24.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:26.090" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:06:26.091" starttime="20210220 02:06:26.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:26.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:26.091" starttime="20210220 02:06:26.091"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:26.091" starttime="20210220 02:06:24.313"></status>
</kw>
<msg timestamp="20210220 02:06:26.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:26.092" starttime="20210220 02:06:24.313"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:26.092" starttime="20210220 02:06:24.312"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:26.096" level="INFO">Running command 'ozone admin pipeline list | grep "7a64e6a6-302e-4cf4-8af6-5846d24ff7e0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:28.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:28.026" level="INFO">${output} = Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:28.026" starttime="20210220 02:06:26.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:28.027" level="INFO">Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-20T02:06:16.620Z]</msg>
<status status="PASS" endtime="20210220 02:06:28.027" starttime="20210220 02:06:28.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:28.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:28.028" starttime="20210220 02:06:28.027"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:28.028" starttime="20210220 02:06:26.093"></status>
</kw>
<msg timestamp="20210220 02:06:28.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:28.028" starttime="20210220 02:06:26.093"></status>
</kw>
<msg timestamp="20210220 02:06:28.028" level="INFO">${output} = Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:28.029" starttime="20210220 02:06:26.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:28.029" starttime="20210220 02:06:28.029"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:28.030" critical="yes" starttime="20210220 02:06:24.312"></status>
</test>
<test id="s1-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:28.035" level="INFO">Running command 'ozone admin pipeline close "7a64e6a6-302e-4cf4-8af6-5846d24ff7e0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:29.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:29.943" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:06:29.943" starttime="20210220 02:06:28.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:29.944" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:06:29.944" starttime="20210220 02:06:29.943"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:29.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:29.945" starttime="20210220 02:06:29.944"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:29.945" starttime="20210220 02:06:28.032"></status>
</kw>
<msg timestamp="20210220 02:06:29.945" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:29.945" starttime="20210220 02:06:28.032"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:29.945" starttime="20210220 02:06:28.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:29.949" level="INFO">Running command 'ozone admin pipeline list | grep "7a64e6a6-302e-4cf4-8af6-5846d24ff7e0" 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:31.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:06:31.846" level="INFO">${output} = Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:31.846" starttime="20210220 02:06:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:31.847" level="INFO">Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:CLOSED, leaderId:, CreationTimestamp2021-02-20T02:06:16.620Z]</msg>
<status status="PASS" endtime="20210220 02:06:31.847" starttime="20210220 02:06:31.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:06:31.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:06:31.848" starttime="20210220 02:06:31.847"></status>
</kw>
<status status="PASS" endtime="20210220 02:06:31.848" starttime="20210220 02:06:29.946"></status>
</kw>
<msg timestamp="20210220 02:06:31.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:06:31.848" starttime="20210220 02:06:29.946"></status>
</kw>
<msg timestamp="20210220 02:06:31.849" level="INFO">${output} = Pipeline[ Id: 7a64e6a6-302e-4cf4-8af6-5846d24ff7e0, Nodes: e353aad9-d7cf-4425-a7d0-da5301e408a1{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210220 02:06:31.849" starttime="20210220 02:06:29.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>CLOSED</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:31.849" starttime="20210220 02:06:31.849"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:31.849" critical="yes" starttime="20210220 02:06:28.030"></status>
</test>
<test id="s1-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin pipeline</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:31.853" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:33.053" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:06:33.053" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210220 02:06:33.053" starttime="20210220 02:06:31.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:33.054" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" endtime="20210220 02:06:33.054" starttime="20210220 02:06:33.053"></status>
</kw>
<msg timestamp="20210220 02:06:33.055" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210220 02:06:33.055" starttime="20210220 02:06:31.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Incomplete command</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:33.055" starttime="20210220 02:06:33.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>close</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:33.056" starttime="20210220 02:06:33.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>create</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:33.056" starttime="20210220 02:06:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>deactivate</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:33.057" starttime="20210220 02:06:33.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>list</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:33.057" starttime="20210220 02:06:33.057"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:33.057" critical="yes" starttime="20210220 02:06:31.850"></status>
</test>
<test id="s1-t8" name="List pipelines on unknown host">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin --verbose pipeline list --scm unknown-host</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:06:33.067" level="INFO">Running command 'ozone admin --verbose pipeline list --scm unknown-host 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:06:34.858" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:06:34.858" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210220 02:06:34.858" starttime="20210220 02:06:33.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:06:34.861" level="INFO">java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy16.submitRequest(Unknown Source)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:136)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.listPipelines(StorageContainerLocationProtocolClientSideTranslatorPB.java:444)
	at org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.listPipelines(ContainerOperationClient.java:312)
	at org.apache.hadoop.hdds.scm.cli.pipeline.ListPipelinesSubcommand.execute(ListPipelinesSubcommand.java:53)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:39)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:29)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.hdds.cli.OzoneAdmin.main(OzoneAdmin.java:65)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 23 more</msg>
<status status="PASS" endtime="20210220 02:06:34.861" starttime="20210220 02:06:34.858"></status>
</kw>
<msg timestamp="20210220 02:06:34.861" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210220 02:06:34.861" starttime="20210220 02:06:33.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Invalid host name</arg>
</arguments>
<status status="PASS" endtime="20210220 02:06:34.862" starttime="20210220 02:06:34.862"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:06:34.862" critical="yes" starttime="20210220 02:06:33.058"></status>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" endtime="20210220 02:06:34.864" starttime="20210220 02:06:14.712"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonescripts" pass="8">ozonescripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
