<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210220 02:13:20.845" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:02.366" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:06.842" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:09:06.842" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 02:09:06.842" starttime="20210220 02:09:02.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:06.843" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 02:09:06.844" starttime="20210220 02:09:06.843"></status>
</kw>
<msg timestamp="20210220 02:09:06.844" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 02:09:06.844" starttime="20210220 02:09:02.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:06.850" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:10.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:10.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:10.772" starttime="20210220 02:09:06.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:10.773" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:10.773" starttime="20210220 02:09:10.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:10.775" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:10.775" starttime="20210220 02:09:10.773"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:10.776" starttime="20210220 02:09:06.846"></status>
</kw>
<msg timestamp="20210220 02:09:10.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:10.776" starttime="20210220 02:09:06.846"></status>
</kw>
<msg timestamp="20210220 02:09:10.776" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210220 02:09:10.776" starttime="20210220 02:09:06.845"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210220 02:09:10.777" starttime="20210220 02:09:10.776"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:10.777" starttime="20210220 02:09:06.845"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:10.777" starttime="20210220 02:09:06.844"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:10.792" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:14.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:14.740" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:14.740" starttime="20210220 02:09:10.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:14.742" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:14.742" starttime="20210220 02:09:14.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:14.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:14.742" starttime="20210220 02:09:14.742"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:14.743" starttime="20210220 02:09:10.785"></status>
</kw>
<msg timestamp="20210220 02:09:14.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:14.743" starttime="20210220 02:09:10.785"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:14.743" starttime="20210220 02:09:10.784"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:14.743" starttime="20210220 02:09:10.784"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:14.743" starttime="20210220 02:09:10.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210220 02:09:14.744" starttime="20210220 02:09:14.743"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:14.756" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:18.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:18.626" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:09...</msg>
<status status="PASS" endtime="20210220 02:09:18.626" starttime="20210220 02:09:14.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:18.627" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:09:14.509Z",
  "modificationTime" : "2021-02-20T02:09:14.509Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 02:09:18.628" starttime="20210220 02:09:18.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:18.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:18.628" starttime="20210220 02:09:18.628"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:18.629" starttime="20210220 02:09:14.745"></status>
</kw>
<msg timestamp="20210220 02:09:18.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:18.629" starttime="20210220 02:09:14.745"></status>
</kw>
<msg timestamp="20210220 02:09:18.629" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:09...</msg>
<status status="PASS" endtime="20210220 02:09:18.629" starttime="20210220 02:09:14.744"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210220 02:09:18.630" starttime="20210220 02:09:18.629"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:09:18.633" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:09:18.633" starttime="20210220 02:09:18.633"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:09:18.634" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:09:18.634" starttime="20210220 02:09:18.634"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:18.634" starttime="20210220 02:09:18.633"></status>
</kw>
<msg timestamp="20210220 02:09:18.634" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:09:18.634" starttime="20210220 02:09:18.632"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:18.635" starttime="20210220 02:09:18.631"></status>
</kw>
<msg timestamp="20210220 02:09:18.635" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 02:09:18.635" starttime="20210220 02:09:18.630"></status>
</kw>
<msg timestamp="20210220 02:09:18.635" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 02:09:18.635" starttime="20210220 02:09:18.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:18.638" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:22.547" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:22.547" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:22.547" starttime="20210220 02:09:18.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:22.548" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:22.548" starttime="20210220 02:09:22.547"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:22.549" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:22.549" starttime="20210220 02:09:22.548"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:22.549" starttime="20210220 02:09:18.636"></status>
</kw>
<msg timestamp="20210220 02:09:22.549" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:22.550" starttime="20210220 02:09:18.636"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:22.550" starttime="20210220 02:09:18.635"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:22.554" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:30.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:30.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:30.731" starttime="20210220 02:09:22.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:30.733" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:30.733" starttime="20210220 02:09:30.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:30.733" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:30.733" starttime="20210220 02:09:30.733"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:30.734" starttime="20210220 02:09:22.551"></status>
</kw>
<msg timestamp="20210220 02:09:30.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:30.734" starttime="20210220 02:09:22.551"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:30.734" starttime="20210220 02:09:22.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:30.738" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:36.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:36.662" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:36.662" starttime="20210220 02:09:30.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:36.663" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:36.663" starttime="20210220 02:09:36.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:36.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:36.664" starttime="20210220 02:09:36.663"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:36.664" starttime="20210220 02:09:30.735"></status>
</kw>
<msg timestamp="20210220 02:09:36.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:36.664" starttime="20210220 02:09:30.735"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:36.664" starttime="20210220 02:09:30.734"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:36.669" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:42.224" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:42.224" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:42.224" starttime="20210220 02:09:36.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:42.225" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:42.226" starttime="20210220 02:09:42.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:42.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:42.227" starttime="20210220 02:09:42.226"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:42.227" starttime="20210220 02:09:36.665"></status>
</kw>
<msg timestamp="20210220 02:09:42.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:42.227" starttime="20210220 02:09:36.665"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:42.227" starttime="20210220 02:09:36.665"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:09:42.228" critical="yes" starttime="20210220 02:09:02.355"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:09:42.233" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:09:42.233" starttime="20210220 02:09:42.232"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:09:42.234" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:09:42.234" starttime="20210220 02:09:42.233"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:42.234" starttime="20210220 02:09:42.232"></status>
</kw>
<msg timestamp="20210220 02:09:42.234" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:09:42.234" starttime="20210220 02:09:42.231"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:42.234" starttime="20210220 02:09:42.230"></status>
</kw>
<msg timestamp="20210220 02:09:42.234" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 02:09:42.234" starttime="20210220 02:09:42.230"></status>
</kw>
<msg timestamp="20210220 02:09:42.235" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 02:09:42.235" starttime="20210220 02:09:42.229"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:42.238" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:45.945" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:45.945" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:45.945" starttime="20210220 02:09:42.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:45.946" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:45.947" starttime="20210220 02:09:45.946"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:45.947" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:45.947" starttime="20210220 02:09:45.947"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:45.947" starttime="20210220 02:09:42.236"></status>
</kw>
<msg timestamp="20210220 02:09:45.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:45.948" starttime="20210220 02:09:42.235"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:45.948" starttime="20210220 02:09:42.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:09:45.951" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:09:49.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:09:49.435" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:09:49.435" starttime="20210220 02:09:45.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:09:49.436" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:09:49.436" starttime="20210220 02:09:49.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:09:49.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:09:49.437" starttime="20210220 02:09:49.437"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:49.437" starttime="20210220 02:09:45.949"></status>
</kw>
<msg timestamp="20210220 02:09:49.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:09:49.438" starttime="20210220 02:09:45.949"></status>
</kw>
<status status="PASS" endtime="20210220 02:09:49.438" starttime="20210220 02:09:45.948"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:09:49.438" critical="yes" starttime="20210220 02:09:42.228"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210220 02:09:49.439" starttime="20210220 02:09:02.300"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 02:11:50.198" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 02:11:50.198" starttime="20210220 02:11:50.198"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:11:50.199" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 02:11:50.199" starttime="20210220 02:11:50.198"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:50.199" starttime="20210220 02:11:50.197"></status>
</kw>
<msg timestamp="20210220 02:11:50.199" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 02:11:50.199" starttime="20210220 02:11:50.197"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:11:50.200" starttime="20210220 02:11:50.200"></status>
</kw>
<msg timestamp="20210220 02:11:50.200" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 02:11:50.201" starttime="20210220 02:11:50.199"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:50.201" starttime="20210220 02:11:50.196"></status>
</kw>
<msg timestamp="20210220 02:11:50.201" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 02:11:50.201" starttime="20210220 02:11:50.195"></status>
</kw>
<msg timestamp="20210220 02:11:50.201" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 02:11:50.201" starttime="20210220 02:11:50.194"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 02:11:50.202" level="INFO">${random} = 28505</msg>
<status status="PASS" endtime="20210220 02:11:50.202" starttime="20210220 02:11:50.201"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:11:50.208" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-28505 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:11:54.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:11:54.179" level="INFO">${output} = 2021-02-20 02:11:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:11:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 02:11:54.179" starttime="20210220 02:11:50.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:11:54.180" level="INFO">2021-02-20 02:11:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:11:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:11:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 02:11:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:11:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ADE17BEFA75C-&gt;949dec8a-bb37-4000-aeee-afe178daf7c4
2021-02-20 02:11:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210220 02:11:54.180" starttime="20210220 02:11:54.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:11:54.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:11:54.181" starttime="20210220 02:11:54.181"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:54.181" starttime="20210220 02:11:50.203"></status>
</kw>
<msg timestamp="20210220 02:11:54.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:11:54.182" starttime="20210220 02:11:50.202"></status>
</kw>
<msg timestamp="20210220 02:11:54.182" level="INFO">${result} = 2021-02-20 02:11:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:11:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 02:11:54.182" starttime="20210220 02:11:50.202"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:11:54.186" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:11:56.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:11:56.274" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:11 ofs://om/volume1/bucket1/ozone-28505
-rw-...</msg>
<status status="PASS" endtime="20210220 02:11:56.274" starttime="20210220 02:11:54.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:11:56.275" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:11 ofs://om/volume1/bucket1/ozone-28505
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:10 ofs://om/volume1/bucket1/ozone-92599
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:11 ofs://om/volume1/bucket1/wordcount-LhodvS14.txt</msg>
<status status="PASS" endtime="20210220 02:11:56.275" starttime="20210220 02:11:56.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:11:56.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:11:56.275" starttime="20210220 02:11:56.275"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:56.276" starttime="20210220 02:11:54.183"></status>
</kw>
<msg timestamp="20210220 02:11:56.276" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:11:56.276" starttime="20210220 02:11:54.183"></status>
</kw>
<msg timestamp="20210220 02:11:56.276" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:11 ofs://om/volume1/bucket1/ozone-28505
-rw-...</msg>
<status status="PASS" endtime="20210220 02:11:56.276" starttime="20210220 02:11:54.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:11:56.277" starttime="20210220 02:11:56.276"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:11:56.277" critical="yes" starttime="20210220 02:11:50.193"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 02:11:56.279" starttime="20210220 02:11:50.141"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:10:12.018" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:10:12.018" starttime="20210220 02:10:12.018"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:10:12.019" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:10:12.019" starttime="20210220 02:10:12.018"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:12.019" starttime="20210220 02:10:12.017"></status>
</kw>
<msg timestamp="20210220 02:10:12.019" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:10:12.019" starttime="20210220 02:10:12.017"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:12.019" starttime="20210220 02:10:12.016"></status>
</kw>
<msg timestamp="20210220 02:10:12.019" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 02:10:12.019" starttime="20210220 02:10:12.015"></status>
</kw>
<msg timestamp="20210220 02:10:12.020" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 02:10:12.020" starttime="20210220 02:10:12.014"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 02:10:12.020" level="INFO">${random} = 92599</msg>
<status status="PASS" endtime="20210220 02:10:12.020" starttime="20210220 02:10:12.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:10:12.025" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-92599 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:10:18.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:10:18.741" level="INFO">${output} = 2021-02-20 02:10:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:10:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 02:10:18.741" starttime="20210220 02:10:12.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:10:18.743" level="INFO">2021-02-20 02:10:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:10:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:10:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 02:10:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:10:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-31238C935D1A-&gt;52b6d765-0501-4c48-9e43-518d62afb3eb
2021-02-20 02:10:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210220 02:10:18.743" starttime="20210220 02:10:18.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:10:18.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:10:18.744" starttime="20210220 02:10:18.744"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:18.744" starttime="20210220 02:10:12.021"></status>
</kw>
<msg timestamp="20210220 02:10:18.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:10:18.745" starttime="20210220 02:10:12.021"></status>
</kw>
<msg timestamp="20210220 02:10:18.745" level="INFO">${result} = 2021-02-20 02:10:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:10:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 02:10:18.745" starttime="20210220 02:10:12.020"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:10:18.749" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:10:21.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:10:21.044" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:10 o3fs://bucket1.volume1.om/ozone-92599
dr...</msg>
<status status="PASS" endtime="20210220 02:10:21.044" starttime="20210220 02:10:18.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:10:21.046" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:10 o3fs://bucket1.volume1.om/ozone-92599
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 02:10:21.046" starttime="20210220 02:10:21.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:10:21.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:10:21.047" starttime="20210220 02:10:21.046"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:21.047" starttime="20210220 02:10:18.746"></status>
</kw>
<msg timestamp="20210220 02:10:21.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:10:21.047" starttime="20210220 02:10:18.746"></status>
</kw>
<msg timestamp="20210220 02:10:21.047" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 02:09 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 02:10 o3fs://bucket1.volume1.om/ozone-92599
dr...</msg>
<status status="PASS" endtime="20210220 02:10:21.047" starttime="20210220 02:10:18.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:10:21.048" starttime="20210220 02:10:21.048"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:10:21.048" critical="yes" starttime="20210220 02:10:12.013"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 02:10:21.051" starttime="20210220 02:10:11.961"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:10:06.861" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:10:06.864" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:10:06.864" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210220 02:10:06.864" starttime="20210220 02:10:06.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:10:06.865" level="INFO">rm</msg>
<status status="PASS" endtime="20210220 02:10:06.865" starttime="20210220 02:10:06.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:10:06.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:10:06.866" starttime="20210220 02:10:06.865"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:06.866" starttime="20210220 02:10:06.856"></status>
</kw>
<msg timestamp="20210220 02:10:06.866" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:10:06.866" starttime="20210220 02:10:06.856"></status>
</kw>
<msg timestamp="20210220 02:10:06.866" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210220 02:10:06.866" starttime="20210220 02:10:06.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:10:06.868" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:10:06.868" starttime="20210220 02:10:06.867"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:10:06.872" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:10:06.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:10:06.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:10:06.882" starttime="20210220 02:10:06.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:10:06.890" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:10:06.890" starttime="20210220 02:10:06.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:10:06.891" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:10:06.891" starttime="20210220 02:10:06.890"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:06.891" starttime="20210220 02:10:06.869"></status>
</kw>
<msg timestamp="20210220 02:10:06.891" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:10:06.891" starttime="20210220 02:10:06.869"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:06.892" starttime="20210220 02:10:06.868"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:06.892" starttime="20210220 02:10:06.868"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:06.892" starttime="20210220 02:10:06.855"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:10:06.892" critical="yes" starttime="20210220 02:10:06.854"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210220 02:10:06.893" starttime="20210220 02:10:06.806"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:08:57.111" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:08:57.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:08:57.114" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210220 02:08:57.114" starttime="20210220 02:08:57.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:08:57.117" level="INFO">om</msg>
<status status="PASS" endtime="20210220 02:08:57.117" starttime="20210220 02:08:57.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:08:57.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:08:57.118" starttime="20210220 02:08:57.117"></status>
</kw>
<status status="PASS" endtime="20210220 02:08:57.118" starttime="20210220 02:08:57.107"></status>
</kw>
<msg timestamp="20210220 02:08:57.118" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:08:57.118" starttime="20210220 02:08:57.106"></status>
</kw>
<msg timestamp="20210220 02:08:57.119" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210220 02:08:57.119" starttime="20210220 02:08:57.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:08:57.119" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:08:57.119" starttime="20210220 02:08:57.119"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:08:57.124" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:08:57.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:08:57.135" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:08:57.135" starttime="20210220 02:08:57.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:08:57.136" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:08:57.136" starttime="20210220 02:08:57.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:08:57.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:08:57.137" starttime="20210220 02:08:57.136"></status>
</kw>
<status status="PASS" endtime="20210220 02:08:57.138" starttime="20210220 02:08:57.121"></status>
</kw>
<msg timestamp="20210220 02:08:57.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:08:57.138" starttime="20210220 02:08:57.121"></status>
</kw>
<status status="PASS" endtime="20210220 02:08:57.138" starttime="20210220 02:08:57.120"></status>
</kw>
<status status="PASS" endtime="20210220 02:08:57.138" starttime="20210220 02:08:57.120"></status>
</kw>
<status status="PASS" endtime="20210220 02:08:57.138" starttime="20210220 02:08:57.105"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:08:57.138" critical="yes" starttime="20210220 02:08:57.104"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210220 02:08:57.140" starttime="20210220 02:08:57.049"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:12:01.299" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:12:01.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:12:01.306" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:01.306" starttime="20210220 02:12:01.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:12:01.307" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:01.307" starttime="20210220 02:12:01.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:12:01.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:12:01.308" starttime="20210220 02:12:01.308"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:01.308" starttime="20210220 02:12:01.294"></status>
</kw>
<msg timestamp="20210220 02:12:01.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:12:01.309" starttime="20210220 02:12:01.294"></status>
</kw>
<msg timestamp="20210220 02:12:01.309" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:01.309" starttime="20210220 02:12:01.294"></status>
</kw>
<msg timestamp="20210220 02:12:01.310" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:01.310" starttime="20210220 02:12:01.293"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 02:12:01.315" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 02:12:01.315" starttime="20210220 02:12:01.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:12:01.316" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 02:12:01.316" starttime="20210220 02:12:01.315"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:01.316" starttime="20210220 02:12:01.314"></status>
</kw>
<msg timestamp="20210220 02:12:01.316" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 02:12:01.316" starttime="20210220 02:12:01.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:12:01.317" starttime="20210220 02:12:01.317"></status>
</kw>
<msg timestamp="20210220 02:12:01.317" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 02:12:01.317" starttime="20210220 02:12:01.316"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:01.317" starttime="20210220 02:12:01.313"></status>
</kw>
<msg timestamp="20210220 02:12:01.317" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 02:12:01.317" starttime="20210220 02:12:01.311"></status>
</kw>
<msg timestamp="20210220 02:12:01.318" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 02:12:01.318" starttime="20210220 02:12:01.310"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:12:01.321" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:12:38.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:12:38.259" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 02:12:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:12:03 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 02:12:38.259" starttime="20210220 02:12:01.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:12:38.260" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 02:12:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:12:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:12:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 02:12:03 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:12:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-12C56FDBBCAD-&gt;949dec8a-bb37-4000-aeee-afe178daf7c4
2021-02-20 02:12:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-20 02:12:07 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:12:07 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
2021-02-20 02:12:08 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787128091, maxDate=1614391928091, sequenceNumber=3, masterKeyId=2))
2021-02-20 02:12:08 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ae c1 d5 e9 fb 2e 38 ae c9 87 8a fe 2e 40 03 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-20 02:12:08 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787128091, maxDate=1614391928091, sequenceNumber=3, masterKeyId=2)
2021-02-20 02:12:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 02:12:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 02:12:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3FF5E15F3ED4-&gt;52b6d765-0501-4c48-9e43-518d62afb3eb
2021-02-20 02:12:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:12:08 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 02:12:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786887138_0003
2021-02-20 02:12:09 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ae c1 d5 e9 fb 2e 38 ae c9 87 8a fe 2e 40 03 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787128091, maxDate=1614391928091, sequenceNumber=3, masterKeyId=2)]
2021-02-20 02:12:09 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 02:12:09 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 02:12:09 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-20 02:12:10 INFO  YarnClientImpl:329 - Submitted application application_1613786887138_0003
2021-02-20 02:12:10 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786887138_0003/
2021-02-20 02:12:10 INFO  Job:1614 - Running job: job_1613786887138_0003
2021-02-20 02:12:18 INFO  Job:1635 - Job job_1613786887138_0003 running in uber mode : false
2021-02-20 02:12:18 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 02:12:29 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 02:12:30 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 02:12:31 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 02:12:35 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 02:12:37 INFO  Job:1653 - Job job_1613786887138_0003 completed successfully
2021-02-20 02:12:37 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102365
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50564
		Total time spent by all reduces in occupied slots (ms)=7804
		Total time spent by all map tasks (ms)=25282
		Total time spent by all reduce tasks (ms)=3902
		Total vcore-milliseconds taken by all map tasks=25282
		Total vcore-milliseconds taken by all reduce tasks=3902
		Total megabyte-milliseconds taken by all map tasks=51777536
		Total megabyte-milliseconds taken by all reduce tasks=7991296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1166
		CPU time spent (ms)=8110
		Physical memory (bytes) snapshot=1397727232
		Virtual memory (bytes) snapshot=14057324544
		Total committed heap usage (bytes)=1153957888
		Peak Map Physical memory (bytes)=376909824
		Peak Map Virtual memory (bytes)=3511152640
		Peak Reduce Physical memory (bytes)=325668864
		Peak Reduce Virtual memory (bytes)=3527225344
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 30.158 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210220 02:12:38.260" starttime="20210220 02:12:38.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:12:38.261" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:12:38.261" starttime="20210220 02:12:38.260"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.261" starttime="20210220 02:12:01.319"></status>
</kw>
<msg timestamp="20210220 02:12:38.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:12:38.261" starttime="20210220 02:12:01.319"></status>
</kw>
<msg timestamp="20210220 02:12:38.262" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 02:12:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:12:03 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 02:12:38.262" starttime="20210220 02:12:01.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 02:12:38.262" starttime="20210220 02:12:38.262"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 02:12:38.263" critical="yes" starttime="20210220 02:12:01.292"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:12:38.270" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:12:38.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:12:38.276" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:38.276" starttime="20210220 02:12:38.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:12:38.277" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:38.277" starttime="20210220 02:12:38.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:12:38.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:12:38.278" starttime="20210220 02:12:38.277"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.278" starttime="20210220 02:12:38.266"></status>
</kw>
<msg timestamp="20210220 02:12:38.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:12:38.278" starttime="20210220 02:12:38.266"></status>
</kw>
<msg timestamp="20210220 02:12:38.278" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:38.278" starttime="20210220 02:12:38.265"></status>
</kw>
<msg timestamp="20210220 02:12:38.279" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:12:38.279" starttime="20210220 02:12:38.265"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 02:12:38.279" level="INFO">${random} = b3ygFgi1</msg>
<status status="PASS" endtime="20210220 02:12:38.279" starttime="20210220 02:12:38.279"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 02:12:38.284" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 02:12:38.284" starttime="20210220 02:12:38.283"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:12:38.284" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 02:12:38.284" starttime="20210220 02:12:38.284"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.285" starttime="20210220 02:12:38.283"></status>
</kw>
<msg timestamp="20210220 02:12:38.285" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 02:12:38.285" starttime="20210220 02:12:38.282"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:12:38.286" starttime="20210220 02:12:38.285"></status>
</kw>
<msg timestamp="20210220 02:12:38.286" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 02:12:38.286" starttime="20210220 02:12:38.285"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.286" starttime="20210220 02:12:38.282"></status>
</kw>
<msg timestamp="20210220 02:12:38.286" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 02:12:38.286" starttime="20210220 02:12:38.281"></status>
</kw>
<msg timestamp="20210220 02:12:38.286" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 02:12:38.286" starttime="20210220 02:12:38.279"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 02:12:38.290" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 02:12:38.290" starttime="20210220 02:12:38.290"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:12:38.291" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 02:12:38.291" starttime="20210220 02:12:38.290"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.291" starttime="20210220 02:12:38.289"></status>
</kw>
<msg timestamp="20210220 02:12:38.291" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 02:12:38.291" starttime="20210220 02:12:38.289"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:12:38.293" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210220 02:12:38.293" starttime="20210220 02:12:38.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:12:38.293" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210220 02:12:38.293" starttime="20210220 02:12:38.293"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.293" starttime="20210220 02:12:38.292"></status>
</kw>
<msg timestamp="20210220 02:12:38.294" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210220 02:12:38.294" starttime="20210220 02:12:38.291"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.294" starttime="20210220 02:12:38.288"></status>
</kw>
<msg timestamp="20210220 02:12:38.294" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 02:12:38.294" starttime="20210220 02:12:38.287"></status>
</kw>
<msg timestamp="20210220 02:12:38.294" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 02:12:38.294" starttime="20210220 02:12:38.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 02:12:38.299" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 02:12:38.299" starttime="20210220 02:12:38.298"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:12:38.299" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 02:12:38.299" starttime="20210220 02:12:38.299"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.300" starttime="20210220 02:12:38.298"></status>
</kw>
<msg timestamp="20210220 02:12:38.300" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 02:12:38.300" starttime="20210220 02:12:38.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:12:38.301" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210220 02:12:38.301" starttime="20210220 02:12:38.301"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:12:38.302" level="INFO">${result} = /wordcount-b3ygFgi1.txt</msg>
<status status="PASS" endtime="20210220 02:12:38.302" starttime="20210220 02:12:38.301"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.302" starttime="20210220 02:12:38.300"></status>
</kw>
<msg timestamp="20210220 02:12:38.302" level="INFO">${path_with_leading} = /wordcount-b3ygFgi1.txt</msg>
<status status="PASS" endtime="20210220 02:12:38.302" starttime="20210220 02:12:38.300"></status>
</kw>
<status status="PASS" endtime="20210220 02:12:38.302" starttime="20210220 02:12:38.297"></status>
</kw>
<msg timestamp="20210220 02:12:38.302" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-b3ygFgi1.txt</msg>
<status status="PASS" endtime="20210220 02:12:38.302" starttime="20210220 02:12:38.296"></status>
</kw>
<msg timestamp="20210220 02:12:38.303" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-b3ygFgi1.txt</msg>
<status status="PASS" endtime="20210220 02:12:38.303" starttime="20210220 02:12:38.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:12:38.307" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-b3ygFgi1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:13:13.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:13:13.025" level="INFO">${output} = 2021-02-20 02:12:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:12:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
202...</msg>
<status status="PASS" endtime="20210220 02:13:13.025" starttime="20210220 02:12:38.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:13:13.026" level="INFO">2021-02-20 02:12:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:12:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
2021-02-20 02:12:40 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787160848, maxDate=1614391960848, sequenceNumber=4, masterKeyId=2))
2021-02-20 02:12:40 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 86 c1 d7 e9 fb 2e 38 86 c9 89 8a fe 2e 40 04 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-20 02:12:40 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787160848, maxDate=1614391960848, sequenceNumber=4, masterKeyId=2)
2021-02-20 02:12:40 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 02:12:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:12:41 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:12:41 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 02:12:41 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:12:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DC3FC0155B24-&gt;949dec8a-bb37-4000-aeee-afe178daf7c4
2021-02-20 02:12:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:12:42 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 02:12:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-900751F123AB-&gt;52b6d765-0501-4c48-9e43-518d62afb3eb
2021-02-20 02:12:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:12:42 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 02:12:43 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786887138_0004
2021-02-20 02:12:43 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 86 c1 d7 e9 fb 2e 38 86 c9 89 8a fe 2e 40 04 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787160848, maxDate=1614391960848, sequenceNumber=4, masterKeyId=2)]
2021-02-20 02:12:43 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 02:12:43 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 02:12:43 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-20 02:12:44 INFO  YarnClientImpl:329 - Submitted application application_1613786887138_0004
2021-02-20 02:12:44 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786887138_0004/
2021-02-20 02:12:44 INFO  Job:1614 - Running job: job_1613786887138_0004
2021-02-20 02:12:52 INFO  Job:1635 - Job job_1613786887138_0004 running in uber mode : false
2021-02-20 02:12:52 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 02:13:02 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 02:13:04 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 02:13:05 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 02:13:09 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 02:13:12 INFO  Job:1653 - Job job_1613786887138_0004 completed successfully
2021-02-20 02:13:12 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165047
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=47996
		Total time spent by all reduces in occupied slots (ms)=8484
		Total time spent by all map tasks (ms)=23998
		Total time spent by all reduce tasks (ms)=4242
		Total vcore-milliseconds taken by all map tasks=23998
		Total vcore-milliseconds taken by all reduce tasks=4242
		Total megabyte-milliseconds taken by all map tasks=49147904
		Total megabyte-milliseconds taken by all reduce tasks=8687616
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1497
		CPU time spent (ms)=8210
		Physical memory (bytes) snapshot=1519169536
		Virtual memory (bytes) snapshot=14006427648
		Total committed heap usage (bytes)=1379401728
		Peak Map Physical memory (bytes)=528371712
		Peak Map Virtual memory (bytes)=3511205888
		Peak Reduce Physical memory (bytes)=314875904
		Peak Reduce Virtual memory (bytes)=3519758336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210220 02:13:13.026" starttime="20210220 02:13:13.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:13:13.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:13:13.027" starttime="20210220 02:13:13.026"></status>
</kw>
<status status="PASS" endtime="20210220 02:13:13.028" starttime="20210220 02:12:38.304"></status>
</kw>
<msg timestamp="20210220 02:13:13.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:13:13.028" starttime="20210220 02:12:38.304"></status>
</kw>
<msg timestamp="20210220 02:13:13.029" level="INFO">${output} = 2021-02-20 02:12:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:12:40 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
202...</msg>
<status status="PASS" endtime="20210220 02:13:13.029" starttime="20210220 02:12:38.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 02:13:13.029" starttime="20210220 02:13:13.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 02:13:13.030" starttime="20210220 02:13:13.029"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 02:13:13.030" critical="yes" starttime="20210220 02:12:38.263"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 02:13:13.031" starttime="20210220 02:12:01.235"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:10:26.323" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:10:26.331" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:10:26.331" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:10:26.331" starttime="20210220 02:10:26.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:10:26.333" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:10:26.333" starttime="20210220 02:10:26.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:10:26.333" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:10:26.333" starttime="20210220 02:10:26.333"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:26.334" starttime="20210220 02:10:26.317"></status>
</kw>
<msg timestamp="20210220 02:10:26.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:10:26.334" starttime="20210220 02:10:26.316"></status>
</kw>
<msg timestamp="20210220 02:10:26.334" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:10:26.334" starttime="20210220 02:10:26.316"></status>
</kw>
<msg timestamp="20210220 02:10:26.334" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:10:26.334" starttime="20210220 02:10:26.315"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:10:26.339" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:10:26.339" starttime="20210220 02:10:26.339"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:10:26.340" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:10:26.340" starttime="20210220 02:10:26.339"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:26.340" starttime="20210220 02:10:26.338"></status>
</kw>
<msg timestamp="20210220 02:10:26.340" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:10:26.340" starttime="20210220 02:10:26.338"></status>
</kw>
<status status="PASS" endtime="20210220 02:10:26.340" starttime="20210220 02:10:26.337"></status>
</kw>
<msg timestamp="20210220 02:10:26.340" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 02:10:26.340" starttime="20210220 02:10:26.335"></status>
</kw>
<msg timestamp="20210220 02:10:26.341" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 02:10:26.341" starttime="20210220 02:10:26.334"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:10:26.346" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:11:11.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:11:11.050" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 02:10:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:10:28 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 02:11:11.050" starttime="20210220 02:10:26.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:11:11.052" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 02:10:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:10:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:10:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 02:10:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:10:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD7A01791284-&gt;52b6d765-0501-4c48-9e43-518d62afb3eb
2021-02-20 02:10:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-20 02:10:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-87B212D8EFB4-&gt;949dec8a-bb37-4000-aeee-afe178daf7c4
2021-02-20 02:10:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-20 02:10:32 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:10:32 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
2021-02-20 02:10:33 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787033353, maxDate=1614391833353, sequenceNumber=1, masterKeyId=2))
2021-02-20 02:10:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 97 db cf e9 fb 2e 38 97 e3 81 8a fe 2e 40 01 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-20 02:10:33 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787033353, maxDate=1614391833353, sequenceNumber=1, masterKeyId=2)
2021-02-20 02:10:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 02:10:34 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 02:10:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786887138_0001
2021-02-20 02:10:34 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 97 db cf e9 fb 2e 38 97 e3 81 8a fe 2e 40 01 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787033353, maxDate=1614391833353, sequenceNumber=1, masterKeyId=2)]
2021-02-20 02:10:34 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 02:10:34 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 02:10:34 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-20 02:10:36 INFO  YarnClientImpl:329 - Submitted application application_1613786887138_0001
2021-02-20 02:10:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786887138_0001/
2021-02-20 02:10:36 INFO  Job:1614 - Running job: job_1613786887138_0001
2021-02-20 02:10:48 INFO  Job:1635 - Job job_1613786887138_0001 running in uber mode : false
2021-02-20 02:10:48 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 02:11:00 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 02:11:01 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 02:11:02 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 02:11:09 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 02:11:10 INFO  Job:1653 - Job job_1613786887138_0001 completed successfully
2021-02-20 02:11:10 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102593
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=53412
		Total time spent by all reduces in occupied slots (ms)=13296
		Total time spent by all map tasks (ms)=26706
		Total time spent by all reduce tasks (ms)=6648
		Total vcore-milliseconds taken by all map tasks=26706
		Total vcore-milliseconds taken by all reduce tasks=6648
		Total megabyte-milliseconds taken by all map tasks=54693888
		Total megabyte-milliseconds taken by all reduce tasks=13615104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1840
		CPU time spent (ms)=8280
		Physical memory (bytes) snapshot=1644826624
		Virtual memory (bytes) snapshot=14049792000
		Total committed heap usage (bytes)=1470627840
		Peak Map Physical memory (bytes)=551940096
		Peak Map Virtual memory (bytes)=3510448128
		Peak Reduce Physical memory (bytes)=321863680
		Peak Reduce Virtual memory (bytes)=3520192512
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.95 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210220 02:11:11.052" starttime="20210220 02:11:11.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:11:11.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:11:11.053" starttime="20210220 02:11:11.053"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.054" starttime="20210220 02:10:26.342"></status>
</kw>
<msg timestamp="20210220 02:11:11.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:11:11.054" starttime="20210220 02:10:26.341"></status>
</kw>
<msg timestamp="20210220 02:11:11.055" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 02:10:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:10:28 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 02:11:11.055" starttime="20210220 02:10:26.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 02:11:11.055" starttime="20210220 02:11:11.055"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 02:11:11.056" critical="yes" starttime="20210220 02:10:26.315"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:11:11.063" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:11:11.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:11:11.070" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:11:11.070" starttime="20210220 02:11:11.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:11:11.071" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:11:11.071" starttime="20210220 02:11:11.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:11:11.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:11:11.072" starttime="20210220 02:11:11.072"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.072" starttime="20210220 02:11:11.060"></status>
</kw>
<msg timestamp="20210220 02:11:11.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:11:11.073" starttime="20210220 02:11:11.060"></status>
</kw>
<msg timestamp="20210220 02:11:11.073" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:11:11.073" starttime="20210220 02:11:11.059"></status>
</kw>
<msg timestamp="20210220 02:11:11.073" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 02:11:11.073" starttime="20210220 02:11:11.059"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 02:11:11.074" level="INFO">${random} = LhodvS14</msg>
<status status="PASS" endtime="20210220 02:11:11.074" starttime="20210220 02:11:11.073"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:11:11.078" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:11:11.078" starttime="20210220 02:11:11.078"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:11:11.079" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:11:11.079" starttime="20210220 02:11:11.079"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.079" starttime="20210220 02:11:11.077"></status>
</kw>
<msg timestamp="20210220 02:11:11.079" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:11:11.079" starttime="20210220 02:11:11.077"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.080" starttime="20210220 02:11:11.076"></status>
</kw>
<msg timestamp="20210220 02:11:11.080" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 02:11:11.080" starttime="20210220 02:11:11.075"></status>
</kw>
<msg timestamp="20210220 02:11:11.080" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 02:11:11.080" starttime="20210220 02:11:11.074"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:11:11.084" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:11:11.084" starttime="20210220 02:11:11.083"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:11:11.084" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:11:11.084" starttime="20210220 02:11:11.084"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.085" starttime="20210220 02:11:11.083"></status>
</kw>
<msg timestamp="20210220 02:11:11.085" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:11:11.085" starttime="20210220 02:11:11.082"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.085" starttime="20210220 02:11:11.082"></status>
</kw>
<msg timestamp="20210220 02:11:11.085" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 02:11:11.085" starttime="20210220 02:11:11.081"></status>
</kw>
<msg timestamp="20210220 02:11:11.085" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 02:11:11.085" starttime="20210220 02:11:11.080"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 02:11:11.089" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 02:11:11.089" starttime="20210220 02:11:11.089"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:11:11.090" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 02:11:11.090" starttime="20210220 02:11:11.090"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.090" starttime="20210220 02:11:11.088"></status>
</kw>
<msg timestamp="20210220 02:11:11.091" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 02:11:11.091" starttime="20210220 02:11:11.087"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:11.091" starttime="20210220 02:11:11.087"></status>
</kw>
<msg timestamp="20210220 02:11:11.091" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-LhodvS14.txt</msg>
<status status="PASS" endtime="20210220 02:11:11.091" starttime="20210220 02:11:11.086"></status>
</kw>
<msg timestamp="20210220 02:11:11.091" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-LhodvS14.txt</msg>
<status status="PASS" endtime="20210220 02:11:11.091" starttime="20210220 02:11:11.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:11:11.096" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-LhodvS14.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:11:44.931" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:11:44.931" level="INFO">${output} = 2021-02-20 02:11:13 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:11:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
202...</msg>
<status status="PASS" endtime="20210220 02:11:44.931" starttime="20210220 02:11:11.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:11:44.932" level="INFO">2021-02-20 02:11:13 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:11:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
2021-02-20 02:11:13 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787073779, maxDate=1614391873779, sequenceNumber=2, masterKeyId=2))
2021-02-20 02:11:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 94 99 d2 e9 fb 2e 38 94 a1 84 8a fe 2e 40 02 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-20 02:11:13 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787073779, maxDate=1614391873779, sequenceNumber=2, masterKeyId=2)
2021-02-20 02:11:13 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 02:11:14 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 02:11:14 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:11:14 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 02:11:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:11:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CC9A132CD07C-&gt;949dec8a-bb37-4000-aeee-afe178daf7c4
2021-02-20 02:11:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:11:16 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 02:11:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-23D15B5A1463-&gt;52b6d765-0501-4c48-9e43-518d62afb3eb
2021-02-20 02:11:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:11:16 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 02:11:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786887138_0002
2021-02-20 02:11:16 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.3:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 94 99 d2 e9 fb 2e 38 94 a1 84 8a fe 2e 40 02 48 01 5a 0d 32 33 30 31 39 32 39 33 39 39 33 38 36 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613787073779, maxDate=1614391873779, sequenceNumber=2, masterKeyId=2)]
2021-02-20 02:11:17 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 02:11:17 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 02:11:17 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-20 02:11:17 INFO  YarnClientImpl:329 - Submitted application application_1613786887138_0002
2021-02-20 02:11:18 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786887138_0002/
2021-02-20 02:11:18 INFO  Job:1614 - Running job: job_1613786887138_0002
2021-02-20 02:11:26 INFO  Job:1635 - Job job_1613786887138_0002 running in uber mode : false
2021-02-20 02:11:26 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 02:11:36 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 02:11:38 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 02:11:39 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 02:11:43 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 02:11:44 INFO  Job:1653 - Job job_1613786887138_0002 completed successfully
2021-02-20 02:11:44 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165131
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49052
		Total time spent by all reduces in occupied slots (ms)=8486
		Total time spent by all map tasks (ms)=24526
		Total time spent by all reduce tasks (ms)=4243
		Total vcore-milliseconds taken by all map tasks=24526
		Total vcore-milliseconds taken by all reduce tasks=4243
		Total megabyte-milliseconds taken by all map tasks=50229248
		Total megabyte-milliseconds taken by all reduce tasks=8689664
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1187
		CPU time spent (ms)=8350
		Physical memory (bytes) snapshot=1493651456
		Virtual memory (bytes) snapshot=14055993344
		Total committed heap usage (bytes)=1238892544
		Peak Map Physical memory (bytes)=395550720
		Peak Map Virtual memory (bytes)=3510886400
		Peak Reduce Physical memory (bytes)=320679936
		Peak Reduce Virtual memory (bytes)=3526979584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210220 02:11:44.932" starttime="20210220 02:11:44.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:11:44.933" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:11:44.933" starttime="20210220 02:11:44.933"></status>
</kw>
<status status="PASS" endtime="20210220 02:11:44.933" starttime="20210220 02:11:11.093"></status>
</kw>
<msg timestamp="20210220 02:11:44.934" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:11:44.934" starttime="20210220 02:11:11.092"></status>
</kw>
<msg timestamp="20210220 02:11:44.934" level="INFO">${output} = 2021-02-20 02:11:13 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-20 02:11:13 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.5:10200
202...</msg>
<status status="PASS" endtime="20210220 02:11:44.934" starttime="20210220 02:11:11.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 02:11:44.935" starttime="20210220 02:11:44.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 02:11:44.935" starttime="20210220 02:11:44.935"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 02:11:44.936" critical="yes" starttime="20210220 02:11:11.058"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 02:11:44.937" starttime="20210220 02:10:26.261"></status>
</suite>
<status status="PASS" elapsedtime="213017" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
