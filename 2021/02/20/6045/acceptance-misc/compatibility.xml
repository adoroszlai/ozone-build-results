<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210220 01:33:23.678" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="compatibility">
<suite source="/opt/hadoop/smoketest/compatibility/dn.robot" id="s1-s1" name="Dn">
<test id="s1-s1-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HDDS_DN_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:03.338" starttime="20210220 01:33:03.338"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:33:03.347" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:33:03.350" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:33:03.350" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoo...</msg>
<status status="PASS" endtime="20210220 01:33:03.350" starttime="20210220 01:33:03.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:33:03.351" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoop       7 27.5  3.6 3711104 258252 ?      Ssl  01:32   0:08 /usr/lib/jvm/jre//bin/java -Dproc_datanode -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dlog4j.configurationFile=/etc/hadoop/dn-audit-log4j2.properties -Dorg.apache.ratis.thirdparty.io.netty.leakDetection.level=disabled -Dorg.apache.ratis.thirdparty.io.netty.allocator.useCacheForAllThreads=false -Dhdds.dn.opts=test -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.ozone.HddsDatanodeService
hadoop     127  0.0  0.3 127712 25604 ?        Ss   01:33   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-dn-datanode.xml /opt/hadoop/smoketest/compatibility/dn.robot
hadoop     134  0.0  0.0  11692  2544 ?        S    01:33   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     135  0.0  0.0  51748  3492 ?        R    01:33   0:00 ps aux</msg>
<status status="PASS" endtime="20210220 01:33:03.351" starttime="20210220 01:33:03.351"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:33:03.352" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:33:03.352" starttime="20210220 01:33:03.352"></status>
</kw>
<status status="PASS" endtime="20210220 01:33:03.352" starttime="20210220 01:33:03.339"></status>
</kw>
<msg timestamp="20210220 01:33:03.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:33:03.353" starttime="20210220 01:33:03.339"></status>
</kw>
<msg timestamp="20210220 01:33:03.353" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoo...</msg>
<status status="PASS" endtime="20210220 01:33:03.353" starttime="20210220 01:33:03.339"></status>
</kw>
<msg timestamp="20210220 01:33:03.353" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoo...</msg>
<status status="PASS" endtime="20210220 01:33:03.353" starttime="20210220 01:33:03.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HDDS_DN_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:03.354" starttime="20210220 01:33:03.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:03.355" starttime="20210220 01:33:03.354"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:33:03.355" critical="yes" starttime="20210220 01:33:03.337"></status>
</test>
<doc>Test datanode compatibility</doc>
<status status="PASS" endtime="20210220 01:33:03.356" starttime="20210220 01:33:03.296"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/om.robot" id="s1-s2" name="Om">
<test id="s1-s2-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HDFS_OM_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:07.506" starttime="20210220 01:33:07.506"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:33:07.525" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:33:07.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:33:07.538" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop     ...</msg>
<status status="PASS" endtime="20210220 01:33:07.538" starttime="20210220 01:33:07.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:33:07.539" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop       7 23.0  3.8 3898628 274360 ?      Ssl  01:32   0:08 /usr/lib/jvm/jre//bin/java -Dproc_om -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dorg.apache.ratis.thirdparty.io.netty.leakDetection.level=disabled -Dorg.apache.ratis.thirdparty.io.netty.allocator.useCacheForAllThreads=false -Dhdfs.om.opts=test -Dlog4j.configurationFile=/etc/hadoop/om-audit-log4j2.properties -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.ozone.om.OzoneManagerStarter
hadoop     314 26.0  0.3 127712 25668 ?        Ss   01:33   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-om-om.xml /opt/hadoop/smoketest/compatibility/om.robot
hadoop     322  0.0  0.0  11692  2504 ?        S    01:33   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     323  0.0  0.0  51748  3500 ?        R    01:33   0:00 ps aux</msg>
<status status="PASS" endtime="20210220 01:33:07.539" starttime="20210220 01:33:07.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:33:07.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:33:07.539" starttime="20210220 01:33:07.539"></status>
</kw>
<status status="PASS" endtime="20210220 01:33:07.540" starttime="20210220 01:33:07.507"></status>
</kw>
<msg timestamp="20210220 01:33:07.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:33:07.540" starttime="20210220 01:33:07.507"></status>
</kw>
<msg timestamp="20210220 01:33:07.541" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop     ...</msg>
<status status="PASS" endtime="20210220 01:33:07.541" starttime="20210220 01:33:07.507"></status>
</kw>
<msg timestamp="20210220 01:33:07.541" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop     ...</msg>
<status status="PASS" endtime="20210220 01:33:07.541" starttime="20210220 01:33:07.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HDFS_OM_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:07.542" starttime="20210220 01:33:07.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:07.542" starttime="20210220 01:33:07.542"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:33:07.542" critical="yes" starttime="20210220 01:33:07.505"></status>
</test>
<doc>Test om compatibility</doc>
<status status="PASS" endtime="20210220 01:33:07.543" starttime="20210220 01:33:07.413"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/recon.robot" id="s1-s3" name="Recon">
<test id="s1-s3-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HADOOP_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:11.752" starttime="20210220 01:33:11.752"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:33:11.758" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:33:11.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:33:11.764" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop  ...</msg>
<status status="PASS" endtime="20210220 01:33:11.764" starttime="20210220 01:33:11.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:33:11.765" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop       8 33.6  3.7 3939380 265132 ?      Ssl  01:32   0:13 /usr/lib/jvm/jre//bin/java -Dproc_recon -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.ozone.recon.ReconServer
hadoop     270  0.0  0.3 127712 25740 ?        Ss   01:33   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-recon-recon.xml /opt/hadoop/smoketest/compatibility/recon.robot
hadoop     278  0.0  0.0  11692  2612 ?        S    01:33   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     279  0.0  0.0  51748  3552 ?        R    01:33   0:00 ps aux</msg>
<status status="PASS" endtime="20210220 01:33:11.766" starttime="20210220 01:33:11.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:33:11.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:33:11.766" starttime="20210220 01:33:11.766"></status>
</kw>
<status status="PASS" endtime="20210220 01:33:11.767" starttime="20210220 01:33:11.754"></status>
</kw>
<msg timestamp="20210220 01:33:11.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:33:11.767" starttime="20210220 01:33:11.753"></status>
</kw>
<msg timestamp="20210220 01:33:11.767" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop  ...</msg>
<status status="PASS" endtime="20210220 01:33:11.767" starttime="20210220 01:33:11.753"></status>
</kw>
<msg timestamp="20210220 01:33:11.767" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop  ...</msg>
<status status="PASS" endtime="20210220 01:33:11.767" starttime="20210220 01:33:11.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:11.768" starttime="20210220 01:33:11.768"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:33:11.768" critical="yes" starttime="20210220 01:33:11.751"></status>
</test>
<doc>Test recon compatibility</doc>
<status status="PASS" endtime="20210220 01:33:11.769" starttime="20210220 01:33:11.711"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/scm.robot" id="s1-s4" name="Scm">
<test id="s1-s4-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HDFS_STORAGECONTAINERMANAGER_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:15.830" starttime="20210220 01:33:15.830"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:33:15.835" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:33:15.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:33:15.840" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop    ...</msg>
<status status="PASS" endtime="20210220 01:33:15.840" starttime="20210220 01:33:15.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:33:15.841" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop       7 16.8  3.7 4109372 268924 ?      Ssl  01:32   0:07 /usr/lib/jvm/jre//bin/java -Dproc_scm -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dorg.apache.ratis.thirdparty.io.netty.leakDetection.level=disabled -Dorg.apache.ratis.thirdparty.io.netty.allocator.useCacheForAllThreads=false -Dhdfs.scm.opts=test -Dlog4j.configurationFile=/etc/hadoop/scm-audit-log4j2.properties -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.hdds.scm.server.StorageContainerManagerStarter
hadoop     636  0.0  0.3 127712 25712 ?        Ss   01:33   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-scm-scm.xml /opt/hadoop/smoketest/compatibility/scm.robot
hadoop     643  0.0  0.0  11692  2660 ?        S    01:33   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     644  0.0  0.0  51748  3572 ?        R    01:33   0:00 ps aux</msg>
<status status="PASS" endtime="20210220 01:33:15.841" starttime="20210220 01:33:15.841"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:33:15.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:33:15.842" starttime="20210220 01:33:15.841"></status>
</kw>
<status status="PASS" endtime="20210220 01:33:15.842" starttime="20210220 01:33:15.831"></status>
</kw>
<msg timestamp="20210220 01:33:15.842" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:33:15.842" starttime="20210220 01:33:15.831"></status>
</kw>
<msg timestamp="20210220 01:33:15.843" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop    ...</msg>
<status status="PASS" endtime="20210220 01:33:15.843" starttime="20210220 01:33:15.831"></status>
</kw>
<msg timestamp="20210220 01:33:15.843" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   01:32   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop    ...</msg>
<status status="PASS" endtime="20210220 01:33:15.843" starttime="20210220 01:33:15.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HDFS_STORAGECONTAINERMANAGER_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:15.844" starttime="20210220 01:33:15.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:33:15.844" starttime="20210220 01:33:15.844"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:33:15.844" critical="yes" starttime="20210220 01:33:15.829"></status>
</test>
<doc>Test scm compatibility</doc>
<status status="PASS" endtime="20210220 01:33:15.845" starttime="20210220 01:33:15.789"></status>
</suite>
<status status="PASS" elapsedtime="304" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="compatibility" pass="4">compatibility</stat>
<stat fail="0" id="s1-s1" name="Dn" pass="1">compatibility.Dn</stat>
<stat fail="0" id="s1-s2" name="Om" pass="1">compatibility.Om</stat>
<stat fail="0" id="s1-s3" name="Recon" pass="1">compatibility.Recon</stat>
<stat fail="0" id="s1-s4" name="Scm" pass="1">compatibility.Scm</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
