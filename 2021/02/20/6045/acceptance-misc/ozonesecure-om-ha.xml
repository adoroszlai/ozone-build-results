<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210220 02:20:45.764" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:16:37.039" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:16:47.916" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:16:47.916" level="INFO">${output} = 2021-02-20 02:16:38,766 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:38,934 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:16:47.917" starttime="20210220 02:16:37.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:16:47.918" level="INFO">2021-02-20 02:16:38,766 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:38,934 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:16:38,934 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:16:39,118 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-20 02:16:39,136 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:40,145 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:40,690 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-20 02:16:41,146 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:41,184 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-20 02:16:42,151 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:43,160 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:43,827 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:16:44,088 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:16:44,088 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-8E9ADBD844FD-&gt;7923f491-07a3-43d0-85f0-42aa6ccc4619
2021-02-20 02:16:44,089 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:16:44,160 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:45,160 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:46,161 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:47,161 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:16:47,563 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5447.951159, max=5447.951159, mean=5447.951159, stddev=0.0, median=5447.951159, p75=5447.951159, p95=5447.951159, p98=5447.951159, p99=5447.951159, p999=5447.951159, mean_rate=0.16416533516158008, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:16:47,569 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 8
2021-02-20 02:16:47,581 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:16:47,581 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:16:47.918" starttime="20210220 02:16:47.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:16:47.918" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:16:47.918" starttime="20210220 02:16:47.918"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:47.919" starttime="20210220 02:16:37.034"></status>
</kw>
<msg timestamp="20210220 02:16:47.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:16:47.919" starttime="20210220 02:16:37.034"></status>
</kw>
<msg timestamp="20210220 02:16:47.919" level="INFO">${result} = 2021-02-20 02:16:38,766 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:38,934 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:16:47.919" starttime="20210220 02:16:37.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:16:47.920" starttime="20210220 02:16:47.919"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:16:47.920" critical="yes" starttime="20210220 02:16:37.032"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:16:47.926" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:16:52.636" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:16:52.636" level="INFO">${output} = 2021-02-20 02:16:49,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:49,849 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:16:52.636" starttime="20210220 02:16:47.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:16:52.637" level="INFO">2021-02-20 02:16:49,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:49,849 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:16:49,849 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:16:49,983 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-20 02:16:50,000 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:51,002 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:52,003 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:16:52,583 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=304.640865, max=304.640865, mean=304.640865, stddev=0.0, median=304.640865, p75=304.640865, p95=304.640865, p98=304.640865, p99=304.640865, p999=304.640865, mean_rate=0.9733935763373083, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:16:52,585 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-20 02:16:52,587 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:16:52,587 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:16:52.638" starttime="20210220 02:16:52.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:16:52.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:16:52.638" starttime="20210220 02:16:52.638"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:52.639" starttime="20210220 02:16:47.922"></status>
</kw>
<msg timestamp="20210220 02:16:52.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:16:52.639" starttime="20210220 02:16:47.922"></status>
</kw>
<msg timestamp="20210220 02:16:52.639" level="INFO">${result} = 2021-02-20 02:16:49,757 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:49,849 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:16:52.639" starttime="20210220 02:16:47.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:16:52.640" starttime="20210220 02:16:52.639"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:16:52.640" critical="yes" starttime="20210220 02:16:47.921"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:16:52.645" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:16:57.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:16:57.219" level="INFO">${output} = 2021-02-20 02:16:54,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:54,560 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:16:57.219" starttime="20210220 02:16:52.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:16:57.221" level="INFO">2021-02-20 02:16:54,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:54,560 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:16:54,560 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:16:54,729 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-20 02:16:54,757 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:55,763 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:16:56,764 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:16:57,195 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=98.77359, max=98.77359, mean=98.77359, stddev=0.0, median=98.77359, p75=98.77359, p95=98.77359, p98=98.77359, p99=98.77359, p999=98.77359, mean_rate=0.9668035883557139, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:16:57,197 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-20 02:16:57,197 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:16:57,198 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:16:57.221" starttime="20210220 02:16:57.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:16:57.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:16:57.221" starttime="20210220 02:16:57.221"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:57.222" starttime="20210220 02:16:52.643"></status>
</kw>
<msg timestamp="20210220 02:16:57.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:16:57.222" starttime="20210220 02:16:52.642"></status>
</kw>
<msg timestamp="20210220 02:16:57.222" level="INFO">${result} = 2021-02-20 02:16:54,382 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:54,560 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:16:57.222" starttime="20210220 02:16:52.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:16:57.223" starttime="20210220 02:16:57.222"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:16:57.223" critical="yes" starttime="20210220 02:16:52.640"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210220 02:16:57.224" starttime="20210220 02:16:37.016"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:16:57.235" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:04.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:04.533" level="INFO">${output} = 2021-02-20 02:16:59,020 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:59,183 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:17:04.533" starttime="20210220 02:16:57.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:04.534" level="INFO">2021-02-20 02:16:59,020 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:59,183 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:16:59,183 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:16:59,358 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-20 02:16:59,384 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:17:00,390 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:17:01,391 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:17:01,922 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:17:02,392 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:17:03,392 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:17:04,058 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=79.942256, max=79.942256, mean=79.942256, stddev=0.0, median=79.942256, p75=79.942256, p95=79.942256, p98=79.942256, p99=79.942256, p999=79.942256, mean_rate=0.9664174899299418, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:17:04,058 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-02-20 02:17:04,061 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:17:04,061 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:17:04.535" starttime="20210220 02:17:04.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:04.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:04.535" starttime="20210220 02:17:04.535"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:04.536" starttime="20210220 02:16:57.233"></status>
</kw>
<msg timestamp="20210220 02:17:04.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:04.536" starttime="20210220 02:16:57.232"></status>
</kw>
<msg timestamp="20210220 02:17:04.536" level="INFO">${result} = 2021-02-20 02:16:59,020 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:16:59,183 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:17:04.536" starttime="20210220 02:16:57.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:17:04.537" starttime="20210220 02:17:04.537"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:17:04.537" critical="yes" starttime="20210220 02:16:57.231"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210220 02:17:04.538" starttime="20210220 02:16:57.227"></status>
</suite>
<status status="PASS" endtime="20210220 02:17:04.541" starttime="20210220 02:16:36.989"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:16:31.499" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:16:31.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:16:31.501" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:16:31.501" starttime="20210220 02:16:31.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:16:31.502" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:16:31.503" starttime="20210220 02:16:31.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:16:31.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:16:31.504" starttime="20210220 02:16:31.503"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:31.504" starttime="20210220 02:16:31.494"></status>
</kw>
<msg timestamp="20210220 02:16:31.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:16:31.504" starttime="20210220 02:16:31.493"></status>
</kw>
<msg timestamp="20210220 02:16:31.504" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:16:31.504" starttime="20210220 02:16:31.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:16:31.505" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:16:31.505" starttime="20210220 02:16:31.505"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:16:31.509" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:16:31.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:16:31.516" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:16:31.516" starttime="20210220 02:16:31.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:16:31.517" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:16:31.517" starttime="20210220 02:16:31.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:16:31.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:16:31.518" starttime="20210220 02:16:31.518"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:31.518" starttime="20210220 02:16:31.507"></status>
</kw>
<msg timestamp="20210220 02:16:31.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:16:31.519" starttime="20210220 02:16:31.506"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:31.519" starttime="20210220 02:16:31.506"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:31.519" starttime="20210220 02:16:31.505"></status>
</kw>
<status status="PASS" endtime="20210220 02:16:31.519" starttime="20210220 02:16:31.492"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:16:31.519" critical="yes" starttime="20210220 02:16:31.491"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210220 02:16:31.520" starttime="20210220 02:16:31.440"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 02:17:09.995" level="INFO">${random} = 37161</msg>
<status status="PASS" endtime="20210220 02:17:09.995" starttime="20210220 02:17:09.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210220 02:17:09.996" level="INFO">${source} = 37161-source</msg>
<status status="PASS" endtime="20210220 02:17:09.996" starttime="20210220 02:17:09.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210220 02:17:09.997" level="INFO">${target} = 37161-target</msg>
<status status="PASS" endtime="20210220 02:17:09.997" starttime="20210220 02:17:09.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:10.002" level="INFO">Running command 'ozone sh volume create 37161-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:13.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:13.505" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:13.505" starttime="20210220 02:17:09.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:13.506" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:13.506" starttime="20210220 02:17:13.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:13.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:13.507" starttime="20210220 02:17:13.506"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:13.507" starttime="20210220 02:17:09.998"></status>
</kw>
<msg timestamp="20210220 02:17:13.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:13.507" starttime="20210220 02:17:09.998"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:13.507" starttime="20210220 02:17:09.998"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:13.511" level="INFO">Running command 'ozone sh volume create 37161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:17.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:17.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:17.401" starttime="20210220 02:17:13.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:17.402" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:17.402" starttime="20210220 02:17:17.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:17.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:17.403" starttime="20210220 02:17:17.403"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:17.403" starttime="20210220 02:17:13.508"></status>
</kw>
<msg timestamp="20210220 02:17:17.403" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:17.404" starttime="20210220 02:17:13.508"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:17.404" starttime="20210220 02:17:13.508"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:17.408" level="INFO">Running command 'ozone sh bucket create 37161-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:21.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:21.014" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:21.014" starttime="20210220 02:17:17.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:21.015" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:21.015" starttime="20210220 02:17:21.014"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:21.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:21.016" starttime="20210220 02:17:21.015"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:21.016" starttime="20210220 02:17:17.406"></status>
</kw>
<msg timestamp="20210220 02:17:21.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:21.016" starttime="20210220 02:17:17.405"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:21.019" starttime="20210220 02:17:17.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:21.022" level="INFO">Running command 'ozone sh key put 37161-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:27.042" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:27.042" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:27.042" starttime="20210220 02:17:21.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:27.043" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:27.044" starttime="20210220 02:17:27.043"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:27.044" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:27.044" starttime="20210220 02:17:27.044"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:27.044" starttime="20210220 02:17:21.020"></status>
</kw>
<msg timestamp="20210220 02:17:27.045" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:27.045" starttime="20210220 02:17:21.019"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:27.045" starttime="20210220 02:17:21.019"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:27.049" level="INFO">Running command 'ozone sh bucket create 37161-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:30.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:30.972" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:30.972" starttime="20210220 02:17:27.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:30.974" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:30.974" starttime="20210220 02:17:30.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:30.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:30.974" starttime="20210220 02:17:30.974"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:30.974" starttime="20210220 02:17:27.046"></status>
</kw>
<msg timestamp="20210220 02:17:30.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:30.975" starttime="20210220 02:17:27.046"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:30.975" starttime="20210220 02:17:27.045"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:30.980" level="INFO">Running command 'ozone sh bucket link 37161-source/readable-bucket 37161-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:34.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:34.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:34.439" starttime="20210220 02:17:30.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:34.440" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:34.440" starttime="20210220 02:17:34.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:34.440" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:34.440" starttime="20210220 02:17:34.440"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:34.441" starttime="20210220 02:17:30.976"></status>
</kw>
<msg timestamp="20210220 02:17:34.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:34.441" starttime="20210220 02:17:30.975"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:34.441" starttime="20210220 02:17:30.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:34.444" level="INFO">Running command 'ozone sh bucket link 37161-source/readable-bucket 37161-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:37.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:37.901" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:37.901" starttime="20210220 02:17:34.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:37.902" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:37.902" starttime="20210220 02:17:37.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:37.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:37.903" starttime="20210220 02:17:37.902"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:37.903" starttime="20210220 02:17:34.442"></status>
</kw>
<msg timestamp="20210220 02:17:37.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:37.903" starttime="20210220 02:17:34.442"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:37.903" starttime="20210220 02:17:34.441"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:37.907" level="INFO">Running command 'ozone sh bucket link 37161-source/unreadable-bucket 37161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:41.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:41.630" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:41.630" starttime="20210220 02:17:37.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:41.631" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:41.631" starttime="20210220 02:17:41.630"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:41.631" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:41.632" starttime="20210220 02:17:41.631"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:41.632" starttime="20210220 02:17:37.904"></status>
</kw>
<msg timestamp="20210220 02:17:41.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:41.632" starttime="20210220 02:17:37.904"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:41.632" starttime="20210220 02:17:37.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:41.636" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 37161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:45.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:45.333" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:45.333" starttime="20210220 02:17:41.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:45.334" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:45.334" starttime="20210220 02:17:45.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:45.335" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:45.335" starttime="20210220 02:17:45.334"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:45.335" starttime="20210220 02:17:41.633"></status>
</kw>
<msg timestamp="20210220 02:17:45.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:45.336" starttime="20210220 02:17:41.633"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:45.336" starttime="20210220 02:17:41.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:45.339" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 37161-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:49.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:49.022" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:49.022" starttime="20210220 02:17:45.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:49.023" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:49.023" starttime="20210220 02:17:49.023"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:49.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:49.024" starttime="20210220 02:17:49.024"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:49.024" starttime="20210220 02:17:45.337"></status>
</kw>
<msg timestamp="20210220 02:17:49.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:49.024" starttime="20210220 02:17:45.337"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:49.025" starttime="20210220 02:17:45.336"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:49.028" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 37161-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:52.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:52.484" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:52.484" starttime="20210220 02:17:49.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:52.485" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:52.485" starttime="20210220 02:17:52.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:52.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:52.486" starttime="20210220 02:17:52.485"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:52.486" starttime="20210220 02:17:49.026"></status>
</kw>
<msg timestamp="20210220 02:17:52.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:52.486" starttime="20210220 02:17:49.025"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:52.486" starttime="20210220 02:17:49.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:52.490" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 37161-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:56.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:56.007" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:56.007" starttime="20210220 02:17:52.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:56.008" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:56.008" starttime="20210220 02:17:56.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:56.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:56.009" starttime="20210220 02:17:56.008"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:56.009" starttime="20210220 02:17:52.487"></status>
</kw>
<msg timestamp="20210220 02:17:56.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:56.009" starttime="20210220 02:17:52.487"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:56.009" starttime="20210220 02:17:52.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:56.013" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 37161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:59.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:59.592" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:59.593" starttime="20210220 02:17:56.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:59.593" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:17:59.594" starttime="20210220 02:17:59.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:59.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:59.594" starttime="20210220 02:17:59.594"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.595" starttime="20210220 02:17:56.010"></status>
</kw>
<msg timestamp="20210220 02:17:59.595" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:59.595" starttime="20210220 02:17:56.010"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.595" starttime="20210220 02:17:56.010"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.595" starttime="20210220 02:17:17.404"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.595" starttime="20210220 02:17:17.404"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.595" starttime="20210220 02:17:09.994"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:59.601" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:59.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:59.604" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:17:59.604" starttime="20210220 02:17:59.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:59.605" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:17:59.605" starttime="20210220 02:17:59.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:59.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:59.606" starttime="20210220 02:17:59.606"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.606" starttime="20210220 02:17:59.599"></status>
</kw>
<msg timestamp="20210220 02:17:59.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:59.607" starttime="20210220 02:17:59.598"></status>
</kw>
<msg timestamp="20210220 02:17:59.607" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:17:59.607" starttime="20210220 02:17:59.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:17:59.608" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:17:59.608" starttime="20210220 02:17:59.607"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:59.612" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:17:59.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:17:59.619" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:17:59.619" starttime="20210220 02:17:59.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:17:59.620" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:17:59.620" starttime="20210220 02:17:59.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:17:59.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:17:59.621" starttime="20210220 02:17:59.620"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.621" starttime="20210220 02:17:59.610"></status>
</kw>
<msg timestamp="20210220 02:17:59.621" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:17:59.621" starttime="20210220 02:17:59.609"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.622" starttime="20210220 02:17:59.609"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.622" starttime="20210220 02:17:59.608"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.622" starttime="20210220 02:17:59.597"></status>
</kw>
<status status="PASS" endtime="20210220 02:17:59.622" starttime="20210220 02:17:59.597"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:17:59.625" level="INFO">Running command 'ozone sh bucket link 37161-source/no-such-bucket 37161-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:03.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:03.167" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:03.168" starttime="20210220 02:17:59.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:03.169" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:03.169" starttime="20210220 02:18:03.168"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:03.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:03.169" starttime="20210220 02:18:03.169"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:03.170" starttime="20210220 02:17:59.623"></status>
</kw>
<msg timestamp="20210220 02:18:03.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:03.170" starttime="20210220 02:17:59.623"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:03.170" starttime="20210220 02:17:59.622"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:03.173" level="INFO">Running command 'ozone sh key list 37161-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:06.872" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:18:06.873" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210220 02:18:06.873" starttime="20210220 02:18:03.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:06.874" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210220 02:18:06.874" starttime="20210220 02:18:06.873"></status>
</kw>
<msg timestamp="20210220 02:18:06.874" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210220 02:18:06.874" starttime="20210220 02:18:03.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:06.875" starttime="20210220 02:18:06.874"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:18:06.875" critical="yes" starttime="20210220 02:17:59.596"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:06.881" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:06.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:06.884" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:18:06.884" starttime="20210220 02:18:06.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:06.885" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:18:06.885" starttime="20210220 02:18:06.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:06.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:06.886" starttime="20210220 02:18:06.885"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:06.886" starttime="20210220 02:18:06.879"></status>
</kw>
<msg timestamp="20210220 02:18:06.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:06.886" starttime="20210220 02:18:06.878"></status>
</kw>
<msg timestamp="20210220 02:18:06.886" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:18:06.887" starttime="20210220 02:18:06.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:18:06.887" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:18:06.887" starttime="20210220 02:18:06.887"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:06.891" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:06.898" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:06.898" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:06.898" starttime="20210220 02:18:06.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:06.899" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:06.899" starttime="20210220 02:18:06.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:06.900" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:06.900" starttime="20210220 02:18:06.900"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:06.900" starttime="20210220 02:18:06.889"></status>
</kw>
<msg timestamp="20210220 02:18:06.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:06.901" starttime="20210220 02:18:06.888"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:06.901" starttime="20210220 02:18:06.888"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:06.901" starttime="20210220 02:18:06.887"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:06.901" starttime="20210220 02:18:06.877"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:06.901" starttime="20210220 02:18:06.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:06.905" level="INFO">Running command 'ozone sh bucket link 37161-source/bucket1 37161-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:10.509" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:10.509" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:10.509" starttime="20210220 02:18:06.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:10.511" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:10.511" starttime="20210220 02:18:10.510"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:10.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:10.512" starttime="20210220 02:18:10.511"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:10.512" starttime="20210220 02:18:06.902"></status>
</kw>
<msg timestamp="20210220 02:18:10.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:10.513" starttime="20210220 02:18:06.902"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:10.513" starttime="20210220 02:18:06.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:10.517" level="INFO">Running command 'ozone sh bucket create 37161-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:14.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:14.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:14.027" starttime="20210220 02:18:10.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:14.029" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:14.029" starttime="20210220 02:18:14.028"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:14.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:14.030" starttime="20210220 02:18:14.029"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:14.030" starttime="20210220 02:18:10.514"></status>
</kw>
<msg timestamp="20210220 02:18:14.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:14.030" starttime="20210220 02:18:10.514"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:14.030" starttime="20210220 02:18:10.513"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:14.034" level="INFO">Running command 'ozone sh key put 37161-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:20.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:20.360" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:20.360" starttime="20210220 02:18:14.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:20.361" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:20.361" starttime="20210220 02:18:20.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:20.361" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:20.362" starttime="20210220 02:18:20.361"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:20.362" starttime="20210220 02:18:14.031"></status>
</kw>
<msg timestamp="20210220 02:18:20.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:20.362" starttime="20210220 02:18:14.031"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:20.362" starttime="20210220 02:18:14.031"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210220 02:18:20.364" level="INFO">${postfix} = 37716</msg>
<status status="PASS" endtime="20210220 02:18:20.364" starttime="20210220 02:18:20.363"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210220 02:18:20.365" level="INFO">${tmpfile} = /tmp/tempkey-37716</msg>
<status status="PASS" endtime="20210220 02:18:20.365" starttime="20210220 02:18:20.364"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:20.368" level="INFO">Running command 'ozone sh key get 37161-target/link1/key1 /tmp/tempkey-37716 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:26.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:26.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:26.458" starttime="20210220 02:18:20.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.459" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:26.459" starttime="20210220 02:18:26.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:26.461" starttime="20210220 02:18:26.460"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.461" starttime="20210220 02:18:20.366"></status>
</kw>
<msg timestamp="20210220 02:18:26.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:26.461" starttime="20210220 02:18:20.365"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.461" starttime="20210220 02:18:20.365"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210220 02:18:26.463" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-37716 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:26.469" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210220 02:18:26.469" starttime="20210220 02:18:26.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:26.474" level="INFO">Running command 'rm -f /tmp/tempkey-37716 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:26.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:26.476" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:26.476" starttime="20210220 02:18:26.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.477" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:26.477" starttime="20210220 02:18:26.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:26.478" starttime="20210220 02:18:26.477"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.478" starttime="20210220 02:18:26.471"></status>
</kw>
<msg timestamp="20210220 02:18:26.478" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:26.478" starttime="20210220 02:18:26.470"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.479" starttime="20210220 02:18:26.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:18:26.479" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210220 02:18:26.479" starttime="20210220 02:18:26.479"></status>
</kw>
<msg timestamp="20210220 02:18:26.479" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210220 02:18:26.480" starttime="20210220 02:18:20.363"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:26.480" starttime="20210220 02:18:26.480"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.480" starttime="20210220 02:18:20.362"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:18:26.480" critical="yes" starttime="20210220 02:18:06.876"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:26.486" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:26.489" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:26.489" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:18:26.489" starttime="20210220 02:18:26.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.490" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:18:26.490" starttime="20210220 02:18:26.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:26.491" starttime="20210220 02:18:26.490"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.491" starttime="20210220 02:18:26.483"></status>
</kw>
<msg timestamp="20210220 02:18:26.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:26.491" starttime="20210220 02:18:26.483"></status>
</kw>
<msg timestamp="20210220 02:18:26.491" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:18:26.491" starttime="20210220 02:18:26.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:18:26.492" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:18:26.492" starttime="20210220 02:18:26.491"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:26.496" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:26.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:26.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:26.503" starttime="20210220 02:18:26.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.504" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:26.504" starttime="20210220 02:18:26.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:26.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:26.505" starttime="20210220 02:18:26.504"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.505" starttime="20210220 02:18:26.493"></status>
</kw>
<msg timestamp="20210220 02:18:26.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:26.505" starttime="20210220 02:18:26.493"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.505" starttime="20210220 02:18:26.492"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.505" starttime="20210220 02:18:26.492"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.506" starttime="20210220 02:18:26.482"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:26.506" starttime="20210220 02:18:26.482"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:26.509" level="INFO">Running command 'ozone sh key put 37161-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:32.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:32.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:32.980" starttime="20210220 02:18:26.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:32.981" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:32.981" starttime="20210220 02:18:32.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:32.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:32.982" starttime="20210220 02:18:32.981"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:32.982" starttime="20210220 02:18:26.507"></status>
</kw>
<msg timestamp="20210220 02:18:32.982" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:32.982" starttime="20210220 02:18:26.507"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:32.982" starttime="20210220 02:18:26.506"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210220 02:18:32.984" level="INFO">${postfix} = 44810</msg>
<status status="PASS" endtime="20210220 02:18:32.984" starttime="20210220 02:18:32.983"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210220 02:18:32.985" level="INFO">${tmpfile} = /tmp/tempkey-44810</msg>
<status status="PASS" endtime="20210220 02:18:32.985" starttime="20210220 02:18:32.984"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:32.988" level="INFO">Running command 'ozone sh key get 37161-source/bucket1/key2 /tmp/tempkey-44810 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:39.392" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:39.392" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:39.392" starttime="20210220 02:18:32.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.393" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:39.394" starttime="20210220 02:18:39.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:39.394" starttime="20210220 02:18:39.394"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.395" starttime="20210220 02:18:32.986"></status>
</kw>
<msg timestamp="20210220 02:18:39.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:39.395" starttime="20210220 02:18:32.985"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.395" starttime="20210220 02:18:32.985"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210220 02:18:39.397" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-44810 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:39.401" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210220 02:18:39.401" starttime="20210220 02:18:39.395"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:39.406" level="INFO">Running command 'rm -f /tmp/tempkey-44810 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:39.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:39.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:39.408" starttime="20210220 02:18:39.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.409" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:39.410" starttime="20210220 02:18:39.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:39.410" starttime="20210220 02:18:39.410"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.410" starttime="20210220 02:18:39.403"></status>
</kw>
<msg timestamp="20210220 02:18:39.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:39.411" starttime="20210220 02:18:39.403"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.411" starttime="20210220 02:18:39.401"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:18:39.411" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210220 02:18:39.411" starttime="20210220 02:18:39.411"></status>
</kw>
<msg timestamp="20210220 02:18:39.412" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210220 02:18:39.412" starttime="20210220 02:18:32.983"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:39.412" starttime="20210220 02:18:39.412"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.412" starttime="20210220 02:18:32.982"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:18:39.413" critical="yes" starttime="20210220 02:18:26.481"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:39.419" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:39.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:39.427" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:18:39.427" starttime="20210220 02:18:39.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.429" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:18:39.429" starttime="20210220 02:18:39.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.429" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:39.430" starttime="20210220 02:18:39.429"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.430" starttime="20210220 02:18:39.416"></status>
</kw>
<msg timestamp="20210220 02:18:39.430" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:39.430" starttime="20210220 02:18:39.416"></status>
</kw>
<msg timestamp="20210220 02:18:39.431" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:18:39.431" starttime="20210220 02:18:39.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:18:39.432" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:18:39.432" starttime="20210220 02:18:39.432"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:39.437" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:39.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:39.444" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:39.445" starttime="20210220 02:18:39.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.446" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:39.446" starttime="20210220 02:18:39.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:39.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:39.446" starttime="20210220 02:18:39.446"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.447" starttime="20210220 02:18:39.434"></status>
</kw>
<msg timestamp="20210220 02:18:39.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:39.447" starttime="20210220 02:18:39.433"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.447" starttime="20210220 02:18:39.433"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.447" starttime="20210220 02:18:39.432"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.447" starttime="20210220 02:18:39.415"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:39.447" starttime="20210220 02:18:39.414"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:39.452" level="INFO">Running command 'ozone sh key list 37161-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:43.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:43.181" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210220 02:18:43.181" starttime="20210220 02:18:39.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:43.182" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210220 02:18:43.182" starttime="20210220 02:18:43.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:43.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:43.183" starttime="20210220 02:18:43.183"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:43.183" starttime="20210220 02:18:39.449"></status>
</kw>
<msg timestamp="20210220 02:18:43.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:43.183" starttime="20210220 02:18:39.449"></status>
</kw>
<msg timestamp="20210220 02:18:43.184" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210220 02:18:43.184" starttime="20210220 02:18:39.448"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:43.187" level="INFO">Running command 'ozone sh key list 37161-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:47.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:47.087" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210220 02:18:47.087" starttime="20210220 02:18:43.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:47.089" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210220 02:18:47.089" starttime="20210220 02:18:47.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:47.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:47.089" starttime="20210220 02:18:47.089"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.090" starttime="20210220 02:18:43.185"></status>
</kw>
<msg timestamp="20210220 02:18:47.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:47.090" starttime="20210220 02:18:43.185"></status>
</kw>
<msg timestamp="20210220 02:18:47.090" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210220 02:18:47.090" starttime="20210220 02:18:43.184"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:47.091" starttime="20210220 02:18:47.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:47.091" starttime="20210220 02:18:47.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:47.092" starttime="20210220 02:18:47.091"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:18:47.092" critical="yes" starttime="20210220 02:18:39.414"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:47.098" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:47.101" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:47.101" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:18:47.101" starttime="20210220 02:18:47.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:47.102" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:18:47.102" starttime="20210220 02:18:47.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:47.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:47.103" starttime="20210220 02:18:47.102"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.103" starttime="20210220 02:18:47.095"></status>
</kw>
<msg timestamp="20210220 02:18:47.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:47.103" starttime="20210220 02:18:47.095"></status>
</kw>
<msg timestamp="20210220 02:18:47.103" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:18:47.103" starttime="20210220 02:18:47.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:18:47.104" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:18:47.104" starttime="20210220 02:18:47.104"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:47.109" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:47.116" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:47.116" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:47.116" starttime="20210220 02:18:47.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:47.118" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:47.118" starttime="20210220 02:18:47.117"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:47.118" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:47.118" starttime="20210220 02:18:47.118"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.119" starttime="20210220 02:18:47.106"></status>
</kw>
<msg timestamp="20210220 02:18:47.119" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:47.119" starttime="20210220 02:18:47.105"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.119" starttime="20210220 02:18:47.105"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.119" starttime="20210220 02:18:47.104"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.119" starttime="20210220 02:18:47.094"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:47.120" starttime="20210220 02:18:47.094"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:47.124" level="INFO">Running command 'ozone sh key delete 37161-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:51.674" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:51.674" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:51.674" starttime="20210220 02:18:47.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:51.676" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:51.676" starttime="20210220 02:18:51.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:51.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:51.677" starttime="20210220 02:18:51.676"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:51.677" starttime="20210220 02:18:47.121"></status>
</kw>
<msg timestamp="20210220 02:18:51.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:51.677" starttime="20210220 02:18:47.121"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:51.677" starttime="20210220 02:18:47.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:51.685" level="INFO">Running command 'ozone sh key list 37161-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:55.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:55.798" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210220 02:18:55.798" starttime="20210220 02:18:51.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:55.800" level="INFO">key1</msg>
<status status="PASS" endtime="20210220 02:18:55.800" starttime="20210220 02:18:55.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:55.801" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:55.801" starttime="20210220 02:18:55.800"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.801" starttime="20210220 02:18:51.679"></status>
</kw>
<msg timestamp="20210220 02:18:55.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:55.802" starttime="20210220 02:18:51.678"></status>
</kw>
<msg timestamp="20210220 02:18:55.802" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210220 02:18:55.802" starttime="20210220 02:18:51.678"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:55.802" starttime="20210220 02:18:55.802"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:18:55.803" critical="yes" starttime="20210220 02:18:47.093"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:55.810" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:55.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:55.813" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:18:55.814" starttime="20210220 02:18:55.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:55.815" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:18:55.815" starttime="20210220 02:18:55.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:55.816" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:55.816" starttime="20210220 02:18:55.815"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.816" starttime="20210220 02:18:55.806"></status>
</kw>
<msg timestamp="20210220 02:18:55.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:55.817" starttime="20210220 02:18:55.806"></status>
</kw>
<msg timestamp="20210220 02:18:55.817" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:18:55.817" starttime="20210220 02:18:55.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:18:55.817" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:18:55.818" starttime="20210220 02:18:55.817"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:55.823" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:55.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:55.837" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:55.837" starttime="20210220 02:18:55.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:55.839" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:55.839" starttime="20210220 02:18:55.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:55.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:55.840" starttime="20210220 02:18:55.839"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.840" starttime="20210220 02:18:55.819"></status>
</kw>
<msg timestamp="20210220 02:18:55.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:55.840" starttime="20210220 02:18:55.819"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.840" starttime="20210220 02:18:55.818"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.840" starttime="20210220 02:18:55.818"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.840" starttime="20210220 02:18:55.805"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:55.841" starttime="20210220 02:18:55.804"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:55.845" level="INFO">Running command 'ozone sh bucket list 37161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:59.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:59.472" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210220 02:18:59.472" starttime="20210220 02:18:55.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:59.474" level="INFO">{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:18:03.076Z",
  "modificationTime" : "2021-02-20T02:18:03.076Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:41.538Z",
  "modificationTime" : "2021-02-20T02:17:59.469Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:18:10.383Z",
  "modificationTime" : "2021-02-20T02:18:10.383Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:34.330Z",
  "modificationTime" : "2021-02-20T02:17:55.821Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:37.793Z",
  "modificationTime" : "2021-02-20T02:17:37.793Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 02:18:59.474" starttime="20210220 02:18:59.473"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:59.474" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:59.474" starttime="20210220 02:18:59.474"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.475" starttime="20210220 02:18:55.842"></status>
</kw>
<msg timestamp="20210220 02:18:59.475" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:59.475" starttime="20210220 02:18:55.842"></status>
</kw>
<msg timestamp="20210220 02:18:59.475" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210220 02:18:59.475" starttime="20210220 02:18:55.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:59.476" starttime="20210220 02:18:59.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210220 02:18:59.476" starttime="20210220 02:18:59.476"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:18:59.476" critical="yes" starttime="20210220 02:18:55.803"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:59.483" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:59.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:59.486" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:18:59.486" starttime="20210220 02:18:59.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:59.487" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:18:59.487" starttime="20210220 02:18:59.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:59.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:59.488" starttime="20210220 02:18:59.487"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.488" starttime="20210220 02:18:59.480"></status>
</kw>
<msg timestamp="20210220 02:18:59.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:59.488" starttime="20210220 02:18:59.480"></status>
</kw>
<msg timestamp="20210220 02:18:59.488" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:18:59.488" starttime="20210220 02:18:59.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:18:59.489" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:18:59.489" starttime="20210220 02:18:59.489"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:59.493" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:18:59.525" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:18:59.525" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:18:59.525" starttime="20210220 02:18:59.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:18:59.527" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:18:59.527" starttime="20210220 02:18:59.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:18:59.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:18:59.528" starttime="20210220 02:18:59.527"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.528" starttime="20210220 02:18:59.490"></status>
</kw>
<msg timestamp="20210220 02:18:59.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:18:59.528" starttime="20210220 02:18:59.490"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.528" starttime="20210220 02:18:59.490"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.528" starttime="20210220 02:18:59.489"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.528" starttime="20210220 02:18:59.479"></status>
</kw>
<status status="PASS" endtime="20210220 02:18:59.529" starttime="20210220 02:18:59.478"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:18:59.533" level="INFO">Running command 'ozone sh bucket info 37161-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:03.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:03.544" level="INFO">${output} = 37161-source bucket1</msg>
<status status="PASS" endtime="20210220 02:19:03.544" starttime="20210220 02:18:59.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:03.546" level="INFO">37161-source bucket1</msg>
<status status="PASS" endtime="20210220 02:19:03.546" starttime="20210220 02:19:03.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:03.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:03.546" starttime="20210220 02:19:03.546"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.547" starttime="20210220 02:18:59.530"></status>
</kw>
<msg timestamp="20210220 02:19:03.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:03.547" starttime="20210220 02:18:59.530"></status>
</kw>
<msg timestamp="20210220 02:19:03.547" level="INFO">${result} = 37161-source bucket1</msg>
<status status="PASS" endtime="20210220 02:19:03.547" starttime="20210220 02:18:59.529"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:03.548" starttime="20210220 02:19:03.547"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:19:03.548" critical="yes" starttime="20210220 02:18:59.478"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:03.555" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:03.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:03.559" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:03.559" starttime="20210220 02:19:03.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:03.560" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:03.560" starttime="20210220 02:19:03.559"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:03.561" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:03.561" starttime="20210220 02:19:03.560"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.562" starttime="20210220 02:19:03.551"></status>
</kw>
<msg timestamp="20210220 02:19:03.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:03.562" starttime="20210220 02:19:03.551"></status>
</kw>
<msg timestamp="20210220 02:19:03.562" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:03.562" starttime="20210220 02:19:03.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:03.563" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:03.563" starttime="20210220 02:19:03.562"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:03.567" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:03.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:03.574" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:03.574" starttime="20210220 02:19:03.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:03.575" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:03.575" starttime="20210220 02:19:03.575"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:03.576" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:03.576" starttime="20210220 02:19:03.576"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.576" starttime="20210220 02:19:03.564"></status>
</kw>
<msg timestamp="20210220 02:19:03.577" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:03.577" starttime="20210220 02:19:03.564"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.577" starttime="20210220 02:19:03.563"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.577" starttime="20210220 02:19:03.563"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.577" starttime="20210220 02:19:03.550"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:03.577" starttime="20210220 02:19:03.550"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:03.581" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 37161-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:06.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:06.886" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:19:06.886" starttime="20210220 02:19:03.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:06.887" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:19:06.887" starttime="20210220 02:19:06.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:06.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:06.888" starttime="20210220 02:19:06.887"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:06.888" starttime="20210220 02:19:03.578"></status>
</kw>
<msg timestamp="20210220 02:19:06.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:06.888" starttime="20210220 02:19:03.578"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:06.888" starttime="20210220 02:19:03.577"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:06.893" level="INFO">Running command 'ozone sh bucket getacl 37161-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:10.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:10.433" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210220 02:19:10.434" starttime="20210220 02:19:06.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:10.436" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210220 02:19:10.436" starttime="20210220 02:19:10.435"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:10.437" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:10.437" starttime="20210220 02:19:10.436"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:10.438" starttime="20210220 02:19:06.890"></status>
</kw>
<msg timestamp="20210220 02:19:10.438" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:10.438" starttime="20210220 02:19:06.890"></status>
</kw>
<msg timestamp="20210220 02:19:10.438" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210220 02:19:10.438" starttime="20210220 02:19:06.889"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:10.439" starttime="20210220 02:19:10.438"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:10.439" starttime="20210220 02:19:06.889"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:10.445" level="INFO">Running command 'ozone sh bucket getacl 37161-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:13.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:13.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:13.979" starttime="20210220 02:19:10.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:13.980" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:13.980" starttime="20210220 02:19:13.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:13.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:13.981" starttime="20210220 02:19:13.981"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:13.981" starttime="20210220 02:19:10.442"></status>
</kw>
<msg timestamp="20210220 02:19:13.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:13.982" starttime="20210220 02:19:10.441"></status>
</kw>
<msg timestamp="20210220 02:19:13.982" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210220 02:19:13.982" starttime="20210220 02:19:10.440"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:13.982" starttime="20210220 02:19:13.982"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:13.983" starttime="20210220 02:19:10.439"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:13.986" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 37161-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:17.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:17.502" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:19:17.502" starttime="20210220 02:19:13.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:17.503" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210220 02:19:17.503" starttime="20210220 02:19:17.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:17.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:17.504" starttime="20210220 02:19:17.504"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:17.504" starttime="20210220 02:19:13.984"></status>
</kw>
<msg timestamp="20210220 02:19:17.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:17.505" starttime="20210220 02:19:13.983"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:17.505" starttime="20210220 02:19:13.983"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:17.509" level="INFO">Running command 'ozone sh bucket getacl 37161-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:21.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:21.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:21.087" starttime="20210220 02:19:17.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:21.089" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:21.089" starttime="20210220 02:19:21.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:21.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:21.089" starttime="20210220 02:19:21.089"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:21.090" starttime="20210220 02:19:17.507"></status>
</kw>
<msg timestamp="20210220 02:19:21.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:21.090" starttime="20210220 02:19:17.506"></status>
</kw>
<msg timestamp="20210220 02:19:21.090" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210220 02:19:21.090" starttime="20210220 02:19:17.506"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:21.091" starttime="20210220 02:19:21.090"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:21.091" starttime="20210220 02:19:17.505"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:21.096" level="INFO">Running command 'ozone sh bucket getacl 37161-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:24.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:24.634" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210220 02:19:24.634" starttime="20210220 02:19:21.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:24.635" level="INFO">READ</msg>
<status status="PASS" endtime="20210220 02:19:24.635" starttime="20210220 02:19:24.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:24.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:24.636" starttime="20210220 02:19:24.636"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.636" starttime="20210220 02:19:21.093"></status>
</kw>
<msg timestamp="20210220 02:19:24.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:24.637" starttime="20210220 02:19:21.092"></status>
</kw>
<msg timestamp="20210220 02:19:24.637" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210220 02:19:24.637" starttime="20210220 02:19:21.092"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:24.638" starttime="20210220 02:19:24.637"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.638" starttime="20210220 02:19:21.091"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:19:24.638" critical="yes" starttime="20210220 02:19:03.549"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:24.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:24.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:24.649" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:24.649" starttime="20210220 02:19:24.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:24.650" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:24.650" starttime="20210220 02:19:24.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:24.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:24.650" starttime="20210220 02:19:24.650"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.651" starttime="20210220 02:19:24.641"></status>
</kw>
<msg timestamp="20210220 02:19:24.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:24.651" starttime="20210220 02:19:24.641"></status>
</kw>
<msg timestamp="20210220 02:19:24.651" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:24.651" starttime="20210220 02:19:24.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:24.652" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:24.652" starttime="20210220 02:19:24.651"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:24.656" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:24.689" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:24.689" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:24.689" starttime="20210220 02:19:24.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:24.690" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:24.690" starttime="20210220 02:19:24.690"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:24.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:24.691" starttime="20210220 02:19:24.691"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.692" starttime="20210220 02:19:24.653"></status>
</kw>
<msg timestamp="20210220 02:19:24.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:24.692" starttime="20210220 02:19:24.653"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.692" starttime="20210220 02:19:24.652"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.692" starttime="20210220 02:19:24.652"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.692" starttime="20210220 02:19:24.640"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:24.692" starttime="20210220 02:19:24.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:24.696" level="INFO">Running command 'ozone sh bucket link 37161-source/bucket2 37161-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:28.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:28.029" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:28.029" starttime="20210220 02:19:24.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:28.031" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:28.031" starttime="20210220 02:19:28.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:28.031" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:28.032" starttime="20210220 02:19:28.031"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:28.032" starttime="20210220 02:19:24.694"></status>
</kw>
<msg timestamp="20210220 02:19:28.032" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:28.032" starttime="20210220 02:19:24.693"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:28.032" starttime="20210220 02:19:24.693"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:28.035" level="INFO">Running command 'ozone sh bucket create 37161-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:31.638" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:19:31.638" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210220 02:19:31.638" starttime="20210220 02:19:28.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:31.639" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210220 02:19:31.639" starttime="20210220 02:19:31.639"></status>
</kw>
<msg timestamp="20210220 02:19:31.640" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210220 02:19:31.640" starttime="20210220 02:19:28.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:31.640" starttime="20210220 02:19:31.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:31.644" level="INFO">Running command 'ozone sh bucket create 37161-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:35.225" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:35.225" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:35.225" starttime="20210220 02:19:31.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:35.226" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:35.226" starttime="20210220 02:19:35.225"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:35.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:35.227" starttime="20210220 02:19:35.226"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:35.227" starttime="20210220 02:19:31.641"></status>
</kw>
<msg timestamp="20210220 02:19:35.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:35.227" starttime="20210220 02:19:31.641"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:35.228" starttime="20210220 02:19:31.641"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:35.231" level="INFO">Running command 'ozone sh bucket link 37161-source/bucket1 37161-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:38.997" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:19:38.997" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210220 02:19:38.997" starttime="20210220 02:19:35.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:38.999" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210220 02:19:38.999" starttime="20210220 02:19:38.998"></status>
</kw>
<msg timestamp="20210220 02:19:38.999" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210220 02:19:38.999" starttime="20210220 02:19:35.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:39.000" starttime="20210220 02:19:38.999"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:19:39.000" critical="yes" starttime="20210220 02:19:24.639"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:39.006" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:39.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:39.009" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:39.009" starttime="20210220 02:19:39.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.010" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:39.010" starttime="20210220 02:19:39.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:39.011" starttime="20210220 02:19:39.010"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.011" starttime="20210220 02:19:39.003"></status>
</kw>
<msg timestamp="20210220 02:19:39.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:39.011" starttime="20210220 02:19:39.003"></status>
</kw>
<msg timestamp="20210220 02:19:39.012" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:39.012" starttime="20210220 02:19:39.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:39.012" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:39.012" starttime="20210220 02:19:39.012"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:39.017" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:39.023" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:39.023" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:39.023" starttime="20210220 02:19:39.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.024" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:39.025" starttime="20210220 02:19:39.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.025" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:39.025" starttime="20210220 02:19:39.025"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.026" starttime="20210220 02:19:39.014"></status>
</kw>
<msg timestamp="20210220 02:19:39.026" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:39.026" starttime="20210220 02:19:39.014"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.026" starttime="20210220 02:19:39.013"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.026" starttime="20210220 02:19:39.012"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.026" starttime="20210220 02:19:39.002"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.027" starttime="20210220 02:19:39.002"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:39.031" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:39.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:39.035" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:39.035" starttime="20210220 02:19:39.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.036" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:39.036" starttime="20210220 02:19:39.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:39.037" starttime="20210220 02:19:39.036"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.037" starttime="20210220 02:19:39.029"></status>
</kw>
<msg timestamp="20210220 02:19:39.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:39.037" starttime="20210220 02:19:39.028"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.038" starttime="20210220 02:19:39.028"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:39.042" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:39.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:39.045" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:39.046" starttime="20210220 02:19:39.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.047" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:39.047" starttime="20210220 02:19:39.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.048" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:39.048" starttime="20210220 02:19:39.047"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.048" starttime="20210220 02:19:39.039"></status>
</kw>
<msg timestamp="20210220 02:19:39.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:39.049" starttime="20210220 02:19:39.039"></status>
</kw>
<msg timestamp="20210220 02:19:39.049" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:39.049" starttime="20210220 02:19:39.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:39.050" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:39.050" starttime="20210220 02:19:39.049"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:39.054" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:39.061" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:39.061" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:39.061" starttime="20210220 02:19:39.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.063" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:39.063" starttime="20210220 02:19:39.062"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:39.063" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:39.063" starttime="20210220 02:19:39.063"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.064" starttime="20210220 02:19:39.051"></status>
</kw>
<msg timestamp="20210220 02:19:39.064" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:39.064" starttime="20210220 02:19:39.051"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.064" starttime="20210220 02:19:39.050"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.064" starttime="20210220 02:19:39.050"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.065" starttime="20210220 02:19:39.038"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:39.065" starttime="20210220 02:19:39.038"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:39.068" level="INFO">Running command 'ozone sh key list 37161-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:42.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:42.721" level="INFO">${output} = {
  "volumeName" : "37161-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-20T02:17:24.461Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210220 02:19:42.721" starttime="20210220 02:19:39.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.722" level="INFO">{
  "volumeName" : "37161-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-20T02:17:24.461Z",
  "modificationTime" : "2021-02-20T02:17:26.499Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210220 02:19:42.722" starttime="20210220 02:19:42.721"></status>
</kw>
<msg timestamp="20210220 02:19:42.723" level="INFO">${result} = {
  "volumeName" : "37161-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-20T02:17:24.461Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210220 02:19:42.723" starttime="20210220 02:19:39.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:42.723" starttime="20210220 02:19:42.723"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.723" starttime="20210220 02:19:39.027"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.723" starttime="20210220 02:19:39.027"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:19:42.724" critical="yes" starttime="20210220 02:19:39.001"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:42.730" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:42.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:42.733" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:42.733" starttime="20210220 02:19:42.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.734" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:42.734" starttime="20210220 02:19:42.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:42.735" starttime="20210220 02:19:42.734"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.735" starttime="20210220 02:19:42.727"></status>
</kw>
<msg timestamp="20210220 02:19:42.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:42.735" starttime="20210220 02:19:42.727"></status>
</kw>
<msg timestamp="20210220 02:19:42.735" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:42.735" starttime="20210220 02:19:42.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:42.736" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:42.736" starttime="20210220 02:19:42.735"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:42.740" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:42.748" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:42.748" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:42.748" starttime="20210220 02:19:42.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.749" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:42.749" starttime="20210220 02:19:42.748"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.749" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:42.750" starttime="20210220 02:19:42.749"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.750" starttime="20210220 02:19:42.738"></status>
</kw>
<msg timestamp="20210220 02:19:42.750" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:42.750" starttime="20210220 02:19:42.737"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.751" starttime="20210220 02:19:42.737"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.751" starttime="20210220 02:19:42.736"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.751" starttime="20210220 02:19:42.726"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.751" starttime="20210220 02:19:42.725"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:42.755" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:42.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:42.759" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:42.759" starttime="20210220 02:19:42.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.760" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:42.760" starttime="20210220 02:19:42.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:42.761" starttime="20210220 02:19:42.760"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.761" starttime="20210220 02:19:42.753"></status>
</kw>
<msg timestamp="20210220 02:19:42.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:42.762" starttime="20210220 02:19:42.752"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.762" starttime="20210220 02:19:42.752"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:42.766" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:42.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:42.768" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:42.768" starttime="20210220 02:19:42.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.769" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:42.769" starttime="20210220 02:19:42.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:42.770" starttime="20210220 02:19:42.770"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.771" starttime="20210220 02:19:42.763"></status>
</kw>
<msg timestamp="20210220 02:19:42.771" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:42.771" starttime="20210220 02:19:42.763"></status>
</kw>
<msg timestamp="20210220 02:19:42.771" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:42.771" starttime="20210220 02:19:42.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:42.772" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:42.772" starttime="20210220 02:19:42.771"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:42.776" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:42.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:42.785" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:42.785" starttime="20210220 02:19:42.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.786" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:42.786" starttime="20210220 02:19:42.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:42.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:42.787" starttime="20210220 02:19:42.787"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.787" starttime="20210220 02:19:42.774"></status>
</kw>
<msg timestamp="20210220 02:19:42.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:42.788" starttime="20210220 02:19:42.773"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.788" starttime="20210220 02:19:42.773"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.788" starttime="20210220 02:19:42.772"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.788" starttime="20210220 02:19:42.762"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:42.788" starttime="20210220 02:19:42.762"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:42.791" level="INFO">Running command 'ozone sh key list 37161-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:46.298" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:19:46.299" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 37161-target unreadable-link null</msg>
<status status="PASS" endtime="20210220 02:19:46.299" starttime="20210220 02:19:42.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.300" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 37161-target unreadable-link null</msg>
<status status="PASS" endtime="20210220 02:19:46.300" starttime="20210220 02:19:46.299"></status>
</kw>
<msg timestamp="20210220 02:19:46.300" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 37161-target unreadable-link null</msg>
<status status="PASS" endtime="20210220 02:19:46.300" starttime="20210220 02:19:42.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:46.301" starttime="20210220 02:19:46.301"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.301" starttime="20210220 02:19:42.752"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.301" starttime="20210220 02:19:42.751"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:19:46.301" critical="yes" starttime="20210220 02:19:42.724"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:46.307" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:46.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:46.310" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:46.310" starttime="20210220 02:19:46.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.311" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:46.312" starttime="20210220 02:19:46.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:46.312" starttime="20210220 02:19:46.312"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.313" starttime="20210220 02:19:46.305"></status>
</kw>
<msg timestamp="20210220 02:19:46.313" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:46.313" starttime="20210220 02:19:46.304"></status>
</kw>
<msg timestamp="20210220 02:19:46.313" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:46.313" starttime="20210220 02:19:46.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:46.314" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:46.314" starttime="20210220 02:19:46.313"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:46.319" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:46.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:46.326" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:46.326" starttime="20210220 02:19:46.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.327" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:46.327" starttime="20210220 02:19:46.326"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:46.328" starttime="20210220 02:19:46.327"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.328" starttime="20210220 02:19:46.316"></status>
</kw>
<msg timestamp="20210220 02:19:46.328" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:46.328" starttime="20210220 02:19:46.315"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.329" starttime="20210220 02:19:46.315"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.329" starttime="20210220 02:19:46.314"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.329" starttime="20210220 02:19:46.303"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.329" starttime="20210220 02:19:46.303"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:46.333" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:46.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:46.337" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:46.337" starttime="20210220 02:19:46.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.338" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:46.338" starttime="20210220 02:19:46.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:46.339" starttime="20210220 02:19:46.338"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.339" starttime="20210220 02:19:46.331"></status>
</kw>
<msg timestamp="20210220 02:19:46.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:46.339" starttime="20210220 02:19:46.330"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.340" starttime="20210220 02:19:46.330"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:46.344" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:46.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:46.356" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:46.356" starttime="20210220 02:19:46.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.358" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:46.358" starttime="20210220 02:19:46.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:46.380" starttime="20210220 02:19:46.371"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.380" starttime="20210220 02:19:46.341"></status>
</kw>
<msg timestamp="20210220 02:19:46.381" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:46.381" starttime="20210220 02:19:46.341"></status>
</kw>
<msg timestamp="20210220 02:19:46.381" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:46.381" starttime="20210220 02:19:46.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:46.382" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:46.382" starttime="20210220 02:19:46.381"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:46.389" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:46.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:46.407" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:46.407" starttime="20210220 02:19:46.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.409" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:46.409" starttime="20210220 02:19:46.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:46.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:46.410" starttime="20210220 02:19:46.409"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.410" starttime="20210220 02:19:46.383"></status>
</kw>
<msg timestamp="20210220 02:19:46.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:46.410" starttime="20210220 02:19:46.383"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.410" starttime="20210220 02:19:46.382"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.410" starttime="20210220 02:19:46.382"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.411" starttime="20210220 02:19:46.340"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:46.411" starttime="20210220 02:19:46.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:46.414" level="INFO">Running command 'ozone sh bucket info 37161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:50.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:50.302" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210220 02:19:50.302" starttime="20210220 02:19:46.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:50.304" level="INFO">{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:41.538Z",
  "modificationTime" : "2021-02-20T02:17:59.469Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 02:19:50.304" starttime="20210220 02:19:50.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:50.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:50.305" starttime="20210220 02:19:50.304"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:50.305" starttime="20210220 02:19:46.412"></status>
</kw>
<msg timestamp="20210220 02:19:50.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:50.306" starttime="20210220 02:19:46.411"></status>
</kw>
<msg timestamp="20210220 02:19:50.306" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210220 02:19:50.306" starttime="20210220 02:19:46.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:50.307" starttime="20210220 02:19:50.306"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:50.307" starttime="20210220 02:19:50.307"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:50.311" level="INFO">Running command 'ozone sh key list 37161-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:53.655" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:19:53.655" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 37161-source unreadable-bucket </msg>
<status status="PASS" endtime="20210220 02:19:53.655" starttime="20210220 02:19:50.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:53.656" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 37161-source unreadable-bucket </msg>
<status status="PASS" endtime="20210220 02:19:53.656" starttime="20210220 02:19:53.655"></status>
</kw>
<msg timestamp="20210220 02:19:53.656" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 37161-source unreadable-bucket </msg>
<status status="PASS" endtime="20210220 02:19:53.656" starttime="20210220 02:19:50.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210220 02:19:53.657" starttime="20210220 02:19:53.657"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.657" starttime="20210220 02:19:46.330"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.657" starttime="20210220 02:19:46.329"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:19:53.657" critical="yes" starttime="20210220 02:19:46.302"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:53.665" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:53.669" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:53.669" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:19:53.669" starttime="20210220 02:19:53.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:53.670" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:19:53.670" starttime="20210220 02:19:53.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:53.671" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:53.671" starttime="20210220 02:19:53.670"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.671" starttime="20210220 02:19:53.663"></status>
</kw>
<msg timestamp="20210220 02:19:53.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:53.671" starttime="20210220 02:19:53.662"></status>
</kw>
<msg timestamp="20210220 02:19:53.671" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:19:53.671" starttime="20210220 02:19:53.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:19:53.672" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:19:53.672" starttime="20210220 02:19:53.672"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:53.677" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:53.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:53.684" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:53.684" starttime="20210220 02:19:53.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:53.685" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:53.685" starttime="20210220 02:19:53.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:53.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:53.686" starttime="20210220 02:19:53.685"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.686" starttime="20210220 02:19:53.674"></status>
</kw>
<msg timestamp="20210220 02:19:53.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:53.686" starttime="20210220 02:19:53.673"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.687" starttime="20210220 02:19:53.673"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.687" starttime="20210220 02:19:53.672"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.687" starttime="20210220 02:19:53.661"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:53.687" starttime="20210220 02:19:53.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:53.691" level="INFO">Running command 'ozone sh bucket link 37161-target/loop1 37161-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:19:57.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:19:57.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:19:57.105" starttime="20210220 02:19:53.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:19:57.106" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:19:57.106" starttime="20210220 02:19:57.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:19:57.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:19:57.107" starttime="20210220 02:19:57.107"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:57.107" starttime="20210220 02:19:53.688"></status>
</kw>
<msg timestamp="20210220 02:19:57.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:19:57.108" starttime="20210220 02:19:53.688"></status>
</kw>
<status status="PASS" endtime="20210220 02:19:57.108" starttime="20210220 02:19:53.687"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:19:57.113" level="INFO">Running command 'ozone sh bucket link 37161-target/loop2 37161-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:00.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:00.828" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:00.828" starttime="20210220 02:19:57.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:00.830" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:00.830" starttime="20210220 02:20:00.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:00.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:00.830" starttime="20210220 02:20:00.830"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:00.831" starttime="20210220 02:19:57.109"></status>
</kw>
<msg timestamp="20210220 02:20:00.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:00.831" starttime="20210220 02:19:57.109"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:00.831" starttime="20210220 02:19:57.108"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:00.835" level="INFO">Running command 'ozone sh bucket link 37161-target/loop3 37161-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:04.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:04.429" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:04.430" starttime="20210220 02:20:00.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:04.431" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:04.431" starttime="20210220 02:20:04.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:04.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:04.432" starttime="20210220 02:20:04.431"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:04.432" starttime="20210220 02:20:00.832"></status>
</kw>
<msg timestamp="20210220 02:20:04.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:04.432" starttime="20210220 02:20:00.832"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:04.432" starttime="20210220 02:20:00.831"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:04.436" level="INFO">Running command 'ozone sh key list 37161-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:08.372" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 02:20:08.372" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210220 02:20:08.372" starttime="20210220 02:20:04.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:08.374" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210220 02:20:08.374" starttime="20210220 02:20:08.373"></status>
</kw>
<msg timestamp="20210220 02:20:08.374" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210220 02:20:08.374" starttime="20210220 02:20:04.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210220 02:20:08.375" starttime="20210220 02:20:08.375"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:20:08.375" critical="yes" starttime="20210220 02:19:53.659"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:08.381" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:08.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:08.384" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:20:08.384" starttime="20210220 02:20:08.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:08.385" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:20:08.385" starttime="20210220 02:20:08.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:08.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:08.386" starttime="20210220 02:20:08.385"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:08.386" starttime="20210220 02:20:08.378"></status>
</kw>
<msg timestamp="20210220 02:20:08.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:08.386" starttime="20210220 02:20:08.378"></status>
</kw>
<msg timestamp="20210220 02:20:08.386" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:20:08.386" starttime="20210220 02:20:08.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:20:08.387" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:20:08.387" starttime="20210220 02:20:08.387"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:08.391" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:08.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:08.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:08.400" starttime="20210220 02:20:08.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:08.401" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:08.401" starttime="20210220 02:20:08.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:08.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:08.402" starttime="20210220 02:20:08.401"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:08.402" starttime="20210220 02:20:08.389"></status>
</kw>
<msg timestamp="20210220 02:20:08.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:08.402" starttime="20210220 02:20:08.388"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:08.402" starttime="20210220 02:20:08.388"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:08.403" starttime="20210220 02:20:08.387"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:08.403" starttime="20210220 02:20:08.377"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:08.403" starttime="20210220 02:20:08.377"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:08.407" level="INFO">Running command 'ozone sh bucket link 37161-source/bucket1 37161-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:11.711" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:11.711" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:11.711" starttime="20210220 02:20:08.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:11.712" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:11.712" starttime="20210220 02:20:11.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:11.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:11.714" starttime="20210220 02:20:11.713"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:11.714" starttime="20210220 02:20:08.404"></status>
</kw>
<msg timestamp="20210220 02:20:11.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:11.714" starttime="20210220 02:20:08.404"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:11.715" starttime="20210220 02:20:08.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:11.718" level="INFO">Running command 'ozone sh key put 37161-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:20.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:20.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:20.238" starttime="20210220 02:20:11.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:20.239" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:20.239" starttime="20210220 02:20:20.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:20.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:20.240" starttime="20210220 02:20:20.239"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:20.240" starttime="20210220 02:20:11.716"></status>
</kw>
<msg timestamp="20210220 02:20:20.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:20.240" starttime="20210220 02:20:11.715"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:20.240" starttime="20210220 02:20:11.715"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210220 02:20:20.242" level="INFO">${postfix} = 87467</msg>
<status status="PASS" endtime="20210220 02:20:20.242" starttime="20210220 02:20:20.242"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210220 02:20:20.243" level="INFO">${tmpfile} = /tmp/tempkey-87467</msg>
<status status="PASS" endtime="20210220 02:20:20.243" starttime="20210220 02:20:20.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:20.247" level="INFO">Running command 'ozone sh key get 37161-target/link1/key3 /tmp/tempkey-87467 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:25.791" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:25.791" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:25.791" starttime="20210220 02:20:20.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.792" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:25.793" starttime="20210220 02:20:25.792"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:25.794" starttime="20210220 02:20:25.793"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.794" starttime="20210220 02:20:20.244"></status>
</kw>
<msg timestamp="20210220 02:20:25.794" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:25.794" starttime="20210220 02:20:20.243"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.794" starttime="20210220 02:20:20.243"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210220 02:20:25.797" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-87467 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:25.800" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210220 02:20:25.800" starttime="20210220 02:20:25.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:25.805" level="INFO">Running command 'rm -f /tmp/tempkey-87467 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:25.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:25.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:25.807" starttime="20210220 02:20:25.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.809" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:25.809" starttime="20210220 02:20:25.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:25.810" starttime="20210220 02:20:25.809"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.810" starttime="20210220 02:20:25.801"></status>
</kw>
<msg timestamp="20210220 02:20:25.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:25.811" starttime="20210220 02:20:25.801"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.811" starttime="20210220 02:20:25.800"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 02:20:25.812" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210220 02:20:25.812" starttime="20210220 02:20:25.811"></status>
</kw>
<msg timestamp="20210220 02:20:25.812" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210220 02:20:25.812" starttime="20210220 02:20:20.241"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210220 02:20:25.812" starttime="20210220 02:20:25.812"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.813" starttime="20210220 02:20:20.240"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:20:25.813" critical="yes" starttime="20210220 02:20:08.376"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:25.821" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:25.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:25.824" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210220 02:20:25.824" starttime="20210220 02:20:25.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.825" level="INFO">scm</msg>
<status status="PASS" endtime="20210220 02:20:25.825" starttime="20210220 02:20:25.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:25.826" starttime="20210220 02:20:25.825"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.826" starttime="20210220 02:20:25.816"></status>
</kw>
<msg timestamp="20210220 02:20:25.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:25.826" starttime="20210220 02:20:25.816"></status>
</kw>
<msg timestamp="20210220 02:20:25.826" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210220 02:20:25.826" starttime="20210220 02:20:25.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210220 02:20:25.827" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210220 02:20:25.827" starttime="20210220 02:20:25.827"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:25.832" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:25.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:25.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:25.839" starttime="20210220 02:20:25.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.840" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:25.840" starttime="20210220 02:20:25.839"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:25.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:25.841" starttime="20210220 02:20:25.840"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.841" starttime="20210220 02:20:25.829"></status>
</kw>
<msg timestamp="20210220 02:20:25.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:25.841" starttime="20210220 02:20:25.829"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.842" starttime="20210220 02:20:25.828"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.842" starttime="20210220 02:20:25.828"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.842" starttime="20210220 02:20:25.815"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:25.842" starttime="20210220 02:20:25.814"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:25.849" level="INFO">Running command 'ozone sh bucket delete 37161-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:29.611" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:29.611" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 02:20:29.611" starttime="20210220 02:20:25.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:29.612" level="INFO"></msg>
<status status="PASS" endtime="20210220 02:20:29.612" starttime="20210220 02:20:29.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:29.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:29.614" starttime="20210220 02:20:29.613"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:29.614" starttime="20210220 02:20:25.843"></status>
</kw>
<msg timestamp="20210220 02:20:29.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:29.614" starttime="20210220 02:20:25.843"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:29.614" starttime="20210220 02:20:25.842"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:29.618" level="INFO">Running command 'ozone sh bucket list 37161-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:33.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:33.425" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T...</msg>
<status status="PASS" endtime="20210220 02:20:33.425" starttime="20210220 02:20:29.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:33.426" level="INFO">{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:19:35.056Z",
  "modificationTime" : "2021-02-20T02:19:35.056Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:18:03.076Z",
  "modificationTime" : "2021-02-20T02:18:03.076Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:41.538Z",
  "modificationTime" : "2021-02-20T02:17:59.469Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:19:27.931Z",
  "modificationTime" : "2021-02-20T02:19:27.931Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:20:11.590Z",
  "modificationTime" : "2021-02-20T02:20:11.590Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:20:04.216Z",
  "modificationTime" : "2021-02-20T02:20:04.216Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:19:56.980Z",
  "modificationTime" : "2021-02-20T02:19:56.980Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:20:00.571Z",
  "modificationTime" : "2021-02-20T02:20:00.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:34.330Z",
  "modificationTime" : "2021-02-20T02:17:55.821Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T02:17:37.793Z",
  "modificationTime" : "2021-02-20T02:17:37.793Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "37161-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 02:20:33.426" starttime="20210220 02:20:33.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:33.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:33.427" starttime="20210220 02:20:33.427"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:33.427" starttime="20210220 02:20:29.615"></status>
</kw>
<msg timestamp="20210220 02:20:33.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:33.428" starttime="20210220 02:20:29.615"></status>
</kw>
<msg timestamp="20210220 02:20:33.428" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "37161-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T...</msg>
<status status="PASS" endtime="20210220 02:20:33.428" starttime="20210220 02:20:29.614"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:20:33.429" starttime="20210220 02:20:33.428"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:20:33.432" level="INFO">Running command 'ozone sh key list 37161-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:20:37.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:20:37.090" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210220 02:20:37.090" starttime="20210220 02:20:33.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:20:37.091" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210220 02:20:37.091" starttime="20210220 02:20:37.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:20:37.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:20:37.092" starttime="20210220 02:20:37.092"></status>
</kw>
<status status="PASS" endtime="20210220 02:20:37.093" starttime="20210220 02:20:33.430"></status>
</kw>
<msg timestamp="20210220 02:20:37.093" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:20:37.093" starttime="20210220 02:20:33.429"></status>
</kw>
<msg timestamp="20210220 02:20:37.093" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210220 02:20:37.093" starttime="20210220 02:20:33.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:20:37.094" starttime="20210220 02:20:37.093"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 02:20:37.094" critical="yes" starttime="20210220 02:20:25.813"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210220 02:20:37.097" starttime="20210220 02:17:09.939"></status>
</suite>
<status status="PASS" elapsedtime="234790" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
