<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210220 01:57:54.386" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:02.566" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:04.909" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 01:44:04.909" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:44:04.909" starttime="20210220 01:44:02.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:04.910" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:44:04.910" starttime="20210220 01:44:04.909"></status>
</kw>
<msg timestamp="20210220 01:44:04.910" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:44:04.910" starttime="20210220 01:44:02.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:04.916" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:06.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:06.968" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:06.968" starttime="20210220 01:44:04.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:06.969" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:06.969" starttime="20210220 01:44:06.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:06.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:06.970" starttime="20210220 01:44:06.969"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:06.970" starttime="20210220 01:44:04.912"></status>
</kw>
<msg timestamp="20210220 01:44:06.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:06.971" starttime="20210220 01:44:04.912"></status>
</kw>
<msg timestamp="20210220 01:44:06.971" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210220 01:44:06.971" starttime="20210220 01:44:04.912"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210220 01:44:06.971" starttime="20210220 01:44:06.971"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:06.971" starttime="20210220 01:44:04.911"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:06.971" starttime="20210220 01:44:04.911"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:06.977" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:09.229" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:09.229" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:09.229" starttime="20210220 01:44:06.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:09.230" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:09.230" starttime="20210220 01:44:09.230"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:09.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:09.231" starttime="20210220 01:44:09.231"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:09.231" starttime="20210220 01:44:06.973"></status>
</kw>
<msg timestamp="20210220 01:44:09.231" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:09.232" starttime="20210220 01:44:06.973"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:09.232" starttime="20210220 01:44:06.973"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:09.232" starttime="20210220 01:44:06.972"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:09.232" starttime="20210220 01:44:06.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210220 01:44:09.233" starttime="20210220 01:44:09.232"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:09.237" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:11.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:11.402" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:44...</msg>
<status status="PASS" endtime="20210220 01:44:11.402" starttime="20210220 01:44:09.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:11.403" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:44:09.179Z",
  "modificationTime" : "2021-02-20T01:44:09.179Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 01:44:11.403" starttime="20210220 01:44:11.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:11.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:11.404" starttime="20210220 01:44:11.403"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:11.404" starttime="20210220 01:44:09.234"></status>
</kw>
<msg timestamp="20210220 01:44:11.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:11.404" starttime="20210220 01:44:09.234"></status>
</kw>
<msg timestamp="20210220 01:44:11.405" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:44...</msg>
<status status="PASS" endtime="20210220 01:44:11.405" starttime="20210220 01:44:09.233"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210220 01:44:11.405" starttime="20210220 01:44:11.405"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:44:11.409" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:44:11.409" starttime="20210220 01:44:11.408"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:44:11.410" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:44:11.410" starttime="20210220 01:44:11.409"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:11.410" starttime="20210220 01:44:11.408"></status>
</kw>
<msg timestamp="20210220 01:44:11.410" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:44:11.410" starttime="20210220 01:44:11.408"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:11.410" starttime="20210220 01:44:11.407"></status>
</kw>
<msg timestamp="20210220 01:44:11.410" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 01:44:11.410" starttime="20210220 01:44:11.406"></status>
</kw>
<msg timestamp="20210220 01:44:11.411" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 01:44:11.411" starttime="20210220 01:44:11.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:11.415" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:13.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:13.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:13.647" starttime="20210220 01:44:11.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:13.648" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:13.649" starttime="20210220 01:44:13.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:13.649" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:13.649" starttime="20210220 01:44:13.649"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:13.649" starttime="20210220 01:44:11.411"></status>
</kw>
<msg timestamp="20210220 01:44:13.649" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:13.650" starttime="20210220 01:44:11.411"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:13.650" starttime="20210220 01:44:11.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:13.654" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:19.142" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:19.142" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:19.142" starttime="20210220 01:44:13.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:19.143" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:19.143" starttime="20210220 01:44:19.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:19.144" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:19.144" starttime="20210220 01:44:19.143"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:19.144" starttime="20210220 01:44:13.651"></status>
</kw>
<msg timestamp="20210220 01:44:19.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:19.144" starttime="20210220 01:44:13.651"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:19.144" starttime="20210220 01:44:13.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:19.149" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:23.275" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:23.275" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:23.275" starttime="20210220 01:44:19.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:23.276" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:23.276" starttime="20210220 01:44:23.275"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:23.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:23.277" starttime="20210220 01:44:23.277"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:23.277" starttime="20210220 01:44:19.146"></status>
</kw>
<msg timestamp="20210220 01:44:23.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:23.278" starttime="20210220 01:44:19.146"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:23.278" starttime="20210220 01:44:19.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:23.282" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:27.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:27.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:27.330" starttime="20210220 01:44:23.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:27.331" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:27.331" starttime="20210220 01:44:27.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:27.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:27.332" starttime="20210220 01:44:27.331"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:27.332" starttime="20210220 01:44:23.279"></status>
</kw>
<msg timestamp="20210220 01:44:27.332" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:27.332" starttime="20210220 01:44:23.279"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:27.332" starttime="20210220 01:44:23.278"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 01:44:27.333" critical="yes" starttime="20210220 01:44:02.561"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:44:27.338" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:44:27.338" starttime="20210220 01:44:27.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:44:27.339" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:44:27.339" starttime="20210220 01:44:27.338"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:27.339" starttime="20210220 01:44:27.337"></status>
</kw>
<msg timestamp="20210220 01:44:27.339" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:44:27.339" starttime="20210220 01:44:27.337"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:27.340" starttime="20210220 01:44:27.336"></status>
</kw>
<msg timestamp="20210220 01:44:27.340" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:44:27.340" starttime="20210220 01:44:27.335"></status>
</kw>
<msg timestamp="20210220 01:44:27.340" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:44:27.340" starttime="20210220 01:44:27.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:27.343" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:29.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:29.650" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:29.650" starttime="20210220 01:44:27.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:29.651" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:29.651" starttime="20210220 01:44:29.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:29.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:29.652" starttime="20210220 01:44:29.651"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:29.652" starttime="20210220 01:44:27.341"></status>
</kw>
<msg timestamp="20210220 01:44:29.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:29.652" starttime="20210220 01:44:27.341"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:29.652" starttime="20210220 01:44:27.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:29.656" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:31.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:31.794" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:44:31.794" starttime="20210220 01:44:29.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:31.796" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:44:31.796" starttime="20210220 01:44:31.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:31.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:31.797" starttime="20210220 01:44:31.796"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:31.797" starttime="20210220 01:44:29.653"></status>
</kw>
<msg timestamp="20210220 01:44:31.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:31.797" starttime="20210220 01:44:29.653"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:31.797" starttime="20210220 01:44:29.653"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 01:44:31.797" critical="yes" starttime="20210220 01:44:27.334"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210220 01:44:31.798" starttime="20210220 01:44:02.506"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:46:15.685" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:46:15.685" starttime="20210220 01:46:15.685"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:46:15.686" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:46:15.686" starttime="20210220 01:46:15.685"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:15.686" starttime="20210220 01:46:15.684"></status>
</kw>
<msg timestamp="20210220 01:46:15.686" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:46:15.686" starttime="20210220 01:46:15.684"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:46:15.687" starttime="20210220 01:46:15.687"></status>
</kw>
<msg timestamp="20210220 01:46:15.687" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:46:15.687" starttime="20210220 01:46:15.686"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:15.688" starttime="20210220 01:46:15.683"></status>
</kw>
<msg timestamp="20210220 01:46:15.688" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:46:15.688" starttime="20210220 01:46:15.683"></status>
</kw>
<msg timestamp="20210220 01:46:15.688" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:46:15.688" starttime="20210220 01:46:15.682"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:46:15.688" level="INFO">${random} = 10672</msg>
<status status="PASS" endtime="20210220 01:46:15.689" starttime="20210220 01:46:15.688"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:46:15.695" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-10672 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:46:19.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:46:19.049" level="INFO">${output} = 2021-02-20 01:46:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:46:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 ...</msg>
<status status="PASS" endtime="20210220 01:46:19.049" starttime="20210220 01:46:15.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:46:19.050" level="INFO">2021-02-20 01:46:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:46:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 01:46:17 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-20 01:46:17 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:46:17 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A90180AF8B6-&gt;2bd48b42-53c1-4c68-b6b3-1650463cfba0
2021-02-20 01:46:17 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210220 01:46:19.050" starttime="20210220 01:46:19.049"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:46:19.051" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:46:19.051" starttime="20210220 01:46:19.050"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:19.051" starttime="20210220 01:46:15.689"></status>
</kw>
<msg timestamp="20210220 01:46:19.051" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:46:19.051" starttime="20210220 01:46:15.689"></status>
</kw>
<msg timestamp="20210220 01:46:19.052" level="INFO">${result} = 2021-02-20 01:46:17 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:46:17 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 ...</msg>
<status status="PASS" endtime="20210220 01:46:19.052" starttime="20210220 01:46:15.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:46:19.055" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:46:20.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:46:20.887" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:46 ofs://om/volume1/bucket1/ozone-10672
-rw-...</msg>
<status status="PASS" endtime="20210220 01:46:20.887" starttime="20210220 01:46:19.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:46:20.888" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:46 ofs://om/volume1/bucket1/ozone-10672
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:44 ofs://om/volume1/bucket1/ozone-78402
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:45 ofs://om/volume1/bucket1/wordcount-GxruKyf7.txt</msg>
<status status="PASS" endtime="20210220 01:46:20.888" starttime="20210220 01:46:20.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:46:20.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:46:20.889" starttime="20210220 01:46:20.888"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:20.889" starttime="20210220 01:46:19.053"></status>
</kw>
<msg timestamp="20210220 01:46:20.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:46:20.889" starttime="20210220 01:46:19.052"></status>
</kw>
<msg timestamp="20210220 01:46:20.889" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:46 ofs://om/volume1/bucket1/ozone-10672
-rw-...</msg>
<status status="PASS" endtime="20210220 01:46:20.889" starttime="20210220 01:46:19.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:46:20.890" starttime="20210220 01:46:20.890"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:46:20.890" critical="yes" starttime="20210220 01:46:15.681"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 01:46:20.891" starttime="20210220 01:46:15.629"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:44:36.487" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:44:36.487" starttime="20210220 01:44:36.486"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:44:36.487" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:44:36.487" starttime="20210220 01:44:36.487"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:36.487" starttime="20210220 01:44:36.486"></status>
</kw>
<msg timestamp="20210220 01:44:36.487" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:44:36.488" starttime="20210220 01:44:36.485"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:36.488" starttime="20210220 01:44:36.484"></status>
</kw>
<msg timestamp="20210220 01:44:36.488" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:44:36.488" starttime="20210220 01:44:36.484"></status>
</kw>
<msg timestamp="20210220 01:44:36.488" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:44:36.488" starttime="20210220 01:44:36.483"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:44:36.489" level="INFO">${random} = 78402</msg>
<status status="PASS" endtime="20210220 01:44:36.489" starttime="20210220 01:44:36.488"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:36.494" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-78402 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:40.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:40.604" level="INFO">${output} = 2021-02-20 01:44:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:44:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 ...</msg>
<status status="PASS" endtime="20210220 01:44:40.604" starttime="20210220 01:44:36.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:40.606" level="INFO">2021-02-20 01:44:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:44:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 01:44:38 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-20 01:44:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:44:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C76BE2CBCCFE-&gt;2bd48b42-53c1-4c68-b6b3-1650463cfba0
2021-02-20 01:44:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210220 01:44:40.607" starttime="20210220 01:44:40.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:40.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:40.607" starttime="20210220 01:44:40.607"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:40.607" starttime="20210220 01:44:36.490"></status>
</kw>
<msg timestamp="20210220 01:44:40.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:40.608" starttime="20210220 01:44:36.489"></status>
</kw>
<msg timestamp="20210220 01:44:40.608" level="INFO">${result} = 2021-02-20 01:44:38 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:44:38 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 ...</msg>
<status status="PASS" endtime="20210220 01:44:40.608" starttime="20210220 01:44:36.489"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:40.611" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:42.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:42.496" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:44 o3fs://bucket1.volume1.om/ozone-78402
dr...</msg>
<status status="PASS" endtime="20210220 01:44:42.496" starttime="20210220 01:44:40.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:42.497" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:44 o3fs://bucket1.volume1.om/ozone-78402
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:44:42.497" starttime="20210220 01:44:42.496"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:42.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:42.498" starttime="20210220 01:44:42.497"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:42.498" starttime="20210220 01:44:40.609"></status>
</kw>
<msg timestamp="20210220 01:44:42.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:42.498" starttime="20210220 01:44:40.609"></status>
</kw>
<msg timestamp="20210220 01:44:42.498" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:44 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-20 01:44 o3fs://bucket1.volume1.om/ozone-78402
dr...</msg>
<status status="PASS" endtime="20210220 01:44:42.498" starttime="20210220 01:44:40.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:44:42.499" starttime="20210220 01:44:42.499"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:44:42.499" critical="yes" starttime="20210220 01:44:36.482"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 01:44:42.501" starttime="20210220 01:44:36.429"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:46:25.496" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:46:25.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:46:25.504" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:46:25.504" starttime="20210220 01:46:25.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:46:25.505" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:46:25.505" starttime="20210220 01:46:25.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:46:25.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:46:25.506" starttime="20210220 01:46:25.505"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:25.506" starttime="20210220 01:46:25.490"></status>
</kw>
<msg timestamp="20210220 01:46:25.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:46:25.506" starttime="20210220 01:46:25.490"></status>
</kw>
<msg timestamp="20210220 01:46:25.506" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:46:25.506" starttime="20210220 01:46:25.490"></status>
</kw>
<msg timestamp="20210220 01:46:25.507" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:46:25.507" starttime="20210220 01:46:25.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:46:25.512" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:46:25.512" starttime="20210220 01:46:25.511"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:46:25.512" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:46:25.512" starttime="20210220 01:46:25.512"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:25.512" starttime="20210220 01:46:25.511"></status>
</kw>
<msg timestamp="20210220 01:46:25.513" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:46:25.513" starttime="20210220 01:46:25.510"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:46:25.514" starttime="20210220 01:46:25.513"></status>
</kw>
<msg timestamp="20210220 01:46:25.514" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:46:25.514" starttime="20210220 01:46:25.513"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:25.514" starttime="20210220 01:46:25.509"></status>
</kw>
<msg timestamp="20210220 01:46:25.514" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:46:25.514" starttime="20210220 01:46:25.508"></status>
</kw>
<msg timestamp="20210220 01:46:25.515" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:46:25.515" starttime="20210220 01:46:25.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:46:25.518" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:47:04.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:47:04.294" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:46:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:46:27 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210220 01:47:04.294" starttime="20210220 01:46:25.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:47:04.295" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:46:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:46:27 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 01:46:27 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-20 01:46:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:46:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B484465A2BD0-&gt;f21f6075-fbf0-437b-a90a-6d79bc6c5a6f
2021-02-20 01:46:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-20 01:46:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9E231BF3850D-&gt;2bd48b42-53c1-4c68-b6b3-1650463cfba0
2021-02-20 01:46:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-20 01:46:31 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:46:31 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:46:31 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-20 01:46:31 INFO  JobSubmitter:198 - number of splits:3
2021-02-20 01:46:31 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613785399528_0003
2021-02-20 01:46:32 INFO  YarnClientImpl:273 - Submitted application application_1613785399528_0003
2021-02-20 01:46:32 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613785399528_0003/
2021-02-20 01:46:32 INFO  Job:1339 - Running job: job_1613785399528_0003
2021-02-20 01:46:39 INFO  Job:1360 - Job job_1613785399528_0003 running in uber mode : false
2021-02-20 01:46:39 INFO  Job:1367 -  map 0% reduce 0%
2021-02-20 01:46:46 INFO  Job:1367 -  map 33% reduce 0%
2021-02-20 01:46:51 INFO  Job:1367 -  map 67% reduce 0%
2021-02-20 01:46:56 INFO  Job:1367 -  map 100% reduce 0%
2021-02-20 01:47:02 INFO  Job:1367 -  map 100% reduce 100%
2021-02-20 01:47:03 INFO  Job:1378 - Job job_1613785399528_0003 completed successfully
2021-02-20 01:47:03 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=611873
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42088
		Total time spent by all reduces in occupied slots (ms)=25088
		Total time spent by all map tasks (ms)=10522
		Total time spent by all reduce tasks (ms)=6272
		Total vcore-milliseconds taken by all map tasks=10522
		Total vcore-milliseconds taken by all reduce tasks=6272
		Total megabyte-milliseconds taken by all map tasks=43098112
		Total megabyte-milliseconds taken by all reduce tasks=25690112
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=7440
		Physical memory (bytes) snapshot=1195700224
		Virtual memory (bytes) snapshot=15795195904
		Total committed heap usage (bytes)=1065877504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.501 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210220 01:47:04.295" starttime="20210220 01:47:04.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:47:04.296" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:47:04.296" starttime="20210220 01:47:04.295"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.296" starttime="20210220 01:46:25.516"></status>
</kw>
<msg timestamp="20210220 01:47:04.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:47:04.296" starttime="20210220 01:46:25.516"></status>
</kw>
<msg timestamp="20210220 01:47:04.297" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:46:27 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:46:27 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210220 01:47:04.297" starttime="20210220 01:46:25.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:47:04.297" starttime="20210220 01:47:04.297"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:47:04.298" critical="yes" starttime="20210220 01:46:25.488"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:47:04.303" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:47:04.311" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:47:04.312" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:47:04.312" starttime="20210220 01:47:04.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:47:04.314" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:47:04.314" starttime="20210220 01:47:04.312"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:47:04.316" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:47:04.316" starttime="20210220 01:47:04.314"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.316" starttime="20210220 01:47:04.301"></status>
</kw>
<msg timestamp="20210220 01:47:04.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:47:04.316" starttime="20210220 01:47:04.300"></status>
</kw>
<msg timestamp="20210220 01:47:04.317" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:47:04.317" starttime="20210220 01:47:04.300"></status>
</kw>
<msg timestamp="20210220 01:47:04.317" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:47:04.317" starttime="20210220 01:47:04.299"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:47:04.318" level="INFO">${random} = mvcZxkGd</msg>
<status status="PASS" endtime="20210220 01:47:04.318" starttime="20210220 01:47:04.317"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:47:04.324" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:47:04.324" starttime="20210220 01:47:04.324"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:47:04.325" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:47:04.325" starttime="20210220 01:47:04.325"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.325" starttime="20210220 01:47:04.321"></status>
</kw>
<msg timestamp="20210220 01:47:04.325" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:47:04.325" starttime="20210220 01:47:04.320"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:47:04.326" starttime="20210220 01:47:04.326"></status>
</kw>
<msg timestamp="20210220 01:47:04.326" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:47:04.326" starttime="20210220 01:47:04.326"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.327" starttime="20210220 01:47:04.319"></status>
</kw>
<msg timestamp="20210220 01:47:04.327" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:47:04.327" starttime="20210220 01:47:04.319"></status>
</kw>
<msg timestamp="20210220 01:47:04.327" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:47:04.327" starttime="20210220 01:47:04.318"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:47:04.331" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:47:04.331" starttime="20210220 01:47:04.330"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:47:04.331" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:47:04.331" starttime="20210220 01:47:04.331"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.332" starttime="20210220 01:47:04.330"></status>
</kw>
<msg timestamp="20210220 01:47:04.332" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:47:04.332" starttime="20210220 01:47:04.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:47:04.333" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210220 01:47:04.333" starttime="20210220 01:47:04.333"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:47:04.334" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210220 01:47:04.334" starttime="20210220 01:47:04.334"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.334" starttime="20210220 01:47:04.332"></status>
</kw>
<msg timestamp="20210220 01:47:04.334" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210220 01:47:04.334" starttime="20210220 01:47:04.332"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.335" starttime="20210220 01:47:04.328"></status>
</kw>
<msg timestamp="20210220 01:47:04.335" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 01:47:04.335" starttime="20210220 01:47:04.328"></status>
</kw>
<msg timestamp="20210220 01:47:04.335" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 01:47:04.335" starttime="20210220 01:47:04.327"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:47:04.339" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:47:04.339" starttime="20210220 01:47:04.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:47:04.340" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:47:04.340" starttime="20210220 01:47:04.339"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.340" starttime="20210220 01:47:04.337"></status>
</kw>
<msg timestamp="20210220 01:47:04.340" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:47:04.340" starttime="20210220 01:47:04.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:47:04.342" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210220 01:47:04.342" starttime="20210220 01:47:04.342"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:47:04.343" level="INFO">${result} = /wordcount-mvcZxkGd.txt</msg>
<status status="PASS" endtime="20210220 01:47:04.343" starttime="20210220 01:47:04.342"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.343" starttime="20210220 01:47:04.341"></status>
</kw>
<msg timestamp="20210220 01:47:04.343" level="INFO">${path_with_leading} = /wordcount-mvcZxkGd.txt</msg>
<status status="PASS" endtime="20210220 01:47:04.343" starttime="20210220 01:47:04.340"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:04.343" starttime="20210220 01:47:04.336"></status>
</kw>
<msg timestamp="20210220 01:47:04.344" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-mvcZxkGd.txt</msg>
<status status="PASS" endtime="20210220 01:47:04.344" starttime="20210220 01:47:04.336"></status>
</kw>
<msg timestamp="20210220 01:47:04.344" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-mvcZxkGd.txt</msg>
<status status="PASS" endtime="20210220 01:47:04.344" starttime="20210220 01:47:04.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:47:04.348" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-mvcZxkGd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:47:41.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:47:41.303" level="INFO">${output} = 2021-02-20 01:47:06 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:47:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210220 01:47:41.303" starttime="20210220 01:47:04.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:47:41.305" level="INFO">2021-02-20 01:47:06 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:47:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:47:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:47:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 01:47:06 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-20 01:47:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:47:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-826F1D92D17B-&gt;2bd48b42-53c1-4c68-b6b3-1650463cfba0
2021-02-20 01:47:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:47:07 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-20 01:47:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FAC545EFCA9D-&gt;f21f6075-fbf0-437b-a90a-6d79bc6c5a6f
2021-02-20 01:47:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:47:07 INFO  JobSubmitter:198 - number of splits:3
2021-02-20 01:47:08 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613785399528_0004
2021-02-20 01:47:08 INFO  YarnClientImpl:273 - Submitted application application_1613785399528_0004
2021-02-20 01:47:08 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613785399528_0004/
2021-02-20 01:47:08 INFO  Job:1339 - Running job: job_1613785399528_0004
2021-02-20 01:47:16 INFO  Job:1360 - Job job_1613785399528_0004 running in uber mode : false
2021-02-20 01:47:16 INFO  Job:1367 -  map 0% reduce 0%
2021-02-20 01:47:23 INFO  Job:1367 -  map 33% reduce 0%
2021-02-20 01:47:27 INFO  Job:1367 -  map 67% reduce 0%
2021-02-20 01:47:32 INFO  Job:1367 -  map 100% reduce 0%
2021-02-20 01:47:37 INFO  Job:1367 -  map 100% reduce 100%
2021-02-20 01:47:40 INFO  Job:1378 - Job job_1613785399528_0004 completed successfully
2021-02-20 01:47:40 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674635
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41384
		Total time spent by all reduces in occupied slots (ms)=14908
		Total time spent by all map tasks (ms)=10346
		Total time spent by all reduce tasks (ms)=3727
		Total vcore-milliseconds taken by all map tasks=10346
		Total vcore-milliseconds taken by all reduce tasks=3727
		Total megabyte-milliseconds taken by all map tasks=42377216
		Total megabyte-milliseconds taken by all reduce tasks=15265792
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=622
		CPU time spent (ms)=7140
		Physical memory (bytes) snapshot=1197678592
		Virtual memory (bytes) snapshot=15793102848
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210220 01:47:41.305" starttime="20210220 01:47:41.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:47:41.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:47:41.306" starttime="20210220 01:47:41.305"></status>
</kw>
<status status="PASS" endtime="20210220 01:47:41.306" starttime="20210220 01:47:04.345"></status>
</kw>
<msg timestamp="20210220 01:47:41.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:47:41.306" starttime="20210220 01:47:04.345"></status>
</kw>
<msg timestamp="20210220 01:47:41.307" level="INFO">${output} = 2021-02-20 01:47:06 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:47:06 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210220 01:47:41.307" starttime="20210220 01:47:04.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 01:47:41.308" starttime="20210220 01:47:41.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:47:41.309" starttime="20210220 01:47:41.308"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:47:41.310" critical="yes" starttime="20210220 01:47:04.298"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 01:47:41.311" starttime="20210220 01:46:25.436"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:47.103" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:44:47.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:44:47.118" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:44:47.118" starttime="20210220 01:44:47.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:44:47.119" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:44:47.119" starttime="20210220 01:44:47.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:44:47.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:44:47.120" starttime="20210220 01:44:47.119"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:47.120" starttime="20210220 01:44:47.098"></status>
</kw>
<msg timestamp="20210220 01:44:47.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:44:47.121" starttime="20210220 01:44:47.098"></status>
</kw>
<msg timestamp="20210220 01:44:47.121" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:44:47.121" starttime="20210220 01:44:47.097"></status>
</kw>
<msg timestamp="20210220 01:44:47.121" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:44:47.121" starttime="20210220 01:44:47.097"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:44:47.128" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:44:47.128" starttime="20210220 01:44:47.127"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:44:47.129" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:44:47.129" starttime="20210220 01:44:47.128"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:47.129" starttime="20210220 01:44:47.127"></status>
</kw>
<msg timestamp="20210220 01:44:47.129" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:44:47.129" starttime="20210220 01:44:47.126"></status>
</kw>
<status status="PASS" endtime="20210220 01:44:47.129" starttime="20210220 01:44:47.124"></status>
</kw>
<msg timestamp="20210220 01:44:47.129" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:44:47.129" starttime="20210220 01:44:47.122"></status>
</kw>
<msg timestamp="20210220 01:44:47.130" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:44:47.130" starttime="20210220 01:44:47.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:44:47.133" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:45:32.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:45:32.058" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:44:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:44:49 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210220 01:45:32.058" starttime="20210220 01:44:47.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:45:32.059" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:44:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:44:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 01:44:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-20 01:44:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:44:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D67B32E51F01-&gt;f21f6075-fbf0-437b-a90a-6d79bc6c5a6f
2021-02-20 01:44:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-20 01:44:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-58EF1A86A7C6-&gt;2bd48b42-53c1-4c68-b6b3-1650463cfba0
2021-02-20 01:44:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-20 01:44:53 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:44:53 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-20 01:44:56 INFO  JobSubmitter:198 - number of splits:3
2021-02-20 01:44:56 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613785399528_0001
2021-02-20 01:44:56 INFO  YarnClientImpl:273 - Submitted application application_1613785399528_0001
2021-02-20 01:44:57 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613785399528_0001/
2021-02-20 01:44:57 INFO  Job:1339 - Running job: job_1613785399528_0001
2021-02-20 01:45:07 INFO  Job:1360 - Job job_1613785399528_0001 running in uber mode : false
2021-02-20 01:45:07 INFO  Job:1367 -  map 0% reduce 0%
2021-02-20 01:45:14 INFO  Job:1367 -  map 33% reduce 0%
2021-02-20 01:45:20 INFO  Job:1367 -  map 67% reduce 0%
2021-02-20 01:45:25 INFO  Job:1367 -  map 100% reduce 0%
2021-02-20 01:45:30 INFO  Job:1367 -  map 100% reduce 100%
2021-02-20 01:45:31 INFO  Job:1378 - Job job_1613785399528_0001 completed successfully
2021-02-20 01:45:31 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612085
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42672
		Total time spent by all reduces in occupied slots (ms)=15960
		Total time spent by all map tasks (ms)=10668
		Total time spent by all reduce tasks (ms)=3990
		Total vcore-milliseconds taken by all map tasks=10668
		Total vcore-milliseconds taken by all reduce tasks=3990
		Total megabyte-milliseconds taken by all map tasks=43696128
		Total megabyte-milliseconds taken by all reduce tasks=16343040
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=708
		CPU time spent (ms)=7670
		Physical memory (bytes) snapshot=1216630784
		Virtual memory (bytes) snapshot=15808851968
		Total committed heap usage (bytes)=1061158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.451 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210220 01:45:32.059" starttime="20210220 01:45:32.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:45:32.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:45:32.060" starttime="20210220 01:45:32.059"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.060" starttime="20210220 01:44:47.131"></status>
</kw>
<msg timestamp="20210220 01:45:32.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:45:32.061" starttime="20210220 01:44:47.131"></status>
</kw>
<msg timestamp="20210220 01:45:32.061" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:44:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:44:49 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210220 01:45:32.061" starttime="20210220 01:44:47.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:45:32.061" starttime="20210220 01:45:32.061"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:45:32.062" critical="yes" starttime="20210220 01:44:47.096"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:45:32.073" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:45:32.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:45:32.080" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:45:32.080" starttime="20210220 01:45:32.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:45:32.081" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:45:32.081" starttime="20210220 01:45:32.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:45:32.082" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:45:32.082" starttime="20210220 01:45:32.081"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.082" starttime="20210220 01:45:32.065"></status>
</kw>
<msg timestamp="20210220 01:45:32.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:45:32.082" starttime="20210220 01:45:32.065"></status>
</kw>
<msg timestamp="20210220 01:45:32.083" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:45:32.083" starttime="20210220 01:45:32.064"></status>
</kw>
<msg timestamp="20210220 01:45:32.083" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210220 01:45:32.083" starttime="20210220 01:45:32.064"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:45:32.084" level="INFO">${random} = GxruKyf7</msg>
<status status="PASS" endtime="20210220 01:45:32.084" starttime="20210220 01:45:32.083"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:45:32.088" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:45:32.088" starttime="20210220 01:45:32.087"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:45:32.088" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:45:32.088" starttime="20210220 01:45:32.088"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.089" starttime="20210220 01:45:32.087"></status>
</kw>
<msg timestamp="20210220 01:45:32.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:45:32.089" starttime="20210220 01:45:32.086"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.089" starttime="20210220 01:45:32.085"></status>
</kw>
<msg timestamp="20210220 01:45:32.089" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:45:32.089" starttime="20210220 01:45:32.085"></status>
</kw>
<msg timestamp="20210220 01:45:32.090" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:45:32.090" starttime="20210220 01:45:32.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:45:32.094" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:45:32.094" starttime="20210220 01:45:32.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:45:32.094" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:45:32.094" starttime="20210220 01:45:32.094"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.095" starttime="20210220 01:45:32.093"></status>
</kw>
<msg timestamp="20210220 01:45:32.095" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:45:32.095" starttime="20210220 01:45:32.092"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.095" starttime="20210220 01:45:32.091"></status>
</kw>
<msg timestamp="20210220 01:45:32.095" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 01:45:32.095" starttime="20210220 01:45:32.091"></status>
</kw>
<msg timestamp="20210220 01:45:32.095" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 01:45:32.095" starttime="20210220 01:45:32.090"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:45:32.104" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:45:32.104" starttime="20210220 01:45:32.104"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:45:32.105" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:45:32.105" starttime="20210220 01:45:32.104"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.105" starttime="20210220 01:45:32.103"></status>
</kw>
<msg timestamp="20210220 01:45:32.105" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:45:32.105" starttime="20210220 01:45:32.097"></status>
</kw>
<status status="PASS" endtime="20210220 01:45:32.105" starttime="20210220 01:45:32.097"></status>
</kw>
<msg timestamp="20210220 01:45:32.105" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-GxruKyf7.txt</msg>
<status status="PASS" endtime="20210220 01:45:32.105" starttime="20210220 01:45:32.096"></status>
</kw>
<msg timestamp="20210220 01:45:32.106" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-GxruKyf7.txt</msg>
<status status="PASS" endtime="20210220 01:45:32.106" starttime="20210220 01:45:32.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:45:32.109" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-GxruKyf7.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:46:10.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:46:10.718" level="INFO">${output} = 2021-02-20 01:45:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:45:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210220 01:46:10.718" starttime="20210220 01:45:32.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:46:10.719" level="INFO">2021-02-20 01:45:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:45:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:45:34 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:45:34 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-20 01:45:34 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-20 01:45:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:45:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-162B25A8D100-&gt;2bd48b42-53c1-4c68-b6b3-1650463cfba0
2021-02-20 01:45:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:45:38 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-20 01:45:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1230E58BD4F5-&gt;f21f6075-fbf0-437b-a90a-6d79bc6c5a6f
2021-02-20 01:45:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:45:38 INFO  JobSubmitter:198 - number of splits:3
2021-02-20 01:45:38 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613785399528_0002
2021-02-20 01:45:38 INFO  YarnClientImpl:273 - Submitted application application_1613785399528_0002
2021-02-20 01:45:38 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613785399528_0002/
2021-02-20 01:45:38 INFO  Job:1339 - Running job: job_1613785399528_0002
2021-02-20 01:45:46 INFO  Job:1360 - Job job_1613785399528_0002 running in uber mode : false
2021-02-20 01:45:46 INFO  Job:1367 -  map 0% reduce 0%
2021-02-20 01:45:53 INFO  Job:1367 -  map 33% reduce 0%
2021-02-20 01:45:58 INFO  Job:1367 -  map 67% reduce 0%
2021-02-20 01:46:03 INFO  Job:1367 -  map 100% reduce 0%
2021-02-20 01:46:07 INFO  Job:1367 -  map 100% reduce 100%
2021-02-20 01:46:10 INFO  Job:1378 - Job job_1613785399528_0002 completed successfully
2021-02-20 01:46:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42900
		Total time spent by all reduces in occupied slots (ms)=15248
		Total time spent by all map tasks (ms)=10725
		Total time spent by all reduce tasks (ms)=3812
		Total vcore-milliseconds taken by all map tasks=10725
		Total vcore-milliseconds taken by all reduce tasks=3812
		Total megabyte-milliseconds taken by all map tasks=43929600
		Total megabyte-milliseconds taken by all reduce tasks=15613952
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=7550
		Physical memory (bytes) snapshot=1221554176
		Virtual memory (bytes) snapshot=15814754304
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210220 01:46:10.719" starttime="20210220 01:46:10.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:46:10.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:46:10.720" starttime="20210220 01:46:10.719"></status>
</kw>
<status status="PASS" endtime="20210220 01:46:10.720" starttime="20210220 01:45:32.107"></status>
</kw>
<msg timestamp="20210220 01:46:10.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:46:10.721" starttime="20210220 01:45:32.106"></status>
</kw>
<msg timestamp="20210220 01:46:10.721" level="INFO">${output} = 2021-02-20 01:45:34 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-20 01:45:34 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210220 01:46:10.721" starttime="20210220 01:45:32.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 01:46:10.722" starttime="20210220 01:46:10.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:46:10.722" starttime="20210220 01:46:10.722"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:46:10.722" critical="yes" starttime="20210220 01:45:32.063"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 01:46:10.724" starttime="20210220 01:44:47.043"></status>
</suite>
<status status="PASS" elapsedtime="200182" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:48:47.991" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:48:57.125" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 01:48:57.125" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:48:57.125" starttime="20210220 01:48:47.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:48:57.126" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:48:57.126" starttime="20210220 01:48:57.125"></status>
</kw>
<msg timestamp="20210220 01:48:57.127" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:48:57.127" starttime="20210220 01:48:47.983"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:48:57.132" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:48:59.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:48:59.533" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:48:59.533" starttime="20210220 01:48:57.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:48:59.534" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:48:59.535" starttime="20210220 01:48:59.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:48:59.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:48:59.535" starttime="20210220 01:48:59.535"></status>
</kw>
<status status="PASS" endtime="20210220 01:48:59.535" starttime="20210220 01:48:57.129"></status>
</kw>
<msg timestamp="20210220 01:48:59.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:48:59.536" starttime="20210220 01:48:57.128"></status>
</kw>
<msg timestamp="20210220 01:48:59.536" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210220 01:48:59.536" starttime="20210220 01:48:57.128"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210220 01:48:59.537" starttime="20210220 01:48:59.536"></status>
</kw>
<status status="PASS" endtime="20210220 01:48:59.537" starttime="20210220 01:48:57.127"></status>
</kw>
<status status="PASS" endtime="20210220 01:48:59.537" starttime="20210220 01:48:57.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:48:59.544" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:01.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:01.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:01.699" starttime="20210220 01:48:59.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:01.700" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:01.700" starttime="20210220 01:49:01.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:01.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:01.701" starttime="20210220 01:49:01.700"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:01.701" starttime="20210220 01:48:59.540"></status>
</kw>
<msg timestamp="20210220 01:49:01.701" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:01.701" starttime="20210220 01:48:59.540"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:01.701" starttime="20210220 01:48:59.539"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:01.701" starttime="20210220 01:48:59.537"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:01.702" starttime="20210220 01:48:59.537"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210220 01:49:01.702" starttime="20210220 01:49:01.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:01.706" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:04.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:04.284" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:49...</msg>
<status status="PASS" endtime="20210220 01:49:04.284" starttime="20210220 01:49:01.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:04.285" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:49:01.660Z",
  "modificationTime" : "2021-02-20T01:49:01.660Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 01:49:04.285" starttime="20210220 01:49:04.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:04.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:04.286" starttime="20210220 01:49:04.286"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:04.286" starttime="20210220 01:49:01.703"></status>
</kw>
<msg timestamp="20210220 01:49:04.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:04.287" starttime="20210220 01:49:01.703"></status>
</kw>
<msg timestamp="20210220 01:49:04.287" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:49...</msg>
<status status="PASS" endtime="20210220 01:49:04.287" starttime="20210220 01:49:01.702"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210220 01:49:04.287" starttime="20210220 01:49:04.287"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:49:04.291" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:49:04.291" starttime="20210220 01:49:04.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:49:04.292" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:49:04.292" starttime="20210220 01:49:04.291"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:04.292" starttime="20210220 01:49:04.290"></status>
</kw>
<msg timestamp="20210220 01:49:04.292" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:49:04.292" starttime="20210220 01:49:04.290"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:04.292" starttime="20210220 01:49:04.289"></status>
</kw>
<msg timestamp="20210220 01:49:04.293" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 01:49:04.293" starttime="20210220 01:49:04.288"></status>
</kw>
<msg timestamp="20210220 01:49:04.293" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 01:49:04.293" starttime="20210220 01:49:04.287"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:04.296" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:06.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:06.484" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:06.484" starttime="20210220 01:49:04.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:06.485" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:06.485" starttime="20210220 01:49:06.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:06.486" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:06.486" starttime="20210220 01:49:06.485"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:06.486" starttime="20210220 01:49:04.294"></status>
</kw>
<msg timestamp="20210220 01:49:06.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:06.487" starttime="20210220 01:49:04.293"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:06.487" starttime="20210220 01:49:04.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:06.491" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:11.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:11.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:11.553" starttime="20210220 01:49:06.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:11.554" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:11.554" starttime="20210220 01:49:11.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:11.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:11.555" starttime="20210220 01:49:11.555"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:11.556" starttime="20210220 01:49:06.488"></status>
</kw>
<msg timestamp="20210220 01:49:11.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:11.556" starttime="20210220 01:49:06.488"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:11.556" starttime="20210220 01:49:06.487"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:11.559" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:15.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:15.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:15.668" starttime="20210220 01:49:11.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:15.669" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:15.669" starttime="20210220 01:49:15.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:15.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:15.670" starttime="20210220 01:49:15.669"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:15.670" starttime="20210220 01:49:11.557"></status>
</kw>
<msg timestamp="20210220 01:49:15.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:15.670" starttime="20210220 01:49:11.557"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:15.671" starttime="20210220 01:49:11.556"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:15.675" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:22.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:22.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:22.401" starttime="20210220 01:49:15.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:22.402" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:22.402" starttime="20210220 01:49:22.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:22.403" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:22.403" starttime="20210220 01:49:22.403"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:22.404" starttime="20210220 01:49:15.672"></status>
</kw>
<msg timestamp="20210220 01:49:22.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:22.404" starttime="20210220 01:49:15.671"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:22.404" starttime="20210220 01:49:15.671"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 01:49:22.404" critical="yes" starttime="20210220 01:48:47.982"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:49:22.410" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:49:22.410" starttime="20210220 01:49:22.409"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:49:22.411" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:49:22.411" starttime="20210220 01:49:22.410"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:22.411" starttime="20210220 01:49:22.409"></status>
</kw>
<msg timestamp="20210220 01:49:22.411" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:49:22.411" starttime="20210220 01:49:22.408"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:22.411" starttime="20210220 01:49:22.408"></status>
</kw>
<msg timestamp="20210220 01:49:22.411" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:49:22.411" starttime="20210220 01:49:22.407"></status>
</kw>
<msg timestamp="20210220 01:49:22.412" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:49:22.412" starttime="20210220 01:49:22.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:22.415" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:24.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:24.613" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:24.613" starttime="20210220 01:49:22.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:24.614" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:24.615" starttime="20210220 01:49:24.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:24.615" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:24.615" starttime="20210220 01:49:24.615"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:24.616" starttime="20210220 01:49:22.412"></status>
</kw>
<msg timestamp="20210220 01:49:24.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:24.616" starttime="20210220 01:49:22.412"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:24.616" starttime="20210220 01:49:22.412"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:24.619" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:26.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:26.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:49:26.887" starttime="20210220 01:49:24.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:26.888" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:49:26.888" starttime="20210220 01:49:26.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:26.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:26.889" starttime="20210220 01:49:26.888"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:26.889" starttime="20210220 01:49:24.617"></status>
</kw>
<msg timestamp="20210220 01:49:26.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:26.889" starttime="20210220 01:49:24.617"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:26.890" starttime="20210220 01:49:24.616"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 01:49:26.890" critical="yes" starttime="20210220 01:49:22.405"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210220 01:49:26.891" starttime="20210220 01:48:47.918"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:51:07.841" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:51:07.841" starttime="20210220 01:51:07.840"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:07.841" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:51:07.841" starttime="20210220 01:51:07.841"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:07.842" starttime="20210220 01:51:07.840"></status>
</kw>
<msg timestamp="20210220 01:51:07.842" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:51:07.842" starttime="20210220 01:51:07.839"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:07.843" starttime="20210220 01:51:07.842"></status>
</kw>
<msg timestamp="20210220 01:51:07.843" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:51:07.843" starttime="20210220 01:51:07.842"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:07.843" starttime="20210220 01:51:07.839"></status>
</kw>
<msg timestamp="20210220 01:51:07.843" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:51:07.843" starttime="20210220 01:51:07.838"></status>
</kw>
<msg timestamp="20210220 01:51:07.844" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:51:07.844" starttime="20210220 01:51:07.837"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:51:07.844" level="INFO">${random} = 00001</msg>
<status status="PASS" endtime="20210220 01:51:07.844" starttime="20210220 01:51:07.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:51:07.850" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-00001 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:51:11.660" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:51:11.660" level="INFO">${output} = 2021-02-20 01:51:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:51:11.660" starttime="20210220 01:51:07.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:51:11.662" level="INFO">2021-02-20 01:51:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-20 01:51:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:51:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:51:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:51:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:51:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D41B2B7E788-&gt;dc5b1510-337e-492f-8373-58d41c5ed3d2
2021-02-20 01:51:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:51:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:51:11.662" starttime="20210220 01:51:11.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:51:11.662" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:51:11.663" starttime="20210220 01:51:11.662"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:11.663" starttime="20210220 01:51:07.845"></status>
</kw>
<msg timestamp="20210220 01:51:11.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:51:11.663" starttime="20210220 01:51:07.845"></status>
</kw>
<msg timestamp="20210220 01:51:11.663" level="INFO">${result} = 2021-02-20 01:51:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:51:11.663" starttime="20210220 01:51:07.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:51:11.667" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:51:13.717" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:51:13.717" level="INFO">${output} = 2021-02-20 01:51:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:51:13.717" starttime="20210220 01:51:11.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:51:13.718" level="INFO">2021-02-20 01:51:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:13 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:49 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-20 01:51 ofs://om/volume1/bucket1/ozone-00001
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-20 01:49 ofs://om/volume1/bucket1/ozone-52739
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:49 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:50 ofs://om/volume1/bucket1/wordcount-WUaYbkZS.txt
2021-02-20 01:51:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:51:13.718" starttime="20210220 01:51:13.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:51:13.719" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:51:13.719" starttime="20210220 01:51:13.718"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:13.719" starttime="20210220 01:51:11.664"></status>
</kw>
<msg timestamp="20210220 01:51:13.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:51:13.719" starttime="20210220 01:51:11.664"></status>
</kw>
<msg timestamp="20210220 01:51:13.720" level="INFO">${result} = 2021-02-20 01:51:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:12 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:51:13.720" starttime="20210220 01:51:11.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:13.720" starttime="20210220 01:51:13.720"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:51:13.721" critical="yes" starttime="20210220 01:51:07.836"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 01:51:13.722" starttime="20210220 01:51:07.783"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:49:31.550" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:49:31.550" starttime="20210220 01:49:31.549"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:49:31.550" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:49:31.551" starttime="20210220 01:49:31.550"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:31.551" starttime="20210220 01:49:31.549"></status>
</kw>
<msg timestamp="20210220 01:49:31.551" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:49:31.551" starttime="20210220 01:49:31.549"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:31.551" starttime="20210220 01:49:31.548"></status>
</kw>
<msg timestamp="20210220 01:49:31.551" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:49:31.551" starttime="20210220 01:49:31.547"></status>
</kw>
<msg timestamp="20210220 01:49:31.551" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:49:31.552" starttime="20210220 01:49:31.546"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:49:31.552" level="INFO">${random} = 52739</msg>
<status status="PASS" endtime="20210220 01:49:31.552" starttime="20210220 01:49:31.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:31.557" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-52739 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:35.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:35.374" level="INFO">${output} = 2021-02-20 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:49:35.374" starttime="20210220 01:49:31.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:35.378" level="INFO">2021-02-20 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-20 01:49:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:49:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:49:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:49:34 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:49:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DB221916DC59-&gt;69a3942b-8e32-441a-8e3c-5ae6737af697
2021-02-20 01:49:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:49:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:49:35.378" starttime="20210220 01:49:35.374"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:35.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:35.379" starttime="20210220 01:49:35.378"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:35.379" starttime="20210220 01:49:31.553"></status>
</kw>
<msg timestamp="20210220 01:49:35.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:35.379" starttime="20210220 01:49:31.553"></status>
</kw>
<msg timestamp="20210220 01:49:35.379" level="INFO">${result} = 2021-02-20 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:33 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:49:35.380" starttime="20210220 01:49:31.552"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:35.383" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:37.374" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:37.374" level="INFO">${output} = 2021-02-20 01:49:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:49:37.374" starttime="20210220 01:49:35.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:37.375" level="INFO">2021-02-20 01:49:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:37 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:49 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-20 01:49 o3fs://bucket1.volume1.om/ozone-52739
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:49 o3fs://bucket1.volume1.om/user
2021-02-20 01:49:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:49:37.375" starttime="20210220 01:49:37.375"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:37.376" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:37.376" starttime="20210220 01:49:37.376"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:37.377" starttime="20210220 01:49:35.380"></status>
</kw>
<msg timestamp="20210220 01:49:37.377" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:37.377" starttime="20210220 01:49:35.380"></status>
</kw>
<msg timestamp="20210220 01:49:37.377" level="INFO">${result} = 2021-02-20 01:49:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:37 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:49:37.377" starttime="20210220 01:49:35.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:49:37.378" starttime="20210220 01:49:37.377"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:49:37.378" critical="yes" starttime="20210220 01:49:31.545"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 01:49:37.379" starttime="20210220 01:49:31.491"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:51:18.385" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:51:18.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:51:18.391" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:18.391" starttime="20210220 01:51:18.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:51:18.392" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:18.392" starttime="20210220 01:51:18.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:51:18.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:51:18.393" starttime="20210220 01:51:18.392"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:18.393" starttime="20210220 01:51:18.380"></status>
</kw>
<msg timestamp="20210220 01:51:18.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:51:18.393" starttime="20210220 01:51:18.380"></status>
</kw>
<msg timestamp="20210220 01:51:18.394" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:18.394" starttime="20210220 01:51:18.379"></status>
</kw>
<msg timestamp="20210220 01:51:18.394" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:18.394" starttime="20210220 01:51:18.379"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:51:18.399" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:51:18.399" starttime="20210220 01:51:18.398"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:18.399" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:51:18.399" starttime="20210220 01:51:18.399"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:18.399" starttime="20210220 01:51:18.398"></status>
</kw>
<msg timestamp="20210220 01:51:18.400" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:51:18.400" starttime="20210220 01:51:18.397"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:18.401" starttime="20210220 01:51:18.400"></status>
</kw>
<msg timestamp="20210220 01:51:18.401" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:51:18.401" starttime="20210220 01:51:18.400"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:18.401" starttime="20210220 01:51:18.397"></status>
</kw>
<msg timestamp="20210220 01:51:18.401" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:51:18.401" starttime="20210220 01:51:18.395"></status>
</kw>
<msg timestamp="20210220 01:51:18.401" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:51:18.401" starttime="20210220 01:51:18.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:51:18.405" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:51:57.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:51:57.292" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:51:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51...</msg>
<status status="PASS" endtime="20210220 01:51:57.292" starttime="20210220 01:51:18.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:51:57.293" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:51:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-20 01:51:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:51:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:51:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:51:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:51:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-55E31711141C-&gt;69a3942b-8e32-441a-8e3c-5ae6737af697
2021-02-20 01:51:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-20 01:51:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:21 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-02-20 01:51:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:22 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:51:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:22 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:51:22 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:51:22 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613785706076_0003
2021-02-20 01:51:22 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:51:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:22 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:23 INFO  Configuration:2752 - resource-types.xml not found
2021-02-20 01:51:23 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-20 01:51:23 INFO  YarnClientImpl:324 - Submitted application application_1613785706076_0003
2021-02-20 01:51:23 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613785706076_0003/
2021-02-20 01:51:23 INFO  Job:1619 - Running job: job_1613785706076_0003
2021-02-20 01:51:31 INFO  Job:1640 - Job job_1613785706076_0003 running in uber mode : false
2021-02-20 01:51:31 INFO  Job:1647 -  map 0% reduce 0%
2021-02-20 01:51:37 INFO  Job:1647 -  map 33% reduce 0%
2021-02-20 01:51:43 INFO  Job:1647 -  map 67% reduce 0%
2021-02-20 01:51:48 INFO  Job:1647 -  map 100% reduce 0%
2021-02-20 01:51:55 INFO  Job:1647 -  map 100% reduce 100%
2021-02-20 01:51:56 INFO  Job:1658 - Job job_1613785706076_0003 completed successfully
2021-02-20 01:51:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:56 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41176
		Total time spent by all reduces in occupied slots (ms)=26184
		Total time spent by all map tasks (ms)=10294
		Total time spent by all reduce tasks (ms)=6546
		Total vcore-milliseconds taken by all map tasks=10294
		Total vcore-milliseconds taken by all reduce tasks=6546
		Total megabyte-milliseconds taken by all map tasks=42164224
		Total megabyte-milliseconds taken by all reduce tasks=26812416
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=628
		CPU time spent (ms)=7300
		Physical memory (bytes) snapshot=1260752896
		Virtual memory (bytes) snapshot=15799922688
		Total committed heap usage (bytes)=1077411840
		Peak Map Physical memory (bytes)=320688128
		Peak Map Virtual memory (bytes)=3948953600
		Peak Reduce Physical memory (bytes)=314056704
		Peak Reduce Virtual memory (bytes)=3964289024
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.036 seconds
2021-02-20 01:51:56 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-20 01:51:56 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:51:57.294" starttime="20210220 01:51:57.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:51:57.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:51:57.294" starttime="20210220 01:51:57.294"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.294" starttime="20210220 01:51:18.402"></status>
</kw>
<msg timestamp="20210220 01:51:57.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:51:57.295" starttime="20210220 01:51:18.402"></status>
</kw>
<msg timestamp="20210220 01:51:57.295" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:51:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51...</msg>
<status status="PASS" endtime="20210220 01:51:57.295" starttime="20210220 01:51:18.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:57.296" starttime="20210220 01:51:57.295"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:51:57.296" critical="yes" starttime="20210220 01:51:18.378"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:51:57.301" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:51:57.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:51:57.308" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:57.308" starttime="20210220 01:51:57.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:51:57.309" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:57.309" starttime="20210220 01:51:57.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:51:57.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:51:57.309" starttime="20210220 01:51:57.309"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.310" starttime="20210220 01:51:57.299"></status>
</kw>
<msg timestamp="20210220 01:51:57.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:51:57.310" starttime="20210220 01:51:57.298"></status>
</kw>
<msg timestamp="20210220 01:51:57.311" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:57.311" starttime="20210220 01:51:57.298"></status>
</kw>
<msg timestamp="20210220 01:51:57.311" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:51:57.311" starttime="20210220 01:51:57.298"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:51:57.311" level="INFO">${random} = F1BJzpO9</msg>
<status status="PASS" endtime="20210220 01:51:57.311" starttime="20210220 01:51:57.311"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:51:57.315" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:51:57.315" starttime="20210220 01:51:57.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:57.316" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:51:57.316" starttime="20210220 01:51:57.315"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.316" starttime="20210220 01:51:57.314"></status>
</kw>
<msg timestamp="20210220 01:51:57.316" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:51:57.316" starttime="20210220 01:51:57.314"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:57.317" starttime="20210220 01:51:57.317"></status>
</kw>
<msg timestamp="20210220 01:51:57.317" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:51:57.317" starttime="20210220 01:51:57.316"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.318" starttime="20210220 01:51:57.313"></status>
</kw>
<msg timestamp="20210220 01:51:57.318" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:51:57.318" starttime="20210220 01:51:57.312"></status>
</kw>
<msg timestamp="20210220 01:51:57.318" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:51:57.318" starttime="20210220 01:51:57.312"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:51:57.323" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:51:57.323" starttime="20210220 01:51:57.322"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:57.323" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:51:57.323" starttime="20210220 01:51:57.323"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.324" starttime="20210220 01:51:57.322"></status>
</kw>
<msg timestamp="20210220 01:51:57.324" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:51:57.324" starttime="20210220 01:51:57.321"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:51:57.325" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210220 01:51:57.325" starttime="20210220 01:51:57.325"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:57.326" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210220 01:51:57.326" starttime="20210220 01:51:57.325"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.326" starttime="20210220 01:51:57.324"></status>
</kw>
<msg timestamp="20210220 01:51:57.326" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210220 01:51:57.326" starttime="20210220 01:51:57.324"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.326" starttime="20210220 01:51:57.320"></status>
</kw>
<msg timestamp="20210220 01:51:57.326" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 01:51:57.327" starttime="20210220 01:51:57.319"></status>
</kw>
<msg timestamp="20210220 01:51:57.327" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 01:51:57.327" starttime="20210220 01:51:57.319"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:51:57.330" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:51:57.330" starttime="20210220 01:51:57.330"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:57.331" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:51:57.331" starttime="20210220 01:51:57.330"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.331" starttime="20210220 01:51:57.329"></status>
</kw>
<msg timestamp="20210220 01:51:57.331" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:51:57.331" starttime="20210220 01:51:57.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:51:57.332" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210220 01:51:57.333" starttime="20210220 01:51:57.332"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:51:57.333" level="INFO">${result} = /wordcount-F1BJzpO9.txt</msg>
<status status="PASS" endtime="20210220 01:51:57.333" starttime="20210220 01:51:57.333"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.334" starttime="20210220 01:51:57.332"></status>
</kw>
<msg timestamp="20210220 01:51:57.334" level="INFO">${path_with_leading} = /wordcount-F1BJzpO9.txt</msg>
<status status="PASS" endtime="20210220 01:51:57.334" starttime="20210220 01:51:57.331"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:57.334" starttime="20210220 01:51:57.328"></status>
</kw>
<msg timestamp="20210220 01:51:57.334" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-F1BJzpO9.txt</msg>
<status status="PASS" endtime="20210220 01:51:57.334" starttime="20210220 01:51:57.328"></status>
</kw>
<msg timestamp="20210220 01:51:57.334" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-F1BJzpO9.txt</msg>
<status status="PASS" endtime="20210220 01:51:57.334" starttime="20210220 01:51:57.327"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:51:57.339" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-F1BJzpO9.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:52:37.746" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:52:37.746" level="INFO">${output} = 2021-02-20 01:51:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:52:37.746" starttime="20210220 01:51:57.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:52:37.747" level="INFO">2021-02-20 01:51:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-20 01:51:59 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:51:59 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:51:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:52:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:52:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8E995E301AC6-&gt;dc5b1510-337e-492f-8373-58d41c5ed3d2
2021-02-20 01:52:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:52:00 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:52:01 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:52:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613785706076_0004
2021-02-20 01:52:01 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:52:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:52:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:52:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:52:01 INFO  Configuration:2752 - resource-types.xml not found
2021-02-20 01:52:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-20 01:52:01 INFO  YarnClientImpl:324 - Submitted application application_1613785706076_0004
2021-02-20 01:52:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613785706076_0004/
2021-02-20 01:52:01 INFO  Job:1619 - Running job: job_1613785706076_0004
2021-02-20 01:52:10 INFO  Job:1640 - Job job_1613785706076_0004 running in uber mode : false
2021-02-20 01:52:10 INFO  Job:1647 -  map 0% reduce 0%
2021-02-20 01:52:17 INFO  Job:1647 -  map 33% reduce 0%
2021-02-20 01:52:22 INFO  Job:1647 -  map 67% reduce 0%
2021-02-20 01:52:27 INFO  Job:1647 -  map 100% reduce 0%
2021-02-20 01:52:34 INFO  Job:1647 -  map 100% reduce 100%
2021-02-20 01:52:37 INFO  Job:1658 - Job job_1613785706076_0004 completed successfully
2021-02-20 01:52:37 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:52:37 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080147
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41372
		Total time spent by all reduces in occupied slots (ms)=25364
		Total time spent by all map tasks (ms)=10343
		Total time spent by all reduce tasks (ms)=6341
		Total vcore-milliseconds taken by all map tasks=10343
		Total vcore-milliseconds taken by all reduce tasks=6341
		Total megabyte-milliseconds taken by all map tasks=42364928
		Total megabyte-milliseconds taken by all reduce tasks=25972736
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=614
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1244827648
		Virtual memory (bytes) snapshot=15792209920
		Total committed heap usage (bytes)=1071120384
		Peak Map Physical memory (bytes)=319422464
		Peak Map Virtual memory (bytes)=3947397120
		Peak Reduce Physical memory (bytes)=305733632
		Peak Reduce Virtual memory (bytes)=3964227584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-20 01:52:37 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:52:37.747" starttime="20210220 01:52:37.746"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:52:37.748" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:52:37.748" starttime="20210220 01:52:37.747"></status>
</kw>
<status status="PASS" endtime="20210220 01:52:37.748" starttime="20210220 01:51:57.335"></status>
</kw>
<msg timestamp="20210220 01:52:37.748" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:52:37.748" starttime="20210220 01:51:57.335"></status>
</kw>
<msg timestamp="20210220 01:52:37.749" level="INFO">${output} = 2021-02-20 01:51:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:52:37.749" starttime="20210220 01:51:57.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 01:52:37.750" starttime="20210220 01:52:37.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:52:37.750" starttime="20210220 01:52:37.750"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:52:37.750" critical="yes" starttime="20210220 01:51:57.297"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 01:52:37.751" starttime="20210220 01:51:18.326"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:42.073" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:49:42.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:49:42.082" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:49:42.082" starttime="20210220 01:49:42.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:49:42.083" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:49:42.083" starttime="20210220 01:49:42.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:49:42.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:49:42.084" starttime="20210220 01:49:42.084"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:42.085" starttime="20210220 01:49:42.069"></status>
</kw>
<msg timestamp="20210220 01:49:42.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:49:42.085" starttime="20210220 01:49:42.069"></status>
</kw>
<msg timestamp="20210220 01:49:42.085" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:49:42.085" starttime="20210220 01:49:42.068"></status>
</kw>
<msg timestamp="20210220 01:49:42.086" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:49:42.086" starttime="20210220 01:49:42.068"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:49:42.090" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:49:42.091" starttime="20210220 01:49:42.090"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:49:42.092" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:49:42.092" starttime="20210220 01:49:42.091"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:42.092" starttime="20210220 01:49:42.089"></status>
</kw>
<msg timestamp="20210220 01:49:42.092" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:49:42.092" starttime="20210220 01:49:42.089"></status>
</kw>
<status status="PASS" endtime="20210220 01:49:42.093" starttime="20210220 01:49:42.088"></status>
</kw>
<msg timestamp="20210220 01:49:42.093" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:49:42.093" starttime="20210220 01:49:42.087"></status>
</kw>
<msg timestamp="20210220 01:49:42.093" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:49:42.093" starttime="20210220 01:49:42.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:49:42.097" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:50:24.572" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:50:24.572" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49...</msg>
<status status="PASS" endtime="20210220 01:50:24.572" starttime="20210220 01:49:42.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:50:24.573" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:44 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-20 01:49:44 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:49:44 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:49:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:49:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:49:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0B6A11097008-&gt;dc5b1510-337e-492f-8373-58d41c5ed3d2
2021-02-20 01:49:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-20 01:49:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-83BB8BBA6EF2-&gt;69a3942b-8e32-441a-8e3c-5ae6737af697
2021-02-20 01:49:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-20 01:49:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:45 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-02-20 01:49:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:46 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:49:46 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:49:46 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613785706076_0001
2021-02-20 01:49:46 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:49:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:47 INFO  Configuration:2752 - resource-types.xml not found
2021-02-20 01:49:47 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-20 01:49:47 INFO  YarnClientImpl:324 - Submitted application application_1613785706076_0001
2021-02-20 01:49:47 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613785706076_0001/
2021-02-20 01:49:47 INFO  Job:1619 - Running job: job_1613785706076_0001
2021-02-20 01:49:58 INFO  Job:1640 - Job job_1613785706076_0001 running in uber mode : false
2021-02-20 01:49:58 INFO  Job:1647 -  map 0% reduce 0%
2021-02-20 01:50:04 INFO  Job:1647 -  map 33% reduce 0%
2021-02-20 01:50:10 INFO  Job:1647 -  map 67% reduce 0%
2021-02-20 01:50:16 INFO  Job:1647 -  map 100% reduce 0%
2021-02-20 01:50:21 INFO  Job:1647 -  map 100% reduce 100%
2021-02-20 01:50:23 INFO  Job:1658 - Job job_1613785706076_0001 completed successfully
2021-02-20 01:50:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:23 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017669
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42660
		Total time spent by all reduces in occupied slots (ms)=15764
		Total time spent by all map tasks (ms)=10665
		Total time spent by all reduce tasks (ms)=3941
		Total vcore-milliseconds taken by all map tasks=10665
		Total vcore-milliseconds taken by all reduce tasks=3941
		Total megabyte-milliseconds taken by all map tasks=43683840
		Total megabyte-milliseconds taken by all reduce tasks=16142336
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=650
		CPU time spent (ms)=6720
		Physical memory (bytes) snapshot=1247039488
		Virtual memory (bytes) snapshot=15792959488
		Total committed heap usage (bytes)=1081606144
		Peak Map Physical memory (bytes)=322494464
		Peak Map Virtual memory (bytes)=3950829568
		Peak Reduce Physical memory (bytes)=311111680
		Peak Reduce Virtual memory (bytes)=3967229952
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.224 seconds
2021-02-20 01:50:23 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:23 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-20 01:50:24 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:50:24.574" starttime="20210220 01:50:24.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:50:24.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:50:24.575" starttime="20210220 01:50:24.574"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.575" starttime="20210220 01:49:42.094"></status>
</kw>
<msg timestamp="20210220 01:50:24.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:50:24.575" starttime="20210220 01:49:42.094"></status>
</kw>
<msg timestamp="20210220 01:50:24.576" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:49...</msg>
<status status="PASS" endtime="20210220 01:50:24.576" starttime="20210220 01:49:42.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:50:24.577" starttime="20210220 01:50:24.576"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:50:24.577" critical="yes" starttime="20210220 01:49:42.067"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:50:24.582" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:50:24.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:50:24.588" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:50:24.588" starttime="20210220 01:50:24.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:50:24.589" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:50:24.589" starttime="20210220 01:50:24.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:50:24.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:50:24.589" starttime="20210220 01:50:24.589"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.590" starttime="20210220 01:50:24.579"></status>
</kw>
<msg timestamp="20210220 01:50:24.590" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:50:24.590" starttime="20210220 01:50:24.579"></status>
</kw>
<msg timestamp="20210220 01:50:24.590" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:50:24.590" starttime="20210220 01:50:24.578"></status>
</kw>
<msg timestamp="20210220 01:50:24.590" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210220 01:50:24.590" starttime="20210220 01:50:24.578"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:50:24.591" level="INFO">${random} = WUaYbkZS</msg>
<status status="PASS" endtime="20210220 01:50:24.591" starttime="20210220 01:50:24.590"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:50:24.598" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:50:24.598" starttime="20210220 01:50:24.598"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:50:24.599" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:50:24.599" starttime="20210220 01:50:24.599"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.599" starttime="20210220 01:50:24.597"></status>
</kw>
<msg timestamp="20210220 01:50:24.599" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:50:24.599" starttime="20210220 01:50:24.597"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.600" starttime="20210220 01:50:24.596"></status>
</kw>
<msg timestamp="20210220 01:50:24.600" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:50:24.600" starttime="20210220 01:50:24.592"></status>
</kw>
<msg timestamp="20210220 01:50:24.600" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:50:24.600" starttime="20210220 01:50:24.591"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:50:24.604" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:50:24.604" starttime="20210220 01:50:24.603"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:50:24.605" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:50:24.605" starttime="20210220 01:50:24.604"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.605" starttime="20210220 01:50:24.603"></status>
</kw>
<msg timestamp="20210220 01:50:24.605" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:50:24.605" starttime="20210220 01:50:24.602"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.605" starttime="20210220 01:50:24.602"></status>
</kw>
<msg timestamp="20210220 01:50:24.605" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 01:50:24.605" starttime="20210220 01:50:24.601"></status>
</kw>
<msg timestamp="20210220 01:50:24.606" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 01:50:24.606" starttime="20210220 01:50:24.601"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:50:24.609" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:50:24.609" starttime="20210220 01:50:24.608"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:50:24.611" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:50:24.611" starttime="20210220 01:50:24.611"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.611" starttime="20210220 01:50:24.608"></status>
</kw>
<msg timestamp="20210220 01:50:24.611" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:50:24.611" starttime="20210220 01:50:24.607"></status>
</kw>
<status status="PASS" endtime="20210220 01:50:24.612" starttime="20210220 01:50:24.607"></status>
</kw>
<msg timestamp="20210220 01:50:24.612" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-WUaYbkZS.txt</msg>
<status status="PASS" endtime="20210220 01:50:24.612" starttime="20210220 01:50:24.606"></status>
</kw>
<msg timestamp="20210220 01:50:24.612" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-WUaYbkZS.txt</msg>
<status status="PASS" endtime="20210220 01:50:24.612" starttime="20210220 01:50:24.606"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:50:24.616" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-WUaYbkZS.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:51:03.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:51:03.140" level="INFO">${output} = 2021-02-20 01:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:51:03.140" starttime="20210220 01:50:24.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:51:03.141" level="INFO">2021-02-20 01:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.7:8032
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-20 01:50:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-20 01:50:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:50:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:50:27 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:50:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C674834A7828-&gt;dc5b1510-337e-492f-8373-58d41c5ed3d2
2021-02-20 01:50:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:50:28 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:50:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F51C74659B86-&gt;69a3942b-8e32-441a-8e3c-5ae6737af697
2021-02-20 01:50:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:50:28 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:50:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613785706076_0002
2021-02-20 01:50:28 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:50:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:29 INFO  Configuration:2752 - resource-types.xml not found
2021-02-20 01:50:29 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-20 01:50:29 INFO  YarnClientImpl:324 - Submitted application application_1613785706076_0002
2021-02-20 01:50:29 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613785706076_0002/
2021-02-20 01:50:29 INFO  Job:1619 - Running job: job_1613785706076_0002
2021-02-20 01:50:36 INFO  Job:1640 - Job job_1613785706076_0002 running in uber mode : false
2021-02-20 01:50:36 INFO  Job:1647 -  map 0% reduce 0%
2021-02-20 01:50:43 INFO  Job:1647 -  map 33% reduce 0%
2021-02-20 01:50:49 INFO  Job:1647 -  map 67% reduce 0%
2021-02-20 01:50:55 INFO  Job:1647 -  map 100% reduce 0%
2021-02-20 01:51:01 INFO  Job:1647 -  map 100% reduce 100%
2021-02-20 01:51:02 INFO  Job:1658 - Job job_1613785706076_0002 completed successfully
2021-02-20 01:51:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:51:02 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42608
		Total time spent by all reduces in occupied slots (ms)=19280
		Total time spent by all map tasks (ms)=10652
		Total time spent by all reduce tasks (ms)=4820
		Total vcore-milliseconds taken by all map tasks=10652
		Total vcore-milliseconds taken by all reduce tasks=4820
		Total megabyte-milliseconds taken by all map tasks=43630592
		Total megabyte-milliseconds taken by all reduce tasks=19742720
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=7000
		Physical memory (bytes) snapshot=1265405952
		Virtual memory (bytes) snapshot=15794712576
		Total committed heap usage (bytes)=1076887552
		Peak Map Physical memory (bytes)=327127040
		Peak Map Virtual memory (bytes)=3947933696
		Peak Reduce Physical memory (bytes)=309272576
		Peak Reduce Virtual memory (bytes)=3967107072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-20 01:51:02 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210220 01:51:03.142" starttime="20210220 01:51:03.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:51:03.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:51:03.143" starttime="20210220 01:51:03.142"></status>
</kw>
<status status="PASS" endtime="20210220 01:51:03.143" starttime="20210220 01:50:24.613"></status>
</kw>
<msg timestamp="20210220 01:51:03.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:51:03.143" starttime="20210220 01:50:24.613"></status>
</kw>
<msg timestamp="20210220 01:51:03.144" level="INFO">${output} = 2021-02-20 01:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-20 01:50:26 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210220 01:51:03.144" starttime="20210220 01:50:24.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:03.145" starttime="20210220 01:51:03.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:51:03.145" starttime="20210220 01:51:03.145"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:51:03.145" critical="yes" starttime="20210220 01:50:24.577"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 01:51:03.146" starttime="20210220 01:49:42.015"></status>
</suite>
<status status="PASS" elapsedtime="211356" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:53:57.607" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:01.479" level="INFO">${rc} = 255</msg>
<msg timestamp="20210220 01:54:01.479" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:54:01.479" starttime="20210220 01:53:57.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:01.480" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:54:01.480" starttime="20210220 01:54:01.479"></status>
</kw>
<msg timestamp="20210220 01:54:01.481" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210220 01:54:01.481" starttime="20210220 01:53:57.602"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:01.486" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:04.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:04.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:04.881" starttime="20210220 01:54:01.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:04.882" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:04.882" starttime="20210220 01:54:04.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:04.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:04.883" starttime="20210220 01:54:04.883"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:04.883" starttime="20210220 01:54:01.483"></status>
</kw>
<msg timestamp="20210220 01:54:04.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:04.884" starttime="20210220 01:54:01.482"></status>
</kw>
<msg timestamp="20210220 01:54:04.884" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210220 01:54:04.884" starttime="20210220 01:54:01.482"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210220 01:54:04.884" starttime="20210220 01:54:04.884"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:04.885" starttime="20210220 01:54:01.481"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:04.885" starttime="20210220 01:54:01.481"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:04.889" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:08.083" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:08.083" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:08.083" starttime="20210220 01:54:04.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:08.085" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:08.085" starttime="20210220 01:54:08.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:08.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:08.086" starttime="20210220 01:54:08.085"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:08.086" starttime="20210220 01:54:04.886"></status>
</kw>
<msg timestamp="20210220 01:54:08.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:08.086" starttime="20210220 01:54:04.886"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:08.086" starttime="20210220 01:54:04.886"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:08.087" starttime="20210220 01:54:04.885"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:08.087" starttime="20210220 01:54:04.885"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210220 01:54:08.087" starttime="20210220 01:54:08.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:08.091" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:11.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:11.276" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:54...</msg>
<status status="PASS" endtime="20210220 01:54:11.276" starttime="20210220 01:54:08.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:11.277" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:54:07.866Z",
  "modificationTime" : "2021-02-20T01:54:07.866Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210220 01:54:11.277" starttime="20210220 01:54:11.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:11.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:11.278" starttime="20210220 01:54:11.278"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:11.278" starttime="20210220 01:54:08.088"></status>
</kw>
<msg timestamp="20210220 01:54:11.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:11.279" starttime="20210220 01:54:08.088"></status>
</kw>
<msg timestamp="20210220 01:54:11.279" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-20T01:54...</msg>
<status status="PASS" endtime="20210220 01:54:11.279" starttime="20210220 01:54:08.087"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210220 01:54:11.280" starttime="20210220 01:54:11.279"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:54:11.283" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:54:11.283" starttime="20210220 01:54:11.283"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:54:11.284" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:54:11.284" starttime="20210220 01:54:11.283"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:11.284" starttime="20210220 01:54:11.282"></status>
</kw>
<msg timestamp="20210220 01:54:11.284" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:54:11.284" starttime="20210220 01:54:11.282"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:11.285" starttime="20210220 01:54:11.281"></status>
</kw>
<msg timestamp="20210220 01:54:11.285" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 01:54:11.285" starttime="20210220 01:54:11.280"></status>
</kw>
<msg timestamp="20210220 01:54:11.285" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210220 01:54:11.285" starttime="20210220 01:54:11.280"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:11.289" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:14.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:14.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:14.726" starttime="20210220 01:54:11.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:14.727" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:14.727" starttime="20210220 01:54:14.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:14.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:14.728" starttime="20210220 01:54:14.727"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:14.728" starttime="20210220 01:54:11.286"></status>
</kw>
<msg timestamp="20210220 01:54:14.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:14.728" starttime="20210220 01:54:11.286"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:14.729" starttime="20210220 01:54:11.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:14.732" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:21.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:21.688" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:21.688" starttime="20210220 01:54:14.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:21.689" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:21.689" starttime="20210220 01:54:21.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:21.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:21.690" starttime="20210220 01:54:21.689"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:21.690" starttime="20210220 01:54:14.730"></status>
</kw>
<msg timestamp="20210220 01:54:21.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:21.690" starttime="20210220 01:54:14.730"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:21.691" starttime="20210220 01:54:14.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:21.695" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:27.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:27.596" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:27.597" starttime="20210220 01:54:21.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:27.598" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:27.598" starttime="20210220 01:54:27.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:27.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:27.599" starttime="20210220 01:54:27.598"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:27.599" starttime="20210220 01:54:21.692"></status>
</kw>
<msg timestamp="20210220 01:54:27.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:27.599" starttime="20210220 01:54:21.691"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:27.600" starttime="20210220 01:54:21.691"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:27.604" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:33.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:33.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:33.027" starttime="20210220 01:54:27.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:33.028" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:33.028" starttime="20210220 01:54:33.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:33.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:33.029" starttime="20210220 01:54:33.028"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:33.029" starttime="20210220 01:54:27.601"></status>
</kw>
<msg timestamp="20210220 01:54:33.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:33.029" starttime="20210220 01:54:27.600"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:33.029" starttime="20210220 01:54:27.600"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 01:54:33.029" critical="yes" starttime="20210220 01:53:57.601"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:54:33.035" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:54:33.035" starttime="20210220 01:54:33.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:54:33.035" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:54:33.035" starttime="20210220 01:54:33.035"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:33.036" starttime="20210220 01:54:33.034"></status>
</kw>
<msg timestamp="20210220 01:54:33.036" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:54:33.036" starttime="20210220 01:54:33.033"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:33.036" starttime="20210220 01:54:33.033"></status>
</kw>
<msg timestamp="20210220 01:54:33.036" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:54:33.036" starttime="20210220 01:54:33.032"></status>
</kw>
<msg timestamp="20210220 01:54:33.036" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:54:33.037" starttime="20210220 01:54:33.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:33.040" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:36.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:36.426" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:36.426" starttime="20210220 01:54:33.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:36.427" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:36.428" starttime="20210220 01:54:36.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:36.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:36.428" starttime="20210220 01:54:36.428"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:36.429" starttime="20210220 01:54:33.037"></status>
</kw>
<msg timestamp="20210220 01:54:36.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:36.429" starttime="20210220 01:54:33.037"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:36.429" starttime="20210220 01:54:33.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:36.432" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:39.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:39.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210220 01:54:39.408" starttime="20210220 01:54:36.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:39.409" level="INFO"></msg>
<status status="PASS" endtime="20210220 01:54:39.410" starttime="20210220 01:54:39.409"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:39.410" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:39.410" starttime="20210220 01:54:39.410"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:39.411" starttime="20210220 01:54:36.430"></status>
</kw>
<msg timestamp="20210220 01:54:39.411" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:39.411" starttime="20210220 01:54:36.430"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:39.411" starttime="20210220 01:54:36.429"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210220 01:54:39.411" critical="yes" starttime="20210220 01:54:33.030"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210220 01:54:39.413" starttime="20210220 01:53:57.547"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:56:15.850" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:56:15.850" starttime="20210220 01:56:15.850"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:56:15.851" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:56:15.851" starttime="20210220 01:56:15.851"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:15.851" starttime="20210220 01:56:15.850"></status>
</kw>
<msg timestamp="20210220 01:56:15.851" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:56:15.851" starttime="20210220 01:56:15.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:56:15.852" starttime="20210220 01:56:15.852"></status>
</kw>
<msg timestamp="20210220 01:56:15.852" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:56:15.853" starttime="20210220 01:56:15.852"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:15.853" starttime="20210220 01:56:15.848"></status>
</kw>
<msg timestamp="20210220 01:56:15.853" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:56:15.853" starttime="20210220 01:56:15.848"></status>
</kw>
<msg timestamp="20210220 01:56:15.853" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:56:15.853" starttime="20210220 01:56:15.847"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:56:15.854" level="INFO">${random} = 66559</msg>
<status status="PASS" endtime="20210220 01:56:15.854" starttime="20210220 01:56:15.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:56:15.860" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-66559 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:56:19.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:56:19.554" level="INFO">${output} = 2021-02-20 01:56:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:56:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 01:56:19.554" starttime="20210220 01:56:15.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:56:19.556" level="INFO">2021-02-20 01:56:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:56:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:56:17 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:56:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:56:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E51432A7C77B-&gt;22b1813a-a08b-4685-a844-5e9b616a139e
2021-02-20 01:56:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210220 01:56:19.556" starttime="20210220 01:56:19.555"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:56:19.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:56:19.556" starttime="20210220 01:56:19.556"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:19.557" starttime="20210220 01:56:15.855"></status>
</kw>
<msg timestamp="20210220 01:56:19.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:56:19.557" starttime="20210220 01:56:15.854"></status>
</kw>
<msg timestamp="20210220 01:56:19.557" level="INFO">${result} = 2021-02-20 01:56:17 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:56:17 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 01:56:19.557" starttime="20210220 01:56:15.854"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:56:19.561" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:56:21.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:56:21.439" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:54 ofs://om/volume1/bucket1/ozone-45305
-rw-...</msg>
<status status="PASS" endtime="20210220 01:56:21.439" starttime="20210220 01:56:19.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:56:21.441" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:54 ofs://om/volume1/bucket1/ozone-45305
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:56 ofs://om/volume1/bucket1/ozone-66559
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:55 ofs://om/volume1/bucket1/wordcount-W3Yg4QAd.txt</msg>
<status status="PASS" endtime="20210220 01:56:21.441" starttime="20210220 01:56:21.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:56:21.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:56:21.441" starttime="20210220 01:56:21.441"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:21.442" starttime="20210220 01:56:19.558"></status>
</kw>
<msg timestamp="20210220 01:56:21.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:56:21.442" starttime="20210220 01:56:19.558"></status>
</kw>
<msg timestamp="20210220 01:56:21.442" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:54 ofs://om/volume1/bucket1/ozone-45305
-rw-...</msg>
<status status="PASS" endtime="20210220 01:56:21.442" starttime="20210220 01:56:19.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:56:21.443" starttime="20210220 01:56:21.442"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:56:21.443" critical="yes" starttime="20210220 01:56:15.846"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 01:56:21.444" starttime="20210220 01:56:15.777"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:54:44.207" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:54:44.207" starttime="20210220 01:54:44.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:54:44.207" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:54:44.207" starttime="20210220 01:54:44.207"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:44.208" starttime="20210220 01:54:44.206"></status>
</kw>
<msg timestamp="20210220 01:54:44.208" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:54:44.208" starttime="20210220 01:54:44.205"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:44.208" starttime="20210220 01:54:44.205"></status>
</kw>
<msg timestamp="20210220 01:54:44.208" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:54:44.208" starttime="20210220 01:54:44.204"></status>
</kw>
<msg timestamp="20210220 01:54:44.208" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:54:44.208" starttime="20210220 01:54:44.203"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:54:44.209" level="INFO">${random} = 45305</msg>
<status status="PASS" endtime="20210220 01:54:44.209" starttime="20210220 01:54:44.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:44.214" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-45305 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:48.157" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:48.157" level="INFO">${output} = 2021-02-20 01:54:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:54:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 01:54:48.157" starttime="20210220 01:54:44.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:48.160" level="INFO">2021-02-20 01:54:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:54:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:54:46 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:54:46 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:54:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-917C7C2E35E2-&gt;c524e2f0-dd65-4b60-b618-61c0fd73aa42
2021-02-20 01:54:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210220 01:54:48.160" starttime="20210220 01:54:48.158"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:48.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:48.161" starttime="20210220 01:54:48.160"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:48.161" starttime="20210220 01:54:44.210"></status>
</kw>
<msg timestamp="20210220 01:54:48.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:48.161" starttime="20210220 01:54:44.210"></status>
</kw>
<msg timestamp="20210220 01:54:48.162" level="INFO">${result} = 2021-02-20 01:54:46 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:54:46 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210220 01:54:48.162" starttime="20210220 01:54:44.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:48.165" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:50.011" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:50.011" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:54 o3fs://bucket1.volume1.om/ozone-45305
dr...</msg>
<status status="PASS" endtime="20210220 01:54:50.012" starttime="20210220 01:54:48.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:50.013" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:54 o3fs://bucket1.volume1.om/ozone-45305
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210220 01:54:50.013" starttime="20210220 01:54:50.012"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:50.014" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:50.014" starttime="20210220 01:54:50.013"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:50.014" starttime="20210220 01:54:48.163"></status>
</kw>
<msg timestamp="20210220 01:54:50.014" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:50.014" starttime="20210220 01:54:48.162"></status>
</kw>
<msg timestamp="20210220 01:54:50.014" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-20 01:54 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-20 01:54 o3fs://bucket1.volume1.om/ozone-45305
dr...</msg>
<status status="PASS" endtime="20210220 01:54:50.014" starttime="20210220 01:54:48.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:54:50.015" starttime="20210220 01:54:50.015"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 01:54:50.015" critical="yes" starttime="20210220 01:54:44.202"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210220 01:54:50.016" starttime="20210220 01:54:44.149"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:56:26.203" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:56:26.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:56:26.210" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:56:26.210" starttime="20210220 01:56:26.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:56:26.211" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:56:26.211" starttime="20210220 01:56:26.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:56:26.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:56:26.212" starttime="20210220 01:56:26.212"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:26.212" starttime="20210220 01:56:26.199"></status>
</kw>
<msg timestamp="20210220 01:56:26.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:56:26.213" starttime="20210220 01:56:26.198"></status>
</kw>
<msg timestamp="20210220 01:56:26.213" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:56:26.213" starttime="20210220 01:56:26.198"></status>
</kw>
<msg timestamp="20210220 01:56:26.213" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:56:26.213" starttime="20210220 01:56:26.197"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:56:26.218" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:56:26.218" starttime="20210220 01:56:26.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:56:26.219" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:56:26.219" starttime="20210220 01:56:26.219"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:26.219" starttime="20210220 01:56:26.217"></status>
</kw>
<msg timestamp="20210220 01:56:26.219" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:56:26.219" starttime="20210220 01:56:26.217"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:56:26.221" starttime="20210220 01:56:26.220"></status>
</kw>
<msg timestamp="20210220 01:56:26.221" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:56:26.221" starttime="20210220 01:56:26.220"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:26.221" starttime="20210220 01:56:26.216"></status>
</kw>
<msg timestamp="20210220 01:56:26.221" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:56:26.221" starttime="20210220 01:56:26.214"></status>
</kw>
<msg timestamp="20210220 01:56:26.221" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:56:26.221" starttime="20210220 01:56:26.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:56:26.226" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:57:08.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:57:08.019" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:56:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:56:28 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 01:57:08.020" starttime="20210220 01:56:26.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:57:08.021" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:56:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:56:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:56:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:56:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:56:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DBC03934FB94-&gt;c524e2f0-dd65-4b60-b618-61c0fd73aa42
2021-02-20 01:56:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-20 01:56:29 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-932999182C56-&gt;22b1813a-a08b-4685-a844-5e9b616a139e
2021-02-20 01:56:29 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-20 01:56:29 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:56:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:56:30 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:56:30 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:56:30 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786003844_0003
2021-02-20 01:56:30 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:56:30 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 01:56:30 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 01:56:30 INFO  YarnClientImpl:329 - Submitted application application_1613786003844_0003
2021-02-20 01:56:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786003844_0003/
2021-02-20 01:56:30 INFO  Job:1614 - Running job: job_1613786003844_0003
2021-02-20 01:56:39 INFO  Job:1635 - Job job_1613786003844_0003 running in uber mode : false
2021-02-20 01:56:39 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 01:56:45 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 01:56:51 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 01:56:56 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 01:57:03 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 01:57:07 INFO  Job:1653 - Job job_1613786003844_0003 completed successfully
2021-02-20 01:57:07 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1092857
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41568
		Total time spent by all reduces in occupied slots (ms)=26612
		Total time spent by all map tasks (ms)=10392
		Total time spent by all reduce tasks (ms)=6653
		Total vcore-milliseconds taken by all map tasks=10392
		Total vcore-milliseconds taken by all reduce tasks=6653
		Total megabyte-milliseconds taken by all map tasks=42565632
		Total megabyte-milliseconds taken by all reduce tasks=27250688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=668
		CPU time spent (ms)=7600
		Physical memory (bytes) snapshot=1221533696
		Virtual memory (bytes) snapshot=15812825088
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=306135040
		Peak Map Virtual memory (bytes)=3948773376
		Peak Reduce Physical memory (bytes)=307707904
		Peak Reduce Virtual memory (bytes)=3968442368
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.96 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210220 01:57:08.021" starttime="20210220 01:57:08.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:57:08.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:57:08.022" starttime="20210220 01:57:08.021"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.022" starttime="20210220 01:56:26.223"></status>
</kw>
<msg timestamp="20210220 01:57:08.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:57:08.022" starttime="20210220 01:56:26.223"></status>
</kw>
<msg timestamp="20210220 01:57:08.023" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:56:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:56:28 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 01:57:08.023" starttime="20210220 01:56:26.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:57:08.023" starttime="20210220 01:57:08.023"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:57:08.023" critical="yes" starttime="20210220 01:56:26.197"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:57:08.029" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:57:08.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:57:08.034" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:57:08.034" starttime="20210220 01:57:08.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:57:08.036" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:57:08.036" starttime="20210220 01:57:08.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:57:08.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:57:08.037" starttime="20210220 01:57:08.036"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.037" starttime="20210220 01:57:08.026"></status>
</kw>
<msg timestamp="20210220 01:57:08.037" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:57:08.037" starttime="20210220 01:57:08.026"></status>
</kw>
<msg timestamp="20210220 01:57:08.037" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:57:08.037" starttime="20210220 01:57:08.025"></status>
</kw>
<msg timestamp="20210220 01:57:08.038" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:57:08.038" starttime="20210220 01:57:08.025"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:57:08.038" level="INFO">${random} = PwPNb2cI</msg>
<status status="PASS" endtime="20210220 01:57:08.038" starttime="20210220 01:57:08.038"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:57:08.044" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:57:08.044" starttime="20210220 01:57:08.042"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:57:08.045" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:57:08.045" starttime="20210220 01:57:08.044"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.045" starttime="20210220 01:57:08.041"></status>
</kw>
<msg timestamp="20210220 01:57:08.045" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:57:08.045" starttime="20210220 01:57:08.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210220 01:57:08.046" starttime="20210220 01:57:08.046"></status>
</kw>
<msg timestamp="20210220 01:57:08.046" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210220 01:57:08.046" starttime="20210220 01:57:08.045"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.047" starttime="20210220 01:57:08.040"></status>
</kw>
<msg timestamp="20210220 01:57:08.047" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:57:08.047" starttime="20210220 01:57:08.039"></status>
</kw>
<msg timestamp="20210220 01:57:08.047" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210220 01:57:08.047" starttime="20210220 01:57:08.038"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:57:08.050" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:57:08.050" starttime="20210220 01:57:08.050"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:57:08.051" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:57:08.051" starttime="20210220 01:57:08.050"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.051" starttime="20210220 01:57:08.049"></status>
</kw>
<msg timestamp="20210220 01:57:08.051" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:57:08.051" starttime="20210220 01:57:08.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:57:08.053" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210220 01:57:08.053" starttime="20210220 01:57:08.052"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:57:08.053" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210220 01:57:08.053" starttime="20210220 01:57:08.053"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.054" starttime="20210220 01:57:08.052"></status>
</kw>
<msg timestamp="20210220 01:57:08.054" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210220 01:57:08.054" starttime="20210220 01:57:08.051"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.054" starttime="20210220 01:57:08.048"></status>
</kw>
<msg timestamp="20210220 01:57:08.054" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 01:57:08.054" starttime="20210220 01:57:08.048"></status>
</kw>
<msg timestamp="20210220 01:57:08.054" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210220 01:57:08.054" starttime="20210220 01:57:08.047"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210220 01:57:08.058" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210220 01:57:08.058" starttime="20210220 01:57:08.057"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:57:08.058" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210220 01:57:08.058" starttime="20210220 01:57:08.058"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.058" starttime="20210220 01:57:08.057"></status>
</kw>
<msg timestamp="20210220 01:57:08.059" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210220 01:57:08.059" starttime="20210220 01:57:08.056"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:57:08.063" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210220 01:57:08.063" starttime="20210220 01:57:08.063"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:57:08.064" level="INFO">${result} = /wordcount-PwPNb2cI.txt</msg>
<status status="PASS" endtime="20210220 01:57:08.064" starttime="20210220 01:57:08.063"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.064" starttime="20210220 01:57:08.062"></status>
</kw>
<msg timestamp="20210220 01:57:08.064" level="INFO">${path_with_leading} = /wordcount-PwPNb2cI.txt</msg>
<status status="PASS" endtime="20210220 01:57:08.064" starttime="20210220 01:57:08.059"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:08.065" starttime="20210220 01:57:08.056"></status>
</kw>
<msg timestamp="20210220 01:57:08.065" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-PwPNb2cI.txt</msg>
<status status="PASS" endtime="20210220 01:57:08.065" starttime="20210220 01:57:08.055"></status>
</kw>
<msg timestamp="20210220 01:57:08.065" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-PwPNb2cI.txt</msg>
<status status="PASS" endtime="20210220 01:57:08.065" starttime="20210220 01:57:08.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:57:08.069" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-PwPNb2cI.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:57:46.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:57:46.906" level="INFO">${output} = 2021-02-20 01:57:09 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:57:10 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210220 01:57:46.906" starttime="20210220 01:57:08.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:57:46.908" level="INFO">2021-02-20 01:57:09 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:57:10 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:57:10 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:57:10 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:57:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:57:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:57:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4F8B2C7344E0-&gt;c524e2f0-dd65-4b60-b618-61c0fd73aa42
2021-02-20 01:57:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:57:11 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:57:11 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-67F21A6D581E-&gt;22b1813a-a08b-4685-a844-5e9b616a139e
2021-02-20 01:57:11 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:57:14 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:57:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786003844_0004
2021-02-20 01:57:14 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:57:14 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 01:57:14 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 01:57:14 INFO  YarnClientImpl:329 - Submitted application application_1613786003844_0004
2021-02-20 01:57:15 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786003844_0004/
2021-02-20 01:57:15 INFO  Job:1614 - Running job: job_1613786003844_0004
2021-02-20 01:57:23 INFO  Job:1635 - Job job_1613786003844_0004 running in uber mode : false
2021-02-20 01:57:23 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 01:57:30 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 01:57:35 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 01:57:40 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 01:57:45 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 01:57:46 INFO  Job:1653 - Job job_1613786003844_0004 completed successfully
2021-02-20 01:57:46 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155531
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41240
		Total time spent by all reduces in occupied slots (ms)=15416
		Total time spent by all map tasks (ms)=10310
		Total time spent by all reduce tasks (ms)=3854
		Total vcore-milliseconds taken by all map tasks=10310
		Total vcore-milliseconds taken by all reduce tasks=3854
		Total megabyte-milliseconds taken by all map tasks=42229760
		Total megabyte-milliseconds taken by all reduce tasks=15785984
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=618
		CPU time spent (ms)=7240
		Physical memory (bytes) snapshot=1212649472
		Virtual memory (bytes) snapshot=15798370304
		Total committed heap usage (bytes)=1054867456
		Peak Map Physical memory (bytes)=305565696
		Peak Map Virtual memory (bytes)=3945431040
		Peak Reduce Physical memory (bytes)=306974720
		Peak Reduce Virtual memory (bytes)=3967598592
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210220 01:57:46.908" starttime="20210220 01:57:46.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:57:46.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:57:46.909" starttime="20210220 01:57:46.908"></status>
</kw>
<status status="PASS" endtime="20210220 01:57:46.909" starttime="20210220 01:57:08.066"></status>
</kw>
<msg timestamp="20210220 01:57:46.909" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:57:46.909" starttime="20210220 01:57:08.066"></status>
</kw>
<msg timestamp="20210220 01:57:46.910" level="INFO">${output} = 2021-02-20 01:57:09 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:57:10 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210220 01:57:46.910" starttime="20210220 01:57:08.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 01:57:46.911" starttime="20210220 01:57:46.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:57:46.912" starttime="20210220 01:57:46.912"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:57:46.913" critical="yes" starttime="20210220 01:57:08.024"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 01:57:46.915" starttime="20210220 01:56:26.143"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:54.699" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:54:54.706" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:54:54.706" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:54:54.706" starttime="20210220 01:54:54.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:54:54.707" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:54:54.707" starttime="20210220 01:54:54.707"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:54:54.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:54:54.708" starttime="20210220 01:54:54.708"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:54.708" starttime="20210220 01:54:54.695"></status>
</kw>
<msg timestamp="20210220 01:54:54.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:54:54.709" starttime="20210220 01:54:54.695"></status>
</kw>
<msg timestamp="20210220 01:54:54.709" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:54:54.709" starttime="20210220 01:54:54.694"></status>
</kw>
<msg timestamp="20210220 01:54:54.709" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:54:54.709" starttime="20210220 01:54:54.694"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:54:54.714" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:54:54.714" starttime="20210220 01:54:54.713"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:54:54.714" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:54:54.714" starttime="20210220 01:54:54.714"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:54.715" starttime="20210220 01:54:54.713"></status>
</kw>
<msg timestamp="20210220 01:54:54.715" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:54:54.715" starttime="20210220 01:54:54.712"></status>
</kw>
<status status="PASS" endtime="20210220 01:54:54.715" starttime="20210220 01:54:54.712"></status>
</kw>
<msg timestamp="20210220 01:54:54.715" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:54:54.715" starttime="20210220 01:54:54.710"></status>
</kw>
<msg timestamp="20210220 01:54:54.715" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:54:54.715" starttime="20210220 01:54:54.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:54:54.719" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:55:35.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:55:35.348" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:54:56 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:54:56 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 01:55:35.348" starttime="20210220 01:54:54.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:55:35.350" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:54:56 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:54:56 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:54:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:54:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:54:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D5EB0782B8AD-&gt;22b1813a-a08b-4685-a844-5e9b616a139e
2021-02-20 01:54:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-20 01:54:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9702F01BB92C-&gt;c524e2f0-dd65-4b60-b618-61c0fd73aa42
2021-02-20 01:54:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-20 01:54:58 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:54:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:54:59 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:54:59 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786003844_0001
2021-02-20 01:54:59 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:54:59 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 01:54:59 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 01:55:00 INFO  YarnClientImpl:329 - Submitted application application_1613786003844_0001
2021-02-20 01:55:00 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786003844_0001/
2021-02-20 01:55:00 INFO  Job:1614 - Running job: job_1613786003844_0001
2021-02-20 01:55:10 INFO  Job:1635 - Job job_1613786003844_0001 running in uber mode : false
2021-02-20 01:55:10 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 01:55:17 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 01:55:23 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 01:55:29 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 01:55:33 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 01:55:34 INFO  Job:1653 - Job job_1613786003844_0001 completed successfully
2021-02-20 01:55:34 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093069
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44352
		Total time spent by all reduces in occupied slots (ms)=15804
		Total time spent by all map tasks (ms)=11088
		Total time spent by all reduce tasks (ms)=3951
		Total vcore-milliseconds taken by all map tasks=11088
		Total vcore-milliseconds taken by all reduce tasks=3951
		Total megabyte-milliseconds taken by all map tasks=45416448
		Total megabyte-milliseconds taken by all reduce tasks=16183296
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=975
		CPU time spent (ms)=8040
		Physical memory (bytes) snapshot=1615740928
		Virtual memory (bytes) snapshot=15813144576
		Total committed heap usage (bytes)=1548746752
		Peak Map Physical memory (bytes)=523866112
		Peak Map Virtual memory (bytes)=3948265472
		Peak Reduce Physical memory (bytes)=399626240
		Peak Reduce Virtual memory (bytes)=3969662976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.568 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210220 01:55:35.350" starttime="20210220 01:55:35.349"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:55:35.351" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:55:35.351" starttime="20210220 01:55:35.351"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.352" starttime="20210220 01:54:54.716"></status>
</kw>
<msg timestamp="20210220 01:55:35.352" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:55:35.352" starttime="20210220 01:54:54.716"></status>
</kw>
<msg timestamp="20210220 01:55:35.352" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-20 01:54:56 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:54:56 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210220 01:55:35.352" starttime="20210220 01:54:54.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:55:35.353" starttime="20210220 01:55:35.352"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:55:35.353" critical="yes" starttime="20210220 01:54:54.693"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:55:35.358" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:55:35.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:55:35.368" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:55:35.368" starttime="20210220 01:55:35.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:55:35.369" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:55:35.369" starttime="20210220 01:55:35.368"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:55:35.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:55:35.370" starttime="20210220 01:55:35.369"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.370" starttime="20210220 01:55:35.356"></status>
</kw>
<msg timestamp="20210220 01:55:35.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:55:35.370" starttime="20210220 01:55:35.355"></status>
</kw>
<msg timestamp="20210220 01:55:35.370" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:55:35.370" starttime="20210220 01:55:35.355"></status>
</kw>
<msg timestamp="20210220 01:55:35.371" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210220 01:55:35.371" starttime="20210220 01:55:35.354"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210220 01:55:35.371" level="INFO">${random} = W3Yg4QAd</msg>
<status status="PASS" endtime="20210220 01:55:35.371" starttime="20210220 01:55:35.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:55:35.375" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:55:35.375" starttime="20210220 01:55:35.374"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:55:35.375" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:55:35.376" starttime="20210220 01:55:35.375"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.376" starttime="20210220 01:55:35.374"></status>
</kw>
<msg timestamp="20210220 01:55:35.376" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:55:35.376" starttime="20210220 01:55:35.374"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.376" starttime="20210220 01:55:35.373"></status>
</kw>
<msg timestamp="20210220 01:55:35.376" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:55:35.376" starttime="20210220 01:55:35.372"></status>
</kw>
<msg timestamp="20210220 01:55:35.377" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210220 01:55:35.377" starttime="20210220 01:55:35.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:55:35.380" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:55:35.380" starttime="20210220 01:55:35.380"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:55:35.381" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:55:35.381" starttime="20210220 01:55:35.380"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.381" starttime="20210220 01:55:35.379"></status>
</kw>
<msg timestamp="20210220 01:55:35.381" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:55:35.381" starttime="20210220 01:55:35.379"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.382" starttime="20210220 01:55:35.378"></status>
</kw>
<msg timestamp="20210220 01:55:35.382" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 01:55:35.382" starttime="20210220 01:55:35.378"></status>
</kw>
<msg timestamp="20210220 01:55:35.382" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210220 01:55:35.382" starttime="20210220 01:55:35.377"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210220 01:55:35.385" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210220 01:55:35.385" starttime="20210220 01:55:35.385"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210220 01:55:35.386" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210220 01:55:35.386" starttime="20210220 01:55:35.385"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.386" starttime="20210220 01:55:35.384"></status>
</kw>
<msg timestamp="20210220 01:55:35.386" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210220 01:55:35.386" starttime="20210220 01:55:35.384"></status>
</kw>
<status status="PASS" endtime="20210220 01:55:35.386" starttime="20210220 01:55:35.383"></status>
</kw>
<msg timestamp="20210220 01:55:35.386" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-W3Yg4QAd.txt</msg>
<status status="PASS" endtime="20210220 01:55:35.386" starttime="20210220 01:55:35.383"></status>
</kw>
<msg timestamp="20210220 01:55:35.387" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-W3Yg4QAd.txt</msg>
<status status="PASS" endtime="20210220 01:55:35.387" starttime="20210220 01:55:35.382"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 01:55:35.390" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-W3Yg4QAd.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 01:56:10.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 01:56:10.869" level="INFO">${output} = 2021-02-20 01:55:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:55:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210220 01:56:10.869" starttime="20210220 01:55:35.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 01:56:10.870" level="INFO">2021-02-20 01:55:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:55:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-20 01:55:37 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-20 01:55:37 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-20 01:55:37 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-20 01:55:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 01:55:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D633C08341A-&gt;c524e2f0-dd65-4b60-b618-61c0fd73aa42
2021-02-20 01:55:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:55:39 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-20 01:55:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F1005E41586B-&gt;22b1813a-a08b-4685-a844-5e9b616a139e
2021-02-20 01:55:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 01:55:39 INFO  JobSubmitter:202 - number of splits:3
2021-02-20 01:55:39 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613786003844_0002
2021-02-20 01:55:39 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-20 01:55:39 INFO  Configuration:2795 - resource-types.xml not found
2021-02-20 01:55:39 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-20 01:55:39 INFO  YarnClientImpl:329 - Submitted application application_1613786003844_0002
2021-02-20 01:55:40 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613786003844_0002/
2021-02-20 01:55:40 INFO  Job:1614 - Running job: job_1613786003844_0002
2021-02-20 01:55:48 INFO  Job:1635 - Job job_1613786003844_0002 running in uber mode : false
2021-02-20 01:55:48 INFO  Job:1642 -  map 0% reduce 0%
2021-02-20 01:55:55 INFO  Job:1642 -  map 33% reduce 0%
2021-02-20 01:56:00 INFO  Job:1642 -  map 67% reduce 0%
2021-02-20 01:56:05 INFO  Job:1642 -  map 100% reduce 0%
2021-02-20 01:56:10 INFO  Job:1642 -  map 100% reduce 100%
2021-02-20 01:56:10 INFO  Job:1653 - Job job_1613786003844_0002 completed successfully
2021-02-20 01:56:10 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155615
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43220
		Total time spent by all reduces in occupied slots (ms)=15552
		Total time spent by all map tasks (ms)=10805
		Total time spent by all reduce tasks (ms)=3888
		Total vcore-milliseconds taken by all map tasks=10805
		Total vcore-milliseconds taken by all reduce tasks=3888
		Total megabyte-milliseconds taken by all map tasks=44257280
		Total megabyte-milliseconds taken by all reduce tasks=15925248
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=670
		CPU time spent (ms)=7770
		Physical memory (bytes) snapshot=1233006592
		Virtual memory (bytes) snapshot=15822290944
		Total committed heap usage (bytes)=1064828928
		Peak Map Physical memory (bytes)=310763520
		Peak Map Virtual memory (bytes)=3955834880
		Peak Reduce Physical memory (bytes)=307277824
		Peak Reduce Virtual memory (bytes)=3970744320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210220 01:56:10.871" starttime="20210220 01:56:10.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 01:56:10.872" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 01:56:10.872" starttime="20210220 01:56:10.871"></status>
</kw>
<status status="PASS" endtime="20210220 01:56:10.872" starttime="20210220 01:55:35.388"></status>
</kw>
<msg timestamp="20210220 01:56:10.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 01:56:10.872" starttime="20210220 01:55:35.388"></status>
</kw>
<msg timestamp="20210220 01:56:10.873" level="INFO">${output} = 2021-02-20 01:55:37 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.4:8032
2021-02-20 01:55:37 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210220 01:56:10.873" starttime="20210220 01:55:35.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210220 01:56:10.873" starttime="20210220 01:56:10.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210220 01:56:10.874" starttime="20210220 01:56:10.873"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210220 01:56:10.874" critical="yes" starttime="20210220 01:55:35.354"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210220 01:56:10.875" starttime="20210220 01:54:54.634"></status>
</suite>
<status status="PASS" elapsedtime="210413" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="621951" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
