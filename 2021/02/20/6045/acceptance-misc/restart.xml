<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210220 02:23:38.811" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="restart">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:23:06.977" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:23:14.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:23:14.780" level="INFO">${output} = 2021-02-20 02:23:08,119 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:08,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:14.780" starttime="20210220 02:23:06.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:23:14.782" level="INFO">2021-02-20 02:23:08,119 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:08,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:23:08,247 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:23:08,380 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-20 02:23:08,395 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:09,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:09,804 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:23:09,983 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:23:09,984 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-42B663469851-&gt;a075aa45-7e9d-4393-9960-e8e3e55248ac
2021-02-20 02:23:09,985 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:23:10,399 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:11,400 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:12,401 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:13,401 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:14,402 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:23:14,454 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=4457.57043, max=4457.57043, mean=4457.57043, stddev=0.0, median=4457.57043, p75=4457.57043, p95=4457.57043, p98=4457.57043, p99=4457.57043, p999=4457.57043, mean_rate=0.18254966902943612, m1=0.2, m5=0.2, m15=0.2, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:23:14,456 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 6
2021-02-20 02:23:14,456 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:23:14,456 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:23:14.782" starttime="20210220 02:23:14.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:23:14.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:23:14.783" starttime="20210220 02:23:14.782"></status>
</kw>
<status status="PASS" endtime="20210220 02:23:14.783" starttime="20210220 02:23:06.973"></status>
</kw>
<msg timestamp="20210220 02:23:14.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:23:14.783" starttime="20210220 02:23:06.973"></status>
</kw>
<msg timestamp="20210220 02:23:14.783" level="INFO">${result} = 2021-02-20 02:23:08,119 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:08,247 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:14.783" starttime="20210220 02:23:06.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:23:14.784" starttime="20210220 02:23:14.784"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:23:14.784" critical="yes" starttime="20210220 02:23:06.971"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:23:14.793" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:23:17.920" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:23:17.920" level="INFO">${output} = 2021-02-20 02:23:15,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:16,141 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:17.920" starttime="20210220 02:23:14.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:23:17.921" level="INFO">2021-02-20 02:23:15,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:16,141 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:23:16,144 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:23:16,322 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-02-20 02:23:16,338 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:17,357 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:23:17,909 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=57.56634, max=57.56634, mean=57.56634, stddev=0.0, median=57.56634, p75=57.56634, p95=57.56634, p98=57.56634, p99=57.56634, p999=57.56634, mean_rate=0.9873751254336675, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:23:17,910 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-20 02:23:17,910 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:23:17,910 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:23:17.921" starttime="20210220 02:23:17.920"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:23:17.922" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:23:17.922" starttime="20210220 02:23:17.921"></status>
</kw>
<status status="PASS" endtime="20210220 02:23:17.922" starttime="20210220 02:23:14.790"></status>
</kw>
<msg timestamp="20210220 02:23:17.922" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:23:17.922" starttime="20210220 02:23:14.789"></status>
</kw>
<msg timestamp="20210220 02:23:17.923" level="INFO">${result} = 2021-02-20 02:23:15,984 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:16,141 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:17.923" starttime="20210220 02:23:14.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:23:17.923" starttime="20210220 02:23:17.923"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:23:17.924" critical="yes" starttime="20210220 02:23:14.785"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:23:17.929" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:23:20.965" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:23:20.965" level="INFO">${output} = 2021-02-20 02:23:19,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:19,259 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:20.965" starttime="20210220 02:23:17.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:23:20.967" level="INFO">2021-02-20 02:23:19,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:19,259 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:23:19,259 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:23:19,412 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-02-20 02:23:19,424 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:20,436 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:23:20,955 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.063436, max=21.063436, mean=21.063436, stddev=0.0, median=21.063436, p75=21.063436, p95=21.063436, p98=21.063436, p99=21.063436, p999=21.063436, mean_rate=0.9837433499539789, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:23:20,956 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-20 02:23:20,956 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:23:20,956 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:23:20.967" starttime="20210220 02:23:20.966"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:23:20.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:23:20.968" starttime="20210220 02:23:20.967"></status>
</kw>
<status status="PASS" endtime="20210220 02:23:20.968" starttime="20210220 02:23:17.927"></status>
</kw>
<msg timestamp="20210220 02:23:20.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:23:20.969" starttime="20210220 02:23:17.926"></status>
</kw>
<msg timestamp="20210220 02:23:20.969" level="INFO">${result} = 2021-02-20 02:23:19,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:19,259 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:20.969" starttime="20210220 02:23:17.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:23:20.970" starttime="20210220 02:23:20.969"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:23:20.970" critical="yes" starttime="20210220 02:23:17.925"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210220 02:23:20.972" starttime="20210220 02:23:06.928"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s2" name="Generate">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:21:41.184" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:21:48.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:21:48.187" level="INFO">${output} = 2021-02-20 02:21:42,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:42,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:21:48.187" starttime="20210220 02:21:41.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:21:48.188" level="INFO">2021-02-20 02:21:42,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:42,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:21:42,611 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:21:42,807 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-20 02:21:42,821 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:43,695 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-20 02:21:43,824 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:44,007 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-20 02:21:44,825 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:44,827 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:21:45,033 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-20 02:21:45,034 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-79FC267DB855-&gt;a075aa45-7e9d-4393-9960-e8e3e55248ac
2021-02-20 02:21:45,035 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-20 02:21:45,825 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:46,826 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:47,826 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:21:47,860 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=2945.480117, max=2945.480117, mean=2945.480117, stddev=0.0, median=2945.480117, p75=2945.480117, p95=2945.480117, p98=2945.480117, p99=2945.480117, p999=2945.480117, mean_rate=0.2629157768433376, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:21:47,862 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-02-20 02:21:47,863 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:21:47,863 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:21:48.189" starttime="20210220 02:21:48.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:21:48.189" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:21:48.189" starttime="20210220 02:21:48.189"></status>
</kw>
<status status="PASS" endtime="20210220 02:21:48.190" starttime="20210220 02:21:41.180"></status>
</kw>
<msg timestamp="20210220 02:21:48.190" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:21:48.190" starttime="20210220 02:21:41.180"></status>
</kw>
<msg timestamp="20210220 02:21:48.190" level="INFO">${result} = 2021-02-20 02:21:42,440 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:42,611 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:21:48.190" starttime="20210220 02:21:41.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:21:48.191" starttime="20210220 02:21:48.190"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:21:48.191" critical="yes" starttime="20210220 02:21:41.178"></status>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:21:48.197" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:21:51.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:21:51.360" level="INFO">${output} = 2021-02-20 02:21:49,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:49,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:21:51.360" starttime="20210220 02:21:48.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:21:51.361" level="INFO">2021-02-20 02:21:49,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:49,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:21:49,540 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:21:49,704 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-02-20 02:21:49,721 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:50,725 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:21:51,337 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=94.392901, max=94.392901, mean=94.392901, stddev=0.0, median=94.392901, p75=94.392901, p95=94.392901, p98=94.392901, p99=94.392901, p999=94.392901, mean_rate=0.9867419934716105, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:21:51,340 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-20 02:21:51,341 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:21:51,341 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:21:51.362" starttime="20210220 02:21:51.360"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:21:51.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:21:51.362" starttime="20210220 02:21:51.362"></status>
</kw>
<status status="PASS" endtime="20210220 02:21:51.363" starttime="20210220 02:21:48.194"></status>
</kw>
<msg timestamp="20210220 02:21:51.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:21:51.363" starttime="20210220 02:21:48.193"></status>
</kw>
<msg timestamp="20210220 02:21:51.363" level="INFO">${result} = 2021-02-20 02:21:49,438 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:49,539 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:21:51.363" starttime="20210220 02:21:48.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:21:51.364" starttime="20210220 02:21:51.363"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:21:51.364" critical="yes" starttime="20210220 02:21:48.192"></status>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:21:51.370" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:21:54.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:21:54.543" level="INFO">${output} = 2021-02-20 02:21:52,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:52,814 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:21:54.543" starttime="20210220 02:21:51.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:21:54.544" level="INFO">2021-02-20 02:21:52,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:52,814 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:21:52,814 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:21:52,992 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-02-20 02:21:53,006 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:21:54,008 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:21:54,524 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=18.546669, max=18.546669, mean=18.546669, stddev=0.0, median=18.546669, p75=18.546669, p95=18.546669, p98=18.546669, p99=18.546669, p999=18.546669, mean_rate=0.9862475306913746, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:21:54,525 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-20 02:21:54,534 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:21:54,534 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:21:54.544" starttime="20210220 02:21:54.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:21:54.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:21:54.545" starttime="20210220 02:21:54.545"></status>
</kw>
<status status="PASS" endtime="20210220 02:21:54.546" starttime="20210220 02:21:51.367"></status>
</kw>
<msg timestamp="20210220 02:21:54.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:21:54.546" starttime="20210220 02:21:51.366"></status>
</kw>
<msg timestamp="20210220 02:21:54.546" level="INFO">${result} = 2021-02-20 02:21:52,661 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:21:52,814 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:21:54.546" starttime="20210220 02:21:51.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:21:54.547" starttime="20210220 02:21:54.546"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:21:54.547" critical="yes" starttime="20210220 02:21:51.365"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210220 02:21:54.548" starttime="20210220 02:21:41.136"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:22:56.898" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:23:02.396" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:23:02.396" level="INFO">${output} = 2021-02-20 02:22:58,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:22:58,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:02.396" starttime="20210220 02:22:56.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:23:02.397" level="INFO">2021-02-20 02:22:58,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:22:58,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:22:58,439 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:22:58,634 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-20 02:22:58,691 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:22:59,706 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:00,329 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:23:00,707 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:01,707 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:23:02,069 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=39.962311, max=39.962311, mean=39.962311, stddev=0.0, median=39.962311, p75=39.962311, p95=39.962311, p98=39.962311, p99=39.962311, p999=39.962311, mean_rate=0.9901275343968994, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:23:02,070 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-20 02:23:02,071 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:23:02,071 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:23:02.397" starttime="20210220 02:23:02.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:23:02.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:23:02.398" starttime="20210220 02:23:02.398"></status>
</kw>
<status status="PASS" endtime="20210220 02:23:02.399" starttime="20210220 02:22:56.893"></status>
</kw>
<msg timestamp="20210220 02:23:02.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:23:02.399" starttime="20210220 02:22:56.893"></status>
</kw>
<msg timestamp="20210220 02:23:02.399" level="INFO">${result} = 2021-02-20 02:22:58,295 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:22:58,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:02.399" starttime="20210220 02:22:56.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:23:02.400" starttime="20210220 02:23:02.399"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:23:02.400" critical="yes" starttime="20210220 02:22:56.891"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210220 02:23:02.402" starttime="20210220 02:22:56.848"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s4" name="Validate">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:23:25.553" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:23:30.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:23:30.285" level="INFO">${output} = 2021-02-20 02:23:26,783 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:26,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:30.286" starttime="20210220 02:23:25.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:23:30.288" level="INFO">2021-02-20 02:23:26,783 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:26,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:23:26,915 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:23:27,083 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-20 02:23:27,102 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:28,115 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:23:28,280 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:23:29,115 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:23:29,959 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=51.373249, max=51.373249, mean=51.373249, stddev=0.0, median=51.373249, p75=51.373249, p95=51.373249, p98=51.373249, p99=51.373249, p999=51.373249, mean_rate=0.9880375204837591, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:23:29,960 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-20 02:23:29,960 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:23:29,960 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:23:30.288" starttime="20210220 02:23:30.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:23:30.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:23:30.289" starttime="20210220 02:23:30.288"></status>
</kw>
<status status="PASS" endtime="20210220 02:23:30.289" starttime="20210220 02:23:25.548"></status>
</kw>
<msg timestamp="20210220 02:23:30.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:23:30.289" starttime="20210220 02:23:25.548"></status>
</kw>
<msg timestamp="20210220 02:23:30.289" level="INFO">${result} = 2021-02-20 02:23:26,783 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:23:26,915 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:23:30.289" starttime="20210220 02:23:25.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:23:30.290" starttime="20210220 02:23:30.290"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:23:30.290" critical="yes" starttime="20210220 02:23:25.546"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210220 02:23:30.291" starttime="20210220 02:23:25.507"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s5" name="Validate">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210220 02:21:59.159" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210220 02:22:03.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210220 02:22:03.980" level="INFO">${output} = 2021-02-20 02:22:00,335 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:22:00,519 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:22:03.980" starttime="20210220 02:21:59.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210220 02:22:03.982" level="INFO">2021-02-20 02:22:00,335 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:22:00,519 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-20 02:22:00,519 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-20 02:22:00,703 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-20 02:22:00,717 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:22:01,727 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-20 02:22:01,957 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-20 02:22:02,728 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-20 02:22:03,650 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=46.059012, max=46.059012, mean=46.059012, stddev=0.0, median=46.059012, p75=46.059012, p95=46.059012, p98=46.059012, p99=46.059012, p999=46.059012, mean_rate=0.9911540246664041, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-20 02:22:03,651 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-20 02:22:03,655 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-20 02:22:03,655 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210220 02:22:03.982" starttime="20210220 02:22:03.981"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210220 02:22:03.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210220 02:22:03.982" starttime="20210220 02:22:03.982"></status>
</kw>
<status status="PASS" endtime="20210220 02:22:03.983" starttime="20210220 02:21:59.155"></status>
</kw>
<msg timestamp="20210220 02:22:03.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210220 02:22:03.983" starttime="20210220 02:21:59.154"></status>
</kw>
<msg timestamp="20210220 02:22:03.983" level="INFO">${result} = 2021-02-20 02:22:00,335 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-20 02:22:00,519 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210220 02:22:03.983" starttime="20210220 02:21:59.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210220 02:22:03.984" starttime="20210220 02:22:03.983"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210220 02:22:03.984" critical="yes" starttime="20210220 02:21:59.152"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210220 02:22:03.985" starttime="20210220 02:21:59.112"></status>
</suite>
<status status="PASS" elapsedtime="42667" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="restart" pass="9">restart</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s2" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s4" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s5" name="Validate" pass="1">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
