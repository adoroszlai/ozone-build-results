<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210218 13:44:26.389" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/admincli/pipeline.robot" id="s1" name="ozonescripts">
<test id="s1-t1" name="Create pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline create</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:43.251" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:45.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:45.400" level="INFO">${output} = PipelineID=aa9e4857-90c8-48be-a0c9-bb108adbc511 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210218 13:43:45.400" starttime="20210218 13:43:43.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:45.401" level="INFO">PipelineID=aa9e4857-90c8-48be-a0c9-bb108adbc511 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210218 13:43:45.401" starttime="20210218 13:43:45.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:45.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:45.402" starttime="20210218 13:43:45.401"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:45.402" starttime="20210218 13:43:43.245"></status>
</kw>
<msg timestamp="20210218 13:43:45.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:45.402" starttime="20210218 13:43:43.245"></status>
</kw>
<msg timestamp="20210218 13:43:45.403" level="INFO">${output} = PipelineID=aa9e4857-90c8-48be-a0c9-bb108adbc511 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210218 13:43:45.403" starttime="20210218 13:43:43.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is created. Factor: ONE, Type: STAND_ALONE</arg>
</arguments>
<status status="PASS" endtime="20210218 13:43:45.403" starttime="20210218 13:43:45.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
</arguments>
<assign>
<var>${pipeline}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:45.408" level="INFO">Running command 'echo "PipelineID=aa9e4857-90c8-48be-a0c9-bb108adbc511 is created. Factor: ONE, Type: STAND_ALONE" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:45.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:45.412" level="INFO">${output} = aa9e4857-90c8-48be-a0c9-bb108adbc511</msg>
<status status="PASS" endtime="20210218 13:43:45.412" starttime="20210218 13:43:45.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:45.413" level="INFO">aa9e4857-90c8-48be-a0c9-bb108adbc511</msg>
<status status="PASS" endtime="20210218 13:43:45.413" starttime="20210218 13:43:45.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:45.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:45.414" starttime="20210218 13:43:45.413"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:45.414" starttime="20210218 13:43:45.405"></status>
</kw>
<msg timestamp="20210218 13:43:45.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:45.414" starttime="20210218 13:43:45.404"></status>
</kw>
<msg timestamp="20210218 13:43:45.415" level="INFO">${pipeline} = aa9e4857-90c8-48be-a0c9-bb108adbc511</msg>
<status status="PASS" endtime="20210218 13:43:45.415" starttime="20210218 13:43:45.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
</arguments>
<msg timestamp="20210218 13:43:45.415" level="INFO">${PIPELINE} = aa9e4857-90c8-48be-a0c9-bb108adbc511</msg>
<status status="PASS" endtime="20210218 13:43:45.416" starttime="20210218 13:43:45.415"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:43:45.416" critical="yes" starttime="20210218 13:43:43.243"></status>
</test>
<test id="s1-t2" name="List pipelines">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:45.421" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:47.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:47.515" level="INFO">${output} = Pipeline[ Id: a6d16ed7-91f0-4f0b-8edc-2e524c32bf78, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:47.515" starttime="20210218 13:43:45.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:47.516" level="INFO">Pipeline[ Id: a6d16ed7-91f0-4f0b-8edc-2e524c32bf78, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:5f94edb9-f00a-40d4-8fa2-8aa387f3a812, CreationTimestamp2021-02-18T13:43:19.487Z]
Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-18T13:43:45.304Z]</msg>
<status status="PASS" endtime="20210218 13:43:47.516" starttime="20210218 13:43:47.515"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:47.517" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:47.517" starttime="20210218 13:43:47.517"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:47.517" starttime="20210218 13:43:45.418"></status>
</kw>
<msg timestamp="20210218 13:43:47.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:47.518" starttime="20210218 13:43:45.418"></status>
</kw>
<msg timestamp="20210218 13:43:47.518" level="INFO">${output} = Pipeline[ Id: a6d16ed7-91f0-4f0b-8edc-2e524c32bf78, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:47.518" starttime="20210218 13:43:45.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210218 13:43:47.519" starttime="20210218 13:43:47.518"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:43:47.519" critical="yes" starttime="20210218 13:43:45.417"></status>
</test>
<test id="s1-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list --scm scm</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:47.524" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:49.485" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:49.485" level="INFO">${output} = Pipeline[ Id: a6d16ed7-91f0-4f0b-8edc-2e524c32bf78, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:49.485" starttime="20210218 13:43:47.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:49.487" level="INFO">Pipeline[ Id: a6d16ed7-91f0-4f0b-8edc-2e524c32bf78, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:5f94edb9-f00a-40d4-8fa2-8aa387f3a812, CreationTimestamp2021-02-18T13:43:19.487Z]
Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-18T13:43:45.304Z]</msg>
<status status="PASS" endtime="20210218 13:43:49.487" starttime="20210218 13:43:49.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:49.487" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:49.488" starttime="20210218 13:43:49.487"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:49.488" starttime="20210218 13:43:47.521"></status>
</kw>
<msg timestamp="20210218 13:43:49.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:49.488" starttime="20210218 13:43:47.521"></status>
</kw>
<msg timestamp="20210218 13:43:49.489" level="INFO">${output} = Pipeline[ Id: a6d16ed7-91f0-4f0b-8edc-2e524c32bf78, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:49.489" starttime="20210218 13:43:47.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210218 13:43:49.489" starttime="20210218 13:43:49.489"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:43:49.489" critical="yes" starttime="20210218 13:43:47.520"></status>
</test>
<test id="s1-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:49.495" level="INFO">Running command 'ozone admin pipeline deactivate "aa9e4857-90c8-48be-a0c9-bb108adbc511" 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:51.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:51.586" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:43:51.586" starttime="20210218 13:43:49.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:51.587" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:43:51.587" starttime="20210218 13:43:51.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:51.588" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:51.588" starttime="20210218 13:43:51.587"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:51.588" starttime="20210218 13:43:49.492"></status>
</kw>
<msg timestamp="20210218 13:43:51.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:51.589" starttime="20210218 13:43:49.492"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:51.589" starttime="20210218 13:43:49.491"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:51.593" level="INFO">Running command 'ozone admin pipeline list | grep "aa9e4857-90c8-48be-a0c9-bb108adbc511" 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:53.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:53.654" level="INFO">${output} = Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:53.654" starttime="20210218 13:43:51.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:53.655" level="INFO">Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:DORMANT, leaderId:, CreationTimestamp2021-02-18T13:43:45.304Z]</msg>
<status status="PASS" endtime="20210218 13:43:53.655" starttime="20210218 13:43:53.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:53.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:53.656" starttime="20210218 13:43:53.655"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:53.656" starttime="20210218 13:43:51.591"></status>
</kw>
<msg timestamp="20210218 13:43:53.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:53.657" starttime="20210218 13:43:51.590"></status>
</kw>
<msg timestamp="20210218 13:43:53.657" level="INFO">${output} = Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:53.657" starttime="20210218 13:43:51.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>DORMANT</arg>
</arguments>
<status status="PASS" endtime="20210218 13:43:53.658" starttime="20210218 13:43:53.657"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:43:53.658" critical="yes" starttime="20210218 13:43:49.490"></status>
</test>
<test id="s1-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:53.663" level="INFO">Running command 'ozone admin pipeline activate "aa9e4857-90c8-48be-a0c9-bb108adbc511" 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:55.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:55.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:43:55.538" starttime="20210218 13:43:53.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:55.539" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:43:55.539" starttime="20210218 13:43:55.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:55.540" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:55.540" starttime="20210218 13:43:55.539"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:55.540" starttime="20210218 13:43:53.660"></status>
</kw>
<msg timestamp="20210218 13:43:55.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:55.541" starttime="20210218 13:43:53.660"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:55.541" starttime="20210218 13:43:53.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:55.547" level="INFO">Running command 'ozone admin pipeline list | grep "aa9e4857-90c8-48be-a0c9-bb108adbc511" 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:57.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:57.533" level="INFO">${output} = Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:57.533" starttime="20210218 13:43:55.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:57.534" level="INFO">Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-18T13:43:45.304Z]</msg>
<status status="PASS" endtime="20210218 13:43:57.535" starttime="20210218 13:43:57.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:57.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:57.535" starttime="20210218 13:43:57.535"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:57.536" starttime="20210218 13:43:55.542"></status>
</kw>
<msg timestamp="20210218 13:43:57.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:57.536" starttime="20210218 13:43:55.542"></status>
</kw>
<msg timestamp="20210218 13:43:57.536" level="INFO">${output} = Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:43:57.536" starttime="20210218 13:43:55.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20210218 13:43:57.537" starttime="20210218 13:43:57.537"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:43:57.538" critical="yes" starttime="20210218 13:43:53.658"></status>
</test>
<test id="s1-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:57.542" level="INFO">Running command 'ozone admin pipeline close "aa9e4857-90c8-48be-a0c9-bb108adbc511" 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:43:59.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:43:59.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:43:59.524" starttime="20210218 13:43:57.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:43:59.525" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:43:59.525" starttime="20210218 13:43:59.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:43:59.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:43:59.526" starttime="20210218 13:43:59.525"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:59.526" starttime="20210218 13:43:57.540"></status>
</kw>
<msg timestamp="20210218 13:43:59.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:43:59.526" starttime="20210218 13:43:57.540"></status>
</kw>
<status status="PASS" endtime="20210218 13:43:59.527" starttime="20210218 13:43:57.539"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:43:59.530" level="INFO">Running command 'ozone admin pipeline list | grep "aa9e4857-90c8-48be-a0c9-bb108adbc511" 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:44:01.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:44:01.573" level="INFO">${output} = Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:44:01.573" starttime="20210218 13:43:59.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:44:01.574" level="INFO">Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:CLOSED, leaderId:, CreationTimestamp2021-02-18T13:43:45.304Z]</msg>
<status status="PASS" endtime="20210218 13:44:01.574" starttime="20210218 13:44:01.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:44:01.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:44:01.575" starttime="20210218 13:44:01.574"></status>
</kw>
<status status="PASS" endtime="20210218 13:44:01.575" starttime="20210218 13:43:59.528"></status>
</kw>
<msg timestamp="20210218 13:44:01.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:44:01.576" starttime="20210218 13:43:59.528"></status>
</kw>
<msg timestamp="20210218 13:44:01.576" level="INFO">${output} = Pipeline[ Id: aa9e4857-90c8-48be-a0c9-bb108adbc511, Nodes: 5f94edb9-f00a-40d4-8fa2-8aa387f3a812{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210218 13:44:01.576" starttime="20210218 13:43:59.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>CLOSED</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:01.577" starttime="20210218 13:44:01.576"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:44:01.577" critical="yes" starttime="20210218 13:43:57.538"></status>
</test>
<test id="s1-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin pipeline</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:44:01.581" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:44:02.793" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:44:02.794" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210218 13:44:02.794" starttime="20210218 13:44:01.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:44:02.795" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" endtime="20210218 13:44:02.795" starttime="20210218 13:44:02.794"></status>
</kw>
<msg timestamp="20210218 13:44:02.795" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210218 13:44:02.796" starttime="20210218 13:44:01.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Incomplete command</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:02.796" starttime="20210218 13:44:02.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>close</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:02.797" starttime="20210218 13:44:02.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>create</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:02.798" starttime="20210218 13:44:02.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>deactivate</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:02.799" starttime="20210218 13:44:02.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>list</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:02.800" starttime="20210218 13:44:02.799"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:44:02.800" critical="yes" starttime="20210218 13:44:01.578"></status>
</test>
<test id="s1-t8" name="List pipelines on unknown host">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin --verbose pipeline list --scm unknown-host</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:44:02.804" level="INFO">Running command 'ozone admin --verbose pipeline list --scm unknown-host 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:44:04.776" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:44:04.776" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210218 13:44:04.776" starttime="20210218 13:44:02.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:44:04.777" level="INFO">java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy16.submitRequest(Unknown Source)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:136)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.listPipelines(StorageContainerLocationProtocolClientSideTranslatorPB.java:444)
	at org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.listPipelines(ContainerOperationClient.java:312)
	at org.apache.hadoop.hdds.scm.cli.pipeline.ListPipelinesSubcommand.execute(ListPipelinesSubcommand.java:53)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:39)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:29)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.hdds.cli.OzoneAdmin.main(OzoneAdmin.java:65)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 23 more</msg>
<status status="PASS" endtime="20210218 13:44:04.778" starttime="20210218 13:44:04.777"></status>
</kw>
<msg timestamp="20210218 13:44:04.778" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210218 13:44:04.778" starttime="20210218 13:44:02.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Invalid host name</arg>
</arguments>
<status status="PASS" endtime="20210218 13:44:04.779" starttime="20210218 13:44:04.778"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:44:04.779" critical="yes" starttime="20210218 13:44:02.801"></status>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" endtime="20210218 13:44:04.781" starttime="20210218 13:43:43.183"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonescripts" pass="8">ozonescripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
