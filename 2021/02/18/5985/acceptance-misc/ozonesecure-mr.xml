<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210218 13:51:25.408" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:46:47.672" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:46:52.130" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:46:52.130" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:46:52.130" starttime="20210218 13:46:47.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:46:52.131" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:46:52.131" starttime="20210218 13:46:52.130"></status>
</kw>
<msg timestamp="20210218 13:46:52.131" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:46:52.131" starttime="20210218 13:46:47.668"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:46:52.137" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:46:56.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:46:56.170" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:46:56.170" starttime="20210218 13:46:52.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:46:56.171" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:46:56.171" starttime="20210218 13:46:56.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:46:56.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:46:56.172" starttime="20210218 13:46:56.171"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:56.172" starttime="20210218 13:46:52.134"></status>
</kw>
<msg timestamp="20210218 13:46:56.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:46:56.172" starttime="20210218 13:46:52.133"></status>
</kw>
<msg timestamp="20210218 13:46:56.173" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210218 13:46:56.173" starttime="20210218 13:46:52.133"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210218 13:46:56.173" starttime="20210218 13:46:56.173"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:56.174" starttime="20210218 13:46:52.132"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:56.174" starttime="20210218 13:46:52.132"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:46:56.179" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:00.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:00.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:00.265" starttime="20210218 13:46:56.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:00.269" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:00.270" starttime="20210218 13:47:00.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:00.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:00.272" starttime="20210218 13:47:00.270"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:00.272" starttime="20210218 13:46:56.176"></status>
</kw>
<msg timestamp="20210218 13:47:00.272" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:00.272" starttime="20210218 13:46:56.176"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:00.272" starttime="20210218 13:46:56.175"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:00.273" starttime="20210218 13:46:56.174"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:00.273" starttime="20210218 13:46:56.174"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210218 13:47:00.273" starttime="20210218 13:47:00.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:00.279" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:04.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:04.318" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:47...</msg>
<status status="PASS" endtime="20210218 13:47:04.318" starttime="20210218 13:47:00.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:04.320" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:47:00.037Z",
  "modificationTime" : "2021-02-18T13:47:00.037Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:47:04.320" starttime="20210218 13:47:04.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:04.320" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:04.320" starttime="20210218 13:47:04.320"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:04.321" starttime="20210218 13:47:00.275"></status>
</kw>
<msg timestamp="20210218 13:47:04.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:04.321" starttime="20210218 13:47:00.274"></status>
</kw>
<msg timestamp="20210218 13:47:04.321" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:47...</msg>
<status status="PASS" endtime="20210218 13:47:04.321" starttime="20210218 13:47:00.274"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210218 13:47:04.322" starttime="20210218 13:47:04.322"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:47:04.326" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:47:04.327" starttime="20210218 13:47:04.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:47:04.327" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:47:04.327" starttime="20210218 13:47:04.327"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:04.328" starttime="20210218 13:47:04.325"></status>
</kw>
<msg timestamp="20210218 13:47:04.328" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:47:04.328" starttime="20210218 13:47:04.325"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:04.328" starttime="20210218 13:47:04.324"></status>
</kw>
<msg timestamp="20210218 13:47:04.328" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:47:04.328" starttime="20210218 13:47:04.323"></status>
</kw>
<msg timestamp="20210218 13:47:04.329" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:47:04.329" starttime="20210218 13:47:04.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:04.332" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:08.308" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:08.308" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:08.308" starttime="20210218 13:47:04.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:08.309" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:08.309" starttime="20210218 13:47:08.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:08.310" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:08.310" starttime="20210218 13:47:08.310"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:08.310" starttime="20210218 13:47:04.330"></status>
</kw>
<msg timestamp="20210218 13:47:08.311" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:08.311" starttime="20210218 13:47:04.329"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:08.311" starttime="20210218 13:47:04.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:08.315" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:17.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:17.699" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:17.699" starttime="20210218 13:47:08.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:17.701" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:17.701" starttime="20210218 13:47:17.700"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:17.701" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:17.701" starttime="20210218 13:47:17.701"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:17.702" starttime="20210218 13:47:08.312"></status>
</kw>
<msg timestamp="20210218 13:47:17.702" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:17.702" starttime="20210218 13:47:08.312"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:17.702" starttime="20210218 13:47:08.311"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:17.706" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:26.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:26.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:26.193" starttime="20210218 13:47:17.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:26.194" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:26.194" starttime="20210218 13:47:26.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:26.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:26.195" starttime="20210218 13:47:26.194"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:26.195" starttime="20210218 13:47:17.703"></status>
</kw>
<msg timestamp="20210218 13:47:26.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:26.195" starttime="20210218 13:47:17.703"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:26.196" starttime="20210218 13:47:17.702"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:26.200" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:32.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:32.677" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:32.677" starttime="20210218 13:47:26.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:32.678" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:32.678" starttime="20210218 13:47:32.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:32.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:32.679" starttime="20210218 13:47:32.679"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:32.680" starttime="20210218 13:47:26.197"></status>
</kw>
<msg timestamp="20210218 13:47:32.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:32.680" starttime="20210218 13:47:26.196"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:32.680" starttime="20210218 13:47:26.196"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:47:32.680" critical="yes" starttime="20210218 13:46:47.667"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:47:32.686" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:47:32.686" starttime="20210218 13:47:32.686"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:47:32.687" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:47:32.687" starttime="20210218 13:47:32.687"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:32.688" starttime="20210218 13:47:32.685"></status>
</kw>
<msg timestamp="20210218 13:47:32.688" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:47:32.688" starttime="20210218 13:47:32.685"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:32.688" starttime="20210218 13:47:32.684"></status>
</kw>
<msg timestamp="20210218 13:47:32.688" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:47:32.688" starttime="20210218 13:47:32.683"></status>
</kw>
<msg timestamp="20210218 13:47:32.689" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:47:32.689" starttime="20210218 13:47:32.682"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:32.692" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:36.613" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:36.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:36.614" starttime="20210218 13:47:32.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:36.615" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:36.615" starttime="20210218 13:47:36.614"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:36.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:36.616" starttime="20210218 13:47:36.615"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:36.616" starttime="20210218 13:47:32.690"></status>
</kw>
<msg timestamp="20210218 13:47:36.616" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:36.616" starttime="20210218 13:47:32.689"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:36.617" starttime="20210218 13:47:32.689"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:47:36.627" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:47:40.579" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:47:40.579" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:47:40.580" starttime="20210218 13:47:36.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:47:40.581" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:47:40.581" starttime="20210218 13:47:40.580"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:47:40.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:47:40.582" starttime="20210218 13:47:40.581"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:40.582" starttime="20210218 13:47:36.618"></status>
</kw>
<msg timestamp="20210218 13:47:40.582" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:47:40.582" starttime="20210218 13:47:36.617"></status>
</kw>
<status status="PASS" endtime="20210218 13:47:40.583" starttime="20210218 13:47:36.617"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:47:40.583" critical="yes" starttime="20210218 13:47:32.681"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210218 13:47:40.584" starttime="20210218 13:46:47.600"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:49:48.136" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:49:48.137" starttime="20210218 13:49:48.136"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:49:48.137" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:49:48.137" starttime="20210218 13:49:48.137"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:48.138" starttime="20210218 13:49:48.135"></status>
</kw>
<msg timestamp="20210218 13:49:48.138" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:49:48.138" starttime="20210218 13:49:48.135"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:49:48.139" starttime="20210218 13:49:48.139"></status>
</kw>
<msg timestamp="20210218 13:49:48.139" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:49:48.139" starttime="20210218 13:49:48.138"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:48.140" starttime="20210218 13:49:48.134"></status>
</kw>
<msg timestamp="20210218 13:49:48.140" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:49:48.140" starttime="20210218 13:49:48.133"></status>
</kw>
<msg timestamp="20210218 13:49:48.140" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:49:48.140" starttime="20210218 13:49:48.132"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:49:48.141" level="INFO">${random} = 23202</msg>
<status status="PASS" endtime="20210218 13:49:48.141" starttime="20210218 13:49:48.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:49:48.147" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-23202 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:49:54.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:49:54.649" level="INFO">${output} = 2021-02-18 13:49:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:49:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:49:54.649" starttime="20210218 13:49:48.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:49:54.651" level="INFO">2021-02-18 13:49:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:49:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:49:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:49:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:49:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-018C656D53E9-&gt;044bf973-fe45-4c53-bc81-50a38980435e
2021-02-18 13:49:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210218 13:49:54.651" starttime="20210218 13:49:54.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:49:54.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:49:54.652" starttime="20210218 13:49:54.651"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:54.652" starttime="20210218 13:49:48.142"></status>
</kw>
<msg timestamp="20210218 13:49:54.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:49:54.652" starttime="20210218 13:49:48.142"></status>
</kw>
<msg timestamp="20210218 13:49:54.653" level="INFO">${result} = 2021-02-18 13:49:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:49:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:49:54.653" starttime="20210218 13:49:48.141"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:49:54.657" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:49:56.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:49:56.786" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:49 ofs://om/volume1/bucket1/ozone-23202
-rw-...</msg>
<status status="PASS" endtime="20210218 13:49:56.786" starttime="20210218 13:49:54.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:49:56.788" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:49 ofs://om/volume1/bucket1/ozone-23202
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:48 ofs://om/volume1/bucket1/ozone-47627
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:49 ofs://om/volume1/bucket1/wordcount-E0bfMzYp.txt</msg>
<status status="PASS" endtime="20210218 13:49:56.788" starttime="20210218 13:49:56.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:49:56.789" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:49:56.789" starttime="20210218 13:49:56.788"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:56.789" starttime="20210218 13:49:54.654"></status>
</kw>
<msg timestamp="20210218 13:49:56.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:49:56.789" starttime="20210218 13:49:54.653"></status>
</kw>
<msg timestamp="20210218 13:49:56.789" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:49 ofs://om/volume1/bucket1/ozone-23202
-rw-...</msg>
<status status="PASS" endtime="20210218 13:49:56.790" starttime="20210218 13:49:54.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:49:56.790" starttime="20210218 13:49:56.790"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:49:56.791" critical="yes" starttime="20210218 13:49:48.130"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:49:56.792" starttime="20210218 13:49:48.011"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:48:09.837" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:48:09.837" starttime="20210218 13:48:09.836"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:48:09.838" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:48:09.838" starttime="20210218 13:48:09.837"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:09.838" starttime="20210218 13:48:09.836"></status>
</kw>
<msg timestamp="20210218 13:48:09.838" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:48:09.838" starttime="20210218 13:48:09.835"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:09.839" starttime="20210218 13:48:09.835"></status>
</kw>
<msg timestamp="20210218 13:48:09.839" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:48:09.839" starttime="20210218 13:48:09.834"></status>
</kw>
<msg timestamp="20210218 13:48:09.839" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:48:09.839" starttime="20210218 13:48:09.833"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:48:09.840" level="INFO">${random} = 47627</msg>
<status status="PASS" endtime="20210218 13:48:09.840" starttime="20210218 13:48:09.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:48:09.845" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-47627 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:48:14.699" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:48:14.699" level="INFO">${output} = 2021-02-18 13:48:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:48:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:48:14.699" starttime="20210218 13:48:09.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:48:14.701" level="INFO">2021-02-18 13:48:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:48:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:48:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:48:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:48:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BCBD36B03FAD-&gt;044bf973-fe45-4c53-bc81-50a38980435e
2021-02-18 13:48:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210218 13:48:14.701" starttime="20210218 13:48:14.699"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:48:14.702" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:48:14.702" starttime="20210218 13:48:14.702"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:14.702" starttime="20210218 13:48:09.841"></status>
</kw>
<msg timestamp="20210218 13:48:14.703" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:48:14.703" starttime="20210218 13:48:09.840"></status>
</kw>
<msg timestamp="20210218 13:48:14.703" level="INFO">${result} = 2021-02-18 13:48:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:48:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:48:14.703" starttime="20210218 13:48:09.840"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:48:14.707" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:48:16.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:48:16.856" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:48 o3fs://bucket1.volume1.om/ozone-47627
dr...</msg>
<status status="PASS" endtime="20210218 13:48:16.856" starttime="20210218 13:48:14.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:48:16.857" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:48 o3fs://bucket1.volume1.om/ozone-47627
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:48:16.857" starttime="20210218 13:48:16.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:48:16.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:48:16.858" starttime="20210218 13:48:16.857"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:16.858" starttime="20210218 13:48:14.704"></status>
</kw>
<msg timestamp="20210218 13:48:16.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:48:16.859" starttime="20210218 13:48:14.704"></status>
</kw>
<msg timestamp="20210218 13:48:16.859" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:47 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:48 o3fs://bucket1.volume1.om/ozone-47627
dr...</msg>
<status status="PASS" endtime="20210218 13:48:16.859" starttime="20210218 13:48:14.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:48:16.860" starttime="20210218 13:48:16.859"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:48:16.860" critical="yes" starttime="20210218 13:48:09.832"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:48:16.862" starttime="20210218 13:48:09.767"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:48:04.605" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:48:04.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:48:04.608" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210218 13:48:04.609" starttime="20210218 13:48:04.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:48:04.610" level="INFO">rm</msg>
<status status="PASS" endtime="20210218 13:48:04.610" starttime="20210218 13:48:04.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:48:04.611" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:48:04.611" starttime="20210218 13:48:04.610"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:04.611" starttime="20210218 13:48:04.601"></status>
</kw>
<msg timestamp="20210218 13:48:04.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:48:04.611" starttime="20210218 13:48:04.601"></status>
</kw>
<msg timestamp="20210218 13:48:04.612" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210218 13:48:04.612" starttime="20210218 13:48:04.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:48:04.613" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:48:04.613" starttime="20210218 13:48:04.612"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:48:04.618" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:48:04.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:48:04.628" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:48:04.628" starttime="20210218 13:48:04.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:48:04.632" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:48:04.632" starttime="20210218 13:48:04.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:48:04.633" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:48:04.633" starttime="20210218 13:48:04.632"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:04.633" starttime="20210218 13:48:04.615"></status>
</kw>
<msg timestamp="20210218 13:48:04.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:48:04.633" starttime="20210218 13:48:04.615"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:04.634" starttime="20210218 13:48:04.614"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:04.634" starttime="20210218 13:48:04.614"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:04.634" starttime="20210218 13:48:04.599"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:48:04.634" critical="yes" starttime="20210218 13:48:04.599"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210218 13:48:04.635" starttime="20210218 13:48:04.541"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:46:42.383" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:46:42.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:46:42.386" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210218 13:46:42.386" starttime="20210218 13:46:42.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:46:42.387" level="INFO">om</msg>
<status status="PASS" endtime="20210218 13:46:42.387" starttime="20210218 13:46:42.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:46:42.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:46:42.388" starttime="20210218 13:46:42.387"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:42.388" starttime="20210218 13:46:42.377"></status>
</kw>
<msg timestamp="20210218 13:46:42.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:46:42.388" starttime="20210218 13:46:42.377"></status>
</kw>
<msg timestamp="20210218 13:46:42.389" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210218 13:46:42.389" starttime="20210218 13:46:42.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:46:42.389" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:46:42.390" starttime="20210218 13:46:42.389"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:46:42.394" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:46:42.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:46:42.402" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:46:42.402" starttime="20210218 13:46:42.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:46:42.403" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:46:42.404" starttime="20210218 13:46:42.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:46:42.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:46:42.404" starttime="20210218 13:46:42.404"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:42.405" starttime="20210218 13:46:42.391"></status>
</kw>
<msg timestamp="20210218 13:46:42.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:46:42.405" starttime="20210218 13:46:42.391"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:42.405" starttime="20210218 13:46:42.390"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:42.405" starttime="20210218 13:46:42.390"></status>
</kw>
<status status="PASS" endtime="20210218 13:46:42.406" starttime="20210218 13:46:42.375"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:46:42.406" critical="yes" starttime="20210218 13:46:42.374"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210218 13:46:42.407" starttime="20210218 13:46:42.312"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:50:02.118" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:50:02.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:50:02.124" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:02.124" starttime="20210218 13:50:02.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:50:02.125" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:02.125" starttime="20210218 13:50:02.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:50:02.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:50:02.126" starttime="20210218 13:50:02.125"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:02.126" starttime="20210218 13:50:02.113"></status>
</kw>
<msg timestamp="20210218 13:50:02.126" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:50:02.127" starttime="20210218 13:50:02.113"></status>
</kw>
<msg timestamp="20210218 13:50:02.127" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:02.127" starttime="20210218 13:50:02.112"></status>
</kw>
<msg timestamp="20210218 13:50:02.127" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:02.127" starttime="20210218 13:50:02.112"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:50:02.141" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:50:02.142" starttime="20210218 13:50:02.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:50:02.142" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:50:02.142" starttime="20210218 13:50:02.142"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:02.143" starttime="20210218 13:50:02.140"></status>
</kw>
<msg timestamp="20210218 13:50:02.143" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:50:02.143" starttime="20210218 13:50:02.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:50:02.144" starttime="20210218 13:50:02.143"></status>
</kw>
<msg timestamp="20210218 13:50:02.144" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:50:02.144" starttime="20210218 13:50:02.143"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:02.144" starttime="20210218 13:50:02.130"></status>
</kw>
<msg timestamp="20210218 13:50:02.144" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:50:02.145" starttime="20210218 13:50:02.128"></status>
</kw>
<msg timestamp="20210218 13:50:02.145" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:50:02.145" starttime="20210218 13:50:02.127"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:50:02.149" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:50:40.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:50:40.323" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:50:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:50:04 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:50:40.323" starttime="20210218 13:50:02.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:50:40.324" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:50:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:50:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:50:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:50:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:50:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-62CAC269B613-&gt;a258d115-36b5-4838-accf-035745832c9d
2021-02-18 13:50:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:50:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F34078AC3365-&gt;044bf973-fe45-4c53-bc81-50a38980435e
2021-02-18 13:50:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:50:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:50:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
2021-02-18 13:50:06 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656206617, maxDate=1614261006617, sequenceNumber=3, masterKeyId=2))
2021-02-18 13:50:06 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c5 d9 9e ab fb 2e 38 c5 e1 d0 cb fd 2e 40 03 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-18 13:50:06 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656206617, maxDate=1614261006617, sequenceNumber=3, masterKeyId=2)
2021-02-18 13:50:06 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:50:09 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:50:09 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:50:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655934666_0003
2021-02-18 13:50:10 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 c5 d9 9e ab fb 2e 38 c5 e1 d0 cb fd 2e 40 03 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656206617, maxDate=1614261006617, sequenceNumber=3, masterKeyId=2)]
2021-02-18 13:50:10 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:50:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:50:10 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-18 13:50:11 INFO  YarnClientImpl:329 - Submitted application application_1613655934666_0003
2021-02-18 13:50:11 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655934666_0003/
2021-02-18 13:50:11 INFO  Job:1614 - Running job: job_1613655934666_0003
2021-02-18 13:50:20 INFO  Job:1635 - Job job_1613655934666_0003 running in uber mode : false
2021-02-18 13:50:20 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:50:31 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:50:32 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:50:33 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:50:38 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:50:39 INFO  Job:1653 - Job job_1613655934666_0003 completed successfully
2021-02-18 13:50:39 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102365
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50842
		Total time spent by all reduces in occupied slots (ms)=8344
		Total time spent by all map tasks (ms)=25421
		Total time spent by all reduce tasks (ms)=4172
		Total vcore-milliseconds taken by all map tasks=25421
		Total vcore-milliseconds taken by all reduce tasks=4172
		Total megabyte-milliseconds taken by all map tasks=52062208
		Total megabyte-milliseconds taken by all reduce tasks=8544256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1262
		CPU time spent (ms)=8790
		Physical memory (bytes) snapshot=1489244160
		Virtual memory (bytes) snapshot=14062690304
		Total committed heap usage (bytes)=1231552512
		Peak Map Physical memory (bytes)=389623808
		Peak Map Virtual memory (bytes)=3511779328
		Peak Reduce Physical memory (bytes)=330366976
		Peak Reduce Virtual memory (bytes)=3530956800
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.634 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210218 13:50:40.324" starttime="20210218 13:50:40.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:50:40.325" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:50:40.325" starttime="20210218 13:50:40.325"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.325" starttime="20210218 13:50:02.146"></status>
</kw>
<msg timestamp="20210218 13:50:40.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:50:40.326" starttime="20210218 13:50:02.146"></status>
</kw>
<msg timestamp="20210218 13:50:40.326" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:50:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:50:04 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:50:40.326" starttime="20210218 13:50:02.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:50:40.327" starttime="20210218 13:50:40.327"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:50:40.327" critical="yes" starttime="20210218 13:50:02.111"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:50:40.333" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:50:40.339" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:50:40.339" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:40.339" starttime="20210218 13:50:40.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:50:40.340" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:40.340" starttime="20210218 13:50:40.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:50:40.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:50:40.341" starttime="20210218 13:50:40.340"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.341" starttime="20210218 13:50:40.331"></status>
</kw>
<msg timestamp="20210218 13:50:40.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:50:40.341" starttime="20210218 13:50:40.330"></status>
</kw>
<msg timestamp="20210218 13:50:40.342" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:40.342" starttime="20210218 13:50:40.330"></status>
</kw>
<msg timestamp="20210218 13:50:40.342" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:50:40.342" starttime="20210218 13:50:40.329"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:50:40.343" level="INFO">${random} = yNub76TX</msg>
<status status="PASS" endtime="20210218 13:50:40.343" starttime="20210218 13:50:40.342"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:50:40.348" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:50:40.348" starttime="20210218 13:50:40.347"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:50:40.348" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:50:40.348" starttime="20210218 13:50:40.348"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.349" starttime="20210218 13:50:40.346"></status>
</kw>
<msg timestamp="20210218 13:50:40.349" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:50:40.349" starttime="20210218 13:50:40.346"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:50:40.350" starttime="20210218 13:50:40.349"></status>
</kw>
<msg timestamp="20210218 13:50:40.350" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:50:40.350" starttime="20210218 13:50:40.349"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.350" starttime="20210218 13:50:40.345"></status>
</kw>
<msg timestamp="20210218 13:50:40.351" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:50:40.351" starttime="20210218 13:50:40.344"></status>
</kw>
<msg timestamp="20210218 13:50:40.351" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:50:40.351" starttime="20210218 13:50:40.343"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:50:40.355" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:50:40.355" starttime="20210218 13:50:40.354"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:50:40.356" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:50:40.356" starttime="20210218 13:50:40.355"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.356" starttime="20210218 13:50:40.354"></status>
</kw>
<msg timestamp="20210218 13:50:40.356" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:50:40.356" starttime="20210218 13:50:40.353"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:50:40.358" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210218 13:50:40.358" starttime="20210218 13:50:40.357"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:50:40.359" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210218 13:50:40.359" starttime="20210218 13:50:40.358"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.359" starttime="20210218 13:50:40.357"></status>
</kw>
<msg timestamp="20210218 13:50:40.359" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210218 13:50:40.359" starttime="20210218 13:50:40.356"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.359" starttime="20210218 13:50:40.352"></status>
</kw>
<msg timestamp="20210218 13:50:40.360" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:50:40.360" starttime="20210218 13:50:40.352"></status>
</kw>
<msg timestamp="20210218 13:50:40.360" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:50:40.360" starttime="20210218 13:50:40.351"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:50:40.364" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:50:40.364" starttime="20210218 13:50:40.363"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:50:40.365" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:50:40.365" starttime="20210218 13:50:40.364"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.365" starttime="20210218 13:50:40.363"></status>
</kw>
<msg timestamp="20210218 13:50:40.365" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:50:40.365" starttime="20210218 13:50:40.362"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:50:40.367" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210218 13:50:40.367" starttime="20210218 13:50:40.367"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:50:40.368" level="INFO">${result} = /wordcount-yNub76TX.txt</msg>
<status status="PASS" endtime="20210218 13:50:40.368" starttime="20210218 13:50:40.367"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.368" starttime="20210218 13:50:40.366"></status>
</kw>
<msg timestamp="20210218 13:50:40.368" level="INFO">${path_with_leading} = /wordcount-yNub76TX.txt</msg>
<status status="PASS" endtime="20210218 13:50:40.368" starttime="20210218 13:50:40.365"></status>
</kw>
<status status="PASS" endtime="20210218 13:50:40.369" starttime="20210218 13:50:40.361"></status>
</kw>
<msg timestamp="20210218 13:50:40.369" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-yNub76TX.txt</msg>
<status status="PASS" endtime="20210218 13:50:40.369" starttime="20210218 13:50:40.361"></status>
</kw>
<msg timestamp="20210218 13:50:40.369" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-yNub76TX.txt</msg>
<status status="PASS" endtime="20210218 13:50:40.369" starttime="20210218 13:50:40.360"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:50:40.373" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-yNub76TX.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:51:16.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:51:16.951" level="INFO">${output} = 2021-02-18 13:50:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:50:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
202...</msg>
<status status="PASS" endtime="20210218 13:51:16.951" starttime="20210218 13:50:40.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:51:16.952" level="INFO">2021-02-18 13:50:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:50:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
2021-02-18 13:50:43 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656243041, maxDate=1614261043041, sequenceNumber=4, masterKeyId=2))
2021-02-18 13:50:43 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f5 f5 a0 ab fb 2e 38 f5 fd d2 cb fd 2e 40 04 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-18 13:50:43 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656243041, maxDate=1614261043041, sequenceNumber=4, masterKeyId=2)
2021-02-18 13:50:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:50:43 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:50:43 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:50:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:50:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:50:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6486B02B6D00-&gt;a258d115-36b5-4838-accf-035745832c9d
2021-02-18 13:50:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:50:44 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:50:47 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:50:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655934666_0004
2021-02-18 13:50:47 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 f5 f5 a0 ab fb 2e 38 f5 fd d2 cb fd 2e 40 04 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656243041, maxDate=1614261043041, sequenceNumber=4, masterKeyId=2)]
2021-02-18 13:50:48 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:50:48 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:50:48 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-18 13:50:48 INFO  YarnClientImpl:329 - Submitted application application_1613655934666_0004
2021-02-18 13:50:48 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655934666_0004/
2021-02-18 13:50:48 INFO  Job:1614 - Running job: job_1613655934666_0004
2021-02-18 13:50:57 INFO  Job:1635 - Job job_1613655934666_0004 running in uber mode : false
2021-02-18 13:50:57 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:51:08 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:51:10 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:51:11 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:51:16 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:51:16 INFO  Job:1653 - Job job_1613655934666_0004 completed successfully
2021-02-18 13:51:16 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165047
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52594
		Total time spent by all reduces in occupied slots (ms)=9320
		Total time spent by all map tasks (ms)=26297
		Total time spent by all reduce tasks (ms)=4660
		Total vcore-milliseconds taken by all map tasks=26297
		Total vcore-milliseconds taken by all reduce tasks=4660
		Total megabyte-milliseconds taken by all map tasks=53856256
		Total megabyte-milliseconds taken by all reduce tasks=9543680
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1480
		CPU time spent (ms)=8960
		Physical memory (bytes) snapshot=1660375040
		Virtual memory (bytes) snapshot=14057644032
		Total committed heap usage (bytes)=1510998016
		Peak Map Physical memory (bytes)=552804352
		Peak Map Virtual memory (bytes)=3511148544
		Peak Reduce Physical memory (bytes)=327426048
		Peak Reduce Virtual memory (bytes)=3525021696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210218 13:51:16.953" starttime="20210218 13:51:16.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:51:16.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:51:16.953" starttime="20210218 13:51:16.953"></status>
</kw>
<status status="PASS" endtime="20210218 13:51:16.954" starttime="20210218 13:50:40.370"></status>
</kw>
<msg timestamp="20210218 13:51:16.954" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:51:16.954" starttime="20210218 13:50:40.370"></status>
</kw>
<msg timestamp="20210218 13:51:16.955" level="INFO">${output} = 2021-02-18 13:50:42 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:50:42 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
202...</msg>
<status status="PASS" endtime="20210218 13:51:16.955" starttime="20210218 13:50:40.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:51:16.955" starttime="20210218 13:51:16.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:51:16.956" starttime="20210218 13:51:16.955"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:51:16.956" critical="yes" starttime="20210218 13:50:40.328"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:51:16.958" starttime="20210218 13:50:02.047"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:48:22.258" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:48:22.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:48:22.264" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:48:22.264" starttime="20210218 13:48:22.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:48:22.265" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:48:22.266" starttime="20210218 13:48:22.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:48:22.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:48:22.266" starttime="20210218 13:48:22.266"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:22.267" starttime="20210218 13:48:22.252"></status>
</kw>
<msg timestamp="20210218 13:48:22.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:48:22.267" starttime="20210218 13:48:22.252"></status>
</kw>
<msg timestamp="20210218 13:48:22.267" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:48:22.267" starttime="20210218 13:48:22.251"></status>
</kw>
<msg timestamp="20210218 13:48:22.268" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:48:22.268" starttime="20210218 13:48:22.251"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:48:22.273" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:48:22.273" starttime="20210218 13:48:22.273"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:48:22.274" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:48:22.274" starttime="20210218 13:48:22.274"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:22.274" starttime="20210218 13:48:22.272"></status>
</kw>
<msg timestamp="20210218 13:48:22.275" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:48:22.275" starttime="20210218 13:48:22.271"></status>
</kw>
<status status="PASS" endtime="20210218 13:48:22.275" starttime="20210218 13:48:22.270"></status>
</kw>
<msg timestamp="20210218 13:48:22.275" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:48:22.275" starttime="20210218 13:48:22.269"></status>
</kw>
<msg timestamp="20210218 13:48:22.275" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:48:22.275" starttime="20210218 13:48:22.268"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:48:22.279" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:49:04.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:49:04.493" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:48:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:48:24 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:49:04.494" starttime="20210218 13:48:22.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:49:04.495" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:48:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:48:24 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:48:24 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:48:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:48:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0816B7540F97-&gt;044bf973-fe45-4c53-bc81-50a38980435e
2021-02-18 13:48:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:48:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-08595D8A7615-&gt;a258d115-36b5-4838-accf-035745832c9d
2021-02-18 13:48:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:48:26 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:48:26 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
2021-02-18 13:48:27 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656107014, maxDate=1614260907014, sequenceNumber=1, masterKeyId=2))
2021-02-18 13:48:27 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 af cd 98 ab fb 2e 38 af d5 ca cb fd 2e 40 01 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-18 13:48:27 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656107014, maxDate=1614260907014, sequenceNumber=1, masterKeyId=2)
2021-02-18 13:48:27 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:48:27 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:48:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655934666_0001
2021-02-18 13:48:28 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 af cd 98 ab fb 2e 38 af d5 ca cb fd 2e 40 01 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656107014, maxDate=1614260907014, sequenceNumber=1, masterKeyId=2)]
2021-02-18 13:48:28 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:48:28 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:48:28 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-18 13:48:30 INFO  YarnClientImpl:329 - Submitted application application_1613655934666_0001
2021-02-18 13:48:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655934666_0001/
2021-02-18 13:48:30 INFO  Job:1614 - Running job: job_1613655934666_0001
2021-02-18 13:48:41 INFO  Job:1635 - Job job_1613655934666_0001 running in uber mode : false
2021-02-18 13:48:41 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:48:53 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:48:54 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:48:55 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:49:00 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:49:03 INFO  Job:1653 - Job job_1613655934666_0001 completed successfully
2021-02-18 13:49:03 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102593
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=52586
		Total time spent by all reduces in occupied slots (ms)=8716
		Total time spent by all map tasks (ms)=26293
		Total time spent by all reduce tasks (ms)=4358
		Total vcore-milliseconds taken by all map tasks=26293
		Total vcore-milliseconds taken by all reduce tasks=4358
		Total megabyte-milliseconds taken by all map tasks=53848064
		Total megabyte-milliseconds taken by all reduce tasks=8925184
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1135
		CPU time spent (ms)=8380
		Physical memory (bytes) snapshot=1501548544
		Virtual memory (bytes) snapshot=14061305856
		Total committed heap usage (bytes)=1282408448
		Peak Map Physical memory (bytes)=400461824
		Peak Map Virtual memory (bytes)=3513204736
		Peak Reduce Physical memory (bytes)=322433024
		Peak Reduce Virtual memory (bytes)=3526266880
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.686 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210218 13:49:04.495" starttime="20210218 13:49:04.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:49:04.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:49:04.496" starttime="20210218 13:49:04.495"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.496" starttime="20210218 13:48:22.277"></status>
</kw>
<msg timestamp="20210218 13:49:04.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:49:04.496" starttime="20210218 13:48:22.276"></status>
</kw>
<msg timestamp="20210218 13:49:04.497" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:48:24 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:48:24 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:49:04.497" starttime="20210218 13:48:22.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:49:04.498" starttime="20210218 13:49:04.497"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:49:04.498" critical="yes" starttime="20210218 13:48:22.250"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:49:04.504" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:49:04.512" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:49:04.512" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:49:04.512" starttime="20210218 13:49:04.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:49:04.513" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:49:04.513" starttime="20210218 13:49:04.512"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:49:04.514" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:49:04.514" starttime="20210218 13:49:04.513"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.514" starttime="20210218 13:49:04.501"></status>
</kw>
<msg timestamp="20210218 13:49:04.514" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:49:04.514" starttime="20210218 13:49:04.501"></status>
</kw>
<msg timestamp="20210218 13:49:04.514" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:49:04.515" starttime="20210218 13:49:04.500"></status>
</kw>
<msg timestamp="20210218 13:49:04.515" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:49:04.515" starttime="20210218 13:49:04.500"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:49:04.516" level="INFO">${random} = E0bfMzYp</msg>
<status status="PASS" endtime="20210218 13:49:04.516" starttime="20210218 13:49:04.515"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:49:04.520" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:49:04.520" starttime="20210218 13:49:04.520"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:49:04.521" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:49:04.521" starttime="20210218 13:49:04.520"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.521" starttime="20210218 13:49:04.519"></status>
</kw>
<msg timestamp="20210218 13:49:04.521" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:49:04.521" starttime="20210218 13:49:04.518"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.522" starttime="20210218 13:49:04.517"></status>
</kw>
<msg timestamp="20210218 13:49:04.522" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:49:04.522" starttime="20210218 13:49:04.517"></status>
</kw>
<msg timestamp="20210218 13:49:04.522" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:49:04.522" starttime="20210218 13:49:04.516"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:49:04.526" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:49:04.526" starttime="20210218 13:49:04.526"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:49:04.527" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:49:04.527" starttime="20210218 13:49:04.526"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.527" starttime="20210218 13:49:04.525"></status>
</kw>
<msg timestamp="20210218 13:49:04.527" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:49:04.527" starttime="20210218 13:49:04.525"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.528" starttime="20210218 13:49:04.524"></status>
</kw>
<msg timestamp="20210218 13:49:04.528" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:49:04.528" starttime="20210218 13:49:04.523"></status>
</kw>
<msg timestamp="20210218 13:49:04.528" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:49:04.528" starttime="20210218 13:49:04.522"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:49:04.532" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:49:04.532" starttime="20210218 13:49:04.532"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:49:04.533" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:49:04.533" starttime="20210218 13:49:04.532"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.533" starttime="20210218 13:49:04.531"></status>
</kw>
<msg timestamp="20210218 13:49:04.533" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:49:04.533" starttime="20210218 13:49:04.531"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:04.534" starttime="20210218 13:49:04.530"></status>
</kw>
<msg timestamp="20210218 13:49:04.534" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-E0bfMzYp.txt</msg>
<status status="PASS" endtime="20210218 13:49:04.534" starttime="20210218 13:49:04.529"></status>
</kw>
<msg timestamp="20210218 13:49:04.534" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-E0bfMzYp.txt</msg>
<status status="PASS" endtime="20210218 13:49:04.534" starttime="20210218 13:49:04.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:49:04.538" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-E0bfMzYp.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:49:42.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:49:42.429" level="INFO">${output} = 2021-02-18 13:49:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:49:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
202...</msg>
<status status="PASS" endtime="20210218 13:49:42.429" starttime="20210218 13:49:04.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:49:42.430" level="INFO">2021-02-18 13:49:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:49:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
2021-02-18 13:49:07 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656147169, maxDate=1614260947169, sequenceNumber=2, masterKeyId=2))
2021-02-18 13:49:07 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e0 88 9b ab fb 2e 38 e0 90 cd cb fd 2e 40 02 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-18 13:49:07 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656147169, maxDate=1614260947169, sequenceNumber=2, masterKeyId=2)
2021-02-18 13:49:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:49:07 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:49:07 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:49:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:49:08 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:49:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5D0448A71132-&gt;044bf973-fe45-4c53-bc81-50a38980435e
2021-02-18 13:49:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:49:09 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:49:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-68C5B8E130AB-&gt;a258d115-36b5-4838-accf-035745832c9d
2021-02-18 13:49:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:49:09 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:49:09 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655934666_0002
2021-02-18 13:49:09 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.26.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 e0 88 9b ab fb 2e 38 e0 90 cd cb fd 2e 40 02 48 01 5a 0d 32 34 32 39 33 34 39 31 34 38 33 30 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1613656147169, maxDate=1614260947169, sequenceNumber=2, masterKeyId=2)]
2021-02-18 13:49:10 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:49:10 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:49:10 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-18 13:49:11 INFO  YarnClientImpl:329 - Submitted application application_1613655934666_0002
2021-02-18 13:49:11 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655934666_0002/
2021-02-18 13:49:11 INFO  Job:1614 - Running job: job_1613655934666_0002
2021-02-18 13:49:19 INFO  Job:1635 - Job job_1613655934666_0002 running in uber mode : false
2021-02-18 13:49:19 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:49:31 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:49:32 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:49:34 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:49:38 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:49:41 INFO  Job:1653 - Job job_1613655934666_0002 completed successfully
2021-02-18 13:49:42 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165131
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=54162
		Total time spent by all reduces in occupied slots (ms)=8852
		Total time spent by all map tasks (ms)=27081
		Total time spent by all reduce tasks (ms)=4426
		Total vcore-milliseconds taken by all map tasks=27081
		Total vcore-milliseconds taken by all reduce tasks=4426
		Total megabyte-milliseconds taken by all map tasks=55461888
		Total megabyte-milliseconds taken by all reduce tasks=9064448
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1152
		CPU time spent (ms)=8880
		Physical memory (bytes) snapshot=1488326656
		Virtual memory (bytes) snapshot=14053916672
		Total committed heap usage (bytes)=1274019840
		Peak Map Physical memory (bytes)=399425536
		Peak Map Virtual memory (bytes)=3514961920
		Peak Reduce Physical memory (bytes)=328916992
		Peak Reduce Virtual memory (bytes)=3526270976
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210218 13:49:42.431" starttime="20210218 13:49:42.429"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:49:42.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:49:42.431" starttime="20210218 13:49:42.431"></status>
</kw>
<status status="PASS" endtime="20210218 13:49:42.432" starttime="20210218 13:49:04.535"></status>
</kw>
<msg timestamp="20210218 13:49:42.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:49:42.432" starttime="20210218 13:49:04.535"></status>
</kw>
<msg timestamp="20210218 13:49:42.433" level="INFO">${output} = 2021-02-18 13:49:06 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.6:8032
2021-02-18 13:49:06 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.2:10200
202...</msg>
<status status="PASS" endtime="20210218 13:49:42.433" starttime="20210218 13:49:04.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:49:42.433" starttime="20210218 13:49:42.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:49:42.434" starttime="20210218 13:49:42.433"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:49:42.434" critical="yes" starttime="20210218 13:49:04.499"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:49:42.436" starttime="20210218 13:48:22.185"></status>
</suite>
<status status="PASS" elapsedtime="224211" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
