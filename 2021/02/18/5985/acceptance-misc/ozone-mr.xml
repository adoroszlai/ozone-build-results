<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210218 13:35:13.197" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:08.791" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:11.602" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:20:11.602" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:20:11.602" starttime="20210218 13:20:08.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:11.604" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:20:11.604" starttime="20210218 13:20:11.603"></status>
</kw>
<msg timestamp="20210218 13:20:11.604" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:20:11.604" starttime="20210218 13:20:08.786"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:11.616" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:14.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:14.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:14.265" starttime="20210218 13:20:11.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:14.267" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:14.267" starttime="20210218 13:20:14.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:14.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:14.268" starttime="20210218 13:20:14.267"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:14.268" starttime="20210218 13:20:11.606"></status>
</kw>
<msg timestamp="20210218 13:20:14.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:14.268" starttime="20210218 13:20:11.606"></status>
</kw>
<msg timestamp="20210218 13:20:14.268" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210218 13:20:14.268" starttime="20210218 13:20:11.606"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210218 13:20:14.274" starttime="20210218 13:20:14.269"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:14.274" starttime="20210218 13:20:11.605"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:14.274" starttime="20210218 13:20:11.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:14.279" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:16.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:16.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:16.525" starttime="20210218 13:20:14.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:16.526" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:16.526" starttime="20210218 13:20:16.525"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:16.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:16.527" starttime="20210218 13:20:16.526"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:16.527" starttime="20210218 13:20:14.276"></status>
</kw>
<msg timestamp="20210218 13:20:16.527" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:16.527" starttime="20210218 13:20:14.276"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:16.527" starttime="20210218 13:20:14.275"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:16.528" starttime="20210218 13:20:14.275"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:16.528" starttime="20210218 13:20:14.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210218 13:20:16.528" starttime="20210218 13:20:16.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:16.533" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:18.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:18.963" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:20...</msg>
<status status="PASS" endtime="20210218 13:20:18.963" starttime="20210218 13:20:16.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:18.964" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:20:16.498Z",
  "modificationTime" : "2021-02-18T13:20:16.498Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:20:18.964" starttime="20210218 13:20:18.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:18.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:18.965" starttime="20210218 13:20:18.964"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:18.965" starttime="20210218 13:20:16.530"></status>
</kw>
<msg timestamp="20210218 13:20:18.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:18.966" starttime="20210218 13:20:16.529"></status>
</kw>
<msg timestamp="20210218 13:20:18.967" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:20...</msg>
<status status="PASS" endtime="20210218 13:20:18.967" starttime="20210218 13:20:16.529"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210218 13:20:18.968" starttime="20210218 13:20:18.968"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:20:18.972" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:20:18.972" starttime="20210218 13:20:18.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:20:18.973" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:20:18.973" starttime="20210218 13:20:18.973"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:18.973" starttime="20210218 13:20:18.971"></status>
</kw>
<msg timestamp="20210218 13:20:18.973" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:20:18.974" starttime="20210218 13:20:18.971"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:18.974" starttime="20210218 13:20:18.970"></status>
</kw>
<msg timestamp="20210218 13:20:18.974" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:20:18.974" starttime="20210218 13:20:18.969"></status>
</kw>
<msg timestamp="20210218 13:20:18.974" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:20:18.974" starttime="20210218 13:20:18.968"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:18.979" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:21.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:21.511" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:21.511" starttime="20210218 13:20:18.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:21.512" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:21.512" starttime="20210218 13:20:21.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:21.513" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:21.513" starttime="20210218 13:20:21.512"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:21.513" starttime="20210218 13:20:18.975"></status>
</kw>
<msg timestamp="20210218 13:20:21.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:21.513" starttime="20210218 13:20:18.975"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:21.514" starttime="20210218 13:20:18.974"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:21.518" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:27.615" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:27.615" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:27.615" starttime="20210218 13:20:21.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:27.618" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:27.618" starttime="20210218 13:20:27.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:27.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:27.620" starttime="20210218 13:20:27.618"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:27.620" starttime="20210218 13:20:21.515"></status>
</kw>
<msg timestamp="20210218 13:20:27.620" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:27.621" starttime="20210218 13:20:21.515"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:27.621" starttime="20210218 13:20:21.514"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:27.627" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:32.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:32.303" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:32.303" starttime="20210218 13:20:27.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:32.304" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:32.304" starttime="20210218 13:20:32.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:32.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:32.305" starttime="20210218 13:20:32.304"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:32.305" starttime="20210218 13:20:27.623"></status>
</kw>
<msg timestamp="20210218 13:20:32.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:32.306" starttime="20210218 13:20:27.623"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:32.306" starttime="20210218 13:20:27.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:32.310" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:36.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:36.845" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:36.845" starttime="20210218 13:20:32.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:36.846" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:36.846" starttime="20210218 13:20:36.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:36.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:36.847" starttime="20210218 13:20:36.846"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:36.847" starttime="20210218 13:20:32.307"></status>
</kw>
<msg timestamp="20210218 13:20:36.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:36.847" starttime="20210218 13:20:32.307"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:36.848" starttime="20210218 13:20:32.306"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:20:36.848" critical="yes" starttime="20210218 13:20:08.786"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:20:36.854" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:20:36.854" starttime="20210218 13:20:36.853"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:20:36.855" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:20:36.855" starttime="20210218 13:20:36.854"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:36.855" starttime="20210218 13:20:36.853"></status>
</kw>
<msg timestamp="20210218 13:20:36.855" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:20:36.855" starttime="20210218 13:20:36.852"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:36.856" starttime="20210218 13:20:36.851"></status>
</kw>
<msg timestamp="20210218 13:20:36.856" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:20:36.856" starttime="20210218 13:20:36.851"></status>
</kw>
<msg timestamp="20210218 13:20:36.856" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:20:36.856" starttime="20210218 13:20:36.850"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:36.861" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:39.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:39.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:39.285" starttime="20210218 13:20:36.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:39.286" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:39.286" starttime="20210218 13:20:39.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:39.287" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:39.287" starttime="20210218 13:20:39.286"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:39.288" starttime="20210218 13:20:36.857"></status>
</kw>
<msg timestamp="20210218 13:20:39.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:39.288" starttime="20210218 13:20:36.857"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:39.288" starttime="20210218 13:20:36.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:39.292" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:41.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:41.648" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:20:41.648" starttime="20210218 13:20:39.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:41.649" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:20:41.649" starttime="20210218 13:20:41.648"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:41.650" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:41.650" starttime="20210218 13:20:41.649"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:41.650" starttime="20210218 13:20:39.289"></status>
</kw>
<msg timestamp="20210218 13:20:41.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:41.651" starttime="20210218 13:20:39.289"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:41.651" starttime="20210218 13:20:39.288"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:20:41.651" critical="yes" starttime="20210218 13:20:36.849"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210218 13:20:41.653" starttime="20210218 13:20:08.716"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:22:27.403" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:22:27.403" starttime="20210218 13:22:27.402"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:22:27.404" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:22:27.404" starttime="20210218 13:22:27.403"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:27.404" starttime="20210218 13:22:27.402"></status>
</kw>
<msg timestamp="20210218 13:22:27.404" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:22:27.404" starttime="20210218 13:22:27.401"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:22:27.405" starttime="20210218 13:22:27.405"></status>
</kw>
<msg timestamp="20210218 13:22:27.406" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:22:27.406" starttime="20210218 13:22:27.404"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:27.406" starttime="20210218 13:22:27.400"></status>
</kw>
<msg timestamp="20210218 13:22:27.406" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:22:27.406" starttime="20210218 13:22:27.400"></status>
</kw>
<msg timestamp="20210218 13:22:27.406" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:22:27.407" starttime="20210218 13:22:27.398"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:22:27.407" level="INFO">${random} = 49490</msg>
<status status="PASS" endtime="20210218 13:22:27.407" starttime="20210218 13:22:27.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:22:27.413" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-49490 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:22:31.414" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:22:31.414" level="INFO">${output} = 2021-02-18 13:22:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:22:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 ...</msg>
<status status="PASS" endtime="20210218 13:22:31.414" starttime="20210218 13:22:27.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:22:31.415" level="INFO">2021-02-18 13:22:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:22:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 13:22:29 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-18 13:22:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:22:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ADE72DB05FBC-&gt;844162ab-5b1f-4f96-85f9-59f57f505565
2021-02-18 13:22:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210218 13:22:31.415" starttime="20210218 13:22:31.414"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:22:31.416" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:22:31.416" starttime="20210218 13:22:31.415"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:31.416" starttime="20210218 13:22:27.408"></status>
</kw>
<msg timestamp="20210218 13:22:31.416" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:22:31.416" starttime="20210218 13:22:27.408"></status>
</kw>
<msg timestamp="20210218 13:22:31.417" level="INFO">${result} = 2021-02-18 13:22:29 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:22:29 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 ...</msg>
<status status="PASS" endtime="20210218 13:22:31.417" starttime="20210218 13:22:27.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:22:31.421" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:22:33.382" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:22:33.382" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:22 ofs://om/volume1/bucket1/ozone-49490
-rw-...</msg>
<status status="PASS" endtime="20210218 13:22:33.382" starttime="20210218 13:22:31.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:22:33.384" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:22 ofs://om/volume1/bucket1/ozone-49490
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:20 ofs://om/volume1/bucket1/ozone-91538
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:21 ofs://om/volume1/bucket1/wordcount-eHgOEoi3.txt</msg>
<status status="PASS" endtime="20210218 13:22:33.384" starttime="20210218 13:22:33.383"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:22:33.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:22:33.385" starttime="20210218 13:22:33.384"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:33.385" starttime="20210218 13:22:31.418"></status>
</kw>
<msg timestamp="20210218 13:22:33.385" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:22:33.385" starttime="20210218 13:22:31.418"></status>
</kw>
<msg timestamp="20210218 13:22:33.386" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:22 ofs://om/volume1/bucket1/ozone-49490
-rw-...</msg>
<status status="PASS" endtime="20210218 13:22:33.386" starttime="20210218 13:22:31.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:22:33.386" starttime="20210218 13:22:33.386"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:22:33.387" critical="yes" starttime="20210218 13:22:27.397"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:22:33.388" starttime="20210218 13:22:27.327"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:20:46.516" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:20:46.516" starttime="20210218 13:20:46.516"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:20:46.517" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:20:46.517" starttime="20210218 13:20:46.516"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:46.517" starttime="20210218 13:20:46.515"></status>
</kw>
<msg timestamp="20210218 13:20:46.517" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:20:46.517" starttime="20210218 13:20:46.514"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:46.518" starttime="20210218 13:20:46.513"></status>
</kw>
<msg timestamp="20210218 13:20:46.518" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:20:46.518" starttime="20210218 13:20:46.513"></status>
</kw>
<msg timestamp="20210218 13:20:46.518" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:20:46.518" starttime="20210218 13:20:46.512"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:20:46.519" level="INFO">${random} = 91538</msg>
<status status="PASS" endtime="20210218 13:20:46.519" starttime="20210218 13:20:46.518"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:46.524" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-91538 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:50.590" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:50.590" level="INFO">${output} = 2021-02-18 13:20:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:20:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 ...</msg>
<status status="PASS" endtime="20210218 13:20:50.590" starttime="20210218 13:20:46.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:50.592" level="INFO">2021-02-18 13:20:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:20:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 13:20:48 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-18 13:20:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:20:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-79C3CB768A15-&gt;844162ab-5b1f-4f96-85f9-59f57f505565
2021-02-18 13:20:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210218 13:20:50.593" starttime="20210218 13:20:50.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:50.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:50.593" starttime="20210218 13:20:50.593"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:50.594" starttime="20210218 13:20:46.520"></status>
</kw>
<msg timestamp="20210218 13:20:50.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:50.594" starttime="20210218 13:20:46.520"></status>
</kw>
<msg timestamp="20210218 13:20:50.594" level="INFO">${result} = 2021-02-18 13:20:48 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:20:48 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 ...</msg>
<status status="PASS" endtime="20210218 13:20:50.594" starttime="20210218 13:20:46.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:50.598" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:52.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:52.649" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:20 o3fs://bucket1.volume1.om/ozone-91538
dr...</msg>
<status status="PASS" endtime="20210218 13:20:52.649" starttime="20210218 13:20:50.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:52.650" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:20 o3fs://bucket1.volume1.om/ozone-91538
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:20:52.650" starttime="20210218 13:20:52.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:52.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:52.651" starttime="20210218 13:20:52.651"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:52.652" starttime="20210218 13:20:50.595"></status>
</kw>
<msg timestamp="20210218 13:20:52.652" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:52.652" starttime="20210218 13:20:50.595"></status>
</kw>
<msg timestamp="20210218 13:20:52.652" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:20 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-18 13:20 o3fs://bucket1.volume1.om/ozone-91538
dr...</msg>
<status status="PASS" endtime="20210218 13:20:52.652" starttime="20210218 13:20:50.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:20:52.653" starttime="20210218 13:20:52.652"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:20:52.653" critical="yes" starttime="20210218 13:20:46.511"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:20:52.655" starttime="20210218 13:20:46.429"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:22:38.297" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:22:38.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:22:38.303" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:22:38.303" starttime="20210218 13:22:38.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:22:38.304" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:22:38.304" starttime="20210218 13:22:38.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:22:38.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:22:38.305" starttime="20210218 13:22:38.305"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:38.305" starttime="20210218 13:22:38.292"></status>
</kw>
<msg timestamp="20210218 13:22:38.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:22:38.306" starttime="20210218 13:22:38.292"></status>
</kw>
<msg timestamp="20210218 13:22:38.306" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:22:38.306" starttime="20210218 13:22:38.291"></status>
</kw>
<msg timestamp="20210218 13:22:38.306" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:22:38.306" starttime="20210218 13:22:38.291"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:22:38.311" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:22:38.311" starttime="20210218 13:22:38.311"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:22:38.312" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:22:38.312" starttime="20210218 13:22:38.312"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:38.312" starttime="20210218 13:22:38.310"></status>
</kw>
<msg timestamp="20210218 13:22:38.312" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:22:38.312" starttime="20210218 13:22:38.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:22:38.314" starttime="20210218 13:22:38.313"></status>
</kw>
<msg timestamp="20210218 13:22:38.314" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:22:38.314" starttime="20210218 13:22:38.313"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:38.314" starttime="20210218 13:22:38.309"></status>
</kw>
<msg timestamp="20210218 13:22:38.314" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:22:38.314" starttime="20210218 13:22:38.307"></status>
</kw>
<msg timestamp="20210218 13:22:38.314" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:22:38.315" starttime="20210218 13:22:38.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:22:38.318" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:23:16.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:23:16.087" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:22:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210218 13:23:16.087" starttime="20210218 13:22:38.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:23:16.089" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:22:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 13:22:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-18 13:22:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:22:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-98D3E1CCDCA9-&gt;844162ab-5b1f-4f96-85f9-59f57f505565
2021-02-18 13:22:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:22:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A2EA9FB28D21-&gt;58fa9188-1e1a-4234-90e4-9c00fc641aa1
2021-02-18 13:22:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:22:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:22:42 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:22:42 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-18 13:22:42 INFO  JobSubmitter:198 - number of splits:3
2021-02-18 13:22:42 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613654368031_0003
2021-02-18 13:22:42 INFO  YarnClientImpl:273 - Submitted application application_1613654368031_0003
2021-02-18 13:22:42 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613654368031_0003/
2021-02-18 13:22:42 INFO  Job:1339 - Running job: job_1613654368031_0003
2021-02-18 13:22:50 INFO  Job:1360 - Job job_1613654368031_0003 running in uber mode : false
2021-02-18 13:22:50 INFO  Job:1367 -  map 0% reduce 0%
2021-02-18 13:22:57 INFO  Job:1367 -  map 33% reduce 0%
2021-02-18 13:23:02 INFO  Job:1367 -  map 67% reduce 0%
2021-02-18 13:23:07 INFO  Job:1367 -  map 100% reduce 0%
2021-02-18 13:23:11 INFO  Job:1367 -  map 100% reduce 100%
2021-02-18 13:23:15 INFO  Job:1378 - Job job_1613654368031_0003 completed successfully
2021-02-18 13:23:15 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=611857
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43516
		Total time spent by all reduces in occupied slots (ms)=15976
		Total time spent by all map tasks (ms)=10879
		Total time spent by all reduce tasks (ms)=3994
		Total vcore-milliseconds taken by all map tasks=10879
		Total vcore-milliseconds taken by all reduce tasks=3994
		Total megabyte-milliseconds taken by all map tasks=44560384
		Total megabyte-milliseconds taken by all reduce tasks=16359424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=609
		CPU time spent (ms)=7390
		Physical memory (bytes) snapshot=1190862848
		Virtual memory (bytes) snapshot=15792566272
		Total committed heap usage (bytes)=1029701632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.618 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210218 13:23:16.089" starttime="20210218 13:23:16.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:23:16.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:23:16.090" starttime="20210218 13:23:16.089"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.090" starttime="20210218 13:22:38.316"></status>
</kw>
<msg timestamp="20210218 13:23:16.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:23:16.090" starttime="20210218 13:22:38.315"></status>
</kw>
<msg timestamp="20210218 13:23:16.091" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:22:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:22:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210218 13:23:16.091" starttime="20210218 13:22:38.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:23:16.091" starttime="20210218 13:23:16.091"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:23:16.092" critical="yes" starttime="20210218 13:22:38.290"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:23:16.097" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:23:16.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:23:16.103" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:23:16.103" starttime="20210218 13:23:16.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:23:16.104" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:23:16.104" starttime="20210218 13:23:16.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:23:16.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:23:16.105" starttime="20210218 13:23:16.104"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.105" starttime="20210218 13:23:16.095"></status>
</kw>
<msg timestamp="20210218 13:23:16.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:23:16.105" starttime="20210218 13:23:16.094"></status>
</kw>
<msg timestamp="20210218 13:23:16.106" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:23:16.106" starttime="20210218 13:23:16.094"></status>
</kw>
<msg timestamp="20210218 13:23:16.106" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:23:16.106" starttime="20210218 13:23:16.093"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:23:16.107" level="INFO">${random} = qR9pjlQm</msg>
<status status="PASS" endtime="20210218 13:23:16.107" starttime="20210218 13:23:16.106"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:23:16.111" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:23:16.111" starttime="20210218 13:23:16.111"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:23:16.112" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:23:16.112" starttime="20210218 13:23:16.112"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.112" starttime="20210218 13:23:16.110"></status>
</kw>
<msg timestamp="20210218 13:23:16.112" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:23:16.112" starttime="20210218 13:23:16.110"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:23:16.114" starttime="20210218 13:23:16.113"></status>
</kw>
<msg timestamp="20210218 13:23:16.114" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:23:16.114" starttime="20210218 13:23:16.113"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.114" starttime="20210218 13:23:16.109"></status>
</kw>
<msg timestamp="20210218 13:23:16.114" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:23:16.114" starttime="20210218 13:23:16.108"></status>
</kw>
<msg timestamp="20210218 13:23:16.115" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:23:16.115" starttime="20210218 13:23:16.107"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:23:16.119" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:23:16.119" starttime="20210218 13:23:16.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:23:16.119" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:23:16.120" starttime="20210218 13:23:16.119"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.120" starttime="20210218 13:23:16.118"></status>
</kw>
<msg timestamp="20210218 13:23:16.120" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:23:16.120" starttime="20210218 13:23:16.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:23:16.122" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210218 13:23:16.122" starttime="20210218 13:23:16.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:23:16.123" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210218 13:23:16.123" starttime="20210218 13:23:16.122"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.123" starttime="20210218 13:23:16.121"></status>
</kw>
<msg timestamp="20210218 13:23:16.123" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210218 13:23:16.123" starttime="20210218 13:23:16.120"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.124" starttime="20210218 13:23:16.116"></status>
</kw>
<msg timestamp="20210218 13:23:16.124" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:23:16.124" starttime="20210218 13:23:16.116"></status>
</kw>
<msg timestamp="20210218 13:23:16.124" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:23:16.124" starttime="20210218 13:23:16.115"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:23:16.128" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:23:16.128" starttime="20210218 13:23:16.128"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:23:16.129" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:23:16.129" starttime="20210218 13:23:16.128"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.129" starttime="20210218 13:23:16.127"></status>
</kw>
<msg timestamp="20210218 13:23:16.129" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:23:16.129" starttime="20210218 13:23:16.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:23:16.131" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210218 13:23:16.131" starttime="20210218 13:23:16.130"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:23:16.131" level="INFO">${result} = /wordcount-qR9pjlQm.txt</msg>
<status status="PASS" endtime="20210218 13:23:16.132" starttime="20210218 13:23:16.131"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.132" starttime="20210218 13:23:16.130"></status>
</kw>
<msg timestamp="20210218 13:23:16.132" level="INFO">${path_with_leading} = /wordcount-qR9pjlQm.txt</msg>
<status status="PASS" endtime="20210218 13:23:16.132" starttime="20210218 13:23:16.129"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:16.132" starttime="20210218 13:23:16.126"></status>
</kw>
<msg timestamp="20210218 13:23:16.132" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-qR9pjlQm.txt</msg>
<status status="PASS" endtime="20210218 13:23:16.132" starttime="20210218 13:23:16.125"></status>
</kw>
<msg timestamp="20210218 13:23:16.133" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-qR9pjlQm.txt</msg>
<status status="PASS" endtime="20210218 13:23:16.133" starttime="20210218 13:23:16.124"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:23:16.137" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-qR9pjlQm.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:23:50.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:23:50.522" level="INFO">${output} = 2021-02-18 13:23:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:23:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210218 13:23:50.522" starttime="20210218 13:23:16.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:23:50.523" level="INFO">2021-02-18 13:23:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:23:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:23:18 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:23:18 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 13:23:18 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-18 13:23:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:23:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-92647694FA31-&gt;844162ab-5b1f-4f96-85f9-59f57f505565
2021-02-18 13:23:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:23:19 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-18 13:23:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4B8267C6272-&gt;58fa9188-1e1a-4234-90e4-9c00fc641aa1
2021-02-18 13:23:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:23:20 INFO  JobSubmitter:198 - number of splits:3
2021-02-18 13:23:20 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613654368031_0004
2021-02-18 13:23:20 INFO  YarnClientImpl:273 - Submitted application application_1613654368031_0004
2021-02-18 13:23:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613654368031_0004/
2021-02-18 13:23:20 INFO  Job:1339 - Running job: job_1613654368031_0004
2021-02-18 13:23:27 INFO  Job:1360 - Job job_1613654368031_0004 running in uber mode : false
2021-02-18 13:23:27 INFO  Job:1367 -  map 0% reduce 0%
2021-02-18 13:23:34 INFO  Job:1367 -  map 33% reduce 0%
2021-02-18 13:23:39 INFO  Job:1367 -  map 67% reduce 0%
2021-02-18 13:23:44 INFO  Job:1367 -  map 100% reduce 0%
2021-02-18 13:23:49 INFO  Job:1367 -  map 100% reduce 100%
2021-02-18 13:23:50 INFO  Job:1378 - Job job_1613654368031_0004 completed successfully
2021-02-18 13:23:50 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674635
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44724
		Total time spent by all reduces in occupied slots (ms)=15964
		Total time spent by all map tasks (ms)=11181
		Total time spent by all reduce tasks (ms)=3991
		Total vcore-milliseconds taken by all map tasks=11181
		Total vcore-milliseconds taken by all reduce tasks=3991
		Total megabyte-milliseconds taken by all map tasks=45797376
		Total megabyte-milliseconds taken by all reduce tasks=16347136
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=565
		CPU time spent (ms)=7960
		Physical memory (bytes) snapshot=1190825984
		Virtual memory (bytes) snapshot=15790129152
		Total committed heap usage (bytes)=1059061760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210218 13:23:50.523" starttime="20210218 13:23:50.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:23:50.524" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:23:50.524" starttime="20210218 13:23:50.523"></status>
</kw>
<status status="PASS" endtime="20210218 13:23:50.525" starttime="20210218 13:23:16.134"></status>
</kw>
<msg timestamp="20210218 13:23:50.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:23:50.525" starttime="20210218 13:23:16.134"></status>
</kw>
<msg timestamp="20210218 13:23:50.525" level="INFO">${output} = 2021-02-18 13:23:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:23:18 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210218 13:23:50.525" starttime="20210218 13:23:16.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:23:50.526" starttime="20210218 13:23:50.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:23:50.527" starttime="20210218 13:23:50.526"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:23:50.527" critical="yes" starttime="20210218 13:23:16.092"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:23:50.529" starttime="20210218 13:22:38.218"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:57.412" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:20:57.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:20:57.419" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:20:57.419" starttime="20210218 13:20:57.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:20:57.420" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:20:57.420" starttime="20210218 13:20:57.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:20:57.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:20:57.421" starttime="20210218 13:20:57.420"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:57.421" starttime="20210218 13:20:57.407"></status>
</kw>
<msg timestamp="20210218 13:20:57.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:20:57.422" starttime="20210218 13:20:57.407"></status>
</kw>
<msg timestamp="20210218 13:20:57.422" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:20:57.422" starttime="20210218 13:20:57.407"></status>
</kw>
<msg timestamp="20210218 13:20:57.422" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:20:57.422" starttime="20210218 13:20:57.406"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:20:57.427" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:20:57.427" starttime="20210218 13:20:57.427"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:20:57.428" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:20:57.428" starttime="20210218 13:20:57.428"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:57.428" starttime="20210218 13:20:57.426"></status>
</kw>
<msg timestamp="20210218 13:20:57.429" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:20:57.429" starttime="20210218 13:20:57.426"></status>
</kw>
<status status="PASS" endtime="20210218 13:20:57.429" starttime="20210218 13:20:57.425"></status>
</kw>
<msg timestamp="20210218 13:20:57.429" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:20:57.429" starttime="20210218 13:20:57.423"></status>
</kw>
<msg timestamp="20210218 13:20:57.429" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:20:57.429" starttime="20210218 13:20:57.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:20:57.433" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:21:44.725" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:21:44.725" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:20:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:20:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210218 13:21:44.725" starttime="20210218 13:20:57.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:21:44.726" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:20:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:20:59 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 13:20:59 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-18 13:20:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:20:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9E5C9EE32397-&gt;58fa9188-1e1a-4234-90e4-9c00fc641aa1
2021-02-18 13:20:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:21:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-21B51FEB252E-&gt;844162ab-5b1f-4f96-85f9-59f57f505565
2021-02-18 13:21:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:21:01 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:21:04 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-18 13:21:06 INFO  JobSubmitter:198 - number of splits:3
2021-02-18 13:21:06 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613654368031_0001
2021-02-18 13:21:07 INFO  YarnClientImpl:273 - Submitted application application_1613654368031_0001
2021-02-18 13:21:07 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613654368031_0001/
2021-02-18 13:21:07 INFO  Job:1339 - Running job: job_1613654368031_0001
2021-02-18 13:21:17 INFO  Job:1360 - Job job_1613654368031_0001 running in uber mode : false
2021-02-18 13:21:17 INFO  Job:1367 -  map 0% reduce 0%
2021-02-18 13:21:24 INFO  Job:1367 -  map 33% reduce 0%
2021-02-18 13:21:30 INFO  Job:1367 -  map 67% reduce 0%
2021-02-18 13:21:35 INFO  Job:1367 -  map 100% reduce 0%
2021-02-18 13:21:39 INFO  Job:1367 -  map 100% reduce 100%
2021-02-18 13:21:44 INFO  Job:1378 - Job job_1613654368031_0001 completed successfully
2021-02-18 13:21:44 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612085
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45172
		Total time spent by all reduces in occupied slots (ms)=17332
		Total time spent by all map tasks (ms)=11293
		Total time spent by all reduce tasks (ms)=4333
		Total vcore-milliseconds taken by all map tasks=11293
		Total vcore-milliseconds taken by all reduce tasks=4333
		Total megabyte-milliseconds taken by all map tasks=46256128
		Total megabyte-milliseconds taken by all reduce tasks=17747968
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=674
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1211289600
		Virtual memory (bytes) snapshot=15811203072
		Total committed heap usage (bytes)=1050148864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.087 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210218 13:21:44.726" starttime="20210218 13:21:44.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:21:44.727" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:21:44.727" starttime="20210218 13:21:44.726"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.727" starttime="20210218 13:20:57.430"></status>
</kw>
<msg timestamp="20210218 13:21:44.727" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:21:44.728" starttime="20210218 13:20:57.430"></status>
</kw>
<msg timestamp="20210218 13:21:44.728" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:20:59 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:20:59 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210218 13:21:44.728" starttime="20210218 13:20:57.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:21:44.729" starttime="20210218 13:21:44.728"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:21:44.729" critical="yes" starttime="20210218 13:20:57.405"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:21:44.734" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:21:44.740" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:21:44.740" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:21:44.740" starttime="20210218 13:21:44.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:21:44.741" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:21:44.741" starttime="20210218 13:21:44.741"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:21:44.742" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:21:44.742" starttime="20210218 13:21:44.741"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.742" starttime="20210218 13:21:44.732"></status>
</kw>
<msg timestamp="20210218 13:21:44.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:21:44.743" starttime="20210218 13:21:44.731"></status>
</kw>
<msg timestamp="20210218 13:21:44.743" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:21:44.743" starttime="20210218 13:21:44.731"></status>
</kw>
<msg timestamp="20210218 13:21:44.743" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210218 13:21:44.743" starttime="20210218 13:21:44.730"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:21:44.744" level="INFO">${random} = eHgOEoi3</msg>
<status status="PASS" endtime="20210218 13:21:44.744" starttime="20210218 13:21:44.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:21:44.748" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:21:44.749" starttime="20210218 13:21:44.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:21:44.750" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:21:44.750" starttime="20210218 13:21:44.749"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.750" starttime="20210218 13:21:44.747"></status>
</kw>
<msg timestamp="20210218 13:21:44.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:21:44.750" starttime="20210218 13:21:44.747"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.751" starttime="20210218 13:21:44.746"></status>
</kw>
<msg timestamp="20210218 13:21:44.751" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:21:44.751" starttime="20210218 13:21:44.745"></status>
</kw>
<msg timestamp="20210218 13:21:44.751" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:21:44.751" starttime="20210218 13:21:44.744"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:21:44.755" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:21:44.755" starttime="20210218 13:21:44.754"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:21:44.756" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:21:44.756" starttime="20210218 13:21:44.755"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.756" starttime="20210218 13:21:44.754"></status>
</kw>
<msg timestamp="20210218 13:21:44.756" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:21:44.756" starttime="20210218 13:21:44.753"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.757" starttime="20210218 13:21:44.753"></status>
</kw>
<msg timestamp="20210218 13:21:44.757" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:21:44.757" starttime="20210218 13:21:44.752"></status>
</kw>
<msg timestamp="20210218 13:21:44.757" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:21:44.757" starttime="20210218 13:21:44.751"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:21:44.761" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:21:44.761" starttime="20210218 13:21:44.760"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:21:44.762" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:21:44.762" starttime="20210218 13:21:44.761"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.762" starttime="20210218 13:21:44.760"></status>
</kw>
<msg timestamp="20210218 13:21:44.762" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:21:44.762" starttime="20210218 13:21:44.759"></status>
</kw>
<status status="PASS" endtime="20210218 13:21:44.762" starttime="20210218 13:21:44.759"></status>
</kw>
<msg timestamp="20210218 13:21:44.762" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-eHgOEoi3.txt</msg>
<status status="PASS" endtime="20210218 13:21:44.763" starttime="20210218 13:21:44.758"></status>
</kw>
<msg timestamp="20210218 13:21:44.763" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-eHgOEoi3.txt</msg>
<status status="PASS" endtime="20210218 13:21:44.763" starttime="20210218 13:21:44.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:21:44.767" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-eHgOEoi3.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:22:22.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:22:22.206" level="INFO">${output} = 2021-02-18 13:21:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:21:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210218 13:22:22.206" starttime="20210218 13:21:44.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:22:22.208" level="INFO">2021-02-18 13:21:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:21:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:21:47 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:21:47 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-18 13:21:47 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-18 13:21:47 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:21:47 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C67F025DCBAE-&gt;58fa9188-1e1a-4234-90e4-9c00fc641aa1
2021-02-18 13:21:47 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:21:48 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-18 13:21:48 INFO  JobSubmitter:198 - number of splits:3
2021-02-18 13:21:48 INFO  JobSubmitter:287 - Submitting tokens for job: job_1613654368031_0002
2021-02-18 13:21:49 INFO  YarnClientImpl:273 - Submitted application application_1613654368031_0002
2021-02-18 13:21:49 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1613654368031_0002/
2021-02-18 13:21:49 INFO  Job:1339 - Running job: job_1613654368031_0002
2021-02-18 13:21:57 INFO  Job:1360 - Job job_1613654368031_0002 running in uber mode : false
2021-02-18 13:21:57 INFO  Job:1367 -  map 0% reduce 0%
2021-02-18 13:22:04 INFO  Job:1367 -  map 33% reduce 0%
2021-02-18 13:22:09 INFO  Job:1367 -  map 67% reduce 0%
2021-02-18 13:22:14 INFO  Job:1367 -  map 100% reduce 0%
2021-02-18 13:22:20 INFO  Job:1367 -  map 100% reduce 100%
2021-02-18 13:22:21 INFO  Job:1378 - Job job_1613654368031_0002 completed successfully
2021-02-18 13:22:21 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45108
		Total time spent by all reduces in occupied slots (ms)=17012
		Total time spent by all map tasks (ms)=11277
		Total time spent by all reduce tasks (ms)=4253
		Total vcore-milliseconds taken by all map tasks=11277
		Total vcore-milliseconds taken by all reduce tasks=4253
		Total megabyte-milliseconds taken by all map tasks=46190592
		Total megabyte-milliseconds taken by all reduce tasks=17420288
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=8050
		Physical memory (bytes) snapshot=1217802240
		Virtual memory (bytes) snapshot=15808417792
		Total committed heap usage (bytes)=1065877504
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210218 13:22:22.208" starttime="20210218 13:22:22.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:22:22.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:22:22.209" starttime="20210218 13:22:22.208"></status>
</kw>
<status status="PASS" endtime="20210218 13:22:22.209" starttime="20210218 13:21:44.764"></status>
</kw>
<msg timestamp="20210218 13:22:22.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:22:22.209" starttime="20210218 13:21:44.764"></status>
</kw>
<msg timestamp="20210218 13:22:22.212" level="INFO">${output} = 2021-02-18 13:21:46 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.4:8032
2021-02-18 13:21:47 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210218 13:22:22.212" starttime="20210218 13:21:44.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:22:22.213" starttime="20210218 13:22:22.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:22:22.214" starttime="20210218 13:22:22.213"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:22:22.214" critical="yes" starttime="20210218 13:21:44.730"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:22:22.216" starttime="20210218 13:20:57.341"></status>
</suite>
<status status="PASS" elapsedtime="202410" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:40.039" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:25:42.453" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:25:42.453" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:25:42.453" starttime="20210218 13:25:40.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:25:42.454" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:25:42.455" starttime="20210218 13:25:42.453"></status>
</kw>
<msg timestamp="20210218 13:25:42.455" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:25:42.455" starttime="20210218 13:25:40.034"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:42.461" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:25:45.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:25:45.130" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:25:45.130" starttime="20210218 13:25:42.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:25:45.131" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:25:45.131" starttime="20210218 13:25:45.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:25:45.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:25:45.132" starttime="20210218 13:25:45.131"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:45.132" starttime="20210218 13:25:42.457"></status>
</kw>
<msg timestamp="20210218 13:25:45.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:25:45.132" starttime="20210218 13:25:42.457"></status>
</kw>
<msg timestamp="20210218 13:25:45.133" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210218 13:25:45.133" starttime="20210218 13:25:42.456"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210218 13:25:45.133" starttime="20210218 13:25:45.133"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:45.134" starttime="20210218 13:25:42.456"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:45.134" starttime="20210218 13:25:42.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:45.139" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:25:47.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:25:47.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:25:47.406" starttime="20210218 13:25:45.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:25:47.407" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:25:47.407" starttime="20210218 13:25:47.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:25:47.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:25:47.408" starttime="20210218 13:25:47.408"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:47.409" starttime="20210218 13:25:45.136"></status>
</kw>
<msg timestamp="20210218 13:25:47.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:25:47.409" starttime="20210218 13:25:45.135"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:47.409" starttime="20210218 13:25:45.135"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:47.409" starttime="20210218 13:25:45.134"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:47.409" starttime="20210218 13:25:45.134"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210218 13:25:47.410" starttime="20210218 13:25:47.410"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:47.414" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:25:49.869" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:25:49.869" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:25...</msg>
<status status="PASS" endtime="20210218 13:25:49.869" starttime="20210218 13:25:47.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:25:49.871" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:25:47.362Z",
  "modificationTime" : "2021-02-18T13:25:47.362Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:25:49.871" starttime="20210218 13:25:49.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:25:49.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:25:49.872" starttime="20210218 13:25:49.871"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:49.872" starttime="20210218 13:25:47.411"></status>
</kw>
<msg timestamp="20210218 13:25:49.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:25:49.872" starttime="20210218 13:25:47.411"></status>
</kw>
<msg timestamp="20210218 13:25:49.872" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:25...</msg>
<status status="PASS" endtime="20210218 13:25:49.873" starttime="20210218 13:25:47.410"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210218 13:25:49.873" starttime="20210218 13:25:49.873"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:25:49.878" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:25:49.878" starttime="20210218 13:25:49.877"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:25:49.879" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:25:49.879" starttime="20210218 13:25:49.878"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:49.879" starttime="20210218 13:25:49.877"></status>
</kw>
<msg timestamp="20210218 13:25:49.879" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:25:49.879" starttime="20210218 13:25:49.876"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:49.879" starttime="20210218 13:25:49.875"></status>
</kw>
<msg timestamp="20210218 13:25:49.880" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:25:49.880" starttime="20210218 13:25:49.874"></status>
</kw>
<msg timestamp="20210218 13:25:49.880" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:25:49.880" starttime="20210218 13:25:49.873"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:49.883" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:25:52.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:25:52.250" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:25:52.250" starttime="20210218 13:25:49.882"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:25:52.251" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:25:52.251" starttime="20210218 13:25:52.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:25:52.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:25:52.252" starttime="20210218 13:25:52.251"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:52.252" starttime="20210218 13:25:49.881"></status>
</kw>
<msg timestamp="20210218 13:25:52.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:25:52.253" starttime="20210218 13:25:49.881"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:52.253" starttime="20210218 13:25:49.880"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:52.257" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:25:57.751" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:25:57.751" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:25:57.751" starttime="20210218 13:25:52.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:25:57.752" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:25:57.752" starttime="20210218 13:25:57.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:25:57.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:25:57.753" starttime="20210218 13:25:57.753"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:57.754" starttime="20210218 13:25:52.254"></status>
</kw>
<msg timestamp="20210218 13:25:57.754" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:25:57.754" starttime="20210218 13:25:52.254"></status>
</kw>
<status status="PASS" endtime="20210218 13:25:57.754" starttime="20210218 13:25:52.253"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:25:57.758" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:02.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:02.504" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:26:02.504" starttime="20210218 13:25:57.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:02.505" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:26:02.505" starttime="20210218 13:26:02.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:02.506" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:02.506" starttime="20210218 13:26:02.505"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:02.506" starttime="20210218 13:25:57.755"></status>
</kw>
<msg timestamp="20210218 13:26:02.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:02.506" starttime="20210218 13:25:57.755"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:02.507" starttime="20210218 13:25:57.754"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:02.511" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:06.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:06.889" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:26:06.889" starttime="20210218 13:26:02.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:06.891" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:26:06.891" starttime="20210218 13:26:06.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:06.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:06.892" starttime="20210218 13:26:06.891"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:06.892" starttime="20210218 13:26:02.508"></status>
</kw>
<msg timestamp="20210218 13:26:06.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:06.892" starttime="20210218 13:26:02.508"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:06.893" starttime="20210218 13:26:02.507"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:26:06.893" critical="yes" starttime="20210218 13:25:40.033"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:26:06.899" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:26:06.899" starttime="20210218 13:26:06.898"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:26:06.899" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:26:06.900" starttime="20210218 13:26:06.899"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:06.900" starttime="20210218 13:26:06.897"></status>
</kw>
<msg timestamp="20210218 13:26:06.900" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:26:06.900" starttime="20210218 13:26:06.897"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:06.900" starttime="20210218 13:26:06.896"></status>
</kw>
<msg timestamp="20210218 13:26:06.900" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:26:06.901" starttime="20210218 13:26:06.895"></status>
</kw>
<msg timestamp="20210218 13:26:06.901" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:26:06.901" starttime="20210218 13:26:06.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:06.904" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:09.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:09.303" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:26:09.303" starttime="20210218 13:26:06.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:09.304" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:26:09.304" starttime="20210218 13:26:09.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:09.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:09.305" starttime="20210218 13:26:09.304"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:09.305" starttime="20210218 13:26:06.902"></status>
</kw>
<msg timestamp="20210218 13:26:09.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:09.305" starttime="20210218 13:26:06.902"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:09.306" starttime="20210218 13:26:06.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:09.309" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:11.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:11.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:26:11.808" starttime="20210218 13:26:09.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:11.809" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:26:11.809" starttime="20210218 13:26:11.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:11.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:11.810" starttime="20210218 13:26:11.810"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:11.810" starttime="20210218 13:26:09.307"></status>
</kw>
<msg timestamp="20210218 13:26:11.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:11.811" starttime="20210218 13:26:09.306"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:11.811" starttime="20210218 13:26:09.306"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:26:11.811" critical="yes" starttime="20210218 13:26:06.894"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210218 13:26:11.813" starttime="20210218 13:25:39.963"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:27:54.524" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:27:54.524" starttime="20210218 13:27:54.523"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:27:54.525" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:27:54.525" starttime="20210218 13:27:54.524"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:54.525" starttime="20210218 13:27:54.523"></status>
</kw>
<msg timestamp="20210218 13:27:54.525" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:27:54.525" starttime="20210218 13:27:54.522"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:27:54.526" starttime="20210218 13:27:54.526"></status>
</kw>
<msg timestamp="20210218 13:27:54.526" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:27:54.526" starttime="20210218 13:27:54.525"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:54.527" starttime="20210218 13:27:54.521"></status>
</kw>
<msg timestamp="20210218 13:27:54.527" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:27:54.527" starttime="20210218 13:27:54.521"></status>
</kw>
<msg timestamp="20210218 13:27:54.527" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:27:54.527" starttime="20210218 13:27:54.520"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:27:54.528" level="INFO">${random} = 50958</msg>
<status status="PASS" endtime="20210218 13:27:54.528" starttime="20210218 13:27:54.527"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:27:54.538" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-50958 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:27:58.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:27:58.417" level="INFO">${output} = 2021-02-18 13:27:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:27:58.417" starttime="20210218 13:27:54.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:27:58.418" level="INFO">2021-02-18 13:27:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-18 13:27:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:27:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:27:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:27:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:27:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-98B5D75643C6-&gt;1498dffb-db9e-411c-8e80-525dff02900a
2021-02-18 13:27:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:27:58 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:27:58.418" starttime="20210218 13:27:58.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:27:58.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:27:58.419" starttime="20210218 13:27:58.418"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:58.419" starttime="20210218 13:27:54.529"></status>
</kw>
<msg timestamp="20210218 13:27:58.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:27:58.419" starttime="20210218 13:27:54.528"></status>
</kw>
<msg timestamp="20210218 13:27:58.420" level="INFO">${result} = 2021-02-18 13:27:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:27:58.420" starttime="20210218 13:27:54.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:27:58.424" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:28:00.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:28:00.410" level="INFO">${output} = 2021-02-18 13:27:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:28:00.410" starttime="20210218 13:27:58.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:28:00.412" level="INFO">2021-02-18 13:27:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:00 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:25 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-18 13:26 ofs://om/volume1/bucket1/ozone-06893
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-18 13:27 ofs://om/volume1/bucket1/ozone-50958
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:26 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:27 ofs://om/volume1/bucket1/wordcount-fHoDGIix.txt
2021-02-18 13:28:00 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:28:00.412" starttime="20210218 13:28:00.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:28:00.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:28:00.412" starttime="20210218 13:28:00.412"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:00.413" starttime="20210218 13:27:58.421"></status>
</kw>
<msg timestamp="20210218 13:28:00.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:28:00.413" starttime="20210218 13:27:58.421"></status>
</kw>
<msg timestamp="20210218 13:28:00.413" level="INFO">${result} = 2021-02-18 13:27:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:00 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:28:00.413" starttime="20210218 13:27:58.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:28:00.414" starttime="20210218 13:28:00.413"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:28:00.414" critical="yes" starttime="20210218 13:27:54.519"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:28:00.415" starttime="20210218 13:27:54.454"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:26:16.630" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:26:16.630" starttime="20210218 13:26:16.629"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:26:16.631" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:26:16.631" starttime="20210218 13:26:16.630"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:16.631" starttime="20210218 13:26:16.629"></status>
</kw>
<msg timestamp="20210218 13:26:16.631" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:26:16.631" starttime="20210218 13:26:16.628"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:16.631" starttime="20210218 13:26:16.627"></status>
</kw>
<msg timestamp="20210218 13:26:16.632" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:26:16.632" starttime="20210218 13:26:16.627"></status>
</kw>
<msg timestamp="20210218 13:26:16.632" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:26:16.632" starttime="20210218 13:26:16.625"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:26:16.632" level="INFO">${random} = 06893</msg>
<status status="PASS" endtime="20210218 13:26:16.632" starttime="20210218 13:26:16.632"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:16.638" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-06893 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:20.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:20.600" level="INFO">${output} = 2021-02-18 13:26:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:26:20.600" starttime="20210218 13:26:16.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:20.605" level="INFO">2021-02-18 13:26:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:18 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-18 13:26:18 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:26:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:26:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:26:19 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:26:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C6C266940CD8-&gt;d122211a-79cf-420b-8c87-945a3c26877d
2021-02-18 13:26:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:26:20 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:26:20.605" starttime="20210218 13:26:20.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:20.606" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:20.606" starttime="20210218 13:26:20.605"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:20.607" starttime="20210218 13:26:16.633"></status>
</kw>
<msg timestamp="20210218 13:26:20.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:20.607" starttime="20210218 13:26:16.633"></status>
</kw>
<msg timestamp="20210218 13:26:20.608" level="INFO">${result} = 2021-02-18 13:26:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:26:20.608" starttime="20210218 13:26:16.633"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:20.613" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:22.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:22.634" level="INFO">${output} = 2021-02-18 13:26:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:26:22.634" starttime="20210218 13:26:20.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:22.635" level="INFO">2021-02-18 13:26:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:22 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:25 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-18 13:26 o3fs://bucket1.volume1.om/ozone-06893
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:26 o3fs://bucket1.volume1.om/user
2021-02-18 13:26:22 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:26:22.636" starttime="20210218 13:26:22.635"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:22.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:22.636" starttime="20210218 13:26:22.636"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:22.637" starttime="20210218 13:26:20.610"></status>
</kw>
<msg timestamp="20210218 13:26:22.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:22.637" starttime="20210218 13:26:20.609"></status>
</kw>
<msg timestamp="20210218 13:26:22.637" level="INFO">${result} = 2021-02-18 13:26:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:22 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:26:22.637" starttime="20210218 13:26:20.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:26:22.638" starttime="20210218 13:26:22.637"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:26:22.638" critical="yes" starttime="20210218 13:26:16.625"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:26:22.640" starttime="20210218 13:26:16.556"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:28:05.265" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:28:05.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:28:05.271" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:05.271" starttime="20210218 13:28:05.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:28:05.272" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:05.272" starttime="20210218 13:28:05.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:28:05.273" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:28:05.273" starttime="20210218 13:28:05.272"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:05.273" starttime="20210218 13:28:05.260"></status>
</kw>
<msg timestamp="20210218 13:28:05.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:28:05.273" starttime="20210218 13:28:05.260"></status>
</kw>
<msg timestamp="20210218 13:28:05.273" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:05.274" starttime="20210218 13:28:05.260"></status>
</kw>
<msg timestamp="20210218 13:28:05.274" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:05.274" starttime="20210218 13:28:05.259"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:28:05.280" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:28:05.280" starttime="20210218 13:28:05.279"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:28:05.281" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:28:05.281" starttime="20210218 13:28:05.280"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:05.281" starttime="20210218 13:28:05.278"></status>
</kw>
<msg timestamp="20210218 13:28:05.281" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:28:05.281" starttime="20210218 13:28:05.277"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:28:05.283" starttime="20210218 13:28:05.282"></status>
</kw>
<msg timestamp="20210218 13:28:05.283" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:28:05.283" starttime="20210218 13:28:05.281"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:05.283" starttime="20210218 13:28:05.277"></status>
</kw>
<msg timestamp="20210218 13:28:05.283" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:28:05.283" starttime="20210218 13:28:05.275"></status>
</kw>
<msg timestamp="20210218 13:28:05.284" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:28:05.284" starttime="20210218 13:28:05.274"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:28:05.289" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:28:54.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:28:54.425" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:28:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28...</msg>
<status status="PASS" endtime="20210218 13:28:54.425" starttime="20210218 13:28:05.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:28:54.426" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:28:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:07 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-18 13:28:07 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:28:07 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:28:07 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:28:07 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:28:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F063D75C4E14-&gt;1498dffb-db9e-411c-8e80-525dff02900a
2021-02-18 13:28:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:28:08 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A48635530476-&gt;d122211a-79cf-420b-8c87-945a3c26877d
2021-02-18 13:28:08 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:28:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-02-18 13:28:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:09 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:28:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:09 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:28:14 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:28:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613654676775_0003
2021-02-18 13:28:14 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:15 INFO  Configuration:2752 - resource-types.xml not found
2021-02-18 13:28:15 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-18 13:28:15 INFO  YarnClientImpl:324 - Submitted application application_1613654676775_0003
2021-02-18 13:28:15 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613654676775_0003/
2021-02-18 13:28:15 INFO  Job:1619 - Running job: job_1613654676775_0003
2021-02-18 13:28:23 INFO  Job:1640 - Job job_1613654676775_0003 running in uber mode : false
2021-02-18 13:28:23 INFO  Job:1647 -  map 0% reduce 0%
2021-02-18 13:28:29 INFO  Job:1647 -  map 33% reduce 0%
2021-02-18 13:28:34 INFO  Job:1647 -  map 67% reduce 0%
2021-02-18 13:28:41 INFO  Job:1647 -  map 100% reduce 0%
2021-02-18 13:28:49 INFO  Job:1647 -  map 100% reduce 100%
2021-02-18 13:28:53 INFO  Job:1658 - Job job_1613654676775_0003 completed successfully
2021-02-18 13:28:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:53 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44320
		Total time spent by all reduces in occupied slots (ms)=30476
		Total time spent by all map tasks (ms)=11080
		Total time spent by all reduce tasks (ms)=7619
		Total vcore-milliseconds taken by all map tasks=11080
		Total vcore-milliseconds taken by all reduce tasks=7619
		Total megabyte-milliseconds taken by all map tasks=45383680
		Total megabyte-milliseconds taken by all reduce tasks=31207424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=692
		CPU time spent (ms)=7570
		Physical memory (bytes) snapshot=1268350976
		Virtual memory (bytes) snapshot=15808663552
		Total committed heap usage (bytes)=1081606144
		Peak Map Physical memory (bytes)=322670592
		Peak Map Virtual memory (bytes)=3949002752
		Peak Reduce Physical memory (bytes)=307691520
		Peak Reduce Virtual memory (bytes)=3968208896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 44.978 seconds
2021-02-18 13:28:53 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-18 13:28:54 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:28:54.426" starttime="20210218 13:28:54.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:28:54.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:28:54.427" starttime="20210218 13:28:54.427"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.428" starttime="20210218 13:28:05.285"></status>
</kw>
<msg timestamp="20210218 13:28:54.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:28:54.428" starttime="20210218 13:28:05.284"></status>
</kw>
<msg timestamp="20210218 13:28:54.429" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:28:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28...</msg>
<status status="PASS" endtime="20210218 13:28:54.429" starttime="20210218 13:28:05.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:28:54.429" starttime="20210218 13:28:54.429"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:28:54.430" critical="yes" starttime="20210218 13:28:05.258"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:28:54.436" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:28:54.444" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:28:54.444" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:54.444" starttime="20210218 13:28:54.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:28:54.446" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:54.446" starttime="20210218 13:28:54.445"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:28:54.446" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:28:54.446" starttime="20210218 13:28:54.446"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.447" starttime="20210218 13:28:54.433"></status>
</kw>
<msg timestamp="20210218 13:28:54.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:28:54.447" starttime="20210218 13:28:54.433"></status>
</kw>
<msg timestamp="20210218 13:28:54.447" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:54.447" starttime="20210218 13:28:54.432"></status>
</kw>
<msg timestamp="20210218 13:28:54.448" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:28:54.448" starttime="20210218 13:28:54.432"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:28:54.448" level="INFO">${random} = SBGo47Ei</msg>
<status status="PASS" endtime="20210218 13:28:54.449" starttime="20210218 13:28:54.448"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:28:54.453" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:28:54.453" starttime="20210218 13:28:54.453"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:28:54.454" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:28:54.454" starttime="20210218 13:28:54.453"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.454" starttime="20210218 13:28:54.452"></status>
</kw>
<msg timestamp="20210218 13:28:54.454" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:28:54.454" starttime="20210218 13:28:54.451"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:28:54.456" starttime="20210218 13:28:54.455"></status>
</kw>
<msg timestamp="20210218 13:28:54.456" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:28:54.456" starttime="20210218 13:28:54.454"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.457" starttime="20210218 13:28:54.451"></status>
</kw>
<msg timestamp="20210218 13:28:54.457" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:28:54.457" starttime="20210218 13:28:54.450"></status>
</kw>
<msg timestamp="20210218 13:28:54.458" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:28:54.458" starttime="20210218 13:28:54.449"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:28:54.462" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:28:54.462" starttime="20210218 13:28:54.461"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:28:54.462" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:28:54.462" starttime="20210218 13:28:54.462"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.463" starttime="20210218 13:28:54.461"></status>
</kw>
<msg timestamp="20210218 13:28:54.463" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:28:54.463" starttime="20210218 13:28:54.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:28:54.465" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210218 13:28:54.465" starttime="20210218 13:28:54.464"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:28:54.465" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210218 13:28:54.465" starttime="20210218 13:28:54.465"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.466" starttime="20210218 13:28:54.464"></status>
</kw>
<msg timestamp="20210218 13:28:54.466" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210218 13:28:54.466" starttime="20210218 13:28:54.463"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.466" starttime="20210218 13:28:54.459"></status>
</kw>
<msg timestamp="20210218 13:28:54.466" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:28:54.466" starttime="20210218 13:28:54.459"></status>
</kw>
<msg timestamp="20210218 13:28:54.467" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:28:54.467" starttime="20210218 13:28:54.458"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:28:54.471" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:28:54.471" starttime="20210218 13:28:54.470"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:28:54.472" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:28:54.472" starttime="20210218 13:28:54.471"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.472" starttime="20210218 13:28:54.470"></status>
</kw>
<msg timestamp="20210218 13:28:54.472" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:28:54.472" starttime="20210218 13:28:54.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:28:54.474" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210218 13:28:54.474" starttime="20210218 13:28:54.473"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:28:54.475" level="INFO">${result} = /wordcount-SBGo47Ei.txt</msg>
<status status="PASS" endtime="20210218 13:28:54.475" starttime="20210218 13:28:54.474"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.475" starttime="20210218 13:28:54.473"></status>
</kw>
<msg timestamp="20210218 13:28:54.475" level="INFO">${path_with_leading} = /wordcount-SBGo47Ei.txt</msg>
<status status="PASS" endtime="20210218 13:28:54.475" starttime="20210218 13:28:54.472"></status>
</kw>
<status status="PASS" endtime="20210218 13:28:54.475" starttime="20210218 13:28:54.468"></status>
</kw>
<msg timestamp="20210218 13:28:54.476" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-SBGo47Ei.txt</msg>
<status status="PASS" endtime="20210218 13:28:54.476" starttime="20210218 13:28:54.468"></status>
</kw>
<msg timestamp="20210218 13:28:54.476" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-SBGo47Ei.txt</msg>
<status status="PASS" endtime="20210218 13:28:54.476" starttime="20210218 13:28:54.467"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:28:54.480" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-SBGo47Ei.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:29:35.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:29:35.493" level="INFO">${output} = 2021-02-18 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:29:35.493" starttime="20210218 13:28:54.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:29:35.495" level="INFO">2021-02-18 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:57 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-18 13:28:57 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:28:57 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:28:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:28:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:28:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4F4BC8E7F17F-&gt;d122211a-79cf-420b-8c87-945a3c26877d
2021-02-18 13:28:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:28:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:28:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9DC908BDACFB-&gt;1498dffb-db9e-411c-8e80-525dff02900a
2021-02-18 13:28:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:29:01 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:29:01 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613654676775_0004
2021-02-18 13:29:01 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:29:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:29:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:29:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:29:01 INFO  Configuration:2752 - resource-types.xml not found
2021-02-18 13:29:01 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-18 13:29:01 INFO  YarnClientImpl:324 - Submitted application application_1613654676775_0004
2021-02-18 13:29:01 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613654676775_0004/
2021-02-18 13:29:01 INFO  Job:1619 - Running job: job_1613654676775_0004
2021-02-18 13:29:09 INFO  Job:1640 - Job job_1613654676775_0004 running in uber mode : false
2021-02-18 13:29:09 INFO  Job:1647 -  map 0% reduce 0%
2021-02-18 13:29:16 INFO  Job:1647 -  map 33% reduce 0%
2021-02-18 13:29:22 INFO  Job:1647 -  map 67% reduce 0%
2021-02-18 13:29:28 INFO  Job:1647 -  map 100% reduce 0%
2021-02-18 13:29:33 INFO  Job:1647 -  map 100% reduce 100%
2021-02-18 13:29:35 INFO  Job:1658 - Job job_1613654676775_0004 completed successfully
2021-02-18 13:29:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:29:35 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080147
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46032
		Total time spent by all reduces in occupied slots (ms)=15996
		Total time spent by all map tasks (ms)=11508
		Total time spent by all reduce tasks (ms)=3999
		Total vcore-milliseconds taken by all map tasks=11508
		Total vcore-milliseconds taken by all reduce tasks=3999
		Total megabyte-milliseconds taken by all map tasks=47136768
		Total megabyte-milliseconds taken by all reduce tasks=16379904
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=625
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1238691840
		Virtual memory (bytes) snapshot=15796858880
		Total committed heap usage (bytes)=1035468800
		Peak Map Physical memory (bytes)=322289664
		Peak Map Virtual memory (bytes)=3951816704
		Peak Reduce Physical memory (bytes)=298459136
		Peak Reduce Virtual memory (bytes)=3970760704
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-18 13:29:35 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:29:35.495" starttime="20210218 13:29:35.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:29:35.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:29:35.496" starttime="20210218 13:29:35.495"></status>
</kw>
<status status="PASS" endtime="20210218 13:29:35.496" starttime="20210218 13:28:54.477"></status>
</kw>
<msg timestamp="20210218 13:29:35.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:29:35.496" starttime="20210218 13:28:54.477"></status>
</kw>
<msg timestamp="20210218 13:29:35.498" level="INFO">${output} = 2021-02-18 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:28:56 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:29:35.498" starttime="20210218 13:28:54.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:29:35.498" starttime="20210218 13:29:35.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:29:35.499" starttime="20210218 13:29:35.498"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:29:35.499" critical="yes" starttime="20210218 13:28:54.431"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:29:35.500" starttime="20210218 13:28:05.193"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:27.493" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:26:27.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:26:27.500" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:26:27.501" starttime="20210218 13:26:27.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:26:27.502" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:26:27.502" starttime="20210218 13:26:27.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:26:27.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:26:27.504" starttime="20210218 13:26:27.502"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:27.505" starttime="20210218 13:26:27.488"></status>
</kw>
<msg timestamp="20210218 13:26:27.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:26:27.505" starttime="20210218 13:26:27.488"></status>
</kw>
<msg timestamp="20210218 13:26:27.505" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:26:27.505" starttime="20210218 13:26:27.488"></status>
</kw>
<msg timestamp="20210218 13:26:27.506" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:26:27.506" starttime="20210218 13:26:27.487"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:26:27.511" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:26:27.511" starttime="20210218 13:26:27.510"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:26:27.511" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:26:27.511" starttime="20210218 13:26:27.511"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:27.512" starttime="20210218 13:26:27.510"></status>
</kw>
<msg timestamp="20210218 13:26:27.512" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:26:27.512" starttime="20210218 13:26:27.509"></status>
</kw>
<status status="PASS" endtime="20210218 13:26:27.512" starttime="20210218 13:26:27.508"></status>
</kw>
<msg timestamp="20210218 13:26:27.512" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:26:27.512" starttime="20210218 13:26:27.507"></status>
</kw>
<msg timestamp="20210218 13:26:27.513" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:26:27.513" starttime="20210218 13:26:27.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:26:27.516" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:27:09.268" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:27:09.268" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:26:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26...</msg>
<status status="PASS" endtime="20210218 13:27:09.268" starttime="20210218 13:26:27.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:27:09.269" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:26:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:29 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-18 13:26:29 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:26:29 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:26:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:26:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:26:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-66F1257DDB8D-&gt;1498dffb-db9e-411c-8e80-525dff02900a
2021-02-18 13:26:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-18 13:26:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3D25606D8821-&gt;d122211a-79cf-420b-8c87-945a3c26877d
2021-02-18 13:26:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-18 13:26:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-02-18 13:26:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:31 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:26:31 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:26:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613654676775_0001
2021-02-18 13:26:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:26:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:32 INFO  Configuration:2752 - resource-types.xml not found
2021-02-18 13:26:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-18 13:26:32 INFO  YarnClientImpl:324 - Submitted application application_1613654676775_0001
2021-02-18 13:26:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613654676775_0001/
2021-02-18 13:26:33 INFO  Job:1619 - Running job: job_1613654676775_0001
2021-02-18 13:26:43 INFO  Job:1640 - Job job_1613654676775_0001 running in uber mode : false
2021-02-18 13:26:43 INFO  Job:1647 -  map 0% reduce 0%
2021-02-18 13:26:50 INFO  Job:1647 -  map 33% reduce 0%
2021-02-18 13:26:56 INFO  Job:1647 -  map 67% reduce 0%
2021-02-18 13:27:02 INFO  Job:1647 -  map 100% reduce 0%
2021-02-18 13:27:08 INFO  Job:1647 -  map 100% reduce 100%
2021-02-18 13:27:08 INFO  Job:1658 - Job job_1613654676775_0001 completed successfully
2021-02-18 13:27:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:08 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017669
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=46248
		Total time spent by all reduces in occupied slots (ms)=16728
		Total time spent by all map tasks (ms)=11562
		Total time spent by all reduce tasks (ms)=4182
		Total vcore-milliseconds taken by all map tasks=11562
		Total vcore-milliseconds taken by all reduce tasks=4182
		Total megabyte-milliseconds taken by all map tasks=47357952
		Total megabyte-milliseconds taken by all reduce tasks=17129472
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=7270
		Physical memory (bytes) snapshot=1349718016
		Virtual memory (bytes) snapshot=15820775424
		Total committed heap usage (bytes)=1148190720
		Peak Map Physical memory (bytes)=389054464
		Peak Map Virtual memory (bytes)=3953754112
		Peak Reduce Physical memory (bytes)=313438208
		Peak Reduce Virtual memory (bytes)=3969097728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.413 seconds
2021-02-18 13:27:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:08 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-18 13:27:08 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:27:09.270" starttime="20210218 13:27:09.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:27:09.270" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:27:09.271" starttime="20210218 13:27:09.270"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.271" starttime="20210218 13:26:27.514"></status>
</kw>
<msg timestamp="20210218 13:27:09.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:27:09.271" starttime="20210218 13:26:27.513"></status>
</kw>
<msg timestamp="20210218 13:27:09.272" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:26:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26:28 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:26...</msg>
<status status="PASS" endtime="20210218 13:27:09.272" starttime="20210218 13:26:27.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:27:09.273" starttime="20210218 13:27:09.272"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:27:09.273" critical="yes" starttime="20210218 13:26:27.486"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:27:09.278" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:27:09.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:27:09.284" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:27:09.285" starttime="20210218 13:27:09.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:27:09.285" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:27:09.286" starttime="20210218 13:27:09.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:27:09.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:27:09.286" starttime="20210218 13:27:09.286"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.287" starttime="20210218 13:27:09.276"></status>
</kw>
<msg timestamp="20210218 13:27:09.287" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:27:09.287" starttime="20210218 13:27:09.275"></status>
</kw>
<msg timestamp="20210218 13:27:09.287" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:27:09.287" starttime="20210218 13:27:09.275"></status>
</kw>
<msg timestamp="20210218 13:27:09.288" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210218 13:27:09.288" starttime="20210218 13:27:09.274"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:27:09.288" level="INFO">${random} = fHoDGIix</msg>
<status status="PASS" endtime="20210218 13:27:09.288" starttime="20210218 13:27:09.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:27:09.293" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:27:09.293" starttime="20210218 13:27:09.292"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:27:09.294" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:27:09.294" starttime="20210218 13:27:09.293"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.294" starttime="20210218 13:27:09.292"></status>
</kw>
<msg timestamp="20210218 13:27:09.294" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:27:09.294" starttime="20210218 13:27:09.291"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.294" starttime="20210218 13:27:09.290"></status>
</kw>
<msg timestamp="20210218 13:27:09.295" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:27:09.295" starttime="20210218 13:27:09.290"></status>
</kw>
<msg timestamp="20210218 13:27:09.295" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:27:09.295" starttime="20210218 13:27:09.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:27:09.299" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:27:09.299" starttime="20210218 13:27:09.298"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:27:09.300" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:27:09.300" starttime="20210218 13:27:09.299"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.300" starttime="20210218 13:27:09.298"></status>
</kw>
<msg timestamp="20210218 13:27:09.300" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:27:09.300" starttime="20210218 13:27:09.297"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.301" starttime="20210218 13:27:09.297"></status>
</kw>
<msg timestamp="20210218 13:27:09.301" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:27:09.301" starttime="20210218 13:27:09.296"></status>
</kw>
<msg timestamp="20210218 13:27:09.301" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:27:09.301" starttime="20210218 13:27:09.295"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:27:09.305" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:27:09.305" starttime="20210218 13:27:09.304"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:27:09.306" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:27:09.306" starttime="20210218 13:27:09.305"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.306" starttime="20210218 13:27:09.304"></status>
</kw>
<msg timestamp="20210218 13:27:09.306" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:27:09.306" starttime="20210218 13:27:09.303"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:09.307" starttime="20210218 13:27:09.303"></status>
</kw>
<msg timestamp="20210218 13:27:09.307" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-fHoDGIix.txt</msg>
<status status="PASS" endtime="20210218 13:27:09.307" starttime="20210218 13:27:09.302"></status>
</kw>
<msg timestamp="20210218 13:27:09.307" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-fHoDGIix.txt</msg>
<status status="PASS" endtime="20210218 13:27:09.307" starttime="20210218 13:27:09.301"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:27:09.311" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-fHoDGIix.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:27:49.655" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:27:49.655" level="INFO">${output} = 2021-02-18 13:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:27:49.656" starttime="20210218 13:27:09.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:27:49.657" level="INFO">2021-02-18 13:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.4:8032
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-18 13:27:11 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-18 13:27:11 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:27:11 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:27:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:27:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-29CD52764BAD-&gt;d122211a-79cf-420b-8c87-945a3c26877d
2021-02-18 13:27:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:27:15 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:27:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-11C80637DDD1-&gt;1498dffb-db9e-411c-8e80-525dff02900a
2021-02-18 13:27:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:27:15 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:27:16 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613654676775_0002
2021-02-18 13:27:16 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:27:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:16 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:16 INFO  Configuration:2752 - resource-types.xml not found
2021-02-18 13:27:16 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-18 13:27:16 INFO  YarnClientImpl:324 - Submitted application application_1613654676775_0002
2021-02-18 13:27:16 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1613654676775_0002/
2021-02-18 13:27:16 INFO  Job:1619 - Running job: job_1613654676775_0002
2021-02-18 13:27:24 INFO  Job:1640 - Job job_1613654676775_0002 running in uber mode : false
2021-02-18 13:27:24 INFO  Job:1647 -  map 0% reduce 0%
2021-02-18 13:27:32 INFO  Job:1647 -  map 33% reduce 0%
2021-02-18 13:27:37 INFO  Job:1647 -  map 67% reduce 0%
2021-02-18 13:27:43 INFO  Job:1647 -  map 100% reduce 0%
2021-02-18 13:27:49 INFO  Job:1647 -  map 100% reduce 100%
2021-02-18 13:27:49 INFO  Job:1658 - Job job_1613654676775_0002 completed successfully
2021-02-18 13:27:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:49 INFO  Job:1665 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45576
		Total time spent by all reduces in occupied slots (ms)=16216
		Total time spent by all map tasks (ms)=11394
		Total time spent by all reduce tasks (ms)=4054
		Total vcore-milliseconds taken by all map tasks=11394
		Total vcore-milliseconds taken by all reduce tasks=4054
		Total megabyte-milliseconds taken by all map tasks=46669824
		Total megabyte-milliseconds taken by all reduce tasks=16605184
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=628
		CPU time spent (ms)=7820
		Physical memory (bytes) snapshot=1274933248
		Virtual memory (bytes) snapshot=15808245760
		Total committed heap usage (bytes)=1066401792
		Peak Map Physical memory (bytes)=326488064
		Peak Map Virtual memory (bytes)=3949957120
		Peak Reduce Physical memory (bytes)=303054848
		Peak Reduce Virtual memory (bytes)=3964940288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-18 13:27:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210218 13:27:49.657" starttime="20210218 13:27:49.656"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:27:49.658" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:27:49.658" starttime="20210218 13:27:49.657"></status>
</kw>
<status status="PASS" endtime="20210218 13:27:49.658" starttime="20210218 13:27:09.308"></status>
</kw>
<msg timestamp="20210218 13:27:49.659" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:27:49.659" starttime="20210218 13:27:09.308"></status>
</kw>
<msg timestamp="20210218 13:27:49.659" level="INFO">${output} = 2021-02-18 13:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-18 13:27:11 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210218 13:27:49.660" starttime="20210218 13:27:09.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:27:49.660" starttime="20210218 13:27:49.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:27:49.661" starttime="20210218 13:27:49.660"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:27:49.661" critical="yes" starttime="20210218 13:27:09.273"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:27:49.663" starttime="20210218 13:26:27.415"></status>
</suite>
<status status="PASS" elapsedtime="216450" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:30:56.740" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:01.393" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:31:01.393" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:31:01.394" starttime="20210218 13:30:56.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:01.395" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:31:01.395" starttime="20210218 13:31:01.394"></status>
</kw>
<msg timestamp="20210218 13:31:01.395" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210218 13:31:01.395" starttime="20210218 13:30:56.735"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:01.401" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:05.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:05.066" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:05.066" starttime="20210218 13:31:01.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:05.067" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:05.067" starttime="20210218 13:31:05.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:05.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:05.068" starttime="20210218 13:31:05.068"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:05.069" starttime="20210218 13:31:01.397"></status>
</kw>
<msg timestamp="20210218 13:31:05.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:05.069" starttime="20210218 13:31:01.397"></status>
</kw>
<msg timestamp="20210218 13:31:05.069" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210218 13:31:05.069" starttime="20210218 13:31:01.397"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210218 13:31:05.070" starttime="20210218 13:31:05.069"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:05.070" starttime="20210218 13:31:01.396"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:05.070" starttime="20210218 13:31:01.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:05.075" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:08.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:08.443" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:08.443" starttime="20210218 13:31:05.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:08.444" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:08.444" starttime="20210218 13:31:08.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:08.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:08.445" starttime="20210218 13:31:08.444"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:08.445" starttime="20210218 13:31:05.072"></status>
</kw>
<msg timestamp="20210218 13:31:08.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:08.445" starttime="20210218 13:31:05.072"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:08.446" starttime="20210218 13:31:05.071"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:08.446" starttime="20210218 13:31:05.071"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:08.446" starttime="20210218 13:31:05.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210218 13:31:08.447" starttime="20210218 13:31:08.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:08.451" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:12.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:12.303" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:31...</msg>
<status status="PASS" endtime="20210218 13:31:12.303" starttime="20210218 13:31:08.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:12.304" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:31:08.313Z",
  "modificationTime" : "2021-02-18T13:31:08.313Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:31:12.304" starttime="20210218 13:31:12.304"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:12.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:12.305" starttime="20210218 13:31:12.305"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:12.306" starttime="20210218 13:31:08.448"></status>
</kw>
<msg timestamp="20210218 13:31:12.306" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:12.306" starttime="20210218 13:31:08.447"></status>
</kw>
<msg timestamp="20210218 13:31:12.306" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:31...</msg>
<status status="PASS" endtime="20210218 13:31:12.306" starttime="20210218 13:31:08.447"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210218 13:31:12.307" starttime="20210218 13:31:12.306"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:31:12.311" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:31:12.311" starttime="20210218 13:31:12.311"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:31:12.312" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:31:12.312" starttime="20210218 13:31:12.312"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:12.313" starttime="20210218 13:31:12.310"></status>
</kw>
<msg timestamp="20210218 13:31:12.313" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:31:12.313" starttime="20210218 13:31:12.310"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:12.313" starttime="20210218 13:31:12.309"></status>
</kw>
<msg timestamp="20210218 13:31:12.313" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:31:12.314" starttime="20210218 13:31:12.308"></status>
</kw>
<msg timestamp="20210218 13:31:12.314" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210218 13:31:12.314" starttime="20210218 13:31:12.307"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:12.318" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:16.153" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:16.153" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:16.153" starttime="20210218 13:31:12.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:16.154" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:16.154" starttime="20210218 13:31:16.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:16.155" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:16.155" starttime="20210218 13:31:16.155"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:16.156" starttime="20210218 13:31:12.315"></status>
</kw>
<msg timestamp="20210218 13:31:16.156" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:16.156" starttime="20210218 13:31:12.315"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:16.156" starttime="20210218 13:31:12.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:16.160" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:23.941" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:23.941" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:23.941" starttime="20210218 13:31:16.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:23.943" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:23.943" starttime="20210218 13:31:23.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:23.944" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:23.944" starttime="20210218 13:31:23.944"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:23.944" starttime="20210218 13:31:16.158"></status>
</kw>
<msg timestamp="20210218 13:31:23.944" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:23.945" starttime="20210218 13:31:16.157"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:23.945" starttime="20210218 13:31:16.156"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:23.948" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:30.189" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:30.190" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:30.190" starttime="20210218 13:31:23.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:30.191" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:30.191" starttime="20210218 13:31:30.190"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:30.192" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:30.192" starttime="20210218 13:31:30.191"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:30.192" starttime="20210218 13:31:23.946"></status>
</kw>
<msg timestamp="20210218 13:31:30.192" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:30.192" starttime="20210218 13:31:23.946"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:30.192" starttime="20210218 13:31:23.945"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:30.197" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:36.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:36.227" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:36.227" starttime="20210218 13:31:30.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:36.228" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:36.228" starttime="20210218 13:31:36.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:36.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:36.229" starttime="20210218 13:31:36.228"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:36.229" starttime="20210218 13:31:30.194"></status>
</kw>
<msg timestamp="20210218 13:31:36.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:36.229" starttime="20210218 13:31:30.194"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:36.230" starttime="20210218 13:31:30.193"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:31:36.230" critical="yes" starttime="20210218 13:30:56.734"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:31:36.236" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:31:36.236" starttime="20210218 13:31:36.235"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:31:36.237" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:31:36.237" starttime="20210218 13:31:36.236"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:36.237" starttime="20210218 13:31:36.235"></status>
</kw>
<msg timestamp="20210218 13:31:36.237" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:31:36.237" starttime="20210218 13:31:36.234"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:36.238" starttime="20210218 13:31:36.233"></status>
</kw>
<msg timestamp="20210218 13:31:36.238" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:31:36.238" starttime="20210218 13:31:36.232"></status>
</kw>
<msg timestamp="20210218 13:31:36.238" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:31:36.238" starttime="20210218 13:31:36.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:36.242" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:39.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:39.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:39.873" starttime="20210218 13:31:36.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:39.875" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:39.875" starttime="20210218 13:31:39.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:39.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:39.876" starttime="20210218 13:31:39.875"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:39.876" starttime="20210218 13:31:36.239"></status>
</kw>
<msg timestamp="20210218 13:31:39.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:39.876" starttime="20210218 13:31:36.239"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:39.877" starttime="20210218 13:31:36.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:39.880" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:43.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:43.533" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:31:43.533" starttime="20210218 13:31:39.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:43.534" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:31:43.535" starttime="20210218 13:31:43.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:43.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:43.535" starttime="20210218 13:31:43.535"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:43.536" starttime="20210218 13:31:39.878"></status>
</kw>
<msg timestamp="20210218 13:31:43.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:43.536" starttime="20210218 13:31:39.877"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:43.536" starttime="20210218 13:31:39.877"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:31:43.536" critical="yes" starttime="20210218 13:31:36.231"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210218 13:31:43.538" starttime="20210218 13:30:56.663"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:33:32.651" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:33:32.651" starttime="20210218 13:33:32.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:33:32.652" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:33:32.652" starttime="20210218 13:33:32.651"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:32.652" starttime="20210218 13:33:32.650"></status>
</kw>
<msg timestamp="20210218 13:33:32.652" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:33:32.652" starttime="20210218 13:33:32.650"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:33:32.654" starttime="20210218 13:33:32.653"></status>
</kw>
<msg timestamp="20210218 13:33:32.654" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:33:32.654" starttime="20210218 13:33:32.653"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:32.654" starttime="20210218 13:33:32.649"></status>
</kw>
<msg timestamp="20210218 13:33:32.654" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:33:32.654" starttime="20210218 13:33:32.648"></status>
</kw>
<msg timestamp="20210218 13:33:32.655" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:33:32.655" starttime="20210218 13:33:32.647"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:33:32.655" level="INFO">${random} = 10671</msg>
<status status="PASS" endtime="20210218 13:33:32.655" starttime="20210218 13:33:32.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:33:32.662" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-10671 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:33:36.441" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:33:36.441" level="INFO">${output} = 2021-02-18 13:33:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:33:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:33:36.441" starttime="20210218 13:33:32.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:33:36.442" level="INFO">2021-02-18 13:33:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:33:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:33:34 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:33:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:33:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DCDC6A47D93-&gt;64d2fb4c-a6d9-4796-9b24-0c993158f67a
2021-02-18 13:33:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210218 13:33:36.442" starttime="20210218 13:33:36.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:33:36.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:33:36.443" starttime="20210218 13:33:36.443"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:36.444" starttime="20210218 13:33:32.657"></status>
</kw>
<msg timestamp="20210218 13:33:36.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:33:36.444" starttime="20210218 13:33:32.657"></status>
</kw>
<msg timestamp="20210218 13:33:36.444" level="INFO">${result} = 2021-02-18 13:33:34 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:33:34 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:33:36.444" starttime="20210218 13:33:32.655"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:33:36.448" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:33:38.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:33:38.492" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:31 ofs://om/volume1/bucket1/ozone-09704
-rw-...</msg>
<status status="PASS" endtime="20210218 13:33:38.492" starttime="20210218 13:33:36.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:33:38.493" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:31 ofs://om/volume1/bucket1/ozone-09704
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:33 ofs://om/volume1/bucket1/ozone-10671
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:32 ofs://om/volume1/bucket1/wordcount-dO2YhOq1.txt</msg>
<status status="PASS" endtime="20210218 13:33:38.493" starttime="20210218 13:33:38.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:33:38.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:33:38.494" starttime="20210218 13:33:38.493"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:38.494" starttime="20210218 13:33:36.445"></status>
</kw>
<msg timestamp="20210218 13:33:38.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:33:38.495" starttime="20210218 13:33:36.445"></status>
</kw>
<msg timestamp="20210218 13:33:38.495" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:31 ofs://om/volume1/bucket1/ozone-09704
-rw-...</msg>
<status status="PASS" endtime="20210218 13:33:38.495" starttime="20210218 13:33:36.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:33:38.496" starttime="20210218 13:33:38.495"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:33:38.496" critical="yes" starttime="20210218 13:33:32.646"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:33:38.497" starttime="20210218 13:33:32.582"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:31:48.387" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:31:48.387" starttime="20210218 13:31:48.386"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:31:48.388" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:31:48.388" starttime="20210218 13:31:48.387"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:48.388" starttime="20210218 13:31:48.386"></status>
</kw>
<msg timestamp="20210218 13:31:48.388" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:31:48.388" starttime="20210218 13:31:48.385"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:48.388" starttime="20210218 13:31:48.384"></status>
</kw>
<msg timestamp="20210218 13:31:48.388" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:31:48.389" starttime="20210218 13:31:48.384"></status>
</kw>
<msg timestamp="20210218 13:31:48.389" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:31:48.389" starttime="20210218 13:31:48.383"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:31:48.389" level="INFO">${random} = 09704</msg>
<status status="PASS" endtime="20210218 13:31:48.389" starttime="20210218 13:31:48.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:48.395" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-09704 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:52.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:52.692" level="INFO">${output} = 2021-02-18 13:31:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:31:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:31:52.692" starttime="20210218 13:31:48.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:52.695" level="INFO">2021-02-18 13:31:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:31:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:31:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:31:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:31:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B4C35C63DFDF-&gt;64d2fb4c-a6d9-4796-9b24-0c993158f67a
2021-02-18 13:31:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210218 13:31:52.695" starttime="20210218 13:31:52.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:52.696" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:52.696" starttime="20210218 13:31:52.695"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:52.696" starttime="20210218 13:31:48.391"></status>
</kw>
<msg timestamp="20210218 13:31:52.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:52.696" starttime="20210218 13:31:48.390"></status>
</kw>
<msg timestamp="20210218 13:31:52.697" level="INFO">${result} = 2021-02-18 13:31:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:31:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210218 13:31:52.697" starttime="20210218 13:31:48.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:52.701" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:55.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:55.089" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:31 o3fs://bucket1.volume1.om/ozone-09704
dr...</msg>
<status status="PASS" endtime="20210218 13:31:55.089" starttime="20210218 13:31:52.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:55.090" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:31 o3fs://bucket1.volume1.om/ozone-09704
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210218 13:31:55.090" starttime="20210218 13:31:55.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:55.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:55.091" starttime="20210218 13:31:55.090"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:55.091" starttime="20210218 13:31:52.698"></status>
</kw>
<msg timestamp="20210218 13:31:55.091" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:55.092" starttime="20210218 13:31:52.698"></status>
</kw>
<msg timestamp="20210218 13:31:55.092" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-18 13:31 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-18 13:31 o3fs://bucket1.volume1.om/ozone-09704
dr...</msg>
<status status="PASS" endtime="20210218 13:31:55.092" starttime="20210218 13:31:52.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:31:55.093" starttime="20210218 13:31:55.092"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:31:55.093" critical="yes" starttime="20210218 13:31:48.382"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210218 13:31:55.094" starttime="20210218 13:31:48.319"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:33:43.310" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:33:43.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:33:43.315" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:33:43.315" starttime="20210218 13:33:43.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:33:43.316" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:33:43.316" starttime="20210218 13:33:43.315"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:33:43.317" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:33:43.317" starttime="20210218 13:33:43.316"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:43.317" starttime="20210218 13:33:43.305"></status>
</kw>
<msg timestamp="20210218 13:33:43.317" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:33:43.317" starttime="20210218 13:33:43.305"></status>
</kw>
<msg timestamp="20210218 13:33:43.317" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:33:43.317" starttime="20210218 13:33:43.304"></status>
</kw>
<msg timestamp="20210218 13:33:43.318" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:33:43.318" starttime="20210218 13:33:43.304"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:33:43.323" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:33:43.323" starttime="20210218 13:33:43.323"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:33:43.324" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:33:43.324" starttime="20210218 13:33:43.323"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:43.324" starttime="20210218 13:33:43.322"></status>
</kw>
<msg timestamp="20210218 13:33:43.324" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:33:43.324" starttime="20210218 13:33:43.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:33:43.325" starttime="20210218 13:33:43.325"></status>
</kw>
<msg timestamp="20210218 13:33:43.326" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:33:43.326" starttime="20210218 13:33:43.324"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:43.326" starttime="20210218 13:33:43.321"></status>
</kw>
<msg timestamp="20210218 13:33:43.326" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:33:43.326" starttime="20210218 13:33:43.319"></status>
</kw>
<msg timestamp="20210218 13:33:43.326" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:33:43.327" starttime="20210218 13:33:43.318"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:33:43.330" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:34:27.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:34:27.097" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:33:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:33:45 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:34:27.097" starttime="20210218 13:33:43.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:34:27.098" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:33:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:33:45 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:33:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:33:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:33:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B56D5A89A650-&gt;ae6f29de-ffb3-4cda-9b5c-c69078e15786
2021-02-18 13:33:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:33:46 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8824C1AF7B22-&gt;64d2fb4c-a6d9-4796-9b24-0c993158f67a
2021-02-18 13:33:46 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:33:47 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:33:47 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:33:47 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:33:50 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:33:50 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655019522_0003
2021-02-18 13:33:50 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:33:50 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:33:50 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:33:50 INFO  YarnClientImpl:329 - Submitted application application_1613655019522_0003
2021-02-18 13:33:50 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655019522_0003/
2021-02-18 13:33:50 INFO  Job:1614 - Running job: job_1613655019522_0003
2021-02-18 13:33:59 INFO  Job:1635 - Job job_1613655019522_0003 running in uber mode : false
2021-02-18 13:33:59 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:34:06 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:34:11 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:34:17 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:34:23 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:34:26 INFO  Job:1653 - Job job_1613655019522_0003 completed successfully
2021-02-18 13:34:26 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1092865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45988
		Total time spent by all reduces in occupied slots (ms)=16344
		Total time spent by all map tasks (ms)=11497
		Total time spent by all reduce tasks (ms)=4086
		Total vcore-milliseconds taken by all map tasks=11497
		Total vcore-milliseconds taken by all reduce tasks=4086
		Total megabyte-milliseconds taken by all map tasks=47091712
		Total megabyte-milliseconds taken by all reduce tasks=16736256
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=979
		CPU time spent (ms)=7880
		Physical memory (bytes) snapshot=1512902656
		Virtual memory (bytes) snapshot=15817445376
		Total committed heap usage (bytes)=1438646272
		Peak Map Physical memory (bytes)=521936896
		Peak Map Virtual memory (bytes)=3953004544
		Peak Reduce Physical memory (bytes)=314511360
		Peak Reduce Virtual memory (bytes)=3971137536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.591 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210218 13:34:27.098" starttime="20210218 13:34:27.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:34:27.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:34:27.099" starttime="20210218 13:34:27.099"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.100" starttime="20210218 13:33:43.328"></status>
</kw>
<msg timestamp="20210218 13:34:27.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:34:27.100" starttime="20210218 13:33:43.327"></status>
</kw>
<msg timestamp="20210218 13:34:27.100" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:33:45 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:33:45 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:34:27.100" starttime="20210218 13:33:43.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:34:27.101" starttime="20210218 13:34:27.101"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:34:27.101" critical="yes" starttime="20210218 13:33:43.303"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:34:27.107" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:34:27.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:34:27.114" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:34:27.114" starttime="20210218 13:34:27.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:34:27.115" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:34:27.115" starttime="20210218 13:34:27.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:34:27.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:34:27.116" starttime="20210218 13:34:27.115"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.116" starttime="20210218 13:34:27.105"></status>
</kw>
<msg timestamp="20210218 13:34:27.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:34:27.116" starttime="20210218 13:34:27.104"></status>
</kw>
<msg timestamp="20210218 13:34:27.116" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:34:27.116" starttime="20210218 13:34:27.104"></status>
</kw>
<msg timestamp="20210218 13:34:27.117" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:34:27.117" starttime="20210218 13:34:27.103"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:34:27.117" level="INFO">${random} = wwMOrKGU</msg>
<status status="PASS" endtime="20210218 13:34:27.117" starttime="20210218 13:34:27.117"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:34:27.122" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:34:27.122" starttime="20210218 13:34:27.121"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:34:27.123" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:34:27.123" starttime="20210218 13:34:27.122"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.123" starttime="20210218 13:34:27.121"></status>
</kw>
<msg timestamp="20210218 13:34:27.123" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:34:27.123" starttime="20210218 13:34:27.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:34:27.124" starttime="20210218 13:34:27.124"></status>
</kw>
<msg timestamp="20210218 13:34:27.124" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210218 13:34:27.124" starttime="20210218 13:34:27.123"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.125" starttime="20210218 13:34:27.120"></status>
</kw>
<msg timestamp="20210218 13:34:27.125" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:34:27.125" starttime="20210218 13:34:27.118"></status>
</kw>
<msg timestamp="20210218 13:34:27.125" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210218 13:34:27.125" starttime="20210218 13:34:27.118"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:34:27.132" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:34:27.132" starttime="20210218 13:34:27.132"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:34:27.133" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:34:27.133" starttime="20210218 13:34:27.133"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.133" starttime="20210218 13:34:27.128"></status>
</kw>
<msg timestamp="20210218 13:34:27.134" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:34:27.134" starttime="20210218 13:34:27.128"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:34:27.135" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210218 13:34:27.136" starttime="20210218 13:34:27.135"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:34:27.136" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210218 13:34:27.136" starttime="20210218 13:34:27.136"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.136" starttime="20210218 13:34:27.134"></status>
</kw>
<msg timestamp="20210218 13:34:27.137" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210218 13:34:27.137" starttime="20210218 13:34:27.134"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.137" starttime="20210218 13:34:27.127"></status>
</kw>
<msg timestamp="20210218 13:34:27.137" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:34:27.137" starttime="20210218 13:34:27.126"></status>
</kw>
<msg timestamp="20210218 13:34:27.137" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210218 13:34:27.137" starttime="20210218 13:34:27.126"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210218 13:34:27.141" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210218 13:34:27.141" starttime="20210218 13:34:27.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:34:27.142" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210218 13:34:27.142" starttime="20210218 13:34:27.141"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.142" starttime="20210218 13:34:27.140"></status>
</kw>
<msg timestamp="20210218 13:34:27.142" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210218 13:34:27.143" starttime="20210218 13:34:27.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:34:27.144" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210218 13:34:27.144" starttime="20210218 13:34:27.144"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:34:27.145" level="INFO">${result} = /wordcount-wwMOrKGU.txt</msg>
<status status="PASS" endtime="20210218 13:34:27.145" starttime="20210218 13:34:27.144"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.145" starttime="20210218 13:34:27.143"></status>
</kw>
<msg timestamp="20210218 13:34:27.145" level="INFO">${path_with_leading} = /wordcount-wwMOrKGU.txt</msg>
<status status="PASS" endtime="20210218 13:34:27.145" starttime="20210218 13:34:27.143"></status>
</kw>
<status status="PASS" endtime="20210218 13:34:27.146" starttime="20210218 13:34:27.139"></status>
</kw>
<msg timestamp="20210218 13:34:27.146" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-wwMOrKGU.txt</msg>
<status status="PASS" endtime="20210218 13:34:27.146" starttime="20210218 13:34:27.138"></status>
</kw>
<msg timestamp="20210218 13:34:27.146" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-wwMOrKGU.txt</msg>
<status status="PASS" endtime="20210218 13:34:27.146" starttime="20210218 13:34:27.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:34:27.150" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-wwMOrKGU.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:35:05.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:35:05.789" level="INFO">${output} = 2021-02-18 13:34:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:34:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210218 13:35:05.789" starttime="20210218 13:34:27.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:35:05.791" level="INFO">2021-02-18 13:34:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:34:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:34:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:34:29 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:34:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:34:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:34:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-828E78E36912-&gt;64d2fb4c-a6d9-4796-9b24-0c993158f67a
2021-02-18 13:34:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:34:30 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:34:31 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:34:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B6FF65AC06BA-&gt;ae6f29de-ffb3-4cda-9b5c-c69078e15786
2021-02-18 13:34:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:34:31 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655019522_0004
2021-02-18 13:34:31 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:34:31 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:34:31 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:34:31 INFO  YarnClientImpl:329 - Submitted application application_1613655019522_0004
2021-02-18 13:34:31 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655019522_0004/
2021-02-18 13:34:31 INFO  Job:1614 - Running job: job_1613655019522_0004
2021-02-18 13:34:40 INFO  Job:1635 - Job job_1613655019522_0004 running in uber mode : false
2021-02-18 13:34:40 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:34:47 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:34:53 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:34:58 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:35:04 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:35:05 INFO  Job:1653 - Job job_1613655019522_0004 completed successfully
2021-02-18 13:35:05 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155531
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45256
		Total time spent by all reduces in occupied slots (ms)=16460
		Total time spent by all map tasks (ms)=11314
		Total time spent by all reduce tasks (ms)=4115
		Total vcore-milliseconds taken by all map tasks=11314
		Total vcore-milliseconds taken by all reduce tasks=4115
		Total megabyte-milliseconds taken by all map tasks=46342144
		Total megabyte-milliseconds taken by all reduce tasks=16855040
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=575
		CPU time spent (ms)=8770
		Physical memory (bytes) snapshot=1293025280
		Virtual memory (bytes) snapshot=15822016512
		Total committed heap usage (bytes)=1185415168
		Peak Map Physical memory (bytes)=384159744
		Peak Map Virtual memory (bytes)=3952267264
		Peak Reduce Physical memory (bytes)=298717184
		Peak Reduce Virtual memory (bytes)=3971674112
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210218 13:35:05.791" starttime="20210218 13:35:05.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:35:05.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:35:05.792" starttime="20210218 13:35:05.791"></status>
</kw>
<status status="PASS" endtime="20210218 13:35:05.792" starttime="20210218 13:34:27.147"></status>
</kw>
<msg timestamp="20210218 13:35:05.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:35:05.792" starttime="20210218 13:34:27.147"></status>
</kw>
<msg timestamp="20210218 13:35:05.793" level="INFO">${output} = 2021-02-18 13:34:28 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:34:29 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210218 13:35:05.793" starttime="20210218 13:34:27.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:35:05.793" starttime="20210218 13:35:05.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:35:05.794" starttime="20210218 13:35:05.794"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:35:05.794" critical="yes" starttime="20210218 13:34:27.102"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:35:05.796" starttime="20210218 13:33:43.232"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:59.883" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:31:59.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:31:59.890" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:31:59.890" starttime="20210218 13:31:59.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:31:59.898" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:31:59.898" starttime="20210218 13:31:59.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:31:59.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:31:59.899" starttime="20210218 13:31:59.898"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:59.900" starttime="20210218 13:31:59.878"></status>
</kw>
<msg timestamp="20210218 13:31:59.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:31:59.900" starttime="20210218 13:31:59.877"></status>
</kw>
<msg timestamp="20210218 13:31:59.900" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:31:59.900" starttime="20210218 13:31:59.877"></status>
</kw>
<msg timestamp="20210218 13:31:59.901" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:31:59.901" starttime="20210218 13:31:59.876"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:31:59.906" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:31:59.906" starttime="20210218 13:31:59.905"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:31:59.907" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:31:59.907" starttime="20210218 13:31:59.906"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:59.907" starttime="20210218 13:31:59.905"></status>
</kw>
<msg timestamp="20210218 13:31:59.907" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:31:59.907" starttime="20210218 13:31:59.904"></status>
</kw>
<status status="PASS" endtime="20210218 13:31:59.908" starttime="20210218 13:31:59.903"></status>
</kw>
<msg timestamp="20210218 13:31:59.908" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:31:59.908" starttime="20210218 13:31:59.902"></status>
</kw>
<msg timestamp="20210218 13:31:59.908" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:31:59.908" starttime="20210218 13:31:59.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:31:59.912" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:32:47.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:32:47.766" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:32:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:32:02 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:32:47.767" starttime="20210218 13:31:59.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:32:47.768" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:32:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:32:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:32:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:32:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:32:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A9D8AC895A6F-&gt;ae6f29de-ffb3-4cda-9b5c-c69078e15786
2021-02-18 13:32:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-18 13:32:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BD1E02BA8845-&gt;64d2fb4c-a6d9-4796-9b24-0c993158f67a
2021-02-18 13:32:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-18 13:32:04 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:32:04 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:32:04 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:32:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655019522_0001
2021-02-18 13:32:05 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:32:05 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:32:05 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:32:05 INFO  YarnClientImpl:329 - Submitted application application_1613655019522_0001
2021-02-18 13:32:05 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655019522_0001/
2021-02-18 13:32:05 INFO  Job:1614 - Running job: job_1613655019522_0001
2021-02-18 13:32:16 INFO  Job:1635 - Job job_1613655019522_0001 running in uber mode : false
2021-02-18 13:32:16 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:32:23 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:32:28 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:32:34 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:32:40 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:32:47 INFO  Job:1653 - Job job_1613655019522_0001 completed successfully
2021-02-18 13:32:47 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093077
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45268
		Total time spent by all reduces in occupied slots (ms)=16548
		Total time spent by all map tasks (ms)=11317
		Total time spent by all reduce tasks (ms)=4137
		Total vcore-milliseconds taken by all map tasks=11317
		Total vcore-milliseconds taken by all reduce tasks=4137
		Total megabyte-milliseconds taken by all map tasks=46354432
		Total megabyte-milliseconds taken by all reduce tasks=16945152
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=652
		CPU time spent (ms)=7600
		Physical memory (bytes) snapshot=1364398080
		Virtual memory (bytes) snapshot=15799656448
		Total committed heap usage (bytes)=1477443584
		Peak Map Physical memory (bytes)=376119296
		Peak Map Virtual memory (bytes)=3949219840
		Peak Reduce Physical memory (bytes)=374857728
		Peak Reduce Virtual memory (bytes)=3953872896
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 43.322 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210218 13:32:47.768" starttime="20210218 13:32:47.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:32:47.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:32:47.769" starttime="20210218 13:32:47.768"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.769" starttime="20210218 13:31:59.909"></status>
</kw>
<msg timestamp="20210218 13:32:47.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:32:47.769" starttime="20210218 13:31:59.909"></status>
</kw>
<msg timestamp="20210218 13:32:47.770" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-18 13:32:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:32:02 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210218 13:32:47.770" starttime="20210218 13:31:59.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:32:47.770" starttime="20210218 13:32:47.770"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:32:47.771" critical="yes" starttime="20210218 13:31:59.876"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:32:47.776" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:32:47.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:32:47.784" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:32:47.785" starttime="20210218 13:32:47.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:32:47.786" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:32:47.786" starttime="20210218 13:32:47.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:32:47.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:32:47.787" starttime="20210218 13:32:47.786"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.787" starttime="20210218 13:32:47.774"></status>
</kw>
<msg timestamp="20210218 13:32:47.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:32:47.787" starttime="20210218 13:32:47.774"></status>
</kw>
<msg timestamp="20210218 13:32:47.787" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:32:47.787" starttime="20210218 13:32:47.773"></status>
</kw>
<msg timestamp="20210218 13:32:47.788" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210218 13:32:47.788" starttime="20210218 13:32:47.772"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:32:47.788" level="INFO">${random} = dO2YhOq1</msg>
<status status="PASS" endtime="20210218 13:32:47.788" starttime="20210218 13:32:47.788"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:32:47.793" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:32:47.793" starttime="20210218 13:32:47.792"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:32:47.794" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:32:47.794" starttime="20210218 13:32:47.793"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.794" starttime="20210218 13:32:47.792"></status>
</kw>
<msg timestamp="20210218 13:32:47.794" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:32:47.794" starttime="20210218 13:32:47.791"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.794" starttime="20210218 13:32:47.790"></status>
</kw>
<msg timestamp="20210218 13:32:47.795" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:32:47.795" starttime="20210218 13:32:47.789"></status>
</kw>
<msg timestamp="20210218 13:32:47.795" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210218 13:32:47.795" starttime="20210218 13:32:47.789"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:32:47.799" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:32:47.799" starttime="20210218 13:32:47.799"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:32:47.800" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:32:47.800" starttime="20210218 13:32:47.800"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.800" starttime="20210218 13:32:47.798"></status>
</kw>
<msg timestamp="20210218 13:32:47.801" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:32:47.801" starttime="20210218 13:32:47.798"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.801" starttime="20210218 13:32:47.797"></status>
</kw>
<msg timestamp="20210218 13:32:47.801" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:32:47.801" starttime="20210218 13:32:47.796"></status>
</kw>
<msg timestamp="20210218 13:32:47.801" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210218 13:32:47.801" starttime="20210218 13:32:47.795"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210218 13:32:47.805" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210218 13:32:47.805" starttime="20210218 13:32:47.805"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:32:47.806" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210218 13:32:47.806" starttime="20210218 13:32:47.805"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.806" starttime="20210218 13:32:47.804"></status>
</kw>
<msg timestamp="20210218 13:32:47.806" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210218 13:32:47.807" starttime="20210218 13:32:47.804"></status>
</kw>
<status status="PASS" endtime="20210218 13:32:47.807" starttime="20210218 13:32:47.803"></status>
</kw>
<msg timestamp="20210218 13:32:47.807" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-dO2YhOq1.txt</msg>
<status status="PASS" endtime="20210218 13:32:47.807" starttime="20210218 13:32:47.802"></status>
</kw>
<msg timestamp="20210218 13:32:47.807" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-dO2YhOq1.txt</msg>
<status status="PASS" endtime="20210218 13:32:47.807" starttime="20210218 13:32:47.801"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:32:47.812" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-dO2YhOq1.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:33:27.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:33:27.827" level="INFO">${output} = 2021-02-18 13:32:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:32:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210218 13:33:27.827" starttime="20210218 13:32:47.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:33:27.828" level="INFO">2021-02-18 13:32:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:32:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-18 13:32:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-18 13:32:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:32:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-18 13:32:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:32:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3208819083DA-&gt;64d2fb4c-a6d9-4796-9b24-0c993158f67a
2021-02-18 13:32:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:32:52 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-18 13:32:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-174A1A7A157D-&gt;ae6f29de-ffb3-4cda-9b5c-c69078e15786
2021-02-18 13:32:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:32:52 INFO  JobSubmitter:202 - number of splits:3
2021-02-18 13:32:52 INFO  JobSubmitter:298 - Submitting tokens for job: job_1613655019522_0002
2021-02-18 13:32:52 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-18 13:32:52 INFO  Configuration:2795 - resource-types.xml not found
2021-02-18 13:32:52 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-18 13:32:52 INFO  YarnClientImpl:329 - Submitted application application_1613655019522_0002
2021-02-18 13:32:52 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1613655019522_0002/
2021-02-18 13:32:52 INFO  Job:1614 - Running job: job_1613655019522_0002
2021-02-18 13:33:01 INFO  Job:1635 - Job job_1613655019522_0002 running in uber mode : false
2021-02-18 13:33:01 INFO  Job:1642 -  map 0% reduce 0%
2021-02-18 13:33:08 INFO  Job:1642 -  map 33% reduce 0%
2021-02-18 13:33:14 INFO  Job:1642 -  map 67% reduce 0%
2021-02-18 13:33:20 INFO  Job:1642 -  map 100% reduce 0%
2021-02-18 13:33:26 INFO  Job:1642 -  map 100% reduce 100%
2021-02-18 13:33:27 INFO  Job:1653 - Job job_1613655019522_0002 completed successfully
2021-02-18 13:33:27 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155615
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43944
		Total time spent by all reduces in occupied slots (ms)=18252
		Total time spent by all map tasks (ms)=10986
		Total time spent by all reduce tasks (ms)=4563
		Total vcore-milliseconds taken by all map tasks=10986
		Total vcore-milliseconds taken by all reduce tasks=4563
		Total megabyte-milliseconds taken by all map tasks=44998656
		Total megabyte-milliseconds taken by all reduce tasks=18690048
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=604
		CPU time spent (ms)=7900
		Physical memory (bytes) snapshot=1230557184
		Virtual memory (bytes) snapshot=15813947392
		Total committed heap usage (bytes)=1061683200
		Peak Map Physical memory (bytes)=309788672
		Peak Map Virtual memory (bytes)=3949895680
		Peak Reduce Physical memory (bytes)=304660480
		Peak Reduce Virtual memory (bytes)=3967672320
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210218 13:33:27.828" starttime="20210218 13:33:27.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:33:27.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:33:27.829" starttime="20210218 13:33:27.828"></status>
</kw>
<status status="PASS" endtime="20210218 13:33:27.829" starttime="20210218 13:32:47.809"></status>
</kw>
<msg timestamp="20210218 13:33:27.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:33:27.830" starttime="20210218 13:32:47.809"></status>
</kw>
<msg timestamp="20210218 13:33:27.830" level="INFO">${output} = 2021-02-18 13:32:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.3:8032
2021-02-18 13:32:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210218 13:33:27.830" starttime="20210218 13:32:47.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210218 13:33:27.831" starttime="20210218 13:33:27.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210218 13:33:27.832" starttime="20210218 13:33:27.831"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210218 13:33:27.832" critical="yes" starttime="20210218 13:32:47.772"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210218 13:33:27.833" starttime="20210218 13:31:59.811"></status>
</suite>
<status status="PASS" elapsedtime="230151" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="649011" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
