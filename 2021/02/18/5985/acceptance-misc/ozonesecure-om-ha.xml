<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210218 13:59:03.128" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:54:27.928" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:54:41.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:54:41.820" level="INFO">${output} = 2021-02-18 13:54:29,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:30,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:41.820" starttime="20210218 13:54:27.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:54:41.824" level="INFO">2021-02-18 13:54:29,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:30,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:54:30,106 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 13:54:30,342 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-18 13:54:30,355 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:31,372 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:32,373 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:32,431 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-18 13:54:32,997 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-18 13:54:33,373 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:33,779 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-18 13:54:34,375 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:35,375 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:36,376 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:36,621 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-18 13:54:36,902 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 13:54:36,902 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5660200A38DA-&gt;460e30a5-e20c-40e5-87b8-608866da4986
2021-02-18 13:54:36,903 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 13:54:37,377 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:38,377 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:39,377 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:40,378 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:41,379 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 13:54:41,433 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=6378.425841, max=6378.425841, mean=6378.425841, stddev=0.0, median=6378.425841, p75=6378.425841, p95=6378.425841, p98=6378.425841, p99=6378.425841, p999=6378.425841, mean_rate=0.13600487417532187, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 13:54:41,433 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-02-18 13:54:41,437 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 13:54:41,437 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 13:54:41.824" starttime="20210218 13:54:41.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:54:41.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:54:41.825" starttime="20210218 13:54:41.824"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:41.825" starttime="20210218 13:54:27.924"></status>
</kw>
<msg timestamp="20210218 13:54:41.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:54:41.827" starttime="20210218 13:54:27.923"></status>
</kw>
<msg timestamp="20210218 13:54:41.828" level="INFO">${result} = 2021-02-18 13:54:29,929 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:30,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:41.828" starttime="20210218 13:54:27.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:54:41.829" starttime="20210218 13:54:41.828"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:54:41.829" critical="yes" starttime="20210218 13:54:27.922"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:54:41.837" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:54:47.282" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:54:47.283" level="INFO">${output} = 2021-02-18 13:54:43,837 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:44,007 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:47.283" starttime="20210218 13:54:41.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:54:47.284" level="INFO">2021-02-18 13:54:43,837 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:44,007 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:54:44,007 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 13:54:44,178 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-18 13:54:44,190 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:45,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:45,380 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-18 13:54:46,009 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-18 13:54:46,200 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:47,201 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 13:54:47,239 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=309.394664, max=309.394664, mean=309.394664, stddev=0.0, median=309.394664, p75=309.394664, p95=309.394664, p98=309.394664, p99=309.394664, p999=309.394664, mean_rate=0.7359290788796892, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 13:54:47,239 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-18 13:54:47,239 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 13:54:47,239 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 13:54:47.284" starttime="20210218 13:54:47.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:54:47.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:54:47.285" starttime="20210218 13:54:47.284"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:47.285" starttime="20210218 13:54:41.833"></status>
</kw>
<msg timestamp="20210218 13:54:47.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:54:47.286" starttime="20210218 13:54:41.833"></status>
</kw>
<msg timestamp="20210218 13:54:47.286" level="INFO">${result} = 2021-02-18 13:54:43,837 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:44,007 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:47.286" starttime="20210218 13:54:41.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:54:47.287" starttime="20210218 13:54:47.286"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:54:47.287" critical="yes" starttime="20210218 13:54:41.830"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:54:47.294" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:54:52.501" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:54:52.501" level="INFO">${output} = 2021-02-18 13:54:49,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:49,457 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:52.501" starttime="20210218 13:54:47.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:54:52.503" level="INFO">2021-02-18 13:54:49,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:49,457 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:54:49,457 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 13:54:49,642 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-18 13:54:49,650 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:50,654 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:50,921 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-18 13:54:51,516 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-18 13:54:51,654 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 13:54:52,454 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=115.038569, max=115.038569, mean=115.038569, stddev=0.0, median=115.038569, p75=115.038569, p95=115.038569, p98=115.038569, p99=115.038569, p999=115.038569, mean_rate=0.9765719338374701, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 13:54:52,455 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-18 13:54:52,458 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 13:54:52,459 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 13:54:52.503" starttime="20210218 13:54:52.502"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:54:52.503" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:54:52.504" starttime="20210218 13:54:52.503"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:52.504" starttime="20210218 13:54:47.291"></status>
</kw>
<msg timestamp="20210218 13:54:52.504" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:54:52.504" starttime="20210218 13:54:47.291"></status>
</kw>
<msg timestamp="20210218 13:54:52.505" level="INFO">${result} = 2021-02-18 13:54:49,314 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:49,457 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:52.505" starttime="20210218 13:54:47.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:54:52.505" starttime="20210218 13:54:52.505"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:54:52.506" critical="yes" starttime="20210218 13:54:47.289"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210218 13:54:52.507" starttime="20210218 13:54:27.900"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:54:52.520" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:54:59.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:54:59.982" level="INFO">${output} = 2021-02-18 13:54:54,433 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:54,623 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:59.982" starttime="20210218 13:54:52.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:54:59.983" level="INFO">2021-02-18 13:54:54,433 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:54,623 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 13:54:54,623 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 13:54:54,841 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-18 13:54:54,860 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:55,865 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:56,008 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-18 13:54:56,865 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:57,405 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-18 13:54:57,866 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 13:54:58,867 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 13:54:59,620 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=54.332548, max=54.332548, mean=54.332548, stddev=0.0, median=54.332548, p75=54.332548, p95=54.332548, p98=54.332548, p99=54.332548, p999=54.332548, mean_rate=0.9852803655528883, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 13:54:59,621 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-02-18 13:54:59,625 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 13:54:59,625 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 13:54:59.983" starttime="20210218 13:54:59.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:54:59.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:54:59.984" starttime="20210218 13:54:59.983"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:59.984" starttime="20210218 13:54:52.517"></status>
</kw>
<msg timestamp="20210218 13:54:59.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:54:59.984" starttime="20210218 13:54:52.517"></status>
</kw>
<msg timestamp="20210218 13:54:59.985" level="INFO">${result} = 2021-02-18 13:54:54,433 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 13:54:54,623 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 13:54:59.985" starttime="20210218 13:54:52.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:54:59.985" starttime="20210218 13:54:59.985"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 13:54:59.986" critical="yes" starttime="20210218 13:54:52.516"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210218 13:54:59.987" starttime="20210218 13:54:52.511"></status>
</suite>
<status status="PASS" endtime="20210218 13:54:59.989" starttime="20210218 13:54:27.864"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:54:22.360" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:54:22.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:54:22.363" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:54:22.363" starttime="20210218 13:54:22.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:54:22.364" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:54:22.364" starttime="20210218 13:54:22.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:54:22.364" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:54:22.365" starttime="20210218 13:54:22.364"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:22.365" starttime="20210218 13:54:22.355"></status>
</kw>
<msg timestamp="20210218 13:54:22.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:54:22.365" starttime="20210218 13:54:22.354"></status>
</kw>
<msg timestamp="20210218 13:54:22.366" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:54:22.366" starttime="20210218 13:54:22.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:54:22.367" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:54:22.367" starttime="20210218 13:54:22.366"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:54:22.374" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:54:22.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:54:22.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:54:22.381" starttime="20210218 13:54:22.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:54:22.382" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:54:22.382" starttime="20210218 13:54:22.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:54:22.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:54:22.383" starttime="20210218 13:54:22.382"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:22.383" starttime="20210218 13:54:22.371"></status>
</kw>
<msg timestamp="20210218 13:54:22.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:54:22.384" starttime="20210218 13:54:22.371"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:22.384" starttime="20210218 13:54:22.367"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:22.384" starttime="20210218 13:54:22.367"></status>
</kw>
<status status="PASS" endtime="20210218 13:54:22.384" starttime="20210218 13:54:22.353"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:54:22.385" critical="yes" starttime="20210218 13:54:22.352"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210218 13:54:22.385" starttime="20210218 13:54:22.291"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210218 13:55:05.582" level="INFO">${random} = 71138</msg>
<status status="PASS" endtime="20210218 13:55:05.583" starttime="20210218 13:55:05.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210218 13:55:05.585" level="INFO">${source} = 71138-source</msg>
<status status="PASS" endtime="20210218 13:55:05.585" starttime="20210218 13:55:05.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210218 13:55:05.586" level="INFO">${target} = 71138-target</msg>
<status status="PASS" endtime="20210218 13:55:05.586" starttime="20210218 13:55:05.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:05.592" level="INFO">Running command 'ozone sh volume create 71138-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:09.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:09.393" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:09.393" starttime="20210218 13:55:05.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:09.394" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:09.394" starttime="20210218 13:55:09.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:09.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:09.395" starttime="20210218 13:55:09.394"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:09.395" starttime="20210218 13:55:05.587"></status>
</kw>
<msg timestamp="20210218 13:55:09.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:09.395" starttime="20210218 13:55:05.587"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:09.396" starttime="20210218 13:55:05.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:09.399" level="INFO">Running command 'ozone sh volume create 71138-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:13.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:13.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:13.258" starttime="20210218 13:55:09.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:13.259" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:13.260" starttime="20210218 13:55:13.259"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:13.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:13.260" starttime="20210218 13:55:13.260"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:13.261" starttime="20210218 13:55:09.397"></status>
</kw>
<msg timestamp="20210218 13:55:13.261" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:13.261" starttime="20210218 13:55:09.396"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:13.261" starttime="20210218 13:55:09.396"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:13.266" level="INFO">Running command 'ozone sh bucket create 71138-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:17.371" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:17.372" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:17.372" starttime="20210218 13:55:13.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:17.373" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:17.373" starttime="20210218 13:55:17.372"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:17.373" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:17.374" starttime="20210218 13:55:17.373"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:17.374" starttime="20210218 13:55:13.263"></status>
</kw>
<msg timestamp="20210218 13:55:17.374" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:17.374" starttime="20210218 13:55:13.263"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:17.375" starttime="20210218 13:55:13.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:17.378" level="INFO">Running command 'ozone sh key put 71138-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:24.516" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:24.516" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:24.516" starttime="20210218 13:55:17.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:24.517" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:24.517" starttime="20210218 13:55:24.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:24.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:24.518" starttime="20210218 13:55:24.517"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:24.518" starttime="20210218 13:55:17.376"></status>
</kw>
<msg timestamp="20210218 13:55:24.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:24.519" starttime="20210218 13:55:17.376"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:24.519" starttime="20210218 13:55:17.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:24.523" level="INFO">Running command 'ozone sh bucket create 71138-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:28.437" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:28.438" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:28.438" starttime="20210218 13:55:24.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:28.439" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:28.439" starttime="20210218 13:55:28.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:28.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:28.439" starttime="20210218 13:55:28.439"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:28.440" starttime="20210218 13:55:24.520"></status>
</kw>
<msg timestamp="20210218 13:55:28.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:28.440" starttime="20210218 13:55:24.520"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:28.440" starttime="20210218 13:55:24.519"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:28.444" level="INFO">Running command 'ozone sh bucket link 71138-source/readable-bucket 71138-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:33.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:33.056" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:33.056" starttime="20210218 13:55:28.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:33.057" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:33.057" starttime="20210218 13:55:33.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:33.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:33.058" starttime="20210218 13:55:33.058"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:33.059" starttime="20210218 13:55:28.441"></status>
</kw>
<msg timestamp="20210218 13:55:33.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:33.059" starttime="20210218 13:55:28.441"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:33.059" starttime="20210218 13:55:28.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:33.064" level="INFO">Running command 'ozone sh bucket link 71138-source/readable-bucket 71138-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:37.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:37.195" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:37.195" starttime="20210218 13:55:33.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:37.196" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:37.197" starttime="20210218 13:55:37.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:37.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:37.197" starttime="20210218 13:55:37.197"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:37.198" starttime="20210218 13:55:33.061"></status>
</kw>
<msg timestamp="20210218 13:55:37.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:37.198" starttime="20210218 13:55:33.061"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:37.198" starttime="20210218 13:55:33.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:37.202" level="INFO">Running command 'ozone sh bucket link 71138-source/unreadable-bucket 71138-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:41.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:41.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:55:41.096" starttime="20210218 13:55:37.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:41.097" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:55:41.097" starttime="20210218 13:55:41.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:41.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:41.097" starttime="20210218 13:55:41.097"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:41.098" starttime="20210218 13:55:37.199"></status>
</kw>
<msg timestamp="20210218 13:55:41.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:41.098" starttime="20210218 13:55:37.199"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:41.098" starttime="20210218 13:55:37.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:41.102" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 71138-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:45.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:45.032" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:45.032" starttime="20210218 13:55:41.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:45.033" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:45.033" starttime="20210218 13:55:45.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:45.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:45.034" starttime="20210218 13:55:45.033"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:45.034" starttime="20210218 13:55:41.099"></status>
</kw>
<msg timestamp="20210218 13:55:45.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:45.035" starttime="20210218 13:55:41.099"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:45.035" starttime="20210218 13:55:41.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:45.046" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 71138-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:49.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:49.085" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:49.085" starttime="20210218 13:55:45.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:49.086" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:49.086" starttime="20210218 13:55:49.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:49.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:49.087" starttime="20210218 13:55:49.086"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:49.087" starttime="20210218 13:55:45.039"></status>
</kw>
<msg timestamp="20210218 13:55:49.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:49.087" starttime="20210218 13:55:45.039"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:49.088" starttime="20210218 13:55:45.035"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:49.092" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 71138-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:52.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:52.918" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:52.918" starttime="20210218 13:55:49.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:52.919" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:52.919" starttime="20210218 13:55:52.918"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:52.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:52.920" starttime="20210218 13:55:52.919"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:52.920" starttime="20210218 13:55:49.089"></status>
</kw>
<msg timestamp="20210218 13:55:52.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:52.921" starttime="20210218 13:55:49.089"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:52.921" starttime="20210218 13:55:49.088"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:52.924" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 71138-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:55:56.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:55:56.896" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:56.896" starttime="20210218 13:55:52.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:55:56.897" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:55:56.898" starttime="20210218 13:55:56.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:55:56.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:55:56.898" starttime="20210218 13:55:56.898"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:56.899" starttime="20210218 13:55:52.922"></status>
</kw>
<msg timestamp="20210218 13:55:56.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:55:56.899" starttime="20210218 13:55:52.921"></status>
</kw>
<status status="PASS" endtime="20210218 13:55:56.899" starttime="20210218 13:55:52.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:55:56.903" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 71138-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:00.523" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:00.523" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:56:00.523" starttime="20210218 13:55:56.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:00.524" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:56:00.524" starttime="20210218 13:56:00.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:00.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:00.525" starttime="20210218 13:56:00.524"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.525" starttime="20210218 13:55:56.900"></status>
</kw>
<msg timestamp="20210218 13:56:00.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:00.526" starttime="20210218 13:55:56.900"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.526" starttime="20210218 13:55:56.899"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.526" starttime="20210218 13:55:13.262"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.526" starttime="20210218 13:55:13.261"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.526" starttime="20210218 13:55:05.582"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:00.533" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:00.536" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:00.536" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:56:00.536" starttime="20210218 13:56:00.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:00.537" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:56:00.537" starttime="20210218 13:56:00.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:00.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:00.538" starttime="20210218 13:56:00.538"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.539" starttime="20210218 13:56:00.530"></status>
</kw>
<msg timestamp="20210218 13:56:00.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:00.539" starttime="20210218 13:56:00.530"></status>
</kw>
<msg timestamp="20210218 13:56:00.539" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:56:00.539" starttime="20210218 13:56:00.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:56:00.541" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:56:00.541" starttime="20210218 13:56:00.539"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:00.545" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:00.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:00.553" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:00.553" starttime="20210218 13:56:00.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:00.554" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:00.554" starttime="20210218 13:56:00.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:00.555" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:00.555" starttime="20210218 13:56:00.554"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.555" starttime="20210218 13:56:00.543"></status>
</kw>
<msg timestamp="20210218 13:56:00.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:00.556" starttime="20210218 13:56:00.542"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.556" starttime="20210218 13:56:00.542"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.556" starttime="20210218 13:56:00.541"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.556" starttime="20210218 13:56:00.528"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:00.556" starttime="20210218 13:56:00.528"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:00.560" level="INFO">Running command 'ozone sh bucket link 71138-source/no-such-bucket 71138-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:04.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:04.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:04.708" starttime="20210218 13:56:00.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:04.709" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:04.709" starttime="20210218 13:56:04.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:04.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:04.710" starttime="20210218 13:56:04.710"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:04.710" starttime="20210218 13:56:00.558"></status>
</kw>
<msg timestamp="20210218 13:56:04.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:04.711" starttime="20210218 13:56:00.557"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:04.711" starttime="20210218 13:56:00.557"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:04.716" level="INFO">Running command 'ozone sh key list 71138-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:08.612" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:56:08.612" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210218 13:56:08.613" starttime="20210218 13:56:04.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:08.614" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210218 13:56:08.614" starttime="20210218 13:56:08.613"></status>
</kw>
<msg timestamp="20210218 13:56:08.615" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210218 13:56:08.615" starttime="20210218 13:56:04.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210218 13:56:08.615" starttime="20210218 13:56:08.615"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:56:08.616" critical="yes" starttime="20210218 13:56:00.527"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:08.623" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:08.626" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:08.626" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:56:08.626" starttime="20210218 13:56:08.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:08.627" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:56:08.627" starttime="20210218 13:56:08.627"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:08.628" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:08.628" starttime="20210218 13:56:08.628"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:08.628" starttime="20210218 13:56:08.620"></status>
</kw>
<msg timestamp="20210218 13:56:08.629" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:08.629" starttime="20210218 13:56:08.620"></status>
</kw>
<msg timestamp="20210218 13:56:08.629" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:56:08.629" starttime="20210218 13:56:08.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:56:08.630" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:56:08.630" starttime="20210218 13:56:08.629"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:08.634" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:08.642" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:08.642" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:08.642" starttime="20210218 13:56:08.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:08.643" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:08.643" starttime="20210218 13:56:08.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:08.644" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:08.644" starttime="20210218 13:56:08.643"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:08.644" starttime="20210218 13:56:08.631"></status>
</kw>
<msg timestamp="20210218 13:56:08.644" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:08.644" starttime="20210218 13:56:08.631"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:08.645" starttime="20210218 13:56:08.630"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:08.645" starttime="20210218 13:56:08.630"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:08.645" starttime="20210218 13:56:08.618"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:08.645" starttime="20210218 13:56:08.618"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:08.650" level="INFO">Running command 'ozone sh bucket link 71138-source/bucket1 71138-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:12.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:12.555" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:12.555" starttime="20210218 13:56:08.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:12.556" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:12.556" starttime="20210218 13:56:12.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:12.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:12.558" starttime="20210218 13:56:12.557"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:12.558" starttime="20210218 13:56:08.646"></status>
</kw>
<msg timestamp="20210218 13:56:12.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:12.558" starttime="20210218 13:56:08.646"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:12.558" starttime="20210218 13:56:08.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:12.562" level="INFO">Running command 'ozone sh bucket create 71138-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:16.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:16.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:16.486" starttime="20210218 13:56:12.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:16.487" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:16.487" starttime="20210218 13:56:16.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:16.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:16.488" starttime="20210218 13:56:16.488"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:16.488" starttime="20210218 13:56:12.559"></status>
</kw>
<msg timestamp="20210218 13:56:16.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:16.489" starttime="20210218 13:56:12.559"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:16.489" starttime="20210218 13:56:12.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:16.493" level="INFO">Running command 'ozone sh key put 71138-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:23.728" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:23.728" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:23.728" starttime="20210218 13:56:16.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:23.737" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:23.737" starttime="20210218 13:56:23.730"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:23.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:23.738" starttime="20210218 13:56:23.737"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:23.738" starttime="20210218 13:56:16.490"></status>
</kw>
<msg timestamp="20210218 13:56:23.738" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:23.739" starttime="20210218 13:56:16.490"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:23.739" starttime="20210218 13:56:16.489"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210218 13:56:23.741" level="INFO">${postfix} = 88140</msg>
<status status="PASS" endtime="20210218 13:56:23.741" starttime="20210218 13:56:23.741"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210218 13:56:23.742" level="INFO">${tmpfile} = /tmp/tempkey-88140</msg>
<status status="PASS" endtime="20210218 13:56:23.742" starttime="20210218 13:56:23.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:23.748" level="INFO">Running command 'ozone sh key get 71138-target/link1/key1 /tmp/tempkey-88140 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:30.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:30.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:30.149" starttime="20210218 13:56:23.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.151" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:30.151" starttime="20210218 13:56:30.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:30.153" starttime="20210218 13:56:30.151"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.153" starttime="20210218 13:56:23.743"></status>
</kw>
<msg timestamp="20210218 13:56:30.153" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:30.153" starttime="20210218 13:56:23.743"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.153" starttime="20210218 13:56:23.742"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210218 13:56:30.156" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-88140 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:30.161" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210218 13:56:30.161" starttime="20210218 13:56:30.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:30.166" level="INFO">Running command 'rm -f /tmp/tempkey-88140 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:30.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:30.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:30.169" starttime="20210218 13:56:30.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.170" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:30.170" starttime="20210218 13:56:30.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:30.171" starttime="20210218 13:56:30.170"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.171" starttime="20210218 13:56:30.163"></status>
</kw>
<msg timestamp="20210218 13:56:30.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:30.171" starttime="20210218 13:56:30.162"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.171" starttime="20210218 13:56:30.161"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:56:30.172" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210218 13:56:30.172" starttime="20210218 13:56:30.172"></status>
</kw>
<msg timestamp="20210218 13:56:30.173" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210218 13:56:30.173" starttime="20210218 13:56:23.740"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:56:30.173" starttime="20210218 13:56:30.173"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.174" starttime="20210218 13:56:23.739"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:56:30.174" critical="yes" starttime="20210218 13:56:08.616"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:30.181" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:30.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:30.184" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:56:30.184" starttime="20210218 13:56:30.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.185" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:56:30.185" starttime="20210218 13:56:30.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:30.186" starttime="20210218 13:56:30.185"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.186" starttime="20210218 13:56:30.179"></status>
</kw>
<msg timestamp="20210218 13:56:30.186" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:30.187" starttime="20210218 13:56:30.178"></status>
</kw>
<msg timestamp="20210218 13:56:30.187" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:56:30.187" starttime="20210218 13:56:30.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:56:30.188" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:56:30.188" starttime="20210218 13:56:30.187"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:30.192" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:30.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:30.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:30.200" starttime="20210218 13:56:30.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.201" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:30.201" starttime="20210218 13:56:30.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:30.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:30.202" starttime="20210218 13:56:30.202"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.202" starttime="20210218 13:56:30.190"></status>
</kw>
<msg timestamp="20210218 13:56:30.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:30.203" starttime="20210218 13:56:30.189"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.203" starttime="20210218 13:56:30.188"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.203" starttime="20210218 13:56:30.188"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.203" starttime="20210218 13:56:30.177"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:30.203" starttime="20210218 13:56:30.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:30.208" level="INFO">Running command 'ozone sh key put 71138-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:36.837" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:36.838" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:36.838" starttime="20210218 13:56:30.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:36.839" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:36.839" starttime="20210218 13:56:36.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:36.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:36.840" starttime="20210218 13:56:36.839"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:36.840" starttime="20210218 13:56:30.205"></status>
</kw>
<msg timestamp="20210218 13:56:36.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:36.840" starttime="20210218 13:56:30.204"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:36.841" starttime="20210218 13:56:30.203"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210218 13:56:36.843" level="INFO">${postfix} = 75606</msg>
<status status="PASS" endtime="20210218 13:56:36.843" starttime="20210218 13:56:36.842"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210218 13:56:36.843" level="INFO">${tmpfile} = /tmp/tempkey-75606</msg>
<status status="PASS" endtime="20210218 13:56:36.843" starttime="20210218 13:56:36.843"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:36.847" level="INFO">Running command 'ozone sh key get 71138-source/bucket1/key2 /tmp/tempkey-75606 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:43.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:43.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:43.073" starttime="20210218 13:56:36.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.074" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:43.074" starttime="20210218 13:56:43.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:43.075" starttime="20210218 13:56:43.074"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.075" starttime="20210218 13:56:36.844"></status>
</kw>
<msg timestamp="20210218 13:56:43.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:43.075" starttime="20210218 13:56:36.844"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.076" starttime="20210218 13:56:36.843"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210218 13:56:43.078" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-75606 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:43.081" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210218 13:56:43.081" starttime="20210218 13:56:43.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:43.086" level="INFO">Running command 'rm -f /tmp/tempkey-75606 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:43.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:43.100" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:43.100" starttime="20210218 13:56:43.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.102" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:43.102" starttime="20210218 13:56:43.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.102" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:43.103" starttime="20210218 13:56:43.102"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.106" starttime="20210218 13:56:43.083"></status>
</kw>
<msg timestamp="20210218 13:56:43.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:43.106" starttime="20210218 13:56:43.082"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.106" starttime="20210218 13:56:43.081"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:56:43.107" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210218 13:56:43.107" starttime="20210218 13:56:43.106"></status>
</kw>
<msg timestamp="20210218 13:56:43.107" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210218 13:56:43.107" starttime="20210218 13:56:36.841"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:56:43.108" starttime="20210218 13:56:43.108"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.108" starttime="20210218 13:56:36.841"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:56:43.108" critical="yes" starttime="20210218 13:56:30.175"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:43.115" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:43.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:43.118" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:56:43.118" starttime="20210218 13:56:43.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.119" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:56:43.119" starttime="20210218 13:56:43.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:43.120" starttime="20210218 13:56:43.120"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.120" starttime="20210218 13:56:43.112"></status>
</kw>
<msg timestamp="20210218 13:56:43.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:43.121" starttime="20210218 13:56:43.112"></status>
</kw>
<msg timestamp="20210218 13:56:43.121" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:56:43.121" starttime="20210218 13:56:43.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:56:43.122" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:56:43.122" starttime="20210218 13:56:43.121"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:43.126" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:43.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:43.133" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:43.133" starttime="20210218 13:56:43.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.134" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:43.134" starttime="20210218 13:56:43.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:43.135" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:43.135" starttime="20210218 13:56:43.134"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.135" starttime="20210218 13:56:43.123"></status>
</kw>
<msg timestamp="20210218 13:56:43.136" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:43.136" starttime="20210218 13:56:43.123"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.136" starttime="20210218 13:56:43.122"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.136" starttime="20210218 13:56:43.122"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.136" starttime="20210218 13:56:43.111"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:43.136" starttime="20210218 13:56:43.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:43.140" level="INFO">Running command 'ozone sh key list 71138-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:47.263" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:47.263" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210218 13:56:47.263" starttime="20210218 13:56:43.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:47.265" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210218 13:56:47.265" starttime="20210218 13:56:47.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:47.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:47.266" starttime="20210218 13:56:47.265"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:47.267" starttime="20210218 13:56:43.138"></status>
</kw>
<msg timestamp="20210218 13:56:47.267" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:47.267" starttime="20210218 13:56:43.137"></status>
</kw>
<msg timestamp="20210218 13:56:47.267" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210218 13:56:47.267" starttime="20210218 13:56:43.137"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:47.272" level="INFO">Running command 'ozone sh key list 71138-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:51.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:51.432" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210218 13:56:51.432" starttime="20210218 13:56:47.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:51.434" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210218 13:56:51.434" starttime="20210218 13:56:51.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:51.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:51.435" starttime="20210218 13:56:51.434"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.435" starttime="20210218 13:56:47.269"></status>
</kw>
<msg timestamp="20210218 13:56:51.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:51.436" starttime="20210218 13:56:47.269"></status>
</kw>
<msg timestamp="20210218 13:56:51.436" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210218 13:56:51.436" starttime="20210218 13:56:47.268"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:56:51.437" starttime="20210218 13:56:51.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:56:51.437" starttime="20210218 13:56:51.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210218 13:56:51.438" starttime="20210218 13:56:51.437"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:56:51.438" critical="yes" starttime="20210218 13:56:43.109"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:51.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:51.448" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:51.448" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:56:51.448" starttime="20210218 13:56:51.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:51.449" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:56:51.449" starttime="20210218 13:56:51.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:51.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:51.450" starttime="20210218 13:56:51.450"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.451" starttime="20210218 13:56:51.442"></status>
</kw>
<msg timestamp="20210218 13:56:51.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:51.451" starttime="20210218 13:56:51.442"></status>
</kw>
<msg timestamp="20210218 13:56:51.451" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:56:51.451" starttime="20210218 13:56:51.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:56:51.452" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:56:51.452" starttime="20210218 13:56:51.451"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:51.457" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:51.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:51.465" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:51.465" starttime="20210218 13:56:51.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:51.466" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:51.466" starttime="20210218 13:56:51.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:51.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:51.467" starttime="20210218 13:56:51.466"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.467" starttime="20210218 13:56:51.454"></status>
</kw>
<msg timestamp="20210218 13:56:51.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:51.468" starttime="20210218 13:56:51.453"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.468" starttime="20210218 13:56:51.453"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.468" starttime="20210218 13:56:51.452"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.468" starttime="20210218 13:56:51.441"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:51.468" starttime="20210218 13:56:51.440"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:51.472" level="INFO">Running command 'ozone sh key delete 71138-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:56:55.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:56:55.896" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:56:55.896" starttime="20210218 13:56:51.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:56:55.897" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:56:55.898" starttime="20210218 13:56:55.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:56:55.898" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:56:55.898" starttime="20210218 13:56:55.898"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:55.899" starttime="20210218 13:56:51.469"></status>
</kw>
<msg timestamp="20210218 13:56:55.899" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:56:55.899" starttime="20210218 13:56:51.469"></status>
</kw>
<status status="PASS" endtime="20210218 13:56:55.899" starttime="20210218 13:56:51.468"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:56:55.903" level="INFO">Running command 'ozone sh key list 71138-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:00.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:00.364" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210218 13:57:00.364" starttime="20210218 13:56:55.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:00.366" level="INFO">key1</msg>
<status status="PASS" endtime="20210218 13:57:00.366" starttime="20210218 13:57:00.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:00.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:00.367" starttime="20210218 13:57:00.366"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.367" starttime="20210218 13:56:55.901"></status>
</kw>
<msg timestamp="20210218 13:57:00.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:00.367" starttime="20210218 13:56:55.900"></status>
</kw>
<msg timestamp="20210218 13:57:00.367" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210218 13:57:00.367" starttime="20210218 13:56:55.899"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:00.368" starttime="20210218 13:57:00.368"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:00.368" critical="yes" starttime="20210218 13:56:51.439"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:00.375" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:00.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:00.378" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:00.378" starttime="20210218 13:57:00.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:00.381" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:00.381" starttime="20210218 13:57:00.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:00.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:00.387" starttime="20210218 13:57:00.381"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.387" starttime="20210218 13:57:00.373"></status>
</kw>
<msg timestamp="20210218 13:57:00.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:00.387" starttime="20210218 13:57:00.372"></status>
</kw>
<msg timestamp="20210218 13:57:00.387" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:00.388" starttime="20210218 13:57:00.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:00.388" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:00.388" starttime="20210218 13:57:00.388"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:00.395" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:00.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:00.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:00.416" starttime="20210218 13:57:00.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:00.417" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:00.417" starttime="20210218 13:57:00.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:00.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:00.418" starttime="20210218 13:57:00.418"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.419" starttime="20210218 13:57:00.392"></status>
</kw>
<msg timestamp="20210218 13:57:00.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:00.419" starttime="20210218 13:57:00.392"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.419" starttime="20210218 13:57:00.390"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.419" starttime="20210218 13:57:00.390"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.420" starttime="20210218 13:57:00.371"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:00.420" starttime="20210218 13:57:00.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:00.425" level="INFO">Running command 'ozone sh bucket list 71138-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:04.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:04.891" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210218 13:57:04.891" starttime="20210218 13:57:00.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:04.892" level="INFO">{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:56:04.571Z",
  "modificationTime" : "2021-02-18T13:56:04.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:40.974Z",
  "modificationTime" : "2021-02-18T13:56:00.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:56:12.407Z",
  "modificationTime" : "2021-02-18T13:56:12.407Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:32.951Z",
  "modificationTime" : "2021-02-18T13:55:56.790Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:37.022Z",
  "modificationTime" : "2021-02-18T13:55:37.022Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:57:04.892" starttime="20210218 13:57:04.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:04.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:04.893" starttime="20210218 13:57:04.892"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.893" starttime="20210218 13:57:00.421"></status>
</kw>
<msg timestamp="20210218 13:57:04.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:04.893" starttime="20210218 13:57:00.421"></status>
</kw>
<msg timestamp="20210218 13:57:04.894" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210218 13:57:04.894" starttime="20210218 13:57:00.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:04.895" starttime="20210218 13:57:04.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:04.895" starttime="20210218 13:57:04.895"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:04.896" critical="yes" starttime="20210218 13:57:00.370"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:04.902" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:04.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:04.905" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:04.905" starttime="20210218 13:57:04.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:04.906" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:04.907" starttime="20210218 13:57:04.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:04.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:04.907" starttime="20210218 13:57:04.907"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.908" starttime="20210218 13:57:04.900"></status>
</kw>
<msg timestamp="20210218 13:57:04.908" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:04.908" starttime="20210218 13:57:04.899"></status>
</kw>
<msg timestamp="20210218 13:57:04.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:04.908" starttime="20210218 13:57:04.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:04.909" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:04.909" starttime="20210218 13:57:04.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:04.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:04.962" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:04.962" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:04.962" starttime="20210218 13:57:04.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:04.964" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:04.964" starttime="20210218 13:57:04.963"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:04.965" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:04.965" starttime="20210218 13:57:04.964"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.965" starttime="20210218 13:57:04.911"></status>
</kw>
<msg timestamp="20210218 13:57:04.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:04.966" starttime="20210218 13:57:04.910"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.966" starttime="20210218 13:57:04.910"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.966" starttime="20210218 13:57:04.909"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.966" starttime="20210218 13:57:04.898"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:04.966" starttime="20210218 13:57:04.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:04.971" level="INFO">Running command 'ozone sh bucket info 71138-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:09.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:09.457" level="INFO">${output} = 71138-source bucket1</msg>
<status status="PASS" endtime="20210218 13:57:09.457" starttime="20210218 13:57:04.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:09.458" level="INFO">71138-source bucket1</msg>
<status status="PASS" endtime="20210218 13:57:09.459" starttime="20210218 13:57:09.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:09.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:09.460" starttime="20210218 13:57:09.459"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.460" starttime="20210218 13:57:04.968"></status>
</kw>
<msg timestamp="20210218 13:57:09.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:09.461" starttime="20210218 13:57:04.967"></status>
</kw>
<msg timestamp="20210218 13:57:09.461" level="INFO">${result} = 71138-source bucket1</msg>
<status status="PASS" endtime="20210218 13:57:09.461" starttime="20210218 13:57:04.967"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:09.462" starttime="20210218 13:57:09.461"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:09.462" critical="yes" starttime="20210218 13:57:04.897"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:09.472" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:09.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:09.473" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:09.473" starttime="20210218 13:57:09.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:09.474" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:09.475" starttime="20210218 13:57:09.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:09.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:09.476" starttime="20210218 13:57:09.475"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.476" starttime="20210218 13:57:09.467"></status>
</kw>
<msg timestamp="20210218 13:57:09.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:09.477" starttime="20210218 13:57:09.467"></status>
</kw>
<msg timestamp="20210218 13:57:09.477" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:09.477" starttime="20210218 13:57:09.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:09.478" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:09.478" starttime="20210218 13:57:09.477"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:09.483" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:09.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:09.491" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:09.491" starttime="20210218 13:57:09.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:09.492" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:09.492" starttime="20210218 13:57:09.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:09.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:09.493" starttime="20210218 13:57:09.492"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.493" starttime="20210218 13:57:09.480"></status>
</kw>
<msg timestamp="20210218 13:57:09.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:09.493" starttime="20210218 13:57:09.480"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.493" starttime="20210218 13:57:09.479"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.493" starttime="20210218 13:57:09.478"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.494" starttime="20210218 13:57:09.466"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:09.494" starttime="20210218 13:57:09.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:09.498" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 71138-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:13.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:13.451" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:57:13.451" starttime="20210218 13:57:09.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:13.452" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:57:13.452" starttime="20210218 13:57:13.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:13.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:13.453" starttime="20210218 13:57:13.452"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:13.453" starttime="20210218 13:57:09.495"></status>
</kw>
<msg timestamp="20210218 13:57:13.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:13.454" starttime="20210218 13:57:09.495"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:13.454" starttime="20210218 13:57:09.494"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:13.459" level="INFO">Running command 'ozone sh bucket getacl 71138-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:17.498" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:17.498" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210218 13:57:17.498" starttime="20210218 13:57:13.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:17.500" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210218 13:57:17.500" starttime="20210218 13:57:17.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:17.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:17.501" starttime="20210218 13:57:17.500"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:17.501" starttime="20210218 13:57:13.456"></status>
</kw>
<msg timestamp="20210218 13:57:17.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:17.501" starttime="20210218 13:57:13.456"></status>
</kw>
<msg timestamp="20210218 13:57:17.502" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210218 13:57:17.502" starttime="20210218 13:57:13.455"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:17.502" starttime="20210218 13:57:17.502"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:17.503" starttime="20210218 13:57:13.454"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:17.509" level="INFO">Running command 'ozone sh bucket getacl 71138-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:21.676" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:21.676" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:21.676" starttime="20210218 13:57:17.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:21.677" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:21.677" starttime="20210218 13:57:21.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:21.678" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:21.678" starttime="20210218 13:57:21.678"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:21.679" starttime="20210218 13:57:17.505"></status>
</kw>
<msg timestamp="20210218 13:57:21.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:21.679" starttime="20210218 13:57:17.505"></status>
</kw>
<msg timestamp="20210218 13:57:21.679" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210218 13:57:21.679" starttime="20210218 13:57:17.504"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:21.680" starttime="20210218 13:57:21.679"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:21.680" starttime="20210218 13:57:17.503"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:21.684" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 71138-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:25.617" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:25.617" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:57:25.617" starttime="20210218 13:57:21.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:25.618" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210218 13:57:25.618" starttime="20210218 13:57:25.617"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:25.619" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:25.619" starttime="20210218 13:57:25.618"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:25.619" starttime="20210218 13:57:21.681"></status>
</kw>
<msg timestamp="20210218 13:57:25.619" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:25.620" starttime="20210218 13:57:21.681"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:25.620" starttime="20210218 13:57:21.680"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:25.625" level="INFO">Running command 'ozone sh bucket getacl 71138-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:29.882" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:29.883" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:29.883" starttime="20210218 13:57:25.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:29.884" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:29.884" starttime="20210218 13:57:29.883"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:29.885" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:29.885" starttime="20210218 13:57:29.884"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:29.886" starttime="20210218 13:57:25.622"></status>
</kw>
<msg timestamp="20210218 13:57:29.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:29.886" starttime="20210218 13:57:25.622"></status>
</kw>
<msg timestamp="20210218 13:57:29.886" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210218 13:57:29.886" starttime="20210218 13:57:25.621"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:29.887" starttime="20210218 13:57:29.887"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:29.887" starttime="20210218 13:57:25.620"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:29.893" level="INFO">Running command 'ozone sh bucket getacl 71138-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:34.124" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:34.124" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210218 13:57:34.124" starttime="20210218 13:57:29.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:34.126" level="INFO">READ</msg>
<status status="PASS" endtime="20210218 13:57:34.126" starttime="20210218 13:57:34.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:34.126" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:34.127" starttime="20210218 13:57:34.126"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.127" starttime="20210218 13:57:29.890"></status>
</kw>
<msg timestamp="20210218 13:57:34.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:34.127" starttime="20210218 13:57:29.889"></status>
</kw>
<msg timestamp="20210218 13:57:34.127" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210218 13:57:34.127" starttime="20210218 13:57:29.888"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:34.128" starttime="20210218 13:57:34.128"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.128" starttime="20210218 13:57:29.887"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:34.129" critical="yes" starttime="20210218 13:57:09.463"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:34.135" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:34.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:34.138" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:34.138" starttime="20210218 13:57:34.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:34.139" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:34.139" starttime="20210218 13:57:34.138"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:34.140" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:34.140" starttime="20210218 13:57:34.139"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.140" starttime="20210218 13:57:34.133"></status>
</kw>
<msg timestamp="20210218 13:57:34.140" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:34.140" starttime="20210218 13:57:34.132"></status>
</kw>
<msg timestamp="20210218 13:57:34.141" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:34.141" starttime="20210218 13:57:34.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:34.141" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:34.142" starttime="20210218 13:57:34.141"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:34.146" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:34.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:34.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:34.173" starttime="20210218 13:57:34.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:34.174" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:34.174" starttime="20210218 13:57:34.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:34.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:34.175" starttime="20210218 13:57:34.174"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.175" starttime="20210218 13:57:34.144"></status>
</kw>
<msg timestamp="20210218 13:57:34.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:34.176" starttime="20210218 13:57:34.143"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.176" starttime="20210218 13:57:34.142"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.176" starttime="20210218 13:57:34.142"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.177" starttime="20210218 13:57:34.131"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:34.177" starttime="20210218 13:57:34.131"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:34.184" level="INFO">Running command 'ozone sh bucket link 71138-source/bucket2 71138-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:37.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:37.812" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:37.812" starttime="20210218 13:57:34.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:37.813" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:37.814" starttime="20210218 13:57:37.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:37.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:37.814" starttime="20210218 13:57:37.814"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:37.815" starttime="20210218 13:57:34.179"></status>
</kw>
<msg timestamp="20210218 13:57:37.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:37.815" starttime="20210218 13:57:34.178"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:37.815" starttime="20210218 13:57:34.177"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:37.818" level="INFO">Running command 'ozone sh bucket create 71138-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:41.382" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:57:41.383" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210218 13:57:41.383" starttime="20210218 13:57:37.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:41.385" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210218 13:57:41.385" starttime="20210218 13:57:41.384"></status>
</kw>
<msg timestamp="20210218 13:57:41.385" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210218 13:57:41.385" starttime="20210218 13:57:37.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:41.386" starttime="20210218 13:57:41.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:41.390" level="INFO">Running command 'ozone sh bucket create 71138-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:45.149" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:45.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:45.150" starttime="20210218 13:57:41.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:45.151" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:45.151" starttime="20210218 13:57:45.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:45.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:45.152" starttime="20210218 13:57:45.151"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:45.152" starttime="20210218 13:57:41.387"></status>
</kw>
<msg timestamp="20210218 13:57:45.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:45.153" starttime="20210218 13:57:41.387"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:45.153" starttime="20210218 13:57:41.386"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:45.156" level="INFO">Running command 'ozone sh bucket link 71138-source/bucket1 71138-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:49.325" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:57:49.325" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210218 13:57:49.325" starttime="20210218 13:57:45.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.326" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210218 13:57:49.326" starttime="20210218 13:57:49.325"></status>
</kw>
<msg timestamp="20210218 13:57:49.327" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210218 13:57:49.327" starttime="20210218 13:57:45.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:49.327" starttime="20210218 13:57:49.327"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:49.328" critical="yes" starttime="20210218 13:57:34.130"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:49.334" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:49.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:49.337" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:49.337" starttime="20210218 13:57:49.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.338" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:49.338" starttime="20210218 13:57:49.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.339" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:49.339" starttime="20210218 13:57:49.338"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.339" starttime="20210218 13:57:49.331"></status>
</kw>
<msg timestamp="20210218 13:57:49.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:49.339" starttime="20210218 13:57:49.331"></status>
</kw>
<msg timestamp="20210218 13:57:49.340" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:49.340" starttime="20210218 13:57:49.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:49.341" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:49.341" starttime="20210218 13:57:49.340"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:49.345" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:49.352" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:49.352" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:49.352" starttime="20210218 13:57:49.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.353" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:49.353" starttime="20210218 13:57:49.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:49.354" starttime="20210218 13:57:49.354"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.355" starttime="20210218 13:57:49.343"></status>
</kw>
<msg timestamp="20210218 13:57:49.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:49.355" starttime="20210218 13:57:49.342"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.355" starttime="20210218 13:57:49.341"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.355" starttime="20210218 13:57:49.341"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.355" starttime="20210218 13:57:49.330"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.356" starttime="20210218 13:57:49.329"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:49.360" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:49.364" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:49.364" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:49.364" starttime="20210218 13:57:49.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.365" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:49.365" starttime="20210218 13:57:49.365"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.366" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:49.366" starttime="20210218 13:57:49.366"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.367" starttime="20210218 13:57:49.358"></status>
</kw>
<msg timestamp="20210218 13:57:49.367" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:49.367" starttime="20210218 13:57:49.357"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.367" starttime="20210218 13:57:49.357"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:49.372" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:49.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:49.376" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:49.376" starttime="20210218 13:57:49.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.377" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:49.377" starttime="20210218 13:57:49.376"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:49.378" starttime="20210218 13:57:49.377"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.378" starttime="20210218 13:57:49.369"></status>
</kw>
<msg timestamp="20210218 13:57:49.378" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:49.378" starttime="20210218 13:57:49.369"></status>
</kw>
<msg timestamp="20210218 13:57:49.379" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:49.379" starttime="20210218 13:57:49.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:49.379" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:49.380" starttime="20210218 13:57:49.379"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:49.384" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:49.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:49.391" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:49.391" starttime="20210218 13:57:49.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.392" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:49.392" starttime="20210218 13:57:49.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:49.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:49.393" starttime="20210218 13:57:49.392"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.393" starttime="20210218 13:57:49.381"></status>
</kw>
<msg timestamp="20210218 13:57:49.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:49.393" starttime="20210218 13:57:49.381"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.394" starttime="20210218 13:57:49.380"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.394" starttime="20210218 13:57:49.380"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.394" starttime="20210218 13:57:49.368"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:49.394" starttime="20210218 13:57:49.367"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:49.398" level="INFO">Running command 'ozone sh key list 71138-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:54.133" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:54.133" level="INFO">${output} = {
  "volumeName" : "71138-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-18T13:55:21.632Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210218 13:57:54.133" starttime="20210218 13:57:49.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.134" level="INFO">{
  "volumeName" : "71138-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-18T13:55:21.632Z",
  "modificationTime" : "2021-02-18T13:55:24.060Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210218 13:57:54.134" starttime="20210218 13:57:54.133"></status>
</kw>
<msg timestamp="20210218 13:57:54.134" level="INFO">${result} = {
  "volumeName" : "71138-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-18T13:55:21.632Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210218 13:57:54.135" starttime="20210218 13:57:49.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:54.135" starttime="20210218 13:57:54.135"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.135" starttime="20210218 13:57:49.356"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.138" starttime="20210218 13:57:49.356"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:54.138" critical="yes" starttime="20210218 13:57:49.328"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:54.146" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:54.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:54.149" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:54.149" starttime="20210218 13:57:54.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.150" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:54.150" starttime="20210218 13:57:54.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.150" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:54.151" starttime="20210218 13:57:54.150"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.151" starttime="20210218 13:57:54.142"></status>
</kw>
<msg timestamp="20210218 13:57:54.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:54.151" starttime="20210218 13:57:54.142"></status>
</kw>
<msg timestamp="20210218 13:57:54.152" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:54.152" starttime="20210218 13:57:54.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:54.152" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:54.153" starttime="20210218 13:57:54.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:54.157" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:54.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:54.166" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:54.166" starttime="20210218 13:57:54.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.167" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:54.167" starttime="20210218 13:57:54.166"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.168" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:54.168" starttime="20210218 13:57:54.167"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.168" starttime="20210218 13:57:54.155"></status>
</kw>
<msg timestamp="20210218 13:57:54.169" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:54.169" starttime="20210218 13:57:54.154"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.169" starttime="20210218 13:57:54.153"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.169" starttime="20210218 13:57:54.153"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.169" starttime="20210218 13:57:54.141"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.169" starttime="20210218 13:57:54.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:54.174" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:54.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:54.177" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:54.177" starttime="20210218 13:57:54.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.178" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:54.178" starttime="20210218 13:57:54.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.179" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:54.179" starttime="20210218 13:57:54.179"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.180" starttime="20210218 13:57:54.171"></status>
</kw>
<msg timestamp="20210218 13:57:54.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:54.187" starttime="20210218 13:57:54.171"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.187" starttime="20210218 13:57:54.171"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:54.192" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:54.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:54.194" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:54.194" starttime="20210218 13:57:54.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.195" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:54.196" starttime="20210218 13:57:54.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:54.196" starttime="20210218 13:57:54.196"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.197" starttime="20210218 13:57:54.189"></status>
</kw>
<msg timestamp="20210218 13:57:54.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:54.197" starttime="20210218 13:57:54.189"></status>
</kw>
<msg timestamp="20210218 13:57:54.197" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:54.197" starttime="20210218 13:57:54.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:54.198" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:54.198" starttime="20210218 13:57:54.197"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:54.202" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:54.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:54.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:54.209" starttime="20210218 13:57:54.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.210" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:54.210" starttime="20210218 13:57:54.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:54.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:54.211" starttime="20210218 13:57:54.210"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.211" starttime="20210218 13:57:54.200"></status>
</kw>
<msg timestamp="20210218 13:57:54.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:54.212" starttime="20210218 13:57:54.200"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.212" starttime="20210218 13:57:54.199"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.212" starttime="20210218 13:57:54.198"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.212" starttime="20210218 13:57:54.188"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:54.212" starttime="20210218 13:57:54.187"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:54.215" level="INFO">Running command 'ozone sh key list 71138-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:57.879" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:57:57.879" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 71138-target unreadable-link null</msg>
<status status="PASS" endtime="20210218 13:57:57.879" starttime="20210218 13:57:54.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.880" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 71138-target unreadable-link null</msg>
<status status="PASS" endtime="20210218 13:57:57.880" starttime="20210218 13:57:57.880"></status>
</kw>
<msg timestamp="20210218 13:57:57.881" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 71138-target unreadable-link null</msg>
<status status="PASS" endtime="20210218 13:57:57.881" starttime="20210218 13:57:54.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210218 13:57:57.881" starttime="20210218 13:57:57.881"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.882" starttime="20210218 13:57:54.170"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.882" starttime="20210218 13:57:54.170"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:57:57.882" critical="yes" starttime="20210218 13:57:54.139"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:57.890" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:57.897" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:57.897" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:57.897" starttime="20210218 13:57:57.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.898" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:57.898" starttime="20210218 13:57:57.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.899" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:57.899" starttime="20210218 13:57:57.898"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.900" starttime="20210218 13:57:57.887"></status>
</kw>
<msg timestamp="20210218 13:57:57.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:57.900" starttime="20210218 13:57:57.885"></status>
</kw>
<msg timestamp="20210218 13:57:57.900" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:57.900" starttime="20210218 13:57:57.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:57.901" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:57.902" starttime="20210218 13:57:57.901"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:57.907" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:57.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:57.915" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:57.915" starttime="20210218 13:57:57.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.916" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:57.916" starttime="20210218 13:57:57.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:57.918" starttime="20210218 13:57:57.917"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.918" starttime="20210218 13:57:57.903"></status>
</kw>
<msg timestamp="20210218 13:57:57.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:57.918" starttime="20210218 13:57:57.903"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.918" starttime="20210218 13:57:57.902"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.918" starttime="20210218 13:57:57.902"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.919" starttime="20210218 13:57:57.884"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.919" starttime="20210218 13:57:57.884"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:57.923" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:57.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:57.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:57.927" starttime="20210218 13:57:57.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.928" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:57.928" starttime="20210218 13:57:57.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:57.929" starttime="20210218 13:57:57.928"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.930" starttime="20210218 13:57:57.921"></status>
</kw>
<msg timestamp="20210218 13:57:57.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:57.930" starttime="20210218 13:57:57.921"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.930" starttime="20210218 13:57:57.920"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:57.935" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:57.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:57.938" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:57:57.938" starttime="20210218 13:57:57.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.939" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:57:57.939" starttime="20210218 13:57:57.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:57.940" starttime="20210218 13:57:57.940"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.941" starttime="20210218 13:57:57.932"></status>
</kw>
<msg timestamp="20210218 13:57:57.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:57.941" starttime="20210218 13:57:57.932"></status>
</kw>
<msg timestamp="20210218 13:57:57.941" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:57:57.941" starttime="20210218 13:57:57.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:57:57.942" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:57:57.942" starttime="20210218 13:57:57.942"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:57.949" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:57:57.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:57:57.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:57:57.958" starttime="20210218 13:57:57.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.959" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:57:57.959" starttime="20210218 13:57:57.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:57:57.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:57:57.960" starttime="20210218 13:57:57.959"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.961" starttime="20210218 13:57:57.944"></status>
</kw>
<msg timestamp="20210218 13:57:57.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:57:57.961" starttime="20210218 13:57:57.944"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.961" starttime="20210218 13:57:57.943"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.961" starttime="20210218 13:57:57.942"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.962" starttime="20210218 13:57:57.931"></status>
</kw>
<status status="PASS" endtime="20210218 13:57:57.962" starttime="20210218 13:57:57.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:57:57.966" level="INFO">Running command 'ozone sh bucket info 71138-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:02.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:02.204" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210218 13:58:02.204" starttime="20210218 13:57:57.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:02.205" level="INFO">{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:40.974Z",
  "modificationTime" : "2021-02-18T13:56:00.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:58:02.205" starttime="20210218 13:58:02.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:02.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:02.206" starttime="20210218 13:58:02.205"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:02.206" starttime="20210218 13:57:57.963"></status>
</kw>
<msg timestamp="20210218 13:58:02.207" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:02.207" starttime="20210218 13:57:57.962"></status>
</kw>
<msg timestamp="20210218 13:58:02.207" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210218 13:58:02.207" starttime="20210218 13:57:57.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:02.208" starttime="20210218 13:58:02.207"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:02.208" starttime="20210218 13:58:02.208"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:02.211" level="INFO">Running command 'ozone sh key list 71138-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:06.111" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:58:06.112" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 71138-source unreadable-bucket </msg>
<status status="PASS" endtime="20210218 13:58:06.112" starttime="20210218 13:58:02.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:06.113" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 71138-source unreadable-bucket </msg>
<status status="PASS" endtime="20210218 13:58:06.114" starttime="20210218 13:58:06.113"></status>
</kw>
<msg timestamp="20210218 13:58:06.114" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 71138-source unreadable-bucket </msg>
<status status="PASS" endtime="20210218 13:58:06.114" starttime="20210218 13:58:02.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:06.115" starttime="20210218 13:58:06.114"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.115" starttime="20210218 13:57:57.920"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.115" starttime="20210218 13:57:57.919"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:58:06.115" critical="yes" starttime="20210218 13:57:57.883"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:06.122" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:06.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:06.125" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:58:06.125" starttime="20210218 13:58:06.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:06.126" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:58:06.126" starttime="20210218 13:58:06.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:06.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:06.127" starttime="20210218 13:58:06.126"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.127" starttime="20210218 13:58:06.119"></status>
</kw>
<msg timestamp="20210218 13:58:06.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:06.127" starttime="20210218 13:58:06.119"></status>
</kw>
<msg timestamp="20210218 13:58:06.128" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:58:06.128" starttime="20210218 13:58:06.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:58:06.128" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:58:06.129" starttime="20210218 13:58:06.128"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:06.133" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:06.140" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:06.141" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:06.141" starttime="20210218 13:58:06.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:06.142" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:06.142" starttime="20210218 13:58:06.141"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:06.142" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:06.142" starttime="20210218 13:58:06.142"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.143" starttime="20210218 13:58:06.130"></status>
</kw>
<msg timestamp="20210218 13:58:06.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:06.143" starttime="20210218 13:58:06.130"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.143" starttime="20210218 13:58:06.129"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.143" starttime="20210218 13:58:06.129"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.144" starttime="20210218 13:58:06.118"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:06.144" starttime="20210218 13:58:06.117"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:06.148" level="INFO">Running command 'ozone sh bucket link 71138-target/loop1 71138-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:09.844" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:09.844" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:09.844" starttime="20210218 13:58:06.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:09.845" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:09.845" starttime="20210218 13:58:09.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:09.846" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:09.846" starttime="20210218 13:58:09.846"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:09.846" starttime="20210218 13:58:06.145"></status>
</kw>
<msg timestamp="20210218 13:58:09.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:09.847" starttime="20210218 13:58:06.145"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:09.847" starttime="20210218 13:58:06.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:09.851" level="INFO">Running command 'ozone sh bucket link 71138-target/loop2 71138-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:14.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:14.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:14.412" starttime="20210218 13:58:09.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:14.414" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:14.414" starttime="20210218 13:58:14.413"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:14.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:14.414" starttime="20210218 13:58:14.414"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:14.415" starttime="20210218 13:58:09.848"></status>
</kw>
<msg timestamp="20210218 13:58:14.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:14.415" starttime="20210218 13:58:09.848"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:14.415" starttime="20210218 13:58:09.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:14.422" level="INFO">Running command 'ozone sh bucket link 71138-target/loop3 71138-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:18.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:18.816" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:18.816" starttime="20210218 13:58:14.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:18.818" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:18.818" starttime="20210218 13:58:18.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:18.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:18.819" starttime="20210218 13:58:18.818"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:18.819" starttime="20210218 13:58:14.417"></status>
</kw>
<msg timestamp="20210218 13:58:18.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:18.819" starttime="20210218 13:58:14.416"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:18.820" starttime="20210218 13:58:14.415"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:18.823" level="INFO">Running command 'ozone sh key list 71138-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:22.703" level="INFO">${rc} = 255</msg>
<msg timestamp="20210218 13:58:22.703" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210218 13:58:22.703" starttime="20210218 13:58:18.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:22.705" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210218 13:58:22.705" starttime="20210218 13:58:22.704"></status>
</kw>
<msg timestamp="20210218 13:58:22.705" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210218 13:58:22.705" starttime="20210218 13:58:18.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:22.706" starttime="20210218 13:58:22.705"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:58:22.706" critical="yes" starttime="20210218 13:58:06.116"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:22.712" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:22.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:22.715" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:58:22.715" starttime="20210218 13:58:22.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:22.716" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:58:22.716" starttime="20210218 13:58:22.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:22.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:22.717" starttime="20210218 13:58:22.717"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:22.718" starttime="20210218 13:58:22.710"></status>
</kw>
<msg timestamp="20210218 13:58:22.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:22.718" starttime="20210218 13:58:22.709"></status>
</kw>
<msg timestamp="20210218 13:58:22.718" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:58:22.718" starttime="20210218 13:58:22.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:58:22.719" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:58:22.719" starttime="20210218 13:58:22.718"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:22.724" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:22.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:22.732" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:22.732" starttime="20210218 13:58:22.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:22.733" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:22.734" starttime="20210218 13:58:22.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:22.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:22.735" starttime="20210218 13:58:22.734"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:22.735" starttime="20210218 13:58:22.721"></status>
</kw>
<msg timestamp="20210218 13:58:22.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:22.735" starttime="20210218 13:58:22.720"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:22.735" starttime="20210218 13:58:22.720"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:22.736" starttime="20210218 13:58:22.719"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:22.736" starttime="20210218 13:58:22.708"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:22.736" starttime="20210218 13:58:22.708"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:22.740" level="INFO">Running command 'ozone sh bucket link 71138-source/bucket1 71138-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:26.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:26.834" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:26.834" starttime="20210218 13:58:22.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:26.835" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:26.835" starttime="20210218 13:58:26.834"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:26.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:26.836" starttime="20210218 13:58:26.835"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:26.836" starttime="20210218 13:58:22.737"></status>
</kw>
<msg timestamp="20210218 13:58:26.837" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:26.837" starttime="20210218 13:58:22.737"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:26.837" starttime="20210218 13:58:22.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:26.842" level="INFO">Running command 'ozone sh key put 71138-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:33.322" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:33.322" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:33.322" starttime="20210218 13:58:26.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:33.324" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:33.324" starttime="20210218 13:58:33.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:33.324" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:33.325" starttime="20210218 13:58:33.324"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:33.325" starttime="20210218 13:58:26.838"></status>
</kw>
<msg timestamp="20210218 13:58:33.325" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:33.325" starttime="20210218 13:58:26.838"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:33.325" starttime="20210218 13:58:26.837"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210218 13:58:33.327" level="INFO">${postfix} = 34681</msg>
<status status="PASS" endtime="20210218 13:58:33.328" starttime="20210218 13:58:33.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210218 13:58:33.328" level="INFO">${tmpfile} = /tmp/tempkey-34681</msg>
<status status="PASS" endtime="20210218 13:58:33.328" starttime="20210218 13:58:33.328"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:33.332" level="INFO">Running command 'ozone sh key get 71138-target/link1/key3 /tmp/tempkey-34681 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:39.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:39.621" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:39.621" starttime="20210218 13:58:33.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.622" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:39.622" starttime="20210218 13:58:39.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:39.623" starttime="20210218 13:58:39.622"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.623" starttime="20210218 13:58:33.330"></status>
</kw>
<msg timestamp="20210218 13:58:39.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:39.624" starttime="20210218 13:58:33.329"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.624" starttime="20210218 13:58:33.328"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210218 13:58:39.627" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-34681 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:39.633" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210218 13:58:39.634" starttime="20210218 13:58:39.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:39.638" level="INFO">Running command 'rm -f /tmp/tempkey-34681 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:39.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:39.640" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:39.640" starttime="20210218 13:58:39.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.641" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:39.642" starttime="20210218 13:58:39.641"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.643" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:39.643" starttime="20210218 13:58:39.642"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.643" starttime="20210218 13:58:39.635"></status>
</kw>
<msg timestamp="20210218 13:58:39.643" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:39.643" starttime="20210218 13:58:39.635"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.643" starttime="20210218 13:58:39.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210218 13:58:39.644" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210218 13:58:39.644" starttime="20210218 13:58:39.644"></status>
</kw>
<msg timestamp="20210218 13:58:39.645" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210218 13:58:39.645" starttime="20210218 13:58:33.326"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:39.645" starttime="20210218 13:58:39.645"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.645" starttime="20210218 13:58:33.326"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:58:39.646" critical="yes" starttime="20210218 13:58:22.707"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:39.651" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:39.654" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:39.654" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210218 13:58:39.654" starttime="20210218 13:58:39.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.656" level="INFO">scm</msg>
<status status="PASS" endtime="20210218 13:58:39.656" starttime="20210218 13:58:39.655"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.657" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:39.657" starttime="20210218 13:58:39.656"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.657" starttime="20210218 13:58:39.649"></status>
</kw>
<msg timestamp="20210218 13:58:39.658" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:39.658" starttime="20210218 13:58:39.649"></status>
</kw>
<msg timestamp="20210218 13:58:39.658" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210218 13:58:39.658" starttime="20210218 13:58:39.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210218 13:58:39.659" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210218 13:58:39.659" starttime="20210218 13:58:39.658"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:39.663" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:39.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:39.671" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:39.671" starttime="20210218 13:58:39.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.672" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:39.672" starttime="20210218 13:58:39.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:39.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:39.673" starttime="20210218 13:58:39.672"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.674" starttime="20210218 13:58:39.661"></status>
</kw>
<msg timestamp="20210218 13:58:39.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:39.674" starttime="20210218 13:58:39.660"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.674" starttime="20210218 13:58:39.660"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.674" starttime="20210218 13:58:39.659"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.675" starttime="20210218 13:58:39.648"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:39.675" starttime="20210218 13:58:39.647"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:39.678" level="INFO">Running command 'ozone sh bucket delete 71138-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:43.799" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:43.799" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210218 13:58:43.799" starttime="20210218 13:58:39.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:43.800" level="INFO"></msg>
<status status="PASS" endtime="20210218 13:58:43.801" starttime="20210218 13:58:43.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:43.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:43.802" starttime="20210218 13:58:43.801"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:43.802" starttime="20210218 13:58:39.676"></status>
</kw>
<msg timestamp="20210218 13:58:43.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:43.802" starttime="20210218 13:58:39.675"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:43.803" starttime="20210218 13:58:39.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:43.807" level="INFO">Running command 'ozone sh bucket list 71138-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:47.775" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:47.775" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T...</msg>
<status status="PASS" endtime="20210218 13:58:47.775" starttime="20210218 13:58:43.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:47.777" level="INFO">{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:57:44.936Z",
  "modificationTime" : "2021-02-18T13:57:44.936Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:56:04.571Z",
  "modificationTime" : "2021-02-18T13:56:04.571Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:40.974Z",
  "modificationTime" : "2021-02-18T13:56:00.391Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:57:37.698Z",
  "modificationTime" : "2021-02-18T13:57:37.698Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:58:26.637Z",
  "modificationTime" : "2021-02-18T13:58:26.637Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:58:18.594Z",
  "modificationTime" : "2021-02-18T13:58:18.594Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:58:09.704Z",
  "modificationTime" : "2021-02-18T13:58:09.704Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:58:14.129Z",
  "modificationTime" : "2021-02-18T13:58:14.129Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:32.951Z",
  "modificationTime" : "2021-02-18T13:55:56.790Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T13:55:37.022Z",
  "modificationTime" : "2021-02-18T13:55:37.022Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "71138-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210218 13:58:47.777" starttime="20210218 13:58:47.776"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:47.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:47.778" starttime="20210218 13:58:47.777"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:47.778" starttime="20210218 13:58:43.804"></status>
</kw>
<msg timestamp="20210218 13:58:47.778" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:47.778" starttime="20210218 13:58:43.804"></status>
</kw>
<msg timestamp="20210218 13:58:47.779" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "71138-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-18T...</msg>
<status status="PASS" endtime="20210218 13:58:47.779" starttime="20210218 13:58:43.803"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:47.779" starttime="20210218 13:58:47.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 13:58:47.783" level="INFO">Running command 'ozone sh key list 71138-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 13:58:51.894" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 13:58:51.894" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210218 13:58:51.894" starttime="20210218 13:58:47.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 13:58:51.895" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210218 13:58:51.896" starttime="20210218 13:58:51.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 13:58:51.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 13:58:51.896" starttime="20210218 13:58:51.896"></status>
</kw>
<status status="PASS" endtime="20210218 13:58:51.897" starttime="20210218 13:58:47.781"></status>
</kw>
<msg timestamp="20210218 13:58:51.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 13:58:51.897" starttime="20210218 13:58:47.780"></status>
</kw>
<msg timestamp="20210218 13:58:51.897" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210218 13:58:51.897" starttime="20210218 13:58:47.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210218 13:58:51.898" starttime="20210218 13:58:51.898"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210218 13:58:51.898" critical="yes" starttime="20210218 13:58:39.646"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210218 13:58:51.902" starttime="20210218 13:55:05.510"></status>
</suite>
<status status="PASS" elapsedtime="258611" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
