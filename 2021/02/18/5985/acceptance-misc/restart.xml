<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210218 14:00:31.486" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="restart">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 14:00:01.223" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 14:00:08.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 14:00:08.533" level="INFO">${output} = 2021-02-18 14:00:02,640 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:02,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:08.533" starttime="20210218 14:00:01.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 14:00:08.534" level="INFO">2021-02-18 14:00:02,640 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:02,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 14:00:02,815 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 14:00:02,995 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-18 14:00:03,014 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:03,880 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-18 14:00:04,016 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:04,098 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-18 14:00:05,016 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:05,043 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-18 14:00:05,243 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-18 14:00:05,244 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-5886F320ECA0-&gt;f4590f95-3377-4c36-af98-c7cea3fa7ce0
2021-02-18 14:00:05,245 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-18 14:00:06,017 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:07,017 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:08,018 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 14:00:08,207 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=3234.263287, max=3234.263287, mean=3234.263287, stddev=0.0, median=3234.263287, p75=3234.263287, p95=3234.263287, p98=3234.263287, p99=3234.263287, p999=3234.263287, mean_rate=0.2462437841426456, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 14:00:08,208 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-02-18 14:00:08,208 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 14:00:08,208 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 14:00:08.534" starttime="20210218 14:00:08.533"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 14:00:08.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 14:00:08.535" starttime="20210218 14:00:08.535"></status>
</kw>
<status status="PASS" endtime="20210218 14:00:08.536" starttime="20210218 14:00:01.219"></status>
</kw>
<msg timestamp="20210218 14:00:08.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 14:00:08.536" starttime="20210218 14:00:01.218"></status>
</kw>
<msg timestamp="20210218 14:00:08.539" level="INFO">${result} = 2021-02-18 14:00:02,640 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:02,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:08.539" starttime="20210218 14:00:01.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 14:00:08.539" starttime="20210218 14:00:08.539"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 14:00:08.540" critical="yes" starttime="20210218 14:00:01.217"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 14:00:08.546" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 14:00:11.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 14:00:11.985" level="INFO">${output} = 2021-02-18 14:00:09,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:10,095 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:11.985" starttime="20210218 14:00:08.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 14:00:11.986" level="INFO">2021-02-18 14:00:09,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:10,095 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 14:00:10,095 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 14:00:10,331 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-02-18 14:00:10,356 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:11,366 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 14:00:11,974 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=76.341683, max=76.341683, mean=76.341683, stddev=0.0, median=76.341683, p75=76.341683, p95=76.341683, p98=76.341683, p99=76.341683, p999=76.341683, mean_rate=0.986308521761749, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 14:00:11,976 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-18 14:00:11,976 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 14:00:11,976 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 14:00:11.986" starttime="20210218 14:00:11.985"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 14:00:11.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 14:00:11.987" starttime="20210218 14:00:11.987"></status>
</kw>
<status status="PASS" endtime="20210218 14:00:11.988" starttime="20210218 14:00:08.543"></status>
</kw>
<msg timestamp="20210218 14:00:11.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 14:00:11.988" starttime="20210218 14:00:08.542"></status>
</kw>
<msg timestamp="20210218 14:00:11.988" level="INFO">${result} = 2021-02-18 14:00:09,974 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:10,095 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:11.988" starttime="20210218 14:00:08.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 14:00:11.989" starttime="20210218 14:00:11.988"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 14:00:11.989" critical="yes" starttime="20210218 14:00:08.540"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 14:00:11.994" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 14:00:15.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 14:00:15.283" level="INFO">${output} = 2021-02-18 14:00:13,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:13,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:15.283" starttime="20210218 14:00:11.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 14:00:15.285" level="INFO">2021-02-18 14:00:13,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:13,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 14:00:13,370 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 14:00:13,538 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-02-18 14:00:13,555 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:14,562 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 14:00:15,270 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=21.798266, max=21.798266, mean=21.798266, stddev=0.0, median=21.798266, p75=21.798266, p95=21.798266, p98=21.798266, p99=21.798266, p999=21.798266, mean_rate=0.9848034681390424, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 14:00:15,273 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-18 14:00:15,274 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 14:00:15,274 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 14:00:15.285" starttime="20210218 14:00:15.284"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 14:00:15.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 14:00:15.286" starttime="20210218 14:00:15.285"></status>
</kw>
<status status="PASS" endtime="20210218 14:00:15.286" starttime="20210218 14:00:11.992"></status>
</kw>
<msg timestamp="20210218 14:00:15.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 14:00:15.286" starttime="20210218 14:00:11.991"></status>
</kw>
<msg timestamp="20210218 14:00:15.287" level="INFO">${result} = 2021-02-18 14:00:13,242 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:13,370 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:15.287" starttime="20210218 14:00:11.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 14:00:15.287" starttime="20210218 14:00:15.287"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 14:00:15.288" critical="yes" starttime="20210218 14:00:11.990"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210218 14:00:15.289" starttime="20210218 14:00:01.167"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s2" name="Validate">
<test id="s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210218 14:00:19.914" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210218 14:00:25.161" level="INFO">${rc} = 0</msg>
<msg timestamp="20210218 14:00:25.161" level="INFO">${output} = 2021-02-18 14:00:21,185 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:21,309 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:25.161" starttime="20210218 14:00:19.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210218 14:00:25.163" level="INFO">2021-02-18 14:00:21,185 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:21,309 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-18 14:00:21,309 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-18 14:00:21,482 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-18 14:00:21,499 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:22,503 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:23,018 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-18 14:00:23,503 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-18 14:00:24,504 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-18 14:00:24,836 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=48.248265, max=48.248265, mean=48.248265, stddev=0.0, median=48.248265, p75=48.248265, p95=48.248265, p98=48.248265, p99=48.248265, p999=48.248265, mean_rate=0.9766031854412998, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-18 14:00:24,836 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-18 14:00:24,837 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-18 14:00:24,837 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210218 14:00:25.163" starttime="20210218 14:00:25.162"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210218 14:00:25.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210218 14:00:25.163" starttime="20210218 14:00:25.163"></status>
</kw>
<status status="PASS" endtime="20210218 14:00:25.164" starttime="20210218 14:00:19.910"></status>
</kw>
<msg timestamp="20210218 14:00:25.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210218 14:00:25.164" starttime="20210218 14:00:19.910"></status>
</kw>
<msg timestamp="20210218 14:00:25.164" level="INFO">${result} = 2021-02-18 14:00:21,185 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-18 14:00:21,309 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210218 14:00:25.164" starttime="20210218 14:00:19.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210218 14:00:25.165" starttime="20210218 14:00:25.165"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210218 14:00:25.165" critical="yes" starttime="20210218 14:00:19.908"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210218 14:00:25.167" starttime="20210218 14:00:19.857"></status>
</suite>
<status status="PASS" elapsedtime="19432" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="restart" pass="4">restart</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s2" name="Validate" pass="1">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
