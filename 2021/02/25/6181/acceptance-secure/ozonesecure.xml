<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210225 22:26:50.645" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:52.289" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:52.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:52.292" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:41:52.292" starttime="20210225 21:41:52.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.294" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:41:52.294" starttime="20210225 21:41:52.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:52.295" starttime="20210225 21:41:52.294"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.295" starttime="20210225 21:41:52.285"></status>
</kw>
<msg timestamp="20210225 21:41:52.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:52.295" starttime="20210225 21:41:52.285"></status>
</kw>
<msg timestamp="20210225 21:41:52.295" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:41:52.296" starttime="20210225 21:41:52.284"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:52.300" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:52.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:52.307" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:41:52.307" starttime="20210225 21:41:52.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.308" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:41:52.309" starttime="20210225 21:41:52.308"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:52.309" starttime="20210225 21:41:52.309"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.310" starttime="20210225 21:41:52.297"></status>
</kw>
<msg timestamp="20210225 21:41:52.310" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:52.310" starttime="20210225 21:41:52.297"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.310" starttime="20210225 21:41:52.296"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.310" starttime="20210225 21:41:52.296"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.310" starttime="20210225 21:41:52.284"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.310" starttime="20210225 21:41:52.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:52.314" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:52.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:52.442" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210225 21:41:52.442" starttime="20210225 21:41:52.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.447" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Thu, 25 Feb 2021 21:41:52 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCFwL33o3tExdWriuY2YBsMwQC3RcEYodoPQsC1PtQl69G8XnoZ8GZOSo4cN89MkTPiUn/79vG3yX5HSOSajHRxnXc
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1614325312433&amp;s=w8OnudGY+bYSfM9POmoh4y3QUVXLf49pu0eW5BHjscM="; Path=/; HttpOnly
Last-Modified: Thu, 25 Feb 2021 21:21:52 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210225 21:41:52.447" starttime="20210225 21:41:52.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:52.448" starttime="20210225 21:41:52.447"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.448" starttime="20210225 21:41:52.312"></status>
</kw>
<msg timestamp="20210225 21:41:52.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:52.449" starttime="20210225 21:41:52.311"></status>
</kw>
<msg timestamp="20210225 21:41:52.449" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210225 21:41:52.449" starttime="20210225 21:41:52.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210225 21:41:52.449" starttime="20210225 21:41:52.449"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 21:41:52.450" critical="yes" starttime="20210225 21:41:52.282"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:52.458" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:52.461" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:52.461" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:41:52.461" starttime="20210225 21:41:52.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.462" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:41:52.462" starttime="20210225 21:41:52.461"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:52.463" starttime="20210225 21:41:52.462"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.463" starttime="20210225 21:41:52.455"></status>
</kw>
<msg timestamp="20210225 21:41:52.463" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:52.463" starttime="20210225 21:41:52.454"></status>
</kw>
<msg timestamp="20210225 21:41:52.464" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:41:52.464" starttime="20210225 21:41:52.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:41:52.465" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:41:52.465" starttime="20210225 21:41:52.464"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:52.471" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:52.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:52.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:41:52.479" starttime="20210225 21:41:52.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.481" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:41:52.481" starttime="20210225 21:41:52.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:52.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:52.481" starttime="20210225 21:41:52.481"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.482" starttime="20210225 21:41:52.468"></status>
</kw>
<msg timestamp="20210225 21:41:52.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:52.482" starttime="20210225 21:41:52.467"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.482" starttime="20210225 21:41:52.466"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.482" starttime="20210225 21:41:52.465"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.482" starttime="20210225 21:41:52.453"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:52.482" starttime="20210225 21:41:52.453"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:52.487" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:46:52.452" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 21:46:52.452" starttime="20210225 21:41:52.484"></status>
</kw>
<status status="FAIL" endtime="20210225 21:46:52.453" starttime="20210225 21:41:52.484"></status>
</kw>
<msg timestamp="20210225 21:46:52.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 21:46:52.453" starttime="20210225 21:41:52.483"></status>
</kw>
<status status="FAIL" endtime="20210225 21:46:52.454" starttime="20210225 21:41:52.483"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210225 21:46:52.454" critical="yes" starttime="20210225 21:41:52.452">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210225 21:46:52.456" starttime="20210225 21:41:52.239"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:46:52.468" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:46:55.213" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:46:55.213" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210225 21:46:55.214" starttime="20210225 21:46:52.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:46:55.216" level="INFO">om</msg>
<status status="PASS" endtime="20210225 21:46:55.216" starttime="20210225 21:46:55.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:46:55.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:46:55.217" starttime="20210225 21:46:55.216"></status>
</kw>
<status status="PASS" endtime="20210225 21:46:55.218" starttime="20210225 21:46:52.464"></status>
</kw>
<msg timestamp="20210225 21:46:55.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:46:55.218" starttime="20210225 21:46:52.464"></status>
</kw>
<msg timestamp="20210225 21:46:55.219" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210225 21:46:55.219" starttime="20210225 21:46:52.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210225 21:46:55.219" starttime="20210225 21:46:55.219"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:46:55.224" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:46:57.922" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:46:57.922" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210225 21:46:57.922" starttime="20210225 21:46:55.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:46:57.924" level="INFO">om</msg>
<status status="PASS" endtime="20210225 21:46:57.924" starttime="20210225 21:46:57.923"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:46:57.925" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:46:57.925" starttime="20210225 21:46:57.924"></status>
</kw>
<status status="PASS" endtime="20210225 21:46:57.925" starttime="20210225 21:46:55.220"></status>
</kw>
<msg timestamp="20210225 21:46:57.925" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:46:57.926" starttime="20210225 21:46:55.220"></status>
</kw>
<msg timestamp="20210225 21:46:57.926" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210225 21:46:57.926" starttime="20210225 21:46:55.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210225 21:46:57.927" starttime="20210225 21:46:57.926"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 21:46:57.928" critical="yes" starttime="20210225 21:46:52.462"></status>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:46:57.936" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:00.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:00.696" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:47:00.696" starttime="20210225 21:46:57.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:00.697" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:47:00.697" starttime="20210225 21:47:00.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:00.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:00.698" starttime="20210225 21:47:00.698"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:00.698" starttime="20210225 21:46:57.932"></status>
</kw>
<msg timestamp="20210225 21:47:00.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:00.699" starttime="20210225 21:46:57.932"></status>
</kw>
<msg timestamp="20210225 21:47:00.699" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210225 21:47:00.699" starttime="20210225 21:46:57.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:00.700" starttime="20210225 21:47:00.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:00.704" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:03.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:03.927" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:47:03.927" starttime="20210225 21:47:00.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:03.928" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:47:03.928" starttime="20210225 21:47:03.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:03.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:03.930" starttime="20210225 21:47:03.929"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:03.930" starttime="20210225 21:47:00.701"></status>
</kw>
<msg timestamp="20210225 21:47:03.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:03.931" starttime="20210225 21:47:00.700"></status>
</kw>
<msg timestamp="20210225 21:47:03.931" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210225 21:47:03.931" starttime="20210225 21:47:00.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:03.932" starttime="20210225 21:47:03.931"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 21:47:03.932" critical="yes" starttime="20210225 21:46:57.929"></status>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:03.944" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:06.478" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:06.478" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210225 21:47:06.478" starttime="20210225 21:47:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:06.480" level="INFO">om</msg>
<status status="PASS" endtime="20210225 21:47:06.480" starttime="20210225 21:47:06.478"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:06.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:06.480" starttime="20210225 21:47:06.480"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:06.481" starttime="20210225 21:47:03.940"></status>
</kw>
<msg timestamp="20210225 21:47:06.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:06.481" starttime="20210225 21:47:03.940"></status>
</kw>
<msg timestamp="20210225 21:47:06.481" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210225 21:47:06.482" starttime="20210225 21:47:03.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:06.483" starttime="20210225 21:47:06.482"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:06.484" starttime="20210225 21:47:06.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:06.490" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:08.935" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:08.935" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210225 21:47:08.935" starttime="20210225 21:47:06.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:08.937" level="INFO">om</msg>
<status status="PASS" endtime="20210225 21:47:08.937" starttime="20210225 21:47:08.936"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:08.938" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:08.938" starttime="20210225 21:47:08.937"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:08.939" starttime="20210225 21:47:06.485"></status>
</kw>
<msg timestamp="20210225 21:47:08.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:08.940" starttime="20210225 21:47:06.485"></status>
</kw>
<msg timestamp="20210225 21:47:08.940" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210225 21:47:08.940" starttime="20210225 21:47:06.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:08.941" starttime="20210225 21:47:08.940"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:08.941" starttime="20210225 21:47:08.941"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 21:47:08.942" critical="yes" starttime="20210225 21:47:03.936"></status>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:08.948" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:11.405" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:47:11.406" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210225 21:47:11.406" starttime="20210225 21:47:08.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:11.407" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210225 21:47:11.407" starttime="20210225 21:47:11.406"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:11.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:11.408" starttime="20210225 21:47:11.407"></status>
</kw>
<msg timestamp="20210225 21:47:11.408" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210225 21:47:11.409" starttime="20210225 21:47:08.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:11.409" starttime="20210225 21:47:11.409"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:11.412" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:14.232" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:47:14.232" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210225 21:47:14.232" starttime="20210225 21:47:11.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:14.234" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210225 21:47:14.235" starttime="20210225 21:47:14.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:14.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:14.237" starttime="20210225 21:47:14.235"></status>
</kw>
<msg timestamp="20210225 21:47:14.238" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210225 21:47:14.238" starttime="20210225 21:47:11.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210225 21:47:14.240" starttime="20210225 21:47:14.238"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 21:47:14.240" critical="yes" starttime="20210225 21:47:08.943"></status>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210225 21:47:14.244" starttime="20210225 21:46:52.457"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210225 21:47:14.280" level="INFO">${random} = 90559</msg>
<status status="PASS" endtime="20210225 21:47:14.280" starttime="20210225 21:47:14.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210225 21:47:14.282" level="INFO">${source} = 90559-source</msg>
<status status="PASS" endtime="20210225 21:47:14.282" starttime="20210225 21:47:14.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210225 21:47:14.283" level="INFO">${target} = 90559-target</msg>
<status status="PASS" endtime="20210225 21:47:14.283" starttime="20210225 21:47:14.282"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:14.288" level="INFO">Running command 'ozone sh volume create 90559-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:21.452" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:21.452" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:47:21.452" starttime="20210225 21:47:14.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:21.454" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:47:21.454" starttime="20210225 21:47:21.453"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:21.455" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:21.455" starttime="20210225 21:47:21.454"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:21.455" starttime="20210225 21:47:14.285"></status>
</kw>
<msg timestamp="20210225 21:47:21.455" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:21.456" starttime="20210225 21:47:14.284"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:21.456" starttime="20210225 21:47:14.284"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:21.461" level="INFO">Running command 'ozone sh volume create 90559-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:29.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:29.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:47:29.049" starttime="20210225 21:47:21.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:29.051" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:47:29.051" starttime="20210225 21:47:29.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:29.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:29.052" starttime="20210225 21:47:29.051"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:29.052" starttime="20210225 21:47:21.458"></status>
</kw>
<msg timestamp="20210225 21:47:29.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:29.052" starttime="20210225 21:47:21.457"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:29.053" starttime="20210225 21:47:21.456"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:29.060" level="INFO">Running command 'ozone sh bucket create 90559-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:47:35.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:47:35.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:47:35.670" starttime="20210225 21:47:29.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:47:35.672" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:47:35.672" starttime="20210225 21:47:35.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:47:35.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:47:35.673" starttime="20210225 21:47:35.672"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:35.673" starttime="20210225 21:47:29.057"></status>
</kw>
<msg timestamp="20210225 21:47:35.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:47:35.674" starttime="20210225 21:47:29.057"></status>
</kw>
<status status="PASS" endtime="20210225 21:47:35.674" starttime="20210225 21:47:29.054"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:47:35.680" level="INFO">Running command 'ozone sh key put 90559-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:50:46.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:50:46.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:50:46.704" starttime="20210225 21:47:35.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:50:46.706" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:50:46.706" starttime="20210225 21:50:46.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:50:46.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:50:46.707" starttime="20210225 21:50:46.706"></status>
</kw>
<status status="PASS" endtime="20210225 21:50:46.708" starttime="20210225 21:47:35.676"></status>
</kw>
<msg timestamp="20210225 21:50:46.708" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:50:46.708" starttime="20210225 21:47:35.675"></status>
</kw>
<status status="PASS" endtime="20210225 21:50:46.708" starttime="20210225 21:47:35.674"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:50:46.715" level="INFO">Running command 'ozone sh bucket create 90559-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:50:53.531" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:50:53.531" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:50:53.531" starttime="20210225 21:50:46.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:50:53.533" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:50:53.533" starttime="20210225 21:50:53.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:50:53.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:50:53.534" starttime="20210225 21:50:53.533"></status>
</kw>
<status status="PASS" endtime="20210225 21:50:53.535" starttime="20210225 21:50:46.712"></status>
</kw>
<msg timestamp="20210225 21:50:53.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:50:53.535" starttime="20210225 21:50:46.711"></status>
</kw>
<status status="PASS" endtime="20210225 21:50:53.535" starttime="20210225 21:50:46.709"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:50:53.541" level="INFO">Running command 'ozone sh bucket link 90559-source/readable-bucket 90559-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:00.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:00.783" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:51:00.783" starttime="20210225 21:50:53.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:00.784" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:51:00.784" starttime="20210225 21:51:00.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:00.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:00.785" starttime="20210225 21:51:00.784"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:00.785" starttime="20210225 21:50:53.537"></status>
</kw>
<msg timestamp="20210225 21:51:00.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:00.785" starttime="20210225 21:50:53.536"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:00.786" starttime="20210225 21:50:53.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:00.791" level="INFO">Running command 'ozone sh bucket link 90559-source/readable-bucket 90559-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:08.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:08.033" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:51:08.033" starttime="20210225 21:51:00.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:08.034" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:51:08.034" starttime="20210225 21:51:08.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:08.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:08.035" starttime="20210225 21:51:08.035"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:08.036" starttime="20210225 21:51:00.787"></status>
</kw>
<msg timestamp="20210225 21:51:08.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:08.036" starttime="20210225 21:51:00.787"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:08.036" starttime="20210225 21:51:00.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:08.041" level="INFO">Running command 'ozone sh bucket link 90559-source/unreadable-bucket 90559-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:13.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:13.754" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:51:13.754" starttime="20210225 21:51:08.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:13.755" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:51:13.755" starttime="20210225 21:51:13.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:13.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:13.756" starttime="20210225 21:51:13.756"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:13.756" starttime="20210225 21:51:08.038"></status>
</kw>
<msg timestamp="20210225 21:51:13.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:13.757" starttime="20210225 21:51:08.037"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:13.757" starttime="20210225 21:51:08.037"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:13.761" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90559-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:19.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:19.913" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:19.913" starttime="20210225 21:51:13.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:19.914" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:19.914" starttime="20210225 21:51:19.913"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:19.915" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:19.915" starttime="20210225 21:51:19.914"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:19.915" starttime="20210225 21:51:13.758"></status>
</kw>
<msg timestamp="20210225 21:51:19.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:19.915" starttime="20210225 21:51:13.758"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:19.916" starttime="20210225 21:51:13.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:19.921" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90559-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:26.272" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:26.272" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:26.272" starttime="20210225 21:51:19.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:26.274" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:26.275" starttime="20210225 21:51:26.273"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:26.275" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:26.276" starttime="20210225 21:51:26.275"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:26.277" starttime="20210225 21:51:19.917"></status>
</kw>
<msg timestamp="20210225 21:51:26.277" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:26.278" starttime="20210225 21:51:19.916"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:26.278" starttime="20210225 21:51:19.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:26.286" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 90559-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:32.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:32.589" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:32.589" starttime="20210225 21:51:26.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:32.590" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:32.590" starttime="20210225 21:51:32.589"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:32.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:32.591" starttime="20210225 21:51:32.590"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:32.591" starttime="20210225 21:51:26.280"></status>
</kw>
<msg timestamp="20210225 21:51:32.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:32.592" starttime="20210225 21:51:26.280"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:32.592" starttime="20210225 21:51:26.278"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:32.598" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90559-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:38.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:38.780" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:38.780" starttime="20210225 21:51:32.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:38.781" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:38.782" starttime="20210225 21:51:38.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:38.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:38.785" starttime="20210225 21:51:38.782"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:38.785" starttime="20210225 21:51:32.594"></status>
</kw>
<msg timestamp="20210225 21:51:38.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:38.786" starttime="20210225 21:51:32.593"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:38.786" starttime="20210225 21:51:32.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:38.791" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 90559-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:44.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:44.585" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:44.585" starttime="20210225 21:51:38.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:44.586" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:51:44.586" starttime="20210225 21:51:44.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:44.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:44.587" starttime="20210225 21:51:44.586"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.587" starttime="20210225 21:51:38.787"></status>
</kw>
<msg timestamp="20210225 21:51:44.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:44.587" starttime="20210225 21:51:38.787"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.588" starttime="20210225 21:51:38.786"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.588" starttime="20210225 21:47:29.054"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.588" starttime="20210225 21:47:29.053"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.588" starttime="20210225 21:47:14.279"></status>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:44.594" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:44.597" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:44.597" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:51:44.597" starttime="20210225 21:51:44.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:44.598" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:51:44.598" starttime="20210225 21:51:44.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:44.599" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:44.599" starttime="20210225 21:51:44.598"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.599" starttime="20210225 21:51:44.591"></status>
</kw>
<msg timestamp="20210225 21:51:44.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:44.599" starttime="20210225 21:51:44.591"></status>
</kw>
<msg timestamp="20210225 21:51:44.600" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:51:44.600" starttime="20210225 21:51:44.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:51:44.601" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:51:44.601" starttime="20210225 21:51:44.600"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:44.606" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:44.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:44.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:51:44.657" starttime="20210225 21:51:44.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:44.658" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:51:44.658" starttime="20210225 21:51:44.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:44.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:44.659" starttime="20210225 21:51:44.659"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.659" starttime="20210225 21:51:44.603"></status>
</kw>
<msg timestamp="20210225 21:51:44.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:44.660" starttime="20210225 21:51:44.603"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.660" starttime="20210225 21:51:44.602"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.660" starttime="20210225 21:51:44.602"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.660" starttime="20210225 21:51:44.590"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:44.660" starttime="20210225 21:51:44.589"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:44.664" level="INFO">Running command 'ozone sh bucket link 90559-source/no-such-bucket 90559-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:50.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:50.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:51:50.695" starttime="20210225 21:51:44.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:50.696" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:51:50.696" starttime="20210225 21:51:50.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:50.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:50.697" starttime="20210225 21:51:50.696"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:50.697" starttime="20210225 21:51:44.662"></status>
</kw>
<msg timestamp="20210225 21:51:50.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:50.697" starttime="20210225 21:51:44.661"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:50.698" starttime="20210225 21:51:44.661"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:50.701" level="INFO">Running command 'ozone sh key list 90559-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:55.414" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:51:55.414" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210225 21:51:55.415" starttime="20210225 21:51:50.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:55.416" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210225 21:51:55.416" starttime="20210225 21:51:55.415"></status>
</kw>
<msg timestamp="20210225 21:51:55.416" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210225 21:51:55.417" starttime="20210225 21:51:50.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210225 21:51:55.417" starttime="20210225 21:51:55.417"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:51:55.418" critical="yes" starttime="20210225 21:51:44.588"></status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:55.426" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:55.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:55.430" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:51:55.430" starttime="20210225 21:51:55.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:55.431" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:51:55.431" starttime="20210225 21:51:55.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:55.432" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:55.432" starttime="20210225 21:51:55.431"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:55.432" starttime="20210225 21:51:55.423"></status>
</kw>
<msg timestamp="20210225 21:51:55.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:55.433" starttime="20210225 21:51:55.423"></status>
</kw>
<msg timestamp="20210225 21:51:55.433" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:51:55.433" starttime="20210225 21:51:55.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:51:55.434" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:51:55.435" starttime="20210225 21:51:55.433"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:55.443" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:51:55.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:51:55.454" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:51:55.454" starttime="20210225 21:51:55.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:51:55.456" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:51:55.456" starttime="20210225 21:51:55.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:51:55.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:51:55.457" starttime="20210225 21:51:55.456"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:55.457" starttime="20210225 21:51:55.438"></status>
</kw>
<msg timestamp="20210225 21:51:55.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:51:55.458" starttime="20210225 21:51:55.437"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:55.458" starttime="20210225 21:51:55.436"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:55.458" starttime="20210225 21:51:55.435"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:55.459" starttime="20210225 21:51:55.421"></status>
</kw>
<status status="PASS" endtime="20210225 21:51:55.459" starttime="20210225 21:51:55.420"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:51:55.463" level="INFO">Running command 'ozone sh bucket link 90559-source/bucket1 90559-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:52:02.567" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:52:02.567" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:52:02.567" starttime="20210225 21:51:55.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:52:02.568" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:52:02.568" starttime="20210225 21:52:02.568"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:52:02.569" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:52:02.569" starttime="20210225 21:52:02.568"></status>
</kw>
<status status="PASS" endtime="20210225 21:52:02.570" starttime="20210225 21:51:55.460"></status>
</kw>
<msg timestamp="20210225 21:52:02.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:52:02.570" starttime="20210225 21:51:55.460"></status>
</kw>
<status status="PASS" endtime="20210225 21:52:02.570" starttime="20210225 21:51:55.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:52:02.575" level="INFO">Running command 'ozone sh bucket create 90559-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:52:09.107" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:52:09.107" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:52:09.107" starttime="20210225 21:52:02.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:52:09.109" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:52:09.109" starttime="20210225 21:52:09.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:52:09.111" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:52:09.111" starttime="20210225 21:52:09.110"></status>
</kw>
<status status="PASS" endtime="20210225 21:52:09.111" starttime="20210225 21:52:02.571"></status>
</kw>
<msg timestamp="20210225 21:52:09.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:52:09.112" starttime="20210225 21:52:02.571"></status>
</kw>
<status status="PASS" endtime="20210225 21:52:09.113" starttime="20210225 21:52:02.570"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:52:09.119" level="INFO">Running command 'ozone sh key put 90559-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:53:55.420" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 21:53:55.420" starttime="20210225 21:52:09.116"></status>
</kw>
<status status="FAIL" endtime="20210225 21:53:55.421" starttime="20210225 21:52:09.115"></status>
</kw>
<msg timestamp="20210225 21:53:55.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 21:53:55.421" starttime="20210225 21:52:09.114"></status>
</kw>
<status status="FAIL" endtime="20210225 21:53:55.421" starttime="20210225 21:52:09.113"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210225 21:53:55.422" critical="yes" starttime="20210225 21:51:55.419">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:53:55.429" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:53:55.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:53:55.432" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:53:55.433" starttime="20210225 21:53:55.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:53:55.435" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:53:55.435" starttime="20210225 21:53:55.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:53:55.436" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:53:55.437" starttime="20210225 21:53:55.435"></status>
</kw>
<status status="PASS" endtime="20210225 21:53:55.437" starttime="20210225 21:53:55.426"></status>
</kw>
<msg timestamp="20210225 21:53:55.437" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:53:55.438" starttime="20210225 21:53:55.426"></status>
</kw>
<msg timestamp="20210225 21:53:55.438" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:53:55.439" starttime="20210225 21:53:55.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:53:55.440" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:53:55.440" starttime="20210225 21:53:55.439"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:53:55.449" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:53:55.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:53:55.458" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:53:55.458" starttime="20210225 21:53:55.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:53:55.459" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:53:55.459" starttime="20210225 21:53:55.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:53:55.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:53:55.460" starttime="20210225 21:53:55.460"></status>
</kw>
<status status="PASS" endtime="20210225 21:53:55.461" starttime="20210225 21:53:55.444"></status>
</kw>
<msg timestamp="20210225 21:53:55.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:53:55.461" starttime="20210225 21:53:55.443"></status>
</kw>
<status status="PASS" endtime="20210225 21:53:55.461" starttime="20210225 21:53:55.442"></status>
</kw>
<status status="PASS" endtime="20210225 21:53:55.461" starttime="20210225 21:53:55.441"></status>
</kw>
<status status="PASS" endtime="20210225 21:53:55.462" starttime="20210225 21:53:55.424"></status>
</kw>
<status status="PASS" endtime="20210225 21:53:55.462" starttime="20210225 21:53:55.424"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:53:55.467" level="INFO">Running command 'ozone sh key put 90559-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:55:55.424" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 21:55:55.424" starttime="20210225 21:53:55.464"></status>
</kw>
<status status="FAIL" endtime="20210225 21:55:55.424" starttime="20210225 21:53:55.463"></status>
</kw>
<msg timestamp="20210225 21:55:55.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 21:55:55.425" starttime="20210225 21:53:55.463"></status>
</kw>
<status status="FAIL" endtime="20210225 21:55:55.425" starttime="20210225 21:53:55.462"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210225 21:55:55.425" critical="yes" starttime="20210225 21:53:55.423">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:55:55.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:55:55.435" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:55:55.435" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:55:55.436" starttime="20210225 21:55:55.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:55:55.438" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:55:55.438" starttime="20210225 21:55:55.436"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:55:55.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:55:55.439" starttime="20210225 21:55:55.438"></status>
</kw>
<status status="PASS" endtime="20210225 21:55:55.440" starttime="20210225 21:55:55.429"></status>
</kw>
<msg timestamp="20210225 21:55:55.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:55:55.440" starttime="20210225 21:55:55.429"></status>
</kw>
<msg timestamp="20210225 21:55:55.441" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:55:55.441" starttime="20210225 21:55:55.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:55:55.442" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:55:55.443" starttime="20210225 21:55:55.441"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:55:55.449" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:55:55.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:55:55.460" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:55:55.460" starttime="20210225 21:55:55.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:55:55.461" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:55:55.462" starttime="20210225 21:55:55.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:55:55.463" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:55:55.463" starttime="20210225 21:55:55.462"></status>
</kw>
<status status="PASS" endtime="20210225 21:55:55.464" starttime="20210225 21:55:55.446"></status>
</kw>
<msg timestamp="20210225 21:55:55.464" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:55:55.464" starttime="20210225 21:55:55.445"></status>
</kw>
<status status="PASS" endtime="20210225 21:55:55.464" starttime="20210225 21:55:55.443"></status>
</kw>
<status status="PASS" endtime="20210225 21:55:55.465" starttime="20210225 21:55:55.443"></status>
</kw>
<status status="PASS" endtime="20210225 21:55:55.465" starttime="20210225 21:55:55.428"></status>
</kw>
<status status="PASS" endtime="20210225 21:55:55.465" starttime="20210225 21:55:55.427"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:55:55.470" level="INFO">Running command 'ozone sh key list 90559-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:02.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:02.368" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210225 21:56:02.368" starttime="20210225 21:55:55.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:02.371" level="INFO">key1</msg>
<status status="PASS" endtime="20210225 21:56:02.371" starttime="20210225 21:56:02.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:02.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:02.372" starttime="20210225 21:56:02.371"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:02.376" starttime="20210225 21:55:55.466"></status>
</kw>
<msg timestamp="20210225 21:56:02.376" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:02.376" starttime="20210225 21:55:55.466"></status>
</kw>
<msg timestamp="20210225 21:56:02.377" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210225 21:56:02.377" starttime="20210225 21:55:55.465"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:02.384" level="INFO">Running command 'ozone sh key list 90559-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:09.813" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:09.813" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210225 21:56:09.814" starttime="20210225 21:56:02.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:09.816" level="INFO">key1</msg>
<status status="PASS" endtime="20210225 21:56:09.816" starttime="20210225 21:56:09.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:09.817" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:09.817" starttime="20210225 21:56:09.816"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.818" starttime="20210225 21:56:02.380"></status>
</kw>
<msg timestamp="20210225 21:56:09.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:09.818" starttime="20210225 21:56:02.380"></status>
</kw>
<msg timestamp="20210225 21:56:09.819" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210225 21:56:09.819" starttime="20210225 21:56:02.377"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:09.820" starttime="20210225 21:56:09.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:09.822" starttime="20210225 21:56:09.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<msg timestamp="20210225 21:56:09.823" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210225 21:56:09.823" starttime="20210225 21:56:09.822"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210225 21:56:09.824" critical="yes" starttime="20210225 21:55:55.426">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:09.833" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:09.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:09.837" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:56:09.837" starttime="20210225 21:56:09.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:09.839" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:56:09.839" starttime="20210225 21:56:09.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:09.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:09.840" starttime="20210225 21:56:09.839"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.841" starttime="20210225 21:56:09.830"></status>
</kw>
<msg timestamp="20210225 21:56:09.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:09.841" starttime="20210225 21:56:09.829"></status>
</kw>
<msg timestamp="20210225 21:56:09.842" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:56:09.842" starttime="20210225 21:56:09.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:56:09.843" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:56:09.843" starttime="20210225 21:56:09.842"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:09.849" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:09.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:09.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:56:09.860" starttime="20210225 21:56:09.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:09.863" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:56:09.863" starttime="20210225 21:56:09.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:09.864" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:09.864" starttime="20210225 21:56:09.863"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.864" starttime="20210225 21:56:09.846"></status>
</kw>
<msg timestamp="20210225 21:56:09.864" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:09.865" starttime="20210225 21:56:09.845"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.865" starttime="20210225 21:56:09.844"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.865" starttime="20210225 21:56:09.843"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.865" starttime="20210225 21:56:09.827"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:09.865" starttime="20210225 21:56:09.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:09.871" level="INFO">Running command 'ozone sh key delete 90559-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:16.978" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:56:16.979" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210225 21:56:16.979" starttime="20210225 21:56:09.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:16.981" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210225 21:56:16.981" starttime="20210225 21:56:16.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:16.982" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210225 21:56:16.983" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210225 21:56:16.983" starttime="20210225 21:56:16.981"></status>
</kw>
<status status="FAIL" endtime="20210225 21:56:16.983" starttime="20210225 21:56:09.867"></status>
</kw>
<msg timestamp="20210225 21:56:16.983" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 21:56:16.984" starttime="20210225 21:56:09.867"></status>
</kw>
<status status="FAIL" endtime="20210225 21:56:16.984" starttime="20210225 21:56:09.866"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210225 21:56:16.985" critical="yes" starttime="20210225 21:56:09.826">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:16.995" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:16.998" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:16.998" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:56:16.999" starttime="20210225 21:56:16.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:17.001" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:56:17.001" starttime="20210225 21:56:16.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:17.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:17.002" starttime="20210225 21:56:17.001"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:17.003" starttime="20210225 21:56:16.991"></status>
</kw>
<msg timestamp="20210225 21:56:17.003" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:17.003" starttime="20210225 21:56:16.990"></status>
</kw>
<msg timestamp="20210225 21:56:17.003" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:56:17.003" starttime="20210225 21:56:16.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:56:17.004" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:56:17.004" starttime="20210225 21:56:17.003"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:17.009" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:17.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:17.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:56:17.019" starttime="20210225 21:56:17.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:17.020" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:56:17.020" starttime="20210225 21:56:17.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:17.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:17.021" starttime="20210225 21:56:17.021"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:17.021" starttime="20210225 21:56:17.006"></status>
</kw>
<msg timestamp="20210225 21:56:17.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:17.022" starttime="20210225 21:56:17.006"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:17.022" starttime="20210225 21:56:17.005"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:17.022" starttime="20210225 21:56:17.004"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:17.022" starttime="20210225 21:56:16.988"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:17.022" starttime="20210225 21:56:16.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:17.028" level="INFO">Running command 'ozone sh bucket list 90559-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:24.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:24.973" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210225 21:56:24.973" starttime="20210225 21:56:17.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:24.975" level="INFO">{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:50.586Z",
  "modificationTime" : "2021-02-25T21:51:50.586Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:13.683Z",
  "modificationTime" : "2021-02-25T21:51:44.486Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:52:02.425Z",
  "modificationTime" : "2021-02-25T21:52:02.425Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:00.653Z",
  "modificationTime" : "2021-02-25T21:51:38.650Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:07.776Z",
  "modificationTime" : "2021-02-25T21:51:07.776Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210225 21:56:24.976" starttime="20210225 21:56:24.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:24.977" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:24.978" starttime="20210225 21:56:24.976"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:24.979" starttime="20210225 21:56:17.025"></status>
</kw>
<msg timestamp="20210225 21:56:24.979" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:24.979" starttime="20210225 21:56:17.024"></status>
</kw>
<msg timestamp="20210225 21:56:24.980" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210225 21:56:24.980" starttime="20210225 21:56:17.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:24.983" starttime="20210225 21:56:24.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:24.984" starttime="20210225 21:56:24.983"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:56:24.984" critical="yes" starttime="20210225 21:56:16.986"></status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:24.995" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:24.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:25.000" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:56:25.000" starttime="20210225 21:56:24.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:25.002" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:56:25.003" starttime="20210225 21:56:25.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:25.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:25.005" starttime="20210225 21:56:25.003"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:25.005" starttime="20210225 21:56:24.992"></status>
</kw>
<msg timestamp="20210225 21:56:25.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:25.006" starttime="20210225 21:56:24.991"></status>
</kw>
<msg timestamp="20210225 21:56:25.007" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:56:25.007" starttime="20210225 21:56:24.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:56:25.009" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:56:25.009" starttime="20210225 21:56:25.007"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:25.018" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:25.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:25.027" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:56:25.027" starttime="20210225 21:56:25.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:25.028" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:56:25.028" starttime="20210225 21:56:25.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:25.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:25.029" starttime="20210225 21:56:25.028"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:25.030" starttime="20210225 21:56:25.013"></status>
</kw>
<msg timestamp="20210225 21:56:25.030" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:25.030" starttime="20210225 21:56:25.012"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:25.031" starttime="20210225 21:56:25.011"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:25.031" starttime="20210225 21:56:25.010"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:25.031" starttime="20210225 21:56:24.990"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:25.031" starttime="20210225 21:56:24.990"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:25.038" level="INFO">Running command 'ozone sh bucket info 90559-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:31.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:31.994" level="INFO">${output} = 90559-source bucket1</msg>
<status status="PASS" endtime="20210225 21:56:31.994" starttime="20210225 21:56:25.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:31.995" level="INFO">90559-source bucket1</msg>
<status status="PASS" endtime="20210225 21:56:31.995" starttime="20210225 21:56:31.994"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:31.996" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:31.996" starttime="20210225 21:56:31.995"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:31.996" starttime="20210225 21:56:25.034"></status>
</kw>
<msg timestamp="20210225 21:56:31.996" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:31.996" starttime="20210225 21:56:25.033"></status>
</kw>
<msg timestamp="20210225 21:56:31.997" level="INFO">${result} = 90559-source bucket1</msg>
<status status="PASS" endtime="20210225 21:56:31.997" starttime="20210225 21:56:25.032"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:31.997" starttime="20210225 21:56:31.997"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:56:31.998" critical="yes" starttime="20210225 21:56:24.988"></status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:32.004" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:32.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:32.007" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:56:32.007" starttime="20210225 21:56:32.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:32.008" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:56:32.008" starttime="20210225 21:56:32.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:32.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:32.009" starttime="20210225 21:56:32.009"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:32.010" starttime="20210225 21:56:32.002"></status>
</kw>
<msg timestamp="20210225 21:56:32.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:32.010" starttime="20210225 21:56:32.001"></status>
</kw>
<msg timestamp="20210225 21:56:32.010" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:56:32.010" starttime="20210225 21:56:32.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:56:32.011" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:56:32.011" starttime="20210225 21:56:32.010"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:32.016" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:32.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:32.024" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:56:32.024" starttime="20210225 21:56:32.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:32.025" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:56:32.025" starttime="20210225 21:56:32.024"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:32.026" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:32.026" starttime="20210225 21:56:32.025"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:32.026" starttime="20210225 21:56:32.013"></status>
</kw>
<msg timestamp="20210225 21:56:32.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:32.027" starttime="20210225 21:56:32.012"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:32.027" starttime="20210225 21:56:32.012"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:32.027" starttime="20210225 21:56:32.011"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:32.028" starttime="20210225 21:56:32.000"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:32.028" starttime="20210225 21:56:32.000"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:32.034" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 90559-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:37.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:37.760" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:56:37.760" starttime="20210225 21:56:32.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:37.761" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:56:37.761" starttime="20210225 21:56:37.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:37.762" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:37.762" starttime="20210225 21:56:37.762"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:37.763" starttime="20210225 21:56:32.029"></status>
</kw>
<msg timestamp="20210225 21:56:37.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:37.764" starttime="20210225 21:56:32.029"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:37.765" starttime="20210225 21:56:32.028"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:37.774" level="INFO">Running command 'ozone sh bucket getacl 90559-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:44.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:44.930" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210225 21:56:44.930" starttime="20210225 21:56:37.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:44.932" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210225 21:56:44.933" starttime="20210225 21:56:44.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:44.934" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:44.934" starttime="20210225 21:56:44.933"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:44.935" starttime="20210225 21:56:37.770"></status>
</kw>
<msg timestamp="20210225 21:56:44.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:44.936" starttime="20210225 21:56:37.770"></status>
</kw>
<msg timestamp="20210225 21:56:44.936" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210225 21:56:44.937" starttime="20210225 21:56:37.768"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:44.938" starttime="20210225 21:56:44.937"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:44.939" starttime="20210225 21:56:37.765"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:44.948" level="INFO">Running command 'ozone sh bucket getacl 90559-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:52.266" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:52.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:56:52.267" starttime="20210225 21:56:44.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:52.270" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:56:52.270" starttime="20210225 21:56:52.268"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:52.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:52.273" starttime="20210225 21:56:52.271"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:52.273" starttime="20210225 21:56:44.943"></status>
</kw>
<msg timestamp="20210225 21:56:52.274" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:52.274" starttime="20210225 21:56:44.943"></status>
</kw>
<msg timestamp="20210225 21:56:52.275" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210225 21:56:52.275" starttime="20210225 21:56:44.941"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210225 21:56:52.277" starttime="20210225 21:56:52.275"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:52.278" starttime="20210225 21:56:44.939"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:52.285" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 90559-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:56:59.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:56:59.162" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:56:59.162" starttime="20210225 21:56:52.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:56:59.164" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 21:56:59.164" starttime="20210225 21:56:59.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:56:59.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:56:59.165" starttime="20210225 21:56:59.164"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:59.165" starttime="20210225 21:56:52.280"></status>
</kw>
<msg timestamp="20210225 21:56:59.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:56:59.166" starttime="20210225 21:56:52.280"></status>
</kw>
<status status="PASS" endtime="20210225 21:56:59.166" starttime="20210225 21:56:52.278"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:56:59.172" level="INFO">Running command 'ozone sh bucket getacl 90559-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:06.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:06.690" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:06.691" starttime="20210225 21:56:59.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:06.693" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:06.693" starttime="20210225 21:57:06.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:06.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:06.694" starttime="20210225 21:57:06.693"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:06.695" starttime="20210225 21:56:59.168"></status>
</kw>
<msg timestamp="20210225 21:57:06.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:06.695" starttime="20210225 21:56:59.168"></status>
</kw>
<msg timestamp="20210225 21:57:06.696" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210225 21:57:06.696" starttime="20210225 21:56:59.167"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210225 21:57:06.697" starttime="20210225 21:57:06.696"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:06.697" starttime="20210225 21:56:59.166"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:06.704" level="INFO">Running command 'ozone sh bucket getacl 90559-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:14.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:14.005" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210225 21:57:14.005" starttime="20210225 21:57:06.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:14.006" level="INFO">READ</msg>
<status status="PASS" endtime="20210225 21:57:14.006" starttime="20210225 21:57:14.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:14.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:14.007" starttime="20210225 21:57:14.006"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.008" starttime="20210225 21:57:06.700"></status>
</kw>
<msg timestamp="20210225 21:57:14.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:14.008" starttime="20210225 21:57:06.700"></status>
</kw>
<msg timestamp="20210225 21:57:14.008" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210225 21:57:14.009" starttime="20210225 21:57:06.699"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210225 21:57:14.010" starttime="20210225 21:57:14.009"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.010" starttime="20210225 21:57:06.697"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:57:14.011" critical="yes" starttime="20210225 21:56:31.999"></status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:14.022" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:14.024" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:14.024" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:14.024" starttime="20210225 21:57:14.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:14.026" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:14.026" starttime="20210225 21:57:14.025"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:14.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:14.027" starttime="20210225 21:57:14.026"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.027" starttime="20210225 21:57:14.017"></status>
</kw>
<msg timestamp="20210225 21:57:14.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:14.027" starttime="20210225 21:57:14.016"></status>
</kw>
<msg timestamp="20210225 21:57:14.028" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:14.028" starttime="20210225 21:57:14.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:14.028" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:14.029" starttime="20210225 21:57:14.028"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:14.034" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:14.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:14.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:14.105" starttime="20210225 21:57:14.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:14.106" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:14.106" starttime="20210225 21:57:14.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:14.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:14.107" starttime="20210225 21:57:14.107"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.107" starttime="20210225 21:57:14.030"></status>
</kw>
<msg timestamp="20210225 21:57:14.107" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:14.108" starttime="20210225 21:57:14.030"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.108" starttime="20210225 21:57:14.029"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.108" starttime="20210225 21:57:14.029"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.108" starttime="20210225 21:57:14.014"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:14.108" starttime="20210225 21:57:14.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:14.112" level="INFO">Running command 'ozone sh bucket link 90559-source/bucket2 90559-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:20.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:20.508" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:20.508" starttime="20210225 21:57:14.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:20.512" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:20.512" starttime="20210225 21:57:20.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:20.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:20.513" starttime="20210225 21:57:20.512"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:20.513" starttime="20210225 21:57:14.110"></status>
</kw>
<msg timestamp="20210225 21:57:20.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:20.513" starttime="20210225 21:57:14.109"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:20.513" starttime="20210225 21:57:14.108"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:20.517" level="INFO">Running command 'ozone sh bucket create 90559-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:27.559" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:57:27.559" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210225 21:57:27.560" starttime="20210225 21:57:20.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:27.565" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210225 21:57:27.565" starttime="20210225 21:57:27.560"></status>
</kw>
<msg timestamp="20210225 21:57:27.565" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210225 21:57:27.565" starttime="20210225 21:57:20.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210225 21:57:27.566" starttime="20210225 21:57:27.566"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:27.573" level="INFO">Running command 'ozone sh bucket create 90559-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:34.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:34.687" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:34.687" starttime="20210225 21:57:27.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:34.688" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:34.688" starttime="20210225 21:57:34.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:34.689" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:34.689" starttime="20210225 21:57:34.688"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:34.689" starttime="20210225 21:57:27.567"></status>
</kw>
<msg timestamp="20210225 21:57:34.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:34.689" starttime="20210225 21:57:27.567"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:34.689" starttime="20210225 21:57:27.566"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:34.694" level="INFO">Running command 'ozone sh bucket link 90559-source/bucket1 90559-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:41.351" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:57:41.352" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210225 21:57:41.352" starttime="20210225 21:57:34.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.353" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210225 21:57:41.353" starttime="20210225 21:57:41.352"></status>
</kw>
<msg timestamp="20210225 21:57:41.353" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210225 21:57:41.353" starttime="20210225 21:57:34.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210225 21:57:41.354" starttime="20210225 21:57:41.354"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:57:41.354" critical="yes" starttime="20210225 21:57:14.012"></status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:41.363" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:41.366" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:41.366" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:41.366" starttime="20210225 21:57:41.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.368" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:41.368" starttime="20210225 21:57:41.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.368" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:41.369" starttime="20210225 21:57:41.368"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.369" starttime="20210225 21:57:41.359"></status>
</kw>
<msg timestamp="20210225 21:57:41.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:41.369" starttime="20210225 21:57:41.359"></status>
</kw>
<msg timestamp="20210225 21:57:41.370" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:41.370" starttime="20210225 21:57:41.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:41.371" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:41.371" starttime="20210225 21:57:41.370"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:41.376" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:41.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:41.387" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:41.387" starttime="20210225 21:57:41.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.389" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:41.389" starttime="20210225 21:57:41.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:41.390" starttime="20210225 21:57:41.389"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.390" starttime="20210225 21:57:41.373"></status>
</kw>
<msg timestamp="20210225 21:57:41.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:41.390" starttime="20210225 21:57:41.372"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.391" starttime="20210225 21:57:41.371"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.391" starttime="20210225 21:57:41.371"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.391" starttime="20210225 21:57:41.358"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.391" starttime="20210225 21:57:41.357"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:41.398" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:41.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:41.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:41.403" starttime="20210225 21:57:41.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.405" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:41.405" starttime="20210225 21:57:41.404"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.406" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:41.406" starttime="20210225 21:57:41.405"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.406" starttime="20210225 21:57:41.394"></status>
</kw>
<msg timestamp="20210225 21:57:41.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:41.407" starttime="20210225 21:57:41.394"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.407" starttime="20210225 21:57:41.393"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:41.413" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:41.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:41.417" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:41.417" starttime="20210225 21:57:41.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.419" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:41.419" starttime="20210225 21:57:41.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:41.420" starttime="20210225 21:57:41.419"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.420" starttime="20210225 21:57:41.410"></status>
</kw>
<msg timestamp="20210225 21:57:41.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:41.421" starttime="20210225 21:57:41.409"></status>
</kw>
<msg timestamp="20210225 21:57:41.421" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:41.421" starttime="20210225 21:57:41.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:41.423" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:41.423" starttime="20210225 21:57:41.422"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:41.428" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:41.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:41.440" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:41.440" starttime="20210225 21:57:41.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.442" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:41.442" starttime="20210225 21:57:41.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:41.443" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:41.443" starttime="20210225 21:57:41.443"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.444" starttime="20210225 21:57:41.425"></status>
</kw>
<msg timestamp="20210225 21:57:41.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:41.444" starttime="20210225 21:57:41.424"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.444" starttime="20210225 21:57:41.423"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.445" starttime="20210225 21:57:41.423"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.445" starttime="20210225 21:57:41.408"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:41.445" starttime="20210225 21:57:41.407"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:41.449" level="INFO">Running command 'ozone sh key list 90559-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:48.574" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:48.574" level="INFO">${output} = {
  "volumeName" : "90559-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-25T21:47:42.096Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210225 21:57:48.574" starttime="20210225 21:57:41.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.577" level="INFO">{
  "volumeName" : "90559-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-25T21:47:42.096Z",
  "modificationTime" : "2021-02-25T21:50:46.222Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210225 21:57:48.577" starttime="20210225 21:57:48.575"></status>
</kw>
<msg timestamp="20210225 21:57:48.578" level="INFO">${result} = {
  "volumeName" : "90559-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-25T21:47:42.096Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210225 21:57:48.578" starttime="20210225 21:57:41.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210225 21:57:48.579" starttime="20210225 21:57:48.578"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.580" starttime="20210225 21:57:41.392"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.580" starttime="20210225 21:57:41.392"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:57:48.580" critical="yes" starttime="20210225 21:57:41.356"></status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:48.601" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:48.604" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:48.604" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:48.604" starttime="20210225 21:57:48.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.606" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:48.606" starttime="20210225 21:57:48.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:48.607" starttime="20210225 21:57:48.606"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.607" starttime="20210225 21:57:48.595"></status>
</kw>
<msg timestamp="20210225 21:57:48.607" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:48.608" starttime="20210225 21:57:48.595"></status>
</kw>
<msg timestamp="20210225 21:57:48.608" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:48.608" starttime="20210225 21:57:48.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:48.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:48.609" starttime="20210225 21:57:48.608"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:48.615" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:48.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:48.624" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:48.624" starttime="20210225 21:57:48.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.626" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:48.626" starttime="20210225 21:57:48.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:48.627" starttime="20210225 21:57:48.627"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.628" starttime="20210225 21:57:48.611"></status>
</kw>
<msg timestamp="20210225 21:57:48.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:48.628" starttime="20210225 21:57:48.611"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.628" starttime="20210225 21:57:48.610"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.628" starttime="20210225 21:57:48.609"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.629" starttime="20210225 21:57:48.593"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.629" starttime="20210225 21:57:48.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:48.635" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:48.641" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:48.641" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:48.641" starttime="20210225 21:57:48.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.644" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:48.644" starttime="20210225 21:57:48.642"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:48.645" starttime="20210225 21:57:48.644"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.645" starttime="20210225 21:57:48.632"></status>
</kw>
<msg timestamp="20210225 21:57:48.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:48.646" starttime="20210225 21:57:48.631"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.646" starttime="20210225 21:57:48.630"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:48.652" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:48.656" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:48.657" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:48.657" starttime="20210225 21:57:48.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.658" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:48.658" starttime="20210225 21:57:48.657"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.659" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:48.659" starttime="20210225 21:57:48.659"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.660" starttime="20210225 21:57:48.649"></status>
</kw>
<msg timestamp="20210225 21:57:48.660" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:48.660" starttime="20210225 21:57:48.649"></status>
</kw>
<msg timestamp="20210225 21:57:48.661" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:48.661" starttime="20210225 21:57:48.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:48.662" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:48.662" starttime="20210225 21:57:48.661"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:48.668" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:48.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:48.678" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:48.678" starttime="20210225 21:57:48.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.679" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:48.679" starttime="20210225 21:57:48.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:48.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:48.680" starttime="20210225 21:57:48.679"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.680" starttime="20210225 21:57:48.664"></status>
</kw>
<msg timestamp="20210225 21:57:48.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:48.680" starttime="20210225 21:57:48.664"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.681" starttime="20210225 21:57:48.663"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.681" starttime="20210225 21:57:48.662"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.681" starttime="20210225 21:57:48.647"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:48.681" starttime="20210225 21:57:48.646"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:48.684" level="INFO">Running command 'ozone sh key list 90559-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:54.763" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:57:54.763" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 90559-target unreadable-link null</msg>
<status status="PASS" endtime="20210225 21:57:54.763" starttime="20210225 21:57:48.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.764" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 90559-target unreadable-link null</msg>
<status status="PASS" endtime="20210225 21:57:54.764" starttime="20210225 21:57:54.763"></status>
</kw>
<msg timestamp="20210225 21:57:54.765" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 90559-target unreadable-link null</msg>
<status status="PASS" endtime="20210225 21:57:54.765" starttime="20210225 21:57:48.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210225 21:57:54.765" starttime="20210225 21:57:54.765"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.765" starttime="20210225 21:57:48.630"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.766" starttime="20210225 21:57:48.629"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:57:54.766" critical="yes" starttime="20210225 21:57:48.585"></status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:54.778" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:54.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:54.783" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:54.783" starttime="20210225 21:57:54.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.787" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:54.787" starttime="20210225 21:57:54.785"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:54.788" starttime="20210225 21:57:54.788"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.789" starttime="20210225 21:57:54.775"></status>
</kw>
<msg timestamp="20210225 21:57:54.789" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:54.789" starttime="20210225 21:57:54.775"></status>
</kw>
<msg timestamp="20210225 21:57:54.789" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:54.789" starttime="20210225 21:57:54.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:54.790" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:54.790" starttime="20210225 21:57:54.790"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:54.795" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:54.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:54.804" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:54.804" starttime="20210225 21:57:54.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.805" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:54.805" starttime="20210225 21:57:54.804"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.806" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:54.806" starttime="20210225 21:57:54.805"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.806" starttime="20210225 21:57:54.792"></status>
</kw>
<msg timestamp="20210225 21:57:54.806" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:54.806" starttime="20210225 21:57:54.792"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.807" starttime="20210225 21:57:54.791"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.807" starttime="20210225 21:57:54.790"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.807" starttime="20210225 21:57:54.774"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.807" starttime="20210225 21:57:54.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:54.813" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:54.817" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:54.817" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:54.817" starttime="20210225 21:57:54.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.819" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:54.820" starttime="20210225 21:57:54.818"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:54.821" starttime="20210225 21:57:54.820"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.822" starttime="20210225 21:57:54.809"></status>
</kw>
<msg timestamp="20210225 21:57:54.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:54.822" starttime="20210225 21:57:54.809"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.822" starttime="20210225 21:57:54.808"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:54.828" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:54.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:54.831" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:57:54.831" starttime="20210225 21:57:54.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.832" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:57:54.833" starttime="20210225 21:57:54.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:54.834" starttime="20210225 21:57:54.833"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.834" starttime="20210225 21:57:54.824"></status>
</kw>
<msg timestamp="20210225 21:57:54.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:54.834" starttime="20210225 21:57:54.824"></status>
</kw>
<msg timestamp="20210225 21:57:54.835" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:57:54.835" starttime="20210225 21:57:54.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:57:54.836" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:57:54.836" starttime="20210225 21:57:54.835"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:54.841" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:57:54.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:57:54.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:57:54.849" starttime="20210225 21:57:54.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.851" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:57:54.851" starttime="20210225 21:57:54.850"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:57:54.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:57:54.852" starttime="20210225 21:57:54.851"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.852" starttime="20210225 21:57:54.838"></status>
</kw>
<msg timestamp="20210225 21:57:54.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:57:54.852" starttime="20210225 21:57:54.837"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.852" starttime="20210225 21:57:54.837"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.853" starttime="20210225 21:57:54.836"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.853" starttime="20210225 21:57:54.823"></status>
</kw>
<status status="PASS" endtime="20210225 21:57:54.853" starttime="20210225 21:57:54.822"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:57:54.858" level="INFO">Running command 'ozone sh bucket info 90559-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:02.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:02.606" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210225 21:58:02.606" starttime="20210225 21:57:54.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:02.607" level="INFO">{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:13.683Z",
  "modificationTime" : "2021-02-25T21:51:44.486Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210225 21:58:02.607" starttime="20210225 21:58:02.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:02.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:02.609" starttime="20210225 21:58:02.608"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:02.609" starttime="20210225 21:57:54.854"></status>
</kw>
<msg timestamp="20210225 21:58:02.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:02.609" starttime="20210225 21:57:54.854"></status>
</kw>
<msg timestamp="20210225 21:58:02.610" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210225 21:58:02.610" starttime="20210225 21:57:54.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210225 21:58:02.610" starttime="20210225 21:58:02.610"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210225 21:58:02.611" starttime="20210225 21:58:02.610"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:02.616" level="INFO">Running command 'ozone sh key list 90559-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:08.277" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:58:08.277" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 90559-source unreadable-bucket </msg>
<status status="PASS" endtime="20210225 21:58:08.277" starttime="20210225 21:58:02.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:08.278" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 90559-source unreadable-bucket </msg>
<status status="PASS" endtime="20210225 21:58:08.278" starttime="20210225 21:58:08.277"></status>
</kw>
<msg timestamp="20210225 21:58:08.278" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 90559-source unreadable-bucket </msg>
<status status="PASS" endtime="20210225 21:58:08.279" starttime="20210225 21:58:02.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210225 21:58:08.279" starttime="20210225 21:58:08.279"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.279" starttime="20210225 21:57:54.808"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.279" starttime="20210225 21:57:54.807"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:58:08.280" critical="yes" starttime="20210225 21:57:54.768"></status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:08.286" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:08.289" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:08.289" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:58:08.289" starttime="20210225 21:58:08.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:08.290" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:58:08.290" starttime="20210225 21:58:08.289"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:08.291" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:08.291" starttime="20210225 21:58:08.290"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.291" starttime="20210225 21:58:08.283"></status>
</kw>
<msg timestamp="20210225 21:58:08.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:08.291" starttime="20210225 21:58:08.283"></status>
</kw>
<msg timestamp="20210225 21:58:08.292" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:58:08.292" starttime="20210225 21:58:08.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:58:08.292" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:58:08.292" starttime="20210225 21:58:08.292"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:08.296" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:08.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:08.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:58:08.304" starttime="20210225 21:58:08.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:08.305" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:58:08.306" starttime="20210225 21:58:08.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:08.306" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:08.306" starttime="20210225 21:58:08.306"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.307" starttime="20210225 21:58:08.294"></status>
</kw>
<msg timestamp="20210225 21:58:08.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:08.307" starttime="20210225 21:58:08.294"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.307" starttime="20210225 21:58:08.293"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.307" starttime="20210225 21:58:08.293"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.307" starttime="20210225 21:58:08.282"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:08.307" starttime="20210225 21:58:08.281"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:08.311" level="INFO">Running command 'ozone sh bucket link 90559-target/loop1 90559-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:13.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:13.863" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:58:13.863" starttime="20210225 21:58:08.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:13.865" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:58:13.866" starttime="20210225 21:58:13.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:13.867" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:13.867" starttime="20210225 21:58:13.866"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:13.868" starttime="20210225 21:58:08.309"></status>
</kw>
<msg timestamp="20210225 21:58:13.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:13.868" starttime="20210225 21:58:08.308"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:13.868" starttime="20210225 21:58:08.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:13.875" level="INFO">Running command 'ozone sh bucket link 90559-target/loop2 90559-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:20.593" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:20.593" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:58:20.593" starttime="20210225 21:58:13.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:20.595" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:58:20.595" starttime="20210225 21:58:20.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:20.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:20.596" starttime="20210225 21:58:20.595"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:20.597" starttime="20210225 21:58:13.871"></status>
</kw>
<msg timestamp="20210225 21:58:20.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:20.597" starttime="20210225 21:58:13.870"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:20.597" starttime="20210225 21:58:13.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:20.602" level="INFO">Running command 'ozone sh bucket link 90559-target/loop3 90559-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:25.259" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:25.259" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:58:25.259" starttime="20210225 21:58:20.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:25.261" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:58:25.262" starttime="20210225 21:58:25.260"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:25.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:25.263" starttime="20210225 21:58:25.262"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:25.264" starttime="20210225 21:58:20.599"></status>
</kw>
<msg timestamp="20210225 21:58:25.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:25.264" starttime="20210225 21:58:20.598"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:25.265" starttime="20210225 21:58:20.597"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:25.269" level="INFO">Running command 'ozone sh key list 90559-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:29.472" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 21:58:29.472" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210225 21:58:29.472" starttime="20210225 21:58:25.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:29.475" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210225 21:58:29.475" starttime="20210225 21:58:29.473"></status>
</kw>
<msg timestamp="20210225 21:58:29.475" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210225 21:58:29.476" starttime="20210225 21:58:25.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210225 21:58:29.477" starttime="20210225 21:58:29.476"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:58:29.478" critical="yes" starttime="20210225 21:58:08.280"></status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:29.488" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:29.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:29.492" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:58:29.492" starttime="20210225 21:58:29.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:29.493" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:58:29.496" starttime="20210225 21:58:29.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:29.497" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:29.497" starttime="20210225 21:58:29.497"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:29.498" starttime="20210225 21:58:29.484"></status>
</kw>
<msg timestamp="20210225 21:58:29.498" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:29.498" starttime="20210225 21:58:29.483"></status>
</kw>
<msg timestamp="20210225 21:58:29.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:58:29.499" starttime="20210225 21:58:29.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:58:29.499" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:58:29.500" starttime="20210225 21:58:29.499"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:29.509" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:29.518" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:29.518" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:58:29.518" starttime="20210225 21:58:29.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:29.520" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:58:29.520" starttime="20210225 21:58:29.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:29.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:29.521" starttime="20210225 21:58:29.520"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:29.521" starttime="20210225 21:58:29.504"></status>
</kw>
<msg timestamp="20210225 21:58:29.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:29.521" starttime="20210225 21:58:29.504"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:29.522" starttime="20210225 21:58:29.500"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:29.522" starttime="20210225 21:58:29.500"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:29.522" starttime="20210225 21:58:29.482"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:29.522" starttime="20210225 21:58:29.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:29.526" level="INFO">Running command 'ozone sh bucket link 90559-source/bucket1 90559-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:58:37.098" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:58:37.098" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:58:37.098" starttime="20210225 21:58:29.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:58:37.099" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:58:37.099" starttime="20210225 21:58:37.098"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:58:37.100" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:58:37.100" starttime="20210225 21:58:37.099"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:37.100" starttime="20210225 21:58:29.524"></status>
</kw>
<msg timestamp="20210225 21:58:37.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:58:37.100" starttime="20210225 21:58:29.523"></status>
</kw>
<status status="PASS" endtime="20210225 21:58:37.100" starttime="20210225 21:58:29.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:58:37.106" level="INFO">Running command 'ozone sh key put 90559-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:29.480" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 22:00:29.480" starttime="20210225 21:58:37.104"></status>
</kw>
<status status="FAIL" endtime="20210225 22:00:29.481" starttime="20210225 21:58:37.103"></status>
</kw>
<msg timestamp="20210225 22:00:29.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 22:00:29.481" starttime="20210225 21:58:37.102"></status>
</kw>
<status status="FAIL" endtime="20210225 22:00:29.481" starttime="20210225 21:58:37.101"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210225 22:00:29.482" critical="yes" starttime="20210225 21:58:29.479">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:29.493" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:29.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:00:29.497" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:00:29.497" starttime="20210225 22:00:29.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:00:29.498" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:00:29.498" starttime="20210225 22:00:29.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:00:29.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:00:29.499" starttime="20210225 22:00:29.499"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:29.500" starttime="20210225 22:00:29.488"></status>
</kw>
<msg timestamp="20210225 22:00:29.500" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:00:29.500" starttime="20210225 22:00:29.488"></status>
</kw>
<msg timestamp="20210225 22:00:29.500" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:00:29.500" starttime="20210225 22:00:29.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:00:29.502" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:00:29.502" starttime="20210225 22:00:29.501"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:29.508" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:29.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:00:29.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:00:29.515" starttime="20210225 22:00:29.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:00:29.517" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:00:29.517" starttime="20210225 22:00:29.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:00:29.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:00:29.518" starttime="20210225 22:00:29.517"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:29.518" starttime="20210225 22:00:29.504"></status>
</kw>
<msg timestamp="20210225 22:00:29.518" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:00:29.519" starttime="20210225 22:00:29.503"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:29.519" starttime="20210225 22:00:29.503"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:29.519" starttime="20210225 22:00:29.502"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:29.519" starttime="20210225 22:00:29.487"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:29.519" starttime="20210225 22:00:29.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:29.528" level="INFO">Running command 'ozone sh bucket delete 90559-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:34.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:00:34.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:00:34.131" starttime="20210225 22:00:29.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:00:34.132" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:00:34.132" starttime="20210225 22:00:34.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:00:34.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:00:34.133" starttime="20210225 22:00:34.133"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:34.134" starttime="20210225 22:00:29.522"></status>
</kw>
<msg timestamp="20210225 22:00:34.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:00:34.134" starttime="20210225 22:00:29.521"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:34.134" starttime="20210225 22:00:29.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:34.139" level="INFO">Running command 'ozone sh bucket list 90559-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:41.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:00:41.623" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T...</msg>
<status status="PASS" endtime="20210225 22:00:41.623" starttime="20210225 22:00:34.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:00:41.625" level="INFO">{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:57:34.561Z",
  "modificationTime" : "2021-02-25T21:57:34.561Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:50.586Z",
  "modificationTime" : "2021-02-25T21:51:50.586Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:13.683Z",
  "modificationTime" : "2021-02-25T21:51:44.486Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:57:20.416Z",
  "modificationTime" : "2021-02-25T21:57:20.416Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:58:36.769Z",
  "modificationTime" : "2021-02-25T21:58:36.769Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:58:24.989Z",
  "modificationTime" : "2021-02-25T21:58:24.989Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:58:13.640Z",
  "modificationTime" : "2021-02-25T21:58:13.640Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:58:20.469Z",
  "modificationTime" : "2021-02-25T21:58:20.469Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:00.653Z",
  "modificationTime" : "2021-02-25T21:51:38.650Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T21:51:07.776Z",
  "modificationTime" : "2021-02-25T21:51:07.776Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "90559-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210225 22:00:41.626" starttime="20210225 22:00:41.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:00:41.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:00:41.627" starttime="20210225 22:00:41.626"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:41.628" starttime="20210225 22:00:34.136"></status>
</kw>
<msg timestamp="20210225 22:00:41.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:00:41.628" starttime="20210225 22:00:34.135"></status>
</kw>
<msg timestamp="20210225 22:00:41.629" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "90559-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-25T...</msg>
<status status="PASS" endtime="20210225 22:00:41.629" starttime="20210225 22:00:34.134"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210225 22:00:41.629" starttime="20210225 22:00:41.629"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:41.635" level="INFO">Running command 'ozone sh key list 90559-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:49.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:00:49.010" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210225 22:00:49.011" starttime="20210225 22:00:41.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:00:49.012" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210225 22:00:49.012" starttime="20210225 22:00:49.011"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:00:49.013" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:00:49.013" starttime="20210225 22:00:49.012"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:49.013" starttime="20210225 22:00:41.631"></status>
</kw>
<msg timestamp="20210225 22:00:49.013" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:00:49.014" starttime="20210225 22:00:41.630"></status>
</kw>
<msg timestamp="20210225 22:00:49.014" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210225 22:00:49.014" starttime="20210225 22:00:41.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210225 22:00:49.015" starttime="20210225 22:00:49.014"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 22:00:49.015" critical="yes" starttime="20210225 22:00:29.485"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210225 22:00:49.020" starttime="20210225 21:47:14.251"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210225 22:00:49.057" level="INFO">${random} = 58960</msg>
<status status="PASS" endtime="20210225 22:00:49.057" starttime="20210225 22:00:49.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210225 22:00:49.057" level="INFO">${prefix} = 58960</msg>
<status status="PASS" endtime="20210225 22:00:49.057" starttime="20210225 22:00:49.057"></status>
</kw>
<status status="PASS" endtime="20210225 22:00:49.058" starttime="20210225 22:00:49.056"></status>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:49.100" level="INFO">Running command 'ozone sh volume info /58960-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:00:55.330" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 22:00:55.331" level="INFO">${output} = VOLUME_NOT_FOUND Volume 58960-rpcbasic is not found</msg>
<status status="PASS" endtime="20210225 22:00:55.331" starttime="20210225 22:00:49.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:00:55.332" level="INFO">VOLUME_NOT_FOUND Volume 58960-rpcbasic is not found</msg>
<status status="PASS" endtime="20210225 22:00:55.332" starttime="20210225 22:00:55.331"></status>
</kw>
<msg timestamp="20210225 22:00:55.332" level="INFO">${result} = VOLUME_NOT_FOUND Volume 58960-rpcbasic is not found</msg>
<status status="PASS" endtime="20210225 22:00:55.332" starttime="20210225 22:00:49.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210225 22:00:55.333" starttime="20210225 22:00:55.333"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:00:55.337" level="INFO">Running command 'ozone sh volume create /58960-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:01.348" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:01.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:01:01.349" starttime="20210225 22:00:55.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:01.351" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:01:01.352" starttime="20210225 22:01:01.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:01.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:01.353" starttime="20210225 22:01:01.352"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:01.354" starttime="20210225 22:00:55.334"></status>
</kw>
<msg timestamp="20210225 22:01:01.354" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:01.354" starttime="20210225 22:00:55.334"></status>
</kw>
<msg timestamp="20210225 22:01:01.355" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210225 22:01:01.355" starttime="20210225 22:00:55.333"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:01.356" starttime="20210225 22:01:01.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:01.364" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="58960-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:08.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:08.652" level="INFO">${output} = {
  "metadata": {},
  "name": "58960-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:01:08.652" starttime="20210225 22:01:01.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:08.654" level="INFO">{
  "metadata": {},
  "name": "58960-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:01:01.006Z",
  "modificationTime": "2021-02-25T22:01:01.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:01:08.654" starttime="20210225 22:01:08.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:08.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:08.656" starttime="20210225 22:01:08.654"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:08.656" starttime="20210225 22:01:01.359"></status>
</kw>
<msg timestamp="20210225 22:01:08.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:08.657" starttime="20210225 22:01:01.358"></status>
</kw>
<msg timestamp="20210225 22:01:08.657" level="INFO">${result} = {
  "metadata": {},
  "name": "58960-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:01:08.657" starttime="20210225 22:01:01.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:08.659" starttime="20210225 22:01:08.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:08.665" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="58960-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:15.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:15.155" level="INFO">${output} = {
  "metadata": {},
  "name": "58960-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:01:15.155" starttime="20210225 22:01:08.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:15.157" level="INFO">{
  "metadata": {},
  "name": "58960-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:01:01.006Z",
  "modificationTime": "2021-02-25T22:01:01.006Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:01:15.158" starttime="20210225 22:01:15.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:15.159" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:15.159" starttime="20210225 22:01:15.158"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:15.160" starttime="20210225 22:01:08.661"></status>
</kw>
<msg timestamp="20210225 22:01:15.160" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:15.160" starttime="20210225 22:01:08.660"></status>
</kw>
<msg timestamp="20210225 22:01:15.161" level="INFO">${result} = {
  "metadata": {},
  "name": "58960-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:01:15.161" starttime="20210225 22:01:08.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:15.163" starttime="20210225 22:01:15.162"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:15.168" level="INFO">Running command 'ozone sh volume setquota /58960-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:22.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:22.257" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:01:22.257" starttime="20210225 22:01:15.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:22.259" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:01:22.259" starttime="20210225 22:01:22.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:22.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:22.261" starttime="20210225 22:01:22.260"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:22.262" starttime="20210225 22:01:15.164"></status>
</kw>
<msg timestamp="20210225 22:01:22.262" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:22.262" starttime="20210225 22:01:15.164"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:22.263" starttime="20210225 22:01:15.163"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:22.272" level="INFO">Running command 'ozone sh volume info /58960-rpcbasic | jq -r '. | select(.name=="58960-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:29.769" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:29.769" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:01:29.769" starttime="20210225 22:01:22.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:29.771" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:01:29.771" starttime="20210225 22:01:29.770"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:29.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:29.772" starttime="20210225 22:01:29.771"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:29.772" starttime="20210225 22:01:22.266"></status>
</kw>
<msg timestamp="20210225 22:01:29.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:29.772" starttime="20210225 22:01:22.265"></status>
</kw>
<msg timestamp="20210225 22:01:29.772" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:01:29.773" starttime="20210225 22:01:22.263"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:29.773" starttime="20210225 22:01:29.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:29.778" level="INFO">Running command 'ozone sh bucket create /58960-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:36.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:36.425" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:01:36.425" starttime="20210225 22:01:29.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:36.427" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:01:36.427" starttime="20210225 22:01:36.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:36.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:36.428" starttime="20210225 22:01:36.427"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:36.428" starttime="20210225 22:01:29.774"></status>
</kw>
<msg timestamp="20210225 22:01:36.428" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:36.428" starttime="20210225 22:01:29.774"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:36.429" starttime="20210225 22:01:29.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:36.434" level="INFO">Running command 'ozone sh bucket info /58960-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:41.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:41.915" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210225 22:01:41.915" starttime="20210225 22:01:36.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:41.917" level="INFO">DISK</msg>
<status status="PASS" endtime="20210225 22:01:41.917" starttime="20210225 22:01:41.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:41.917" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:41.918" starttime="20210225 22:01:41.917"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:41.918" starttime="20210225 22:01:36.430"></status>
</kw>
<msg timestamp="20210225 22:01:41.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:41.918" starttime="20210225 22:01:36.430"></status>
</kw>
<msg timestamp="20210225 22:01:41.918" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210225 22:01:41.918" starttime="20210225 22:01:36.429"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:41.919" starttime="20210225 22:01:41.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:41.926" level="INFO">Running command 'ozone sh bucket info /58960-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:48.943" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:48.944" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:01:48.944" starttime="20210225 22:01:41.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:48.945" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:01:48.945" starttime="20210225 22:01:48.944"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:48.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:48.946" starttime="20210225 22:01:48.945"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:48.946" starttime="20210225 22:01:41.922"></status>
</kw>
<msg timestamp="20210225 22:01:48.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:48.946" starttime="20210225 22:01:41.921"></status>
</kw>
<msg timestamp="20210225 22:01:48.947" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:01:48.947" starttime="20210225 22:01:41.919"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:48.947" starttime="20210225 22:01:48.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:48.954" level="INFO">Running command 'ozone sh bucket info /58960-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:01:55.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:01:55.401" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210225 22:01:55.402" starttime="20210225 22:01:48.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:01:55.403" level="INFO">100</msg>
<status status="PASS" endtime="20210225 22:01:55.403" starttime="20210225 22:01:55.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:01:55.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:01:55.404" starttime="20210225 22:01:55.403"></status>
</kw>
<status status="PASS" endtime="20210225 22:01:55.404" starttime="20210225 22:01:48.949"></status>
</kw>
<msg timestamp="20210225 22:01:55.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:01:55.404" starttime="20210225 22:01:48.948"></status>
</kw>
<msg timestamp="20210225 22:01:55.405" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210225 22:01:55.405" starttime="20210225 22:01:48.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210225 22:01:55.405" starttime="20210225 22:01:55.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:01:55.411" level="INFO">Running command 'ozone sh bucket setquota /58960-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:02:02.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:02:02.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:02:02.039" starttime="20210225 22:01:55.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:02:02.042" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:02:02.042" starttime="20210225 22:02:02.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:02:02.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:02:02.043" starttime="20210225 22:02:02.042"></status>
</kw>
<status status="PASS" endtime="20210225 22:02:02.044" starttime="20210225 22:01:55.407"></status>
</kw>
<msg timestamp="20210225 22:02:02.044" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:02:02.044" starttime="20210225 22:01:55.406"></status>
</kw>
<status status="PASS" endtime="20210225 22:02:02.044" starttime="20210225 22:01:55.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:02:02.049" level="INFO">Running command 'ozone sh bucket info /58960-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:02:07.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:02:07.135" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:02:07.135" starttime="20210225 22:02:02.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:02:07.138" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210225 22:02:07.138" starttime="20210225 22:02:07.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:02:07.141" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:02:07.141" starttime="20210225 22:02:07.138"></status>
</kw>
<status status="PASS" endtime="20210225 22:02:07.142" starttime="20210225 22:02:02.046"></status>
</kw>
<msg timestamp="20210225 22:02:07.142" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:02:07.142" starttime="20210225 22:02:02.045"></status>
</kw>
<msg timestamp="20210225 22:02:07.142" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:02:07.142" starttime="20210225 22:02:02.044"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210225 22:02:07.143" starttime="20210225 22:02:07.142"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:02:07.149" level="INFO">Running command 'ozone sh bucket info /58960-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:02:14.064" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:02:14.064" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210225 22:02:14.065" starttime="20210225 22:02:07.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:02:14.067" level="INFO">1000</msg>
<status status="PASS" endtime="20210225 22:02:14.067" starttime="20210225 22:02:14.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:02:14.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:02:14.069" starttime="20210225 22:02:14.067"></status>
</kw>
<status status="PASS" endtime="20210225 22:02:14.070" starttime="20210225 22:02:07.144"></status>
</kw>
<msg timestamp="20210225 22:02:14.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:02:14.070" starttime="20210225 22:02:07.144"></status>
</kw>
<msg timestamp="20210225 22:02:14.070" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210225 22:02:14.071" starttime="20210225 22:02:07.143"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210225 22:02:14.072" starttime="20210225 22:02:14.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:02:14.079" level="INFO">Running command 'ozone sh bucket list /58960-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:02:21.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:02:21.265" level="INFO">${output} = 58960-rpcbasic</msg>
<status status="PASS" endtime="20210225 22:02:21.265" starttime="20210225 22:02:14.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:02:21.267" level="INFO">58960-rpcbasic</msg>
<status status="PASS" endtime="20210225 22:02:21.267" starttime="20210225 22:02:21.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:02:21.268" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:02:21.268" starttime="20210225 22:02:21.267"></status>
</kw>
<status status="PASS" endtime="20210225 22:02:21.269" starttime="20210225 22:02:14.075"></status>
</kw>
<msg timestamp="20210225 22:02:21.269" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:02:21.269" starttime="20210225 22:02:14.074"></status>
</kw>
<msg timestamp="20210225 22:02:21.269" level="INFO">${result} = 58960-rpcbasic</msg>
<status status="PASS" endtime="20210225 22:02:21.269" starttime="20210225 22:02:14.072"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210225 22:02:21.270" starttime="20210225 22:02:21.270"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:02:21.277" level="INFO">Running command 'ozone sh key put /58960-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:32.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:05:32.075" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:05:32.076" starttime="20210225 22:02:21.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:32.079" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:05:32.079" starttime="20210225 22:05:32.076"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:05:32.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:05:32.080" starttime="20210225 22:05:32.079"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:32.081" starttime="20210225 22:02:21.274"></status>
</kw>
<msg timestamp="20210225 22:05:32.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:05:32.081" starttime="20210225 22:02:21.273"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:32.082" starttime="20210225 22:02:21.272"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:32.089" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:32.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:05:32.094" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:05:32.094" starttime="20210225 22:05:32.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:32.095" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:05:32.095" starttime="20210225 22:05:32.094"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:05:32.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:05:32.096" starttime="20210225 22:05:32.095"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:32.096" starttime="20210225 22:05:32.084"></status>
</kw>
<msg timestamp="20210225 22:05:32.096" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:05:32.097" starttime="20210225 22:05:32.083"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:32.097" starttime="20210225 22:05:32.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:32.116" level="INFO">Running command 'ozone sh key get /58960-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:40.958" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:05:40.958" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:05:40.958" starttime="20210225 22:05:32.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:40.959" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:05:40.959" starttime="20210225 22:05:40.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:05:40.960" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:05:40.960" starttime="20210225 22:05:40.959"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:40.960" starttime="20210225 22:05:32.099"></status>
</kw>
<msg timestamp="20210225 22:05:40.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:05:40.960" starttime="20210225 22:05:32.099"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:40.961" starttime="20210225 22:05:32.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:40.964" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:40.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:05:40.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:05:40.970" starttime="20210225 22:05:40.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:40.971" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:05:40.971" starttime="20210225 22:05:40.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:05:40.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:05:40.972" starttime="20210225 22:05:40.972"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:40.972" starttime="20210225 22:05:40.962"></status>
</kw>
<msg timestamp="20210225 22:05:40.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:05:40.973" starttime="20210225 22:05:40.961"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:40.973" starttime="20210225 22:05:40.961"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:40.977" level="INFO">Running command 'ozone sh key put -t RATIS /58960-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:49.059" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 22:05:49.059" starttime="20210225 22:05:40.975"></status>
</kw>
<status status="FAIL" endtime="20210225 22:05:49.062" starttime="20210225 22:05:40.974"></status>
</kw>
<msg timestamp="20210225 22:05:49.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 22:05:49.062" starttime="20210225 22:05:40.974"></status>
</kw>
<status status="FAIL" endtime="20210225 22:05:49.062" starttime="20210225 22:05:40.973"></status>
</kw>
<status status="FAIL" endtime="20210225 22:05:49.062" starttime="20210225 22:02:21.271"></status>
</kw>
<status status="FAIL" endtime="20210225 22:05:49.062" starttime="20210225 22:02:21.270"></status>
</kw>
<status status="FAIL" endtime="20210225 22:05:49.063" starttime="20210225 22:00:49.059"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210225 22:05:49.063" critical="yes" starttime="20210225 22:00:49.058">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210225 22:05:49.067" starttime="20210225 22:00:49.031"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210225 22:05:49.147" level="INFO">${random} = 65747</msg>
<status status="PASS" endtime="20210225 22:05:49.147" starttime="20210225 22:05:49.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210225 22:05:49.148" level="INFO">${prefix} = 65747</msg>
<status status="PASS" endtime="20210225 22:05:49.148" starttime="20210225 22:05:49.147"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.148" starttime="20210225 22:05:49.146"></status>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:49.207" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:49.230" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:05:49.230" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:05:49.232" starttime="20210225 22:05:49.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:49.238" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:05:49.239" starttime="20210225 22:05:49.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:05:49.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:05:49.244" starttime="20210225 22:05:49.239"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.247" starttime="20210225 22:05:49.190"></status>
</kw>
<msg timestamp="20210225 22:05:49.247" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:05:49.249" starttime="20210225 22:05:49.188"></status>
</kw>
<msg timestamp="20210225 22:05:49.252" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:05:49.255" starttime="20210225 22:05:49.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:05:49.262" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:05:49.262" starttime="20210225 22:05:49.258"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:49.299" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:49.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:05:49.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:05:49.389" starttime="20210225 22:05:49.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:49.395" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:05:49.395" starttime="20210225 22:05:49.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:05:49.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:05:49.399" starttime="20210225 22:05:49.398"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.399" starttime="20210225 22:05:49.277"></status>
</kw>
<msg timestamp="20210225 22:05:49.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:05:49.399" starttime="20210225 22:05:49.276"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.399" starttime="20210225 22:05:49.264"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.400" starttime="20210225 22:05:49.263"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.400" starttime="20210225 22:05:49.182"></status>
</kw>
<status status="PASS" endtime="20210225 22:05:49.400" starttime="20210225 22:05:49.158"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:49.438" level="INFO">Running command 'ozone sh volume info o3://om:9862/65747-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:05:57.578" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 22:05:57.578" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65747-rpcwoport is not found</msg>
<status status="PASS" endtime="20210225 22:05:57.578" starttime="20210225 22:05:49.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:05:57.579" level="INFO">VOLUME_NOT_FOUND Volume 65747-rpcwoport is not found</msg>
<status status="PASS" endtime="20210225 22:05:57.580" starttime="20210225 22:05:57.579"></status>
</kw>
<msg timestamp="20210225 22:05:57.580" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65747-rpcwoport is not found</msg>
<status status="PASS" endtime="20210225 22:05:57.580" starttime="20210225 22:05:49.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210225 22:05:57.581" starttime="20210225 22:05:57.580"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:05:57.588" level="INFO">Running command 'ozone sh volume create o3://om:9862/65747-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:04.244" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:04.244" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:06:04.244" starttime="20210225 22:05:57.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:04.247" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:06:04.247" starttime="20210225 22:06:04.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:04.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:04.248" starttime="20210225 22:06:04.247"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:04.249" starttime="20210225 22:05:57.583"></status>
</kw>
<msg timestamp="20210225 22:06:04.249" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:04.249" starttime="20210225 22:05:57.582"></status>
</kw>
<msg timestamp="20210225 22:06:04.250" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210225 22:06:04.250" starttime="20210225 22:05:57.581"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:04.251" starttime="20210225 22:06:04.250"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:04.258" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="65747-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:11.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:11.493" level="INFO">${output} = {
  "metadata": {},
  "name": "65747-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210225 22:06:11.493" starttime="20210225 22:06:04.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:11.494" level="INFO">{
  "metadata": {},
  "name": "65747-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:06:04.155Z",
  "modificationTime": "2021-02-25T22:06:04.155Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:06:11.495" starttime="20210225 22:06:11.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:11.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:11.495" starttime="20210225 22:06:11.495"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:11.496" starttime="20210225 22:06:04.254"></status>
</kw>
<msg timestamp="20210225 22:06:11.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:11.496" starttime="20210225 22:06:04.254"></status>
</kw>
<msg timestamp="20210225 22:06:11.496" level="INFO">${result} = {
  "metadata": {},
  "name": "65747-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210225 22:06:11.497" starttime="20210225 22:06:04.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:11.498" starttime="20210225 22:06:11.497"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:11.506" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="65747-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:19.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:19.159" level="INFO">${output} = {
  "metadata": {},
  "name": "65747-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210225 22:06:19.160" starttime="20210225 22:06:11.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:19.162" level="INFO">{
  "metadata": {},
  "name": "65747-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:06:04.155Z",
  "modificationTime": "2021-02-25T22:06:04.155Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:06:19.162" starttime="20210225 22:06:19.161"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:19.163" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:19.163" starttime="20210225 22:06:19.162"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:19.164" starttime="20210225 22:06:11.501"></status>
</kw>
<msg timestamp="20210225 22:06:19.164" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:19.164" starttime="20210225 22:06:11.500"></status>
</kw>
<msg timestamp="20210225 22:06:19.165" level="INFO">${result} = {
  "metadata": {},
  "name": "65747-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210225 22:06:19.165" starttime="20210225 22:06:11.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:19.166" starttime="20210225 22:06:19.165"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:19.174" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/65747-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:24.399" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:24.399" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:06:24.399" starttime="20210225 22:06:19.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:24.400" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:06:24.401" starttime="20210225 22:06:24.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:24.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:24.401" starttime="20210225 22:06:24.401"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:24.402" starttime="20210225 22:06:19.168"></status>
</kw>
<msg timestamp="20210225 22:06:24.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:24.402" starttime="20210225 22:06:19.168"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:24.402" starttime="20210225 22:06:19.166"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:24.406" level="INFO">Running command 'ozone sh volume info o3://om:9862/65747-rpcwoport | jq -r '. | select(.name=="65747-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:31.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:31.815" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:06:31.815" starttime="20210225 22:06:24.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:31.816" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:06:31.817" starttime="20210225 22:06:31.815"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:31.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:31.818" starttime="20210225 22:06:31.817"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:31.818" starttime="20210225 22:06:24.404"></status>
</kw>
<msg timestamp="20210225 22:06:31.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:31.819" starttime="20210225 22:06:24.403"></status>
</kw>
<msg timestamp="20210225 22:06:31.819" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:06:31.819" starttime="20210225 22:06:24.402"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:31.820" starttime="20210225 22:06:31.819"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:31.826" level="INFO">Running command 'ozone sh bucket create o3://om:9862/65747-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:37.022" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:37.022" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:06:37.022" starttime="20210225 22:06:31.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:37.023" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:06:37.023" starttime="20210225 22:06:37.022"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:37.024" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:37.024" starttime="20210225 22:06:37.023"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:37.024" starttime="20210225 22:06:31.822"></status>
</kw>
<msg timestamp="20210225 22:06:37.024" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:37.024" starttime="20210225 22:06:31.821"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:37.024" starttime="20210225 22:06:31.820"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:37.029" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65747-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:43.379" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:43.379" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210225 22:06:43.379" starttime="20210225 22:06:37.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:43.404" level="INFO">DISK</msg>
<status status="PASS" endtime="20210225 22:06:43.404" starttime="20210225 22:06:43.380"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:43.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:43.405" starttime="20210225 22:06:43.404"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:43.406" starttime="20210225 22:06:37.026"></status>
</kw>
<msg timestamp="20210225 22:06:43.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:43.406" starttime="20210225 22:06:37.026"></status>
</kw>
<msg timestamp="20210225 22:06:43.407" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210225 22:06:43.407" starttime="20210225 22:06:37.025"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:43.408" starttime="20210225 22:06:43.407"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:43.412" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65747-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:50.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:50.561" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:06:50.561" starttime="20210225 22:06:43.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:50.562" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:06:50.562" starttime="20210225 22:06:50.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:50.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:50.563" starttime="20210225 22:06:50.562"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:50.563" starttime="20210225 22:06:43.409"></status>
</kw>
<msg timestamp="20210225 22:06:50.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:50.564" starttime="20210225 22:06:43.409"></status>
</kw>
<msg timestamp="20210225 22:06:50.564" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:06:50.564" starttime="20210225 22:06:43.408"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:50.565" starttime="20210225 22:06:50.564"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:50.571" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65747-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:06:57.891" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:06:57.891" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210225 22:06:57.891" starttime="20210225 22:06:50.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:06:57.893" level="INFO">100</msg>
<status status="PASS" endtime="20210225 22:06:57.893" starttime="20210225 22:06:57.892"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:06:57.894" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:06:57.895" starttime="20210225 22:06:57.894"></status>
</kw>
<status status="PASS" endtime="20210225 22:06:57.895" starttime="20210225 22:06:50.566"></status>
</kw>
<msg timestamp="20210225 22:06:57.895" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:06:57.896" starttime="20210225 22:06:50.566"></status>
</kw>
<msg timestamp="20210225 22:06:57.896" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210225 22:06:57.896" starttime="20210225 22:06:50.565"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210225 22:06:57.897" starttime="20210225 22:06:57.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:06:57.903" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/65747-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:07:04.818" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:07:04.818" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:07:04.818" starttime="20210225 22:06:57.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:07:04.820" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:07:04.820" starttime="20210225 22:07:04.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:07:04.821" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:07:04.822" starttime="20210225 22:07:04.821"></status>
</kw>
<status status="PASS" endtime="20210225 22:07:04.822" starttime="20210225 22:06:57.899"></status>
</kw>
<msg timestamp="20210225 22:07:04.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:07:04.822" starttime="20210225 22:06:57.898"></status>
</kw>
<status status="PASS" endtime="20210225 22:07:04.823" starttime="20210225 22:06:57.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:07:04.828" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65747-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:07:10.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:07:10.703" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:07:10.703" starttime="20210225 22:07:04.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:07:10.704" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210225 22:07:10.704" starttime="20210225 22:07:10.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:07:10.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:07:10.705" starttime="20210225 22:07:10.704"></status>
</kw>
<status status="PASS" endtime="20210225 22:07:10.705" starttime="20210225 22:07:04.824"></status>
</kw>
<msg timestamp="20210225 22:07:10.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:07:10.706" starttime="20210225 22:07:04.824"></status>
</kw>
<msg timestamp="20210225 22:07:10.706" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:07:10.706" starttime="20210225 22:07:04.823"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210225 22:07:10.707" starttime="20210225 22:07:10.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:07:10.711" level="INFO">Running command 'ozone sh bucket info o3://om:9862/65747-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:07:17.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:07:17.204" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210225 22:07:17.204" starttime="20210225 22:07:10.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:07:17.206" level="INFO">1000</msg>
<status status="PASS" endtime="20210225 22:07:17.206" starttime="20210225 22:07:17.205"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:07:17.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:07:17.208" starttime="20210225 22:07:17.207"></status>
</kw>
<status status="PASS" endtime="20210225 22:07:17.209" starttime="20210225 22:07:10.708"></status>
</kw>
<msg timestamp="20210225 22:07:17.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:07:17.209" starttime="20210225 22:07:10.708"></status>
</kw>
<msg timestamp="20210225 22:07:17.210" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210225 22:07:17.210" starttime="20210225 22:07:10.707"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210225 22:07:17.211" starttime="20210225 22:07:17.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:07:17.218" level="INFO">Running command 'ozone sh bucket list o3://om:9862/65747-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:07:24.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:07:24.342" level="INFO">${output} = 65747-rpcwoport</msg>
<status status="PASS" endtime="20210225 22:07:24.342" starttime="20210225 22:07:17.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:07:24.343" level="INFO">65747-rpcwoport</msg>
<status status="PASS" endtime="20210225 22:07:24.344" starttime="20210225 22:07:24.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:07:24.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:07:24.344" starttime="20210225 22:07:24.344"></status>
</kw>
<status status="PASS" endtime="20210225 22:07:24.345" starttime="20210225 22:07:17.214"></status>
</kw>
<msg timestamp="20210225 22:07:24.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:07:24.345" starttime="20210225 22:07:17.213"></status>
</kw>
<msg timestamp="20210225 22:07:24.345" level="INFO">${result} = 65747-rpcwoport</msg>
<status status="PASS" endtime="20210225 22:07:24.345" starttime="20210225 22:07:17.211"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210225 22:07:24.346" starttime="20210225 22:07:24.346"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:07:24.358" level="INFO">Running command 'ozone sh key put o3://om:9862/65747-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:35.081" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:10:35.081" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:10:35.082" starttime="20210225 22:07:24.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:10:35.085" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:10:35.085" starttime="20210225 22:10:35.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:10:35.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:10:35.086" starttime="20210225 22:10:35.086"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:35.087" starttime="20210225 22:07:24.349"></status>
</kw>
<msg timestamp="20210225 22:10:35.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:10:35.087" starttime="20210225 22:07:24.349"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:35.087" starttime="20210225 22:07:24.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:35.091" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:35.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:10:35.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:10:35.095" starttime="20210225 22:10:35.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:10:35.097" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:10:35.098" starttime="20210225 22:10:35.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:10:35.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:10:35.099" starttime="20210225 22:10:35.098"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:35.099" starttime="20210225 22:10:35.088"></status>
</kw>
<msg timestamp="20210225 22:10:35.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:10:35.100" starttime="20210225 22:10:35.088"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:35.100" starttime="20210225 22:10:35.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:35.107" level="INFO">Running command 'ozone sh key get o3://om:9862/65747-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:43.430" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:10:43.430" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:10:43.431" starttime="20210225 22:10:35.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:10:43.432" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:10:43.432" starttime="20210225 22:10:43.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:10:43.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:10:43.433" starttime="20210225 22:10:43.432"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:43.433" starttime="20210225 22:10:35.102"></status>
</kw>
<msg timestamp="20210225 22:10:43.433" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:10:43.434" starttime="20210225 22:10:35.102"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:43.434" starttime="20210225 22:10:35.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:43.440" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:43.442" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:10:43.442" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:10:43.442" starttime="20210225 22:10:43.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:10:43.443" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:10:43.443" starttime="20210225 22:10:43.442"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:10:43.444" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:10:43.444" starttime="20210225 22:10:43.443"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:43.445" starttime="20210225 22:10:43.435"></status>
</kw>
<msg timestamp="20210225 22:10:43.445" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:10:43.445" starttime="20210225 22:10:43.435"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:43.445" starttime="20210225 22:10:43.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:43.450" level="INFO">Running command 'ozone sh key put -t RATIS o3://om:9862/65747-rpcwoport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:49.151" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 22:10:49.151" starttime="20210225 22:10:43.447"></status>
</kw>
<status status="FAIL" endtime="20210225 22:10:49.152" starttime="20210225 22:10:43.446"></status>
</kw>
<msg timestamp="20210225 22:10:49.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 22:10:49.153" starttime="20210225 22:10:43.446"></status>
</kw>
<status status="FAIL" endtime="20210225 22:10:49.154" starttime="20210225 22:10:43.445"></status>
</kw>
<status status="FAIL" endtime="20210225 22:10:49.154" starttime="20210225 22:07:24.347"></status>
</kw>
<status status="FAIL" endtime="20210225 22:10:49.155" starttime="20210225 22:07:24.347"></status>
</kw>
<status status="FAIL" endtime="20210225 22:10:49.155" starttime="20210225 22:05:49.400"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210225 22:10:49.156" critical="yes" starttime="20210225 22:05:49.148">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:49.190" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:49.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:10:49.218" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:10:49.218" starttime="20210225 22:10:49.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:10:49.219" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:10:49.219" starttime="20210225 22:10:49.218"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:10:49.223" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:10:49.224" starttime="20210225 22:10:49.220"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:49.224" starttime="20210225 22:10:49.164"></status>
</kw>
<msg timestamp="20210225 22:10:49.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:10:49.226" starttime="20210225 22:10:49.164"></status>
</kw>
<msg timestamp="20210225 22:10:49.227" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:10:49.227" starttime="20210225 22:10:49.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:10:49.229" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:10:49.229" starttime="20210225 22:10:49.228"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:49.284" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:10:49.309" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:10:49.309" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:10:49.309" starttime="20210225 22:10:49.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:10:49.311" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:10:49.311" starttime="20210225 22:10:49.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:10:49.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:10:49.322" starttime="20210225 22:10:49.311"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:49.324" starttime="20210225 22:10:49.256"></status>
</kw>
<msg timestamp="20210225 22:10:49.324" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:10:49.324" starttime="20210225 22:10:49.248"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:49.325" starttime="20210225 22:10:49.237"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:49.325" starttime="20210225 22:10:49.230"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:49.326" starttime="20210225 22:10:49.161"></status>
</kw>
<status status="PASS" endtime="20210225 22:10:49.326" starttime="20210225 22:10:49.160"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:10:49.345" level="INFO">Running command 'ozone sh volume create o3://om:9862/65747-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:02.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:02.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:11:02.097" starttime="20210225 22:10:49.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:02.098" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:11:02.099" starttime="20210225 22:11:02.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:02.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:02.099" starttime="20210225 22:11:02.099"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:02.100" starttime="20210225 22:10:49.333"></status>
</kw>
<msg timestamp="20210225 22:11:02.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:02.100" starttime="20210225 22:10:49.332"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:02.100" starttime="20210225 22:10:49.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:02.105" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65747-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:08.047" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:08.047" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:11:08.047" starttime="20210225 22:11:02.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:08.049" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:11:08.049" starttime="20210225 22:11:08.048"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:08.049" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:08.049" starttime="20210225 22:11:08.049"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:08.052" starttime="20210225 22:11:02.102"></status>
</kw>
<msg timestamp="20210225 22:11:08.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:08.052" starttime="20210225 22:11:02.101"></status>
</kw>
<msg timestamp="20210225 22:11:08.053" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:11:08.053" starttime="20210225 22:11:02.100"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:11:08.055" starttime="20210225 22:11:08.053"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:08.063" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/65747-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:14.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:14.705" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210225 22:11:14.705" starttime="20210225 22:11:08.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:14.707" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210225 22:11:14.707" starttime="20210225 22:11:14.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:14.708" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:14.708" starttime="20210225 22:11:14.707"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:14.709" starttime="20210225 22:11:08.058"></status>
</kw>
<msg timestamp="20210225 22:11:14.709" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:14.709" starttime="20210225 22:11:08.057"></status>
</kw>
<msg timestamp="20210225 22:11:14.710" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210225 22:11:14.710" starttime="20210225 22:11:08.055"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:14.718" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65747-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:22.175" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:22.175" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:11:22.175" starttime="20210225 22:11:14.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:22.177" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:11:22.177" starttime="20210225 22:11:22.176"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:22.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:22.178" starttime="20210225 22:11:22.177"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:22.179" starttime="20210225 22:11:14.715"></status>
</kw>
<msg timestamp="20210225 22:11:22.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:22.179" starttime="20210225 22:11:14.712"></status>
</kw>
<msg timestamp="20210225 22:11:22.179" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:11:22.179" starttime="20210225 22:11:14.711"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:11:22.181" starttime="20210225 22:11:22.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:22.185" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/65747-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:29.177" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:29.178" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210225 22:11:29.178" starttime="20210225 22:11:22.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:29.180" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210225 22:11:29.180" starttime="20210225 22:11:29.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:29.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:29.183" starttime="20210225 22:11:29.180"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:29.184" starttime="20210225 22:11:22.182"></status>
</kw>
<msg timestamp="20210225 22:11:29.184" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:29.184" starttime="20210225 22:11:22.182"></status>
</kw>
<msg timestamp="20210225 22:11:29.186" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210225 22:11:29.186" starttime="20210225 22:11:22.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:29.196" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65747-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:36.383" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:36.383" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:11:36.383" starttime="20210225 22:11:29.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:36.386" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:11:36.386" starttime="20210225 22:11:36.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:36.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:36.387" starttime="20210225 22:11:36.386"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:36.388" starttime="20210225 22:11:29.190"></status>
</kw>
<msg timestamp="20210225 22:11:36.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:36.388" starttime="20210225 22:11:29.189"></status>
</kw>
<msg timestamp="20210225 22:11:36.389" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:11:36.389" starttime="20210225 22:11:29.186"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:11:36.391" starttime="20210225 22:11:36.389"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:36.398" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/65747-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:43.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:43.110" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:11:43.110" starttime="20210225 22:11:36.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:43.112" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:11:43.112" starttime="20210225 22:11:43.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:43.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:43.113" starttime="20210225 22:11:43.112"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:43.113" starttime="20210225 22:11:36.394"></status>
</kw>
<msg timestamp="20210225 22:11:43.113" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:43.113" starttime="20210225 22:11:36.393"></status>
</kw>
<msg timestamp="20210225 22:11:43.113" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:11:43.114" starttime="20210225 22:11:36.391"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:43.121" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/65747-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:49.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:49.752" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210225 22:11:49.752" starttime="20210225 22:11:43.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:49.754" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:11:49.755" starttime="20210225 22:11:49.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:49.756" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:49.757" starttime="20210225 22:11:49.756"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.757" starttime="20210225 22:11:43.115"></status>
</kw>
<msg timestamp="20210225 22:11:49.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:49.758" starttime="20210225 22:11:43.114"></status>
</kw>
<msg timestamp="20210225 22:11:49.759" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210225 22:11:49.759" starttime="20210225 22:11:43.114"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:11:49.760" starttime="20210225 22:11:49.759"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:11:49.761" starttime="20210225 22:11:49.760"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.761" starttime="20210225 22:10:49.328"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 22:11:49.761" critical="yes" starttime="20210225 22:10:49.158"></status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:49.775" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:49.780" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:49.781" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:11:49.781" starttime="20210225 22:11:49.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:49.785" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:11:49.785" starttime="20210225 22:11:49.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:49.786" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:49.787" starttime="20210225 22:11:49.785"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.787" starttime="20210225 22:11:49.770"></status>
</kw>
<msg timestamp="20210225 22:11:49.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:49.787" starttime="20210225 22:11:49.769"></status>
</kw>
<msg timestamp="20210225 22:11:49.788" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:11:49.788" starttime="20210225 22:11:49.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:11:49.789" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:11:49.789" starttime="20210225 22:11:49.788"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:49.796" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:49.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:49.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:11:49.846" starttime="20210225 22:11:49.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:49.847" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:11:49.848" starttime="20210225 22:11:49.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:49.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:49.848" starttime="20210225 22:11:49.848"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.849" starttime="20210225 22:11:49.792"></status>
</kw>
<msg timestamp="20210225 22:11:49.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:49.849" starttime="20210225 22:11:49.791"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.849" starttime="20210225 22:11:49.790"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.850" starttime="20210225 22:11:49.789"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.850" starttime="20210225 22:11:49.767"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:49.850" starttime="20210225 22:11:49.766"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:49.856" level="INFO">Running command 'ozone sh bucket create o3://om:9862/65747-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:11:54.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:11:54.753" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:11:54.753" starttime="20210225 22:11:49.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:11:54.754" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:11:54.754" starttime="20210225 22:11:54.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:11:54.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:11:54.755" starttime="20210225 22:11:54.754"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:54.755" starttime="20210225 22:11:49.852"></status>
</kw>
<msg timestamp="20210225 22:11:54.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:11:54.755" starttime="20210225 22:11:49.852"></status>
</kw>
<status status="PASS" endtime="20210225 22:11:54.755" starttime="20210225 22:11:49.851"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:11:54.761" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65747-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:01.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:01.079" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:12:01.079" starttime="20210225 22:11:54.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:01.081" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:12:01.081" starttime="20210225 22:12:01.080"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:01.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:01.082" starttime="20210225 22:12:01.081"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:01.082" starttime="20210225 22:11:54.757"></status>
</kw>
<msg timestamp="20210225 22:12:01.082" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:01.082" starttime="20210225 22:11:54.756"></status>
</kw>
<msg timestamp="20210225 22:12:01.082" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:12:01.083" starttime="20210225 22:11:54.756"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:12:01.083" starttime="20210225 22:12:01.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:01.087" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/65747-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:06.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:06.063" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210225 22:12:06.063" starttime="20210225 22:12:01.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:06.064" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210225 22:12:06.064" starttime="20210225 22:12:06.064"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:06.065" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:06.066" starttime="20210225 22:12:06.065"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:06.066" starttime="20210225 22:12:01.084"></status>
</kw>
<msg timestamp="20210225 22:12:06.066" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:06.066" starttime="20210225 22:12:01.084"></status>
</kw>
<msg timestamp="20210225 22:12:06.066" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210225 22:12:06.067" starttime="20210225 22:12:01.083"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:06.071" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65747-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:13.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:13.321" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:12:13.321" starttime="20210225 22:12:06.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:13.322" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:12:13.322" starttime="20210225 22:12:13.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:13.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:13.323" starttime="20210225 22:12:13.322"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:13.323" starttime="20210225 22:12:06.068"></status>
</kw>
<msg timestamp="20210225 22:12:13.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:13.323" starttime="20210225 22:12:06.068"></status>
</kw>
<msg timestamp="20210225 22:12:13.324" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:12:13.324" starttime="20210225 22:12:06.067"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210225 22:12:13.325" starttime="20210225 22:12:13.324"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:13.329" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/65747-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:19.759" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:19.759" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210225 22:12:19.760" starttime="20210225 22:12:13.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:19.762" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210225 22:12:19.762" starttime="20210225 22:12:19.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:19.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:19.763" starttime="20210225 22:12:19.762"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:19.764" starttime="20210225 22:12:13.326"></status>
</kw>
<msg timestamp="20210225 22:12:19.764" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:19.764" starttime="20210225 22:12:13.326"></status>
</kw>
<msg timestamp="20210225 22:12:19.765" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210225 22:12:19.765" starttime="20210225 22:12:13.325"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:19.774" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65747-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:24.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:24.688" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:12:24.689" starttime="20210225 22:12:19.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:24.690" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:12:24.690" starttime="20210225 22:12:24.689"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:24.691" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:24.692" starttime="20210225 22:12:24.691"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:24.692" starttime="20210225 22:12:19.767"></status>
</kw>
<msg timestamp="20210225 22:12:24.692" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:24.692" starttime="20210225 22:12:19.767"></status>
</kw>
<msg timestamp="20210225 22:12:24.693" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:12:24.693" starttime="20210225 22:12:19.766"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210225 22:12:24.694" starttime="20210225 22:12:24.693"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:24.700" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/65747-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:31.584" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:31.584" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:12:31.584" starttime="20210225 22:12:24.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:31.586" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:12:31.586" starttime="20210225 22:12:31.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:31.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:31.587" starttime="20210225 22:12:31.586"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:31.588" starttime="20210225 22:12:24.696"></status>
</kw>
<msg timestamp="20210225 22:12:31.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:31.588" starttime="20210225 22:12:24.695"></status>
</kw>
<msg timestamp="20210225 22:12:31.588" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:12:31.589" starttime="20210225 22:12:24.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:31.598" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/65747-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:38.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:38.875" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210225 22:12:38.876" starttime="20210225 22:12:31.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:38.877" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:12:38.877" starttime="20210225 22:12:38.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:38.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:38.878" starttime="20210225 22:12:38.877"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.878" starttime="20210225 22:12:31.591"></status>
</kw>
<msg timestamp="20210225 22:12:38.879" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:38.879" starttime="20210225 22:12:31.590"></status>
</kw>
<msg timestamp="20210225 22:12:38.879" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210225 22:12:38.879" starttime="20210225 22:12:31.589"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210225 22:12:38.880" starttime="20210225 22:12:38.879"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:12:38.880" starttime="20210225 22:12:38.880"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.881" starttime="20210225 22:11:49.850"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 22:12:38.881" critical="yes" starttime="20210225 22:11:49.764"></status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:38.889" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:38.892" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:38.892" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:12:38.893" starttime="20210225 22:12:38.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:38.895" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:12:38.895" starttime="20210225 22:12:38.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:38.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:38.896" starttime="20210225 22:12:38.896"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.897" starttime="20210225 22:12:38.886"></status>
</kw>
<msg timestamp="20210225 22:12:38.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:38.897" starttime="20210225 22:12:38.886"></status>
</kw>
<msg timestamp="20210225 22:12:38.898" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:12:38.898" starttime="20210225 22:12:38.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:12:38.899" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:12:38.899" starttime="20210225 22:12:38.898"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:38.905" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:12:38.913" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:12:38.914" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:12:38.914" starttime="20210225 22:12:38.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:12:38.915" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:12:38.916" starttime="20210225 22:12:38.914"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:12:38.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:12:38.916" starttime="20210225 22:12:38.916"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.917" starttime="20210225 22:12:38.901"></status>
</kw>
<msg timestamp="20210225 22:12:38.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:12:38.917" starttime="20210225 22:12:38.901"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.918" starttime="20210225 22:12:38.900"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.918" starttime="20210225 22:12:38.899"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.918" starttime="20210225 22:12:38.884"></status>
</kw>
<status status="PASS" endtime="20210225 22:12:38.918" starttime="20210225 22:12:38.884"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:12:38.924" level="INFO">Running command 'ozone sh key put o3://om:9862/65747-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:15:50.877" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:15:50.877" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:15:50.877" starttime="20210225 22:12:38.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:15:50.878" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:15:50.879" starttime="20210225 22:15:50.877"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:15:50.879" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:15:50.880" starttime="20210225 22:15:50.879"></status>
</kw>
<status status="PASS" endtime="20210225 22:15:50.880" starttime="20210225 22:12:38.921"></status>
</kw>
<msg timestamp="20210225 22:15:50.880" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:15:50.880" starttime="20210225 22:12:38.920"></status>
</kw>
<status status="PASS" endtime="20210225 22:15:50.881" starttime="20210225 22:12:38.919"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:15:50.886" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65747-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:15:56.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:15:56.678" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:15:56.678" starttime="20210225 22:15:50.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:15:56.679" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:15:56.679" starttime="20210225 22:15:56.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:15:56.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:15:56.680" starttime="20210225 22:15:56.679"></status>
</kw>
<status status="PASS" endtime="20210225 22:15:56.680" starttime="20210225 22:15:50.883"></status>
</kw>
<msg timestamp="20210225 22:15:56.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:15:56.680" starttime="20210225 22:15:50.882"></status>
</kw>
<msg timestamp="20210225 22:15:56.681" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:15:56.681" starttime="20210225 22:15:50.881"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:15:56.681" starttime="20210225 22:15:56.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:15:56.686" level="INFO">Running command 'ozone sh key addacl o3://om:9862/65747-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:02.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:02.940" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 22:16:02.941" starttime="20210225 22:15:56.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:02.943" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 22:16:02.943" starttime="20210225 22:16:02.942"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:02.946" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:02.947" starttime="20210225 22:16:02.944"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:02.947" starttime="20210225 22:15:56.683"></status>
</kw>
<msg timestamp="20210225 22:16:02.947" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:02.948" starttime="20210225 22:15:56.682"></status>
</kw>
<msg timestamp="20210225 22:16:02.948" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210225 22:16:02.948" starttime="20210225 22:15:56.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:02.955" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65747-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:09.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:09.868" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:16:09.868" starttime="20210225 22:16:02.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:09.869" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:16:09.869" starttime="20210225 22:16:09.868"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:09.870" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:09.870" starttime="20210225 22:16:09.870"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:09.871" starttime="20210225 22:16:02.951"></status>
</kw>
<msg timestamp="20210225 22:16:09.871" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:09.871" starttime="20210225 22:16:02.950"></status>
</kw>
<msg timestamp="20210225 22:16:09.871" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:16:09.871" starttime="20210225 22:16:02.949"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:09.872" starttime="20210225 22:16:09.871"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:09.878" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/65747-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:17.156" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:17.156" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210225 22:16:17.156" starttime="20210225 22:16:09.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:17.157" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210225 22:16:17.157" starttime="20210225 22:16:17.156"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:17.158" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:17.158" starttime="20210225 22:16:17.158"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:17.158" starttime="20210225 22:16:09.874"></status>
</kw>
<msg timestamp="20210225 22:16:17.159" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:17.159" starttime="20210225 22:16:09.874"></status>
</kw>
<msg timestamp="20210225 22:16:17.159" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210225 22:16:17.159" starttime="20210225 22:16:09.872"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:17.166" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65747-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:24.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:24.380" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:16:24.380" starttime="20210225 22:16:17.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:24.382" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:16:24.382" starttime="20210225 22:16:24.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:24.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:24.383" starttime="20210225 22:16:24.382"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:24.383" starttime="20210225 22:16:17.161"></status>
</kw>
<msg timestamp="20210225 22:16:24.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:24.383" starttime="20210225 22:16:17.161"></status>
</kw>
<msg timestamp="20210225 22:16:24.384" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210225 22:16:24.384" starttime="20210225 22:16:17.159"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:24.384" starttime="20210225 22:16:24.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:24.390" level="INFO">Running command 'ozone sh key setacl o3://om:9862/65747-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:31.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:31.451" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:16:31.451" starttime="20210225 22:16:24.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:31.455" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:16:31.455" starttime="20210225 22:16:31.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:31.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:31.457" starttime="20210225 22:16:31.455"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:31.458" starttime="20210225 22:16:24.386"></status>
</kw>
<msg timestamp="20210225 22:16:31.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:31.458" starttime="20210225 22:16:24.385"></status>
</kw>
<msg timestamp="20210225 22:16:31.458" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210225 22:16:31.458" starttime="20210225 22:16:24.385"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:31.464" level="INFO">Running command 'ozone sh key getacl o3://om:9862/65747-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:39.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:39.075" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210225 22:16:39.075" starttime="20210225 22:16:31.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:39.076" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210225 22:16:39.076" starttime="20210225 22:16:39.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:39.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:39.077" starttime="20210225 22:16:39.076"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.077" starttime="20210225 22:16:31.460"></status>
</kw>
<msg timestamp="20210225 22:16:39.078" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:39.078" starttime="20210225 22:16:31.459"></status>
</kw>
<msg timestamp="20210225 22:16:39.078" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210225 22:16:39.078" starttime="20210225 22:16:31.459"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:39.079" starttime="20210225 22:16:39.078"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:39.080" starttime="20210225 22:16:39.079"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.080" starttime="20210225 22:12:38.918"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210225 22:16:39.080" critical="yes" starttime="20210225 22:12:38.882"></status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:39.091" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:39.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:39.095" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:16:39.095" starttime="20210225 22:16:39.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:39.097" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:16:39.097" starttime="20210225 22:16:39.096"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:39.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:39.098" starttime="20210225 22:16:39.098"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.100" starttime="20210225 22:16:39.087"></status>
</kw>
<msg timestamp="20210225 22:16:39.100" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:39.100" starttime="20210225 22:16:39.087"></status>
</kw>
<msg timestamp="20210225 22:16:39.100" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:16:39.100" starttime="20210225 22:16:39.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:16:39.101" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:16:39.101" starttime="20210225 22:16:39.101"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:39.107" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:39.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:39.130" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:16:39.130" starttime="20210225 22:16:39.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:39.132" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:16:39.132" starttime="20210225 22:16:39.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:39.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:39.132" starttime="20210225 22:16:39.132"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.133" starttime="20210225 22:16:39.103"></status>
</kw>
<msg timestamp="20210225 22:16:39.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:39.133" starttime="20210225 22:16:39.103"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.133" starttime="20210225 22:16:39.102"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.134" starttime="20210225 22:16:39.101"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.134" starttime="20210225 22:16:39.085"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:39.134" starttime="20210225 22:16:39.084"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:39.139" level="INFO">Running command 'ozone sh volume info o3:///65747-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:45.771" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 22:16:45.771" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65747-rpcwport is not found</msg>
<status status="PASS" endtime="20210225 22:16:45.771" starttime="20210225 22:16:39.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:45.772" level="INFO">VOLUME_NOT_FOUND Volume 65747-rpcwport is not found</msg>
<status status="PASS" endtime="20210225 22:16:45.772" starttime="20210225 22:16:45.771"></status>
</kw>
<msg timestamp="20210225 22:16:45.773" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65747-rpcwport is not found</msg>
<status status="PASS" endtime="20210225 22:16:45.773" starttime="20210225 22:16:39.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:45.774" starttime="20210225 22:16:45.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:45.780" level="INFO">Running command 'ozone sh volume create o3:///65747-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:52.180" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:52.180" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:16:52.180" starttime="20210225 22:16:45.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:52.182" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:16:52.182" starttime="20210225 22:16:52.181"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:52.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:52.183" starttime="20210225 22:16:52.182"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:52.183" starttime="20210225 22:16:45.776"></status>
</kw>
<msg timestamp="20210225 22:16:52.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:52.183" starttime="20210225 22:16:45.775"></status>
</kw>
<msg timestamp="20210225 22:16:52.184" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210225 22:16:52.184" starttime="20210225 22:16:45.774"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:52.184" starttime="20210225 22:16:52.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:52.191" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="65747-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:16:57.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:16:57.176" level="INFO">${output} = {
  "metadata": {},
  "name": "65747-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:16:57.176" starttime="20210225 22:16:52.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:16:57.178" level="INFO">{
  "metadata": {},
  "name": "65747-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:16:52.101Z",
  "modificationTime": "2021-02-25T22:16:52.101Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:16:57.178" starttime="20210225 22:16:57.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:16:57.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:16:57.179" starttime="20210225 22:16:57.178"></status>
</kw>
<status status="PASS" endtime="20210225 22:16:57.179" starttime="20210225 22:16:52.186"></status>
</kw>
<msg timestamp="20210225 22:16:57.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:16:57.179" starttime="20210225 22:16:52.186"></status>
</kw>
<msg timestamp="20210225 22:16:57.179" level="INFO">${result} = {
  "metadata": {},
  "name": "65747-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:16:57.179" starttime="20210225 22:16:52.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:16:57.180" starttime="20210225 22:16:57.180"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:16:57.184" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="65747-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:04.842" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:04.842" level="INFO">${output} = {
  "metadata": {},
  "name": "65747-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:17:04.842" starttime="20210225 22:16:57.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:04.844" level="INFO">{
  "metadata": {},
  "name": "65747-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:16:52.101Z",
  "modificationTime": "2021-02-25T22:16:52.101Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:17:04.844" starttime="20210225 22:17:04.843"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:04.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:04.845" starttime="20210225 22:17:04.844"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:04.845" starttime="20210225 22:16:57.181"></status>
</kw>
<msg timestamp="20210225 22:17:04.845" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:04.845" starttime="20210225 22:16:57.181"></status>
</kw>
<msg timestamp="20210225 22:17:04.846" level="INFO">${result} = {
  "metadata": {},
  "name": "65747-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210225 22:17:04.846" starttime="20210225 22:16:57.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:17:04.846" starttime="20210225 22:17:04.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:04.851" level="INFO">Running command 'ozone sh volume setquota o3:///65747-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:11.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:11.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:17:11.724" starttime="20210225 22:17:04.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:11.727" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:17:11.727" starttime="20210225 22:17:11.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:11.729" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:11.729" starttime="20210225 22:17:11.727"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:11.730" starttime="20210225 22:17:04.848"></status>
</kw>
<msg timestamp="20210225 22:17:11.730" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:11.731" starttime="20210225 22:17:04.847"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:11.731" starttime="20210225 22:17:04.846"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:11.741" level="INFO">Running command 'ozone sh volume info o3:///65747-rpcwport | jq -r '. | select(.name=="65747-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:18.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:18.731" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:17:18.731" starttime="20210225 22:17:11.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:18.733" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:17:18.733" starttime="20210225 22:17:18.732"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:18.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:18.734" starttime="20210225 22:17:18.733"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:18.734" starttime="20210225 22:17:11.735"></status>
</kw>
<msg timestamp="20210225 22:17:18.734" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:18.734" starttime="20210225 22:17:11.734"></status>
</kw>
<msg timestamp="20210225 22:17:18.735" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:17:18.735" starttime="20210225 22:17:11.732"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:17:18.736" starttime="20210225 22:17:18.735"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:18.741" level="INFO">Running command 'ozone sh bucket create o3:///65747-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:25.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:25.227" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:17:25.227" starttime="20210225 22:17:18.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:25.230" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:17:25.230" starttime="20210225 22:17:25.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:25.231" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:25.231" starttime="20210225 22:17:25.230"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:25.232" starttime="20210225 22:17:18.737"></status>
</kw>
<msg timestamp="20210225 22:17:25.233" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:25.233" starttime="20210225 22:17:18.737"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:25.233" starttime="20210225 22:17:18.736"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:25.243" level="INFO">Running command 'ozone sh bucket info o3:///65747-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:30.623" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:30.623" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210225 22:17:30.623" starttime="20210225 22:17:25.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:30.625" level="INFO">DISK</msg>
<status status="PASS" endtime="20210225 22:17:30.625" starttime="20210225 22:17:30.624"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:30.625" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:30.626" starttime="20210225 22:17:30.625"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:30.626" starttime="20210225 22:17:25.238"></status>
</kw>
<msg timestamp="20210225 22:17:30.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:30.626" starttime="20210225 22:17:25.236"></status>
</kw>
<msg timestamp="20210225 22:17:30.626" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210225 22:17:30.626" starttime="20210225 22:17:25.234"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210225 22:17:30.627" starttime="20210225 22:17:30.627"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:30.632" level="INFO">Running command 'ozone sh bucket info o3:///65747-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:37.734" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:37.734" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:17:37.735" starttime="20210225 22:17:30.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:37.736" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:17:37.736" starttime="20210225 22:17:37.735"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:37.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:37.736" starttime="20210225 22:17:37.736"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:37.737" starttime="20210225 22:17:30.629"></status>
</kw>
<msg timestamp="20210225 22:17:37.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:37.737" starttime="20210225 22:17:30.629"></status>
</kw>
<msg timestamp="20210225 22:17:37.737" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:17:37.737" starttime="20210225 22:17:30.627"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:17:37.738" starttime="20210225 22:17:37.738"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:37.743" level="INFO">Running command 'ozone sh bucket info o3:///65747-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:45.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:45.102" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210225 22:17:45.102" starttime="20210225 22:17:37.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:45.103" level="INFO">100</msg>
<status status="PASS" endtime="20210225 22:17:45.103" starttime="20210225 22:17:45.102"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:45.104" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:45.104" starttime="20210225 22:17:45.103"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:45.104" starttime="20210225 22:17:37.740"></status>
</kw>
<msg timestamp="20210225 22:17:45.104" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:45.105" starttime="20210225 22:17:37.739"></status>
</kw>
<msg timestamp="20210225 22:17:45.105" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210225 22:17:45.105" starttime="20210225 22:17:37.738"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210225 22:17:45.106" starttime="20210225 22:17:45.105"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:45.110" level="INFO">Running command 'ozone sh bucket setquota o3:///65747-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:51.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:51.200" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:17:51.200" starttime="20210225 22:17:45.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:51.201" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:17:51.201" starttime="20210225 22:17:51.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:51.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:51.202" starttime="20210225 22:17:51.202"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:51.203" starttime="20210225 22:17:45.107"></status>
</kw>
<msg timestamp="20210225 22:17:51.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:51.203" starttime="20210225 22:17:45.107"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:51.203" starttime="20210225 22:17:45.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:51.209" level="INFO">Running command 'ozone sh bucket info o3:///65747-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:17:57.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:17:57.277" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:17:57.277" starttime="20210225 22:17:51.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:17:57.280" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210225 22:17:57.280" starttime="20210225 22:17:57.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:17:57.281" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:17:57.281" starttime="20210225 22:17:57.280"></status>
</kw>
<status status="PASS" endtime="20210225 22:17:57.282" starttime="20210225 22:17:51.204"></status>
</kw>
<msg timestamp="20210225 22:17:57.282" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:17:57.282" starttime="20210225 22:17:51.204"></status>
</kw>
<msg timestamp="20210225 22:17:57.283" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:17:57.283" starttime="20210225 22:17:51.203"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210225 22:17:57.284" starttime="20210225 22:17:57.283"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:17:57.290" level="INFO">Running command 'ozone sh bucket info o3:///65747-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:18:04.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:18:04.443" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210225 22:18:04.443" starttime="20210225 22:17:57.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:18:04.445" level="INFO">1000</msg>
<status status="PASS" endtime="20210225 22:18:04.445" starttime="20210225 22:18:04.444"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:18:04.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:18:04.447" starttime="20210225 22:18:04.446"></status>
</kw>
<status status="PASS" endtime="20210225 22:18:04.448" starttime="20210225 22:17:57.287"></status>
</kw>
<msg timestamp="20210225 22:18:04.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:18:04.448" starttime="20210225 22:17:57.286"></status>
</kw>
<msg timestamp="20210225 22:18:04.449" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210225 22:18:04.449" starttime="20210225 22:17:57.285"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210225 22:18:04.450" starttime="20210225 22:18:04.450"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:18:04.459" level="INFO">Running command 'ozone sh bucket list o3:///65747-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:18:11.580" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:18:11.581" level="INFO">${output} = 65747-rpcwport</msg>
<status status="PASS" endtime="20210225 22:18:11.581" starttime="20210225 22:18:04.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:18:11.582" level="INFO">65747-rpcwport</msg>
<status status="PASS" endtime="20210225 22:18:11.583" starttime="20210225 22:18:11.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:18:11.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:18:11.584" starttime="20210225 22:18:11.583"></status>
</kw>
<status status="PASS" endtime="20210225 22:18:11.585" starttime="20210225 22:18:04.453"></status>
</kw>
<msg timestamp="20210225 22:18:11.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:18:11.585" starttime="20210225 22:18:04.453"></status>
</kw>
<msg timestamp="20210225 22:18:11.586" level="INFO">${result} = 65747-rpcwport</msg>
<status status="PASS" endtime="20210225 22:18:11.586" starttime="20210225 22:18:04.451"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210225 22:18:11.588" starttime="20210225 22:18:11.586"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:18:11.596" level="INFO">Running command 'ozone sh key put o3:///65747-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:20.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:20.708" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:21:20.708" starttime="20210225 22:18:11.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:20.711" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:21:20.711" starttime="20210225 22:21:20.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:20.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:20.713" starttime="20210225 22:21:20.712"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:20.713" starttime="20210225 22:18:11.592"></status>
</kw>
<msg timestamp="20210225 22:21:20.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:20.714" starttime="20210225 22:18:11.591"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:20.714" starttime="20210225 22:18:11.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:20.720" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:20.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:20.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:21:20.724" starttime="20210225 22:21:20.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:20.727" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:21:20.727" starttime="20210225 22:21:20.725"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:20.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:20.728" starttime="20210225 22:21:20.727"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:20.728" starttime="20210225 22:21:20.716"></status>
</kw>
<msg timestamp="20210225 22:21:20.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:20.728" starttime="20210225 22:21:20.715"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:20.729" starttime="20210225 22:21:20.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:20.735" level="INFO">Running command 'ozone sh key get o3:///65747-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:31.665" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:31.665" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:21:31.665" starttime="20210225 22:21:20.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:31.667" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:21:31.667" starttime="20210225 22:21:31.665"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:31.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:31.669" starttime="20210225 22:21:31.668"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:31.670" starttime="20210225 22:21:20.731"></status>
</kw>
<msg timestamp="20210225 22:21:31.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:31.671" starttime="20210225 22:21:20.730"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:31.671" starttime="20210225 22:21:20.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:31.677" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:31.680" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:31.680" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:21:31.680" starttime="20210225 22:21:31.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:31.682" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:21:31.682" starttime="20210225 22:21:31.681"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:31.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:31.684" starttime="20210225 22:21:31.683"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:31.684" starttime="20210225 22:21:31.673"></status>
</kw>
<msg timestamp="20210225 22:21:31.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:31.684" starttime="20210225 22:21:31.672"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:31.685" starttime="20210225 22:21:31.671"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:31.692" level="INFO">Running command 'ozone sh key put -t RATIS o3:///65747-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:39.086" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 22:21:39.086" starttime="20210225 22:21:31.688"></status>
</kw>
<status status="FAIL" endtime="20210225 22:21:39.087" starttime="20210225 22:21:31.686"></status>
</kw>
<msg timestamp="20210225 22:21:39.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 22:21:39.088" starttime="20210225 22:21:31.686"></status>
</kw>
<status status="FAIL" endtime="20210225 22:21:39.089" starttime="20210225 22:21:31.685"></status>
</kw>
<status status="FAIL" endtime="20210225 22:21:39.089" starttime="20210225 22:18:11.589"></status>
</kw>
<status status="FAIL" endtime="20210225 22:21:39.089" starttime="20210225 22:18:11.588"></status>
</kw>
<status status="FAIL" endtime="20210225 22:21:39.089" starttime="20210225 22:16:39.134"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210225 22:21:39.090" critical="yes" starttime="20210225 22:16:39.083">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:39.125" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:39.130" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:39.131" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 22:21:39.131" starttime="20210225 22:21:39.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:39.133" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 22:21:39.134" starttime="20210225 22:21:39.131"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:39.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:39.142" starttime="20210225 22:21:39.136"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:39.143" starttime="20210225 22:21:39.103"></status>
</kw>
<msg timestamp="20210225 22:21:39.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:39.144" starttime="20210225 22:21:39.102"></status>
</kw>
<msg timestamp="20210225 22:21:39.146" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 22:21:39.146" starttime="20210225 22:21:39.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 22:21:39.154" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 22:21:39.154" starttime="20210225 22:21:39.152"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:39.171" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:39.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:39.205" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:21:39.205" starttime="20210225 22:21:39.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:39.211" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:21:39.211" starttime="20210225 22:21:39.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:39.215" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:39.217" starttime="20210225 22:21:39.212"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:39.218" starttime="20210225 22:21:39.161"></status>
</kw>
<msg timestamp="20210225 22:21:39.218" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:39.220" starttime="20210225 22:21:39.160"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:39.221" starttime="20210225 22:21:39.158"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:39.221" starttime="20210225 22:21:39.155"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:39.221" starttime="20210225 22:21:39.095"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:39.221" starttime="20210225 22:21:39.094"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:39.229" level="INFO">Running command 'ozone sh volume info /65747-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:48.846" level="INFO">${rc} = 255</msg>
<msg timestamp="20210225 22:21:48.847" level="INFO">${output} = VOLUME_NOT_FOUND Volume 65747-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210225 22:21:48.847" starttime="20210225 22:21:39.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:48.848" level="INFO">VOLUME_NOT_FOUND Volume 65747-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210225 22:21:48.848" starttime="20210225 22:21:48.847"></status>
</kw>
<msg timestamp="20210225 22:21:48.849" level="INFO">${result} = VOLUME_NOT_FOUND Volume 65747-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210225 22:21:48.849" starttime="20210225 22:21:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210225 22:21:48.849" starttime="20210225 22:21:48.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:48.859" level="INFO">Running command 'ozone sh volume create /65747-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:21:55.984" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:21:55.984" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:21:55.984" starttime="20210225 22:21:48.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:21:55.985" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:21:55.985" starttime="20210225 22:21:55.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:21:55.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:21:55.986" starttime="20210225 22:21:55.985"></status>
</kw>
<status status="PASS" endtime="20210225 22:21:55.986" starttime="20210225 22:21:48.853"></status>
</kw>
<msg timestamp="20210225 22:21:55.986" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:21:55.986" starttime="20210225 22:21:48.851"></status>
</kw>
<msg timestamp="20210225 22:21:55.987" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210225 22:21:55.987" starttime="20210225 22:21:48.850"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210225 22:21:55.988" starttime="20210225 22:21:55.987"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:21:55.995" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="65747-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:03.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:03.519" level="INFO">${output} = {
  "metadata": {},
  "name": "65747-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210225 22:22:03.519" starttime="20210225 22:21:55.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:03.521" level="INFO">{
  "metadata": {},
  "name": "65747-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:21:55.734Z",
  "modificationTime": "2021-02-25T22:21:55.734Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:22:03.521" starttime="20210225 22:22:03.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:03.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:03.522" starttime="20210225 22:22:03.521"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:03.522" starttime="20210225 22:21:55.991"></status>
</kw>
<msg timestamp="20210225 22:22:03.522" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:03.522" starttime="20210225 22:21:55.990"></status>
</kw>
<msg timestamp="20210225 22:22:03.523" level="INFO">${result} = {
  "metadata": {},
  "name": "65747-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210225 22:22:03.523" starttime="20210225 22:21:55.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:22:03.523" starttime="20210225 22:22:03.523"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:03.527" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="65747-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:11.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:11.096" level="INFO">${output} = {
  "metadata": {},
  "name": "65747-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210225 22:22:11.096" starttime="20210225 22:22:03.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:11.098" level="INFO">{
  "metadata": {},
  "name": "65747-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-25T22:21:55.734Z",
  "modificationTime": "2021-02-25T22:21:55.734Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210225 22:22:11.098" starttime="20210225 22:22:11.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:11.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:11.099" starttime="20210225 22:22:11.098"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:11.099" starttime="20210225 22:22:03.525"></status>
</kw>
<msg timestamp="20210225 22:22:11.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:11.099" starttime="20210225 22:22:03.524"></status>
</kw>
<msg timestamp="20210225 22:22:11.100" level="INFO">${result} = {
  "metadata": {},
  "name": "65747-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210225 22:22:11.100" starttime="20210225 22:22:03.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210225 22:22:11.100" starttime="20210225 22:22:11.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:11.105" level="INFO">Running command 'ozone sh volume setquota /65747-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:17.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:17.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:22:17.819" starttime="20210225 22:22:11.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:17.821" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:22:17.821" starttime="20210225 22:22:17.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:17.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:17.824" starttime="20210225 22:22:17.822"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:17.825" starttime="20210225 22:22:11.102"></status>
</kw>
<msg timestamp="20210225 22:22:17.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:17.826" starttime="20210225 22:22:11.101"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:17.826" starttime="20210225 22:22:11.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:17.835" level="INFO">Running command 'ozone sh volume info /65747-rpcwoscheme | jq -r '. | select(.name=="65747-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:25.586" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:25.586" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:22:25.587" starttime="20210225 22:22:17.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:25.589" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:22:25.589" starttime="20210225 22:22:25.587"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:25.590" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:25.590" starttime="20210225 22:22:25.589"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:25.591" starttime="20210225 22:22:17.829"></status>
</kw>
<msg timestamp="20210225 22:22:25.591" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:25.591" starttime="20210225 22:22:17.829"></status>
</kw>
<msg timestamp="20210225 22:22:25.592" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:22:25.592" starttime="20210225 22:22:17.826"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:22:25.593" starttime="20210225 22:22:25.592"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:25.600" level="INFO">Running command 'ozone sh bucket create /65747-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:32.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:32.480" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:22:32.480" starttime="20210225 22:22:25.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:32.481" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:22:32.481" starttime="20210225 22:22:32.480"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:32.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:32.482" starttime="20210225 22:22:32.481"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:32.482" starttime="20210225 22:22:25.595"></status>
</kw>
<msg timestamp="20210225 22:22:32.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:32.483" starttime="20210225 22:22:25.595"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:32.483" starttime="20210225 22:22:25.594"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:32.490" level="INFO">Running command 'ozone sh bucket info /65747-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:40.335" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:40.335" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210225 22:22:40.335" starttime="20210225 22:22:32.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:40.337" level="INFO">DISK</msg>
<status status="PASS" endtime="20210225 22:22:40.337" starttime="20210225 22:22:40.335"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:40.338" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:40.338" starttime="20210225 22:22:40.337"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:40.339" starttime="20210225 22:22:32.484"></status>
</kw>
<msg timestamp="20210225 22:22:40.339" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:40.339" starttime="20210225 22:22:32.484"></status>
</kw>
<msg timestamp="20210225 22:22:40.340" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210225 22:22:40.340" starttime="20210225 22:22:32.483"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210225 22:22:40.341" starttime="20210225 22:22:40.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:40.348" level="INFO">Running command 'ozone sh bucket info /65747-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:48.273" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:48.273" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:22:48.273" starttime="20210225 22:22:40.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:48.276" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210225 22:22:48.276" starttime="20210225 22:22:48.274"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:48.277" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:48.277" starttime="20210225 22:22:48.276"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:48.277" starttime="20210225 22:22:40.343"></status>
</kw>
<msg timestamp="20210225 22:22:48.278" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:48.278" starttime="20210225 22:22:40.343"></status>
</kw>
<msg timestamp="20210225 22:22:48.279" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210225 22:22:48.279" starttime="20210225 22:22:40.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210225 22:22:48.280" starttime="20210225 22:22:48.279"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:48.288" level="INFO">Running command 'ozone sh bucket info /65747-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:22:56.649" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:22:56.649" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210225 22:22:56.649" starttime="20210225 22:22:48.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:22:56.654" level="INFO">100</msg>
<status status="PASS" endtime="20210225 22:22:56.654" starttime="20210225 22:22:56.650"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:22:56.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:22:56.655" starttime="20210225 22:22:56.654"></status>
</kw>
<status status="PASS" endtime="20210225 22:22:56.655" starttime="20210225 22:22:48.283"></status>
</kw>
<msg timestamp="20210225 22:22:56.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:22:56.655" starttime="20210225 22:22:48.282"></status>
</kw>
<msg timestamp="20210225 22:22:56.656" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210225 22:22:56.656" starttime="20210225 22:22:48.280"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210225 22:22:56.656" starttime="20210225 22:22:56.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:22:56.663" level="INFO">Running command 'ozone sh bucket setquota /65747-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:23:03.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:23:03.552" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:23:03.552" starttime="20210225 22:22:56.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:23:03.553" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:23:03.553" starttime="20210225 22:23:03.552"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:23:03.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:23:03.554" starttime="20210225 22:23:03.553"></status>
</kw>
<status status="PASS" endtime="20210225 22:23:03.554" starttime="20210225 22:22:56.658"></status>
</kw>
<msg timestamp="20210225 22:23:03.554" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:23:03.555" starttime="20210225 22:22:56.657"></status>
</kw>
<status status="PASS" endtime="20210225 22:23:03.555" starttime="20210225 22:22:56.656"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:23:03.560" level="INFO">Running command 'ozone sh bucket info /65747-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:23:08.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:23:08.008" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:23:08.008" starttime="20210225 22:23:03.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:23:08.010" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210225 22:23:08.010" starttime="20210225 22:23:08.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:23:08.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:23:08.010" starttime="20210225 22:23:08.010"></status>
</kw>
<status status="PASS" endtime="20210225 22:23:08.011" starttime="20210225 22:23:03.556"></status>
</kw>
<msg timestamp="20210225 22:23:08.011" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:23:08.011" starttime="20210225 22:23:03.556"></status>
</kw>
<msg timestamp="20210225 22:23:08.011" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210225 22:23:08.011" starttime="20210225 22:23:03.555"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210225 22:23:08.012" starttime="20210225 22:23:08.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:23:08.018" level="INFO">Running command 'ozone sh bucket info /65747-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:23:15.315" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:23:15.316" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210225 22:23:15.316" starttime="20210225 22:23:08.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:23:15.318" level="INFO">1000</msg>
<status status="PASS" endtime="20210225 22:23:15.318" starttime="20210225 22:23:15.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:23:15.319" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:23:15.319" starttime="20210225 22:23:15.318"></status>
</kw>
<status status="PASS" endtime="20210225 22:23:15.320" starttime="20210225 22:23:08.014"></status>
</kw>
<msg timestamp="20210225 22:23:15.320" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:23:15.321" starttime="20210225 22:23:08.013"></status>
</kw>
<msg timestamp="20210225 22:23:15.321" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210225 22:23:15.322" starttime="20210225 22:23:08.012"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210225 22:23:15.322" starttime="20210225 22:23:15.322"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:23:15.329" level="INFO">Running command 'ozone sh bucket list /65747-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:23:22.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:23:22.606" level="INFO">${output} = 65747-rpcwoscheme</msg>
<status status="PASS" endtime="20210225 22:23:22.606" starttime="20210225 22:23:15.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:23:22.611" level="INFO">65747-rpcwoscheme</msg>
<status status="PASS" endtime="20210225 22:23:22.611" starttime="20210225 22:23:22.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:23:22.612" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:23:22.612" starttime="20210225 22:23:22.611"></status>
</kw>
<status status="PASS" endtime="20210225 22:23:22.613" starttime="20210225 22:23:15.325"></status>
</kw>
<msg timestamp="20210225 22:23:22.613" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:23:22.613" starttime="20210225 22:23:15.324"></status>
</kw>
<msg timestamp="20210225 22:23:22.613" level="INFO">${result} = 65747-rpcwoscheme</msg>
<status status="PASS" endtime="20210225 22:23:22.613" starttime="20210225 22:23:15.323"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210225 22:23:22.614" starttime="20210225 22:23:22.613"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:23:22.620" level="INFO">Running command 'ozone sh key put /65747-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:26:32.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:26:32.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:26:32.856" starttime="20210225 22:23:22.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:26:32.857" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:26:32.857" starttime="20210225 22:26:32.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:26:32.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:26:32.858" starttime="20210225 22:26:32.858"></status>
</kw>
<status status="PASS" endtime="20210225 22:26:32.859" starttime="20210225 22:23:22.616"></status>
</kw>
<msg timestamp="20210225 22:26:32.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:26:32.859" starttime="20210225 22:23:22.616"></status>
</kw>
<status status="PASS" endtime="20210225 22:26:32.859" starttime="20210225 22:23:22.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:26:32.865" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:26:32.868" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 22:26:32.869" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 22:26:32.869" starttime="20210225 22:26:32.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 22:26:32.870" level="INFO"></msg>
<status status="PASS" endtime="20210225 22:26:32.871" starttime="20210225 22:26:32.870"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 22:26:32.871" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 22:26:32.872" starttime="20210225 22:26:32.871"></status>
</kw>
<status status="PASS" endtime="20210225 22:26:32.872" starttime="20210225 22:26:32.861"></status>
</kw>
<msg timestamp="20210225 22:26:32.872" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 22:26:32.872" starttime="20210225 22:26:32.860"></status>
</kw>
<status status="PASS" endtime="20210225 22:26:32.873" starttime="20210225 22:26:32.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 22:26:32.878" level="INFO">Running command 'ozone sh key get /65747-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 22:26:39.094" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210225 22:26:39.094" starttime="20210225 22:26:32.875"></status>
</kw>
<status status="FAIL" endtime="20210225 22:26:39.094" starttime="20210225 22:26:32.875"></status>
</kw>
<msg timestamp="20210225 22:26:39.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210225 22:26:39.094" starttime="20210225 22:26:32.874"></status>
</kw>
<status status="FAIL" endtime="20210225 22:26:39.095" starttime="20210225 22:26:32.873"></status>
</kw>
<status status="FAIL" endtime="20210225 22:26:39.095" starttime="20210225 22:23:22.614"></status>
</kw>
<status status="FAIL" endtime="20210225 22:26:39.095" starttime="20210225 22:23:22.614"></status>
</kw>
<status status="FAIL" endtime="20210225 22:26:39.095" starttime="20210225 22:21:39.223"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210225 22:26:39.096" critical="yes" starttime="20210225 22:21:39.092">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210225 22:26:39.107" starttime="20210225 22:05:49.075"></status>
</suite>
<status status="FAIL" endtime="20210225 22:26:39.183" starttime="20210225 21:41:52.205"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:47.081" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:47.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:47.085" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210225 21:41:47.085" starttime="20210225 21:41:47.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:47.086" level="INFO">scm</msg>
<status status="PASS" endtime="20210225 21:41:47.086" starttime="20210225 21:41:47.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:47.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:47.087" starttime="20210225 21:41:47.086"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:47.087" starttime="20210225 21:41:47.077"></status>
</kw>
<msg timestamp="20210225 21:41:47.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:47.087" starttime="20210225 21:41:47.077"></status>
</kw>
<msg timestamp="20210225 21:41:47.088" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210225 21:41:47.088" starttime="20210225 21:41:47.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210225 21:41:47.088" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210225 21:41:47.088" starttime="20210225 21:41:47.088"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210225 21:41:47.093" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210225 21:41:47.100" level="INFO">${rc} = 0</msg>
<msg timestamp="20210225 21:41:47.101" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210225 21:41:47.101" starttime="20210225 21:41:47.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210225 21:41:47.102" level="INFO"></msg>
<status status="PASS" endtime="20210225 21:41:47.102" starttime="20210225 21:41:47.101"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210225 21:41:47.103" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210225 21:41:47.103" starttime="20210225 21:41:47.102"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:47.103" starttime="20210225 21:41:47.090"></status>
</kw>
<msg timestamp="20210225 21:41:47.103" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210225 21:41:47.103" starttime="20210225 21:41:47.090"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:47.103" starttime="20210225 21:41:47.089"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:47.104" starttime="20210225 21:41:47.089"></status>
</kw>
<status status="PASS" endtime="20210225 21:41:47.104" starttime="20210225 21:41:47.075"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210225 21:41:47.104" critical="yes" starttime="20210225 21:41:47.074"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210225 21:41:47.105" starttime="20210225 21:41:47.013"></status>
</suite>
<status status="FAIL" elapsedtime="2687070" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="10" pass="19">Critical Tests</stat>
<stat fail="10" pass="19">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" id="s1" name="ozonesecure" pass="19">ozonesecure</stat>
<stat fail="10" id="s1-s1" name="Basic" pass="18">ozonesecure.Basic</stat>
<stat fail="1" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" id="s1-s1-s5" name="Ozone-Shell" pass="3">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
