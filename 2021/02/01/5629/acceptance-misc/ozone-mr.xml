<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210201 13:35:58.762" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:39.487" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:41.594" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:23:41.594" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:23:41.594" starttime="20210201 13:23:39.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:41.595" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:23:41.595" starttime="20210201 13:23:41.594"></status>
</kw>
<msg timestamp="20210201 13:23:41.596" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:23:41.596" starttime="20210201 13:23:39.483"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:41.601" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:43.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:23:43.670" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:23:43.670" starttime="20210201 13:23:41.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:43.671" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:23:43.672" starttime="20210201 13:23:43.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:23:43.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:23:43.672" starttime="20210201 13:23:43.672"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:43.672" starttime="20210201 13:23:41.597"></status>
</kw>
<msg timestamp="20210201 13:23:43.672" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:23:43.673" starttime="20210201 13:23:41.597"></status>
</kw>
<msg timestamp="20210201 13:23:43.673" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210201 13:23:43.673" starttime="20210201 13:23:41.597"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210201 13:23:43.673" starttime="20210201 13:23:43.673"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:43.673" starttime="20210201 13:23:41.596"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:43.673" starttime="20210201 13:23:41.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:43.683" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:45.776" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:23:45.776" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:23:45.777" starttime="20210201 13:23:43.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:45.778" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:23:45.778" starttime="20210201 13:23:45.777"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:23:45.778" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:23:45.778" starttime="20210201 13:23:45.778"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:45.778" starttime="20210201 13:23:43.679"></status>
</kw>
<msg timestamp="20210201 13:23:45.779" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:23:45.779" starttime="20210201 13:23:43.679"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:45.779" starttime="20210201 13:23:43.678"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:45.779" starttime="20210201 13:23:43.678"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:45.779" starttime="20210201 13:23:43.674"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210201 13:23:45.779" starttime="20210201 13:23:45.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:45.783" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:47.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:23:47.765" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:23...</msg>
<status status="PASS" endtime="20210201 13:23:47.765" starttime="20210201 13:23:45.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:47.766" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:23:45.741Z",
  "modificationTime" : "2021-02-01T13:23:45.741Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 13:23:47.766" starttime="20210201 13:23:47.765"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:23:47.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:23:47.767" starttime="20210201 13:23:47.766"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:47.767" starttime="20210201 13:23:45.781"></status>
</kw>
<msg timestamp="20210201 13:23:47.767" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:23:47.767" starttime="20210201 13:23:45.780"></status>
</kw>
<msg timestamp="20210201 13:23:47.767" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:23...</msg>
<status status="PASS" endtime="20210201 13:23:47.767" starttime="20210201 13:23:45.780"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210201 13:23:47.768" starttime="20210201 13:23:47.768"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:23:47.771" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:23:47.771" starttime="20210201 13:23:47.771"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:23:47.772" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:23:47.772" starttime="20210201 13:23:47.772"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:47.772" starttime="20210201 13:23:47.771"></status>
</kw>
<msg timestamp="20210201 13:23:47.772" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:23:47.772" starttime="20210201 13:23:47.770"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:47.772" starttime="20210201 13:23:47.770"></status>
</kw>
<msg timestamp="20210201 13:23:47.773" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:23:47.773" starttime="20210201 13:23:47.769"></status>
</kw>
<msg timestamp="20210201 13:23:47.773" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:23:47.773" starttime="20210201 13:23:47.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:47.776" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:49.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:23:49.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:23:49.798" starttime="20210201 13:23:47.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:49.799" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:23:49.799" starttime="20210201 13:23:49.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:23:49.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:23:49.800" starttime="20210201 13:23:49.799"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:49.800" starttime="20210201 13:23:47.773"></status>
</kw>
<msg timestamp="20210201 13:23:49.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:23:49.800" starttime="20210201 13:23:47.773"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:49.800" starttime="20210201 13:23:47.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:49.804" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:54.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:23:54.895" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:23:54.895" starttime="20210201 13:23:49.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:54.896" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:23:54.896" starttime="20210201 13:23:54.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:23:54.896" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:23:54.897" starttime="20210201 13:23:54.896"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:54.897" starttime="20210201 13:23:49.801"></status>
</kw>
<msg timestamp="20210201 13:23:54.897" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:23:54.897" starttime="20210201 13:23:49.801"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:54.897" starttime="20210201 13:23:49.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:54.901" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:23:58.301" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:23:58.301" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:23:58.301" starttime="20210201 13:23:54.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:23:58.302" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:23:58.302" starttime="20210201 13:23:58.301"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:23:58.302" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:23:58.302" starttime="20210201 13:23:58.302"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:58.303" starttime="20210201 13:23:54.898"></status>
</kw>
<msg timestamp="20210201 13:23:58.303" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:23:58.303" starttime="20210201 13:23:54.898"></status>
</kw>
<status status="PASS" endtime="20210201 13:23:58.303" starttime="20210201 13:23:54.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:23:58.307" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:01.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:01.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:24:01.823" starttime="20210201 13:23:58.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:01.825" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:24:01.825" starttime="20210201 13:24:01.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:01.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:01.825" starttime="20210201 13:24:01.825"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:01.826" starttime="20210201 13:23:58.304"></status>
</kw>
<msg timestamp="20210201 13:24:01.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:01.826" starttime="20210201 13:23:58.304"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:01.826" starttime="20210201 13:23:58.303"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:24:01.826" critical="yes" starttime="20210201 13:23:39.483"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:24:01.830" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:24:01.830" starttime="20210201 13:24:01.830"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:24:01.831" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:24:01.831" starttime="20210201 13:24:01.831"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:01.831" starttime="20210201 13:24:01.829"></status>
</kw>
<msg timestamp="20210201 13:24:01.831" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:24:01.831" starttime="20210201 13:24:01.829"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:01.832" starttime="20210201 13:24:01.828"></status>
</kw>
<msg timestamp="20210201 13:24:01.832" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:24:01.832" starttime="20210201 13:24:01.828"></status>
</kw>
<msg timestamp="20210201 13:24:01.832" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:24:01.832" starttime="20210201 13:24:01.827"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:01.835" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:03.645" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:03.645" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:24:03.645" starttime="20210201 13:24:01.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:03.646" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:24:03.646" starttime="20210201 13:24:03.646"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:03.647" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:03.647" starttime="20210201 13:24:03.646"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:03.647" starttime="20210201 13:24:01.833"></status>
</kw>
<msg timestamp="20210201 13:24:03.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:03.647" starttime="20210201 13:24:01.832"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:03.648" starttime="20210201 13:24:01.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:03.651" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:05.705" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:05.705" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:24:05.705" starttime="20210201 13:24:03.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:05.706" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:24:05.706" starttime="20210201 13:24:05.706"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:05.707" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:05.707" starttime="20210201 13:24:05.706"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:05.707" starttime="20210201 13:24:03.648"></status>
</kw>
<msg timestamp="20210201 13:24:05.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:05.707" starttime="20210201 13:24:03.648"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:05.708" starttime="20210201 13:24:03.648"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:24:05.708" critical="yes" starttime="20210201 13:24:01.827"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210201 13:24:05.709" starttime="20210201 13:23:39.436"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:25:34.257" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:25:34.257" starttime="20210201 13:25:34.257"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:25:34.258" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:25:34.258" starttime="20210201 13:25:34.257"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:34.258" starttime="20210201 13:25:34.256"></status>
</kw>
<msg timestamp="20210201 13:25:34.258" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:25:34.258" starttime="20210201 13:25:34.256"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:25:34.259" starttime="20210201 13:25:34.259"></status>
</kw>
<msg timestamp="20210201 13:25:34.259" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:25:34.259" starttime="20210201 13:25:34.258"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:34.259" starttime="20210201 13:25:34.255"></status>
</kw>
<msg timestamp="20210201 13:25:34.259" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:25:34.259" starttime="20210201 13:25:34.255"></status>
</kw>
<msg timestamp="20210201 13:25:34.260" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:25:34.260" starttime="20210201 13:25:34.254"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:25:34.260" level="INFO">${random} = 06983</msg>
<status status="PASS" endtime="20210201 13:25:34.260" starttime="20210201 13:25:34.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:25:34.265" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-06983 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:25:37.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:25:37.310" level="INFO">${output} = 2021-02-01 13:25:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:25:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 ...</msg>
<status status="PASS" endtime="20210201 13:25:37.310" starttime="20210201 13:25:34.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:25:37.311" level="INFO">2021-02-01 13:25:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:25:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 13:25:36 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-01 13:25:36 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:25:36 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F0710B4234E1-&gt;17e89b6e-2551-4c8f-a2fd-094ea0229bc2
2021-02-01 13:25:36 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210201 13:25:37.312" starttime="20210201 13:25:37.311"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:25:37.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:25:37.312" starttime="20210201 13:25:37.312"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:37.312" starttime="20210201 13:25:34.261"></status>
</kw>
<msg timestamp="20210201 13:25:37.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:25:37.313" starttime="20210201 13:25:34.261"></status>
</kw>
<msg timestamp="20210201 13:25:37.313" level="INFO">${result} = 2021-02-01 13:25:36 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:25:36 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 ...</msg>
<status status="PASS" endtime="20210201 13:25:37.313" starttime="20210201 13:25:34.260"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:25:37.317" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:25:38.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:25:38.785" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:25 ofs://om/volume1/bucket1/ozone-06983
-rw-...</msg>
<status status="PASS" endtime="20210201 13:25:38.785" starttime="20210201 13:25:37.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:25:38.786" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:25 ofs://om/volume1/bucket1/ozone-06983
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:24 ofs://om/volume1/bucket1/ozone-10283
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:25 ofs://om/volume1/bucket1/wordcount-BjaHlX8R.txt</msg>
<status status="PASS" endtime="20210201 13:25:38.786" starttime="20210201 13:25:38.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:25:38.787" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:25:38.787" starttime="20210201 13:25:38.786"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:38.787" starttime="20210201 13:25:37.314"></status>
</kw>
<msg timestamp="20210201 13:25:38.787" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:25:38.787" starttime="20210201 13:25:37.313"></status>
</kw>
<msg timestamp="20210201 13:25:38.788" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:23 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:25 ofs://om/volume1/bucket1/ozone-06983
-rw-...</msg>
<status status="PASS" endtime="20210201 13:25:38.788" starttime="20210201 13:25:37.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:25:38.788" starttime="20210201 13:25:38.788"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:25:38.788" critical="yes" starttime="20210201 13:25:34.253"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:25:38.790" starttime="20210201 13:25:34.208"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:24:10.148" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:24:10.149" starttime="20210201 13:24:10.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:24:10.149" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:24:10.149" starttime="20210201 13:24:10.149"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:10.149" starttime="20210201 13:24:10.148"></status>
</kw>
<msg timestamp="20210201 13:24:10.149" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:24:10.149" starttime="20210201 13:24:10.147"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:10.150" starttime="20210201 13:24:10.147"></status>
</kw>
<msg timestamp="20210201 13:24:10.150" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:24:10.150" starttime="20210201 13:24:10.146"></status>
</kw>
<msg timestamp="20210201 13:24:10.150" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:24:10.150" starttime="20210201 13:24:10.145"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:24:10.150" level="INFO">${random} = 10283</msg>
<status status="PASS" endtime="20210201 13:24:10.150" starttime="20210201 13:24:10.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:10.155" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-10283 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:13.037" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:13.037" level="INFO">${output} = 2021-02-01 13:24:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 ...</msg>
<status status="PASS" endtime="20210201 13:24:13.037" starttime="20210201 13:24:10.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:13.039" level="INFO">2021-02-01 13:24:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 13:24:11 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-01 13:24:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:24:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-64023BFBD466-&gt;17e89b6e-2551-4c8f-a2fd-094ea0229bc2
2021-02-01 13:24:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210201 13:24:13.039" starttime="20210201 13:24:13.037"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:13.040" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:13.040" starttime="20210201 13:24:13.039"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:13.040" starttime="20210201 13:24:10.151"></status>
</kw>
<msg timestamp="20210201 13:24:13.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:13.040" starttime="20210201 13:24:10.151"></status>
</kw>
<msg timestamp="20210201 13:24:13.040" level="INFO">${result} = 2021-02-01 13:24:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 ...</msg>
<status status="PASS" endtime="20210201 13:24:13.040" starttime="20210201 13:24:10.150"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:13.043" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:14.640" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:14.640" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:24 o3fs://bucket1.volume1.om/ozone-10283
dr...</msg>
<status status="PASS" endtime="20210201 13:24:14.640" starttime="20210201 13:24:13.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:14.641" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:24 o3fs://bucket1.volume1.om/ozone-10283
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:24 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:24:14.641" starttime="20210201 13:24:14.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:14.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:14.642" starttime="20210201 13:24:14.641"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:14.642" starttime="20210201 13:24:13.041"></status>
</kw>
<msg timestamp="20210201 13:24:14.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:14.642" starttime="20210201 13:24:13.041"></status>
</kw>
<msg timestamp="20210201 13:24:14.642" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:23 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-01 13:24 o3fs://bucket1.volume1.om/ozone-10283
dr...</msg>
<status status="PASS" endtime="20210201 13:24:14.642" starttime="20210201 13:24:13.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:24:14.643" starttime="20210201 13:24:14.642"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:24:14.643" critical="yes" starttime="20210201 13:24:10.144"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:24:14.644" starttime="20210201 13:24:10.100"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:25:42.965" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:25:42.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:25:42.970" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:25:42.970" starttime="20210201 13:25:42.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:25:42.971" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:25:42.971" starttime="20210201 13:25:42.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:25:42.972" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:25:42.972" starttime="20210201 13:25:42.971"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:42.972" starttime="20210201 13:25:42.961"></status>
</kw>
<msg timestamp="20210201 13:25:42.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:25:42.973" starttime="20210201 13:25:42.961"></status>
</kw>
<msg timestamp="20210201 13:25:42.973" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:25:42.973" starttime="20210201 13:25:42.961"></status>
</kw>
<msg timestamp="20210201 13:25:42.973" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:25:42.973" starttime="20210201 13:25:42.960"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:25:42.977" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:25:42.977" starttime="20210201 13:25:42.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:25:42.977" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:25:42.978" starttime="20210201 13:25:42.977"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:42.978" starttime="20210201 13:25:42.976"></status>
</kw>
<msg timestamp="20210201 13:25:42.978" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:25:42.978" starttime="20210201 13:25:42.976"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:25:42.979" starttime="20210201 13:25:42.978"></status>
</kw>
<msg timestamp="20210201 13:25:42.979" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:25:42.979" starttime="20210201 13:25:42.978"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:42.979" starttime="20210201 13:25:42.975"></status>
</kw>
<msg timestamp="20210201 13:25:42.979" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:25:42.979" starttime="20210201 13:25:42.974"></status>
</kw>
<msg timestamp="20210201 13:25:42.979" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:25:42.979" starttime="20210201 13:25:42.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:25:42.982" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:26:12.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:26:12.474" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:25:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:25:44 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210201 13:26:12.474" starttime="20210201 13:25:42.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:26:12.475" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:25:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:25:44 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 13:25:44 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-01 13:25:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:25:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7654B2195E6E-&gt;17e89b6e-2551-4c8f-a2fd-094ea0229bc2
2021-02-01 13:25:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-01 13:25:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ED57D52694B4-&gt;54b2d7c9-4ca2-4513-935e-f40387136302
2021-02-01 13:25:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-01 13:25:45 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:25:45 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:25:46 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-01 13:25:46 INFO  JobSubmitter:198 - number of splits:3
2021-02-01 13:25:46 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612185787331_0003
2021-02-01 13:25:46 INFO  YarnClientImpl:273 - Submitted application application_1612185787331_0003
2021-02-01 13:25:46 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612185787331_0003/
2021-02-01 13:25:46 INFO  Job:1339 - Running job: job_1612185787331_0003
2021-02-01 13:25:52 INFO  Job:1360 - Job job_1612185787331_0003 running in uber mode : false
2021-02-01 13:25:52 INFO  Job:1367 -  map 0% reduce 0%
2021-02-01 13:25:58 INFO  Job:1367 -  map 33% reduce 0%
2021-02-01 13:26:03 INFO  Job:1367 -  map 67% reduce 0%
2021-02-01 13:26:07 INFO  Job:1367 -  map 100% reduce 0%
2021-02-01 13:26:10 INFO  Job:1367 -  map 100% reduce 100%
2021-02-01 13:26:11 INFO  Job:1378 - Job job_1612185787331_0003 completed successfully
2021-02-01 13:26:11 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610709
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33908
		Total time spent by all reduces in occupied slots (ms)=13232
		Total time spent by all map tasks (ms)=8477
		Total time spent by all reduce tasks (ms)=3308
		Total vcore-milliseconds taken by all map tasks=8477
		Total vcore-milliseconds taken by all reduce tasks=3308
		Total megabyte-milliseconds taken by all map tasks=34721792
		Total megabyte-milliseconds taken by all reduce tasks=13549568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=568
		CPU time spent (ms)=5540
		Physical memory (bytes) snapshot=1122209792
		Virtual memory (bytes) snapshot=15745347584
		Total committed heap usage (bytes)=1061158912
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 26.259 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210201 13:26:12.475" starttime="20210201 13:26:12.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:26:12.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:26:12.476" starttime="20210201 13:26:12.475"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.476" starttime="20210201 13:25:42.980"></status>
</kw>
<msg timestamp="20210201 13:26:12.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:26:12.476" starttime="20210201 13:25:42.980"></status>
</kw>
<msg timestamp="20210201 13:26:12.477" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:25:44 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:25:44 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210201 13:26:12.477" starttime="20210201 13:25:42.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:26:12.477" starttime="20210201 13:26:12.477"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:26:12.477" critical="yes" starttime="20210201 13:25:42.960"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:26:12.482" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:26:12.487" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:26:12.487" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:26:12.487" starttime="20210201 13:26:12.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:26:12.488" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:26:12.488" starttime="20210201 13:26:12.487"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:26:12.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:26:12.488" starttime="20210201 13:26:12.488"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.489" starttime="20210201 13:26:12.480"></status>
</kw>
<msg timestamp="20210201 13:26:12.489" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:26:12.489" starttime="20210201 13:26:12.479"></status>
</kw>
<msg timestamp="20210201 13:26:12.489" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:26:12.489" starttime="20210201 13:26:12.479"></status>
</kw>
<msg timestamp="20210201 13:26:12.489" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:26:12.489" starttime="20210201 13:26:12.479"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:26:12.490" level="INFO">${random} = T3bdwL4i</msg>
<status status="PASS" endtime="20210201 13:26:12.490" starttime="20210201 13:26:12.489"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:26:12.493" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:26:12.493" starttime="20210201 13:26:12.493"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:26:12.494" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:26:12.494" starttime="20210201 13:26:12.493"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.494" starttime="20210201 13:26:12.492"></status>
</kw>
<msg timestamp="20210201 13:26:12.494" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:26:12.494" starttime="20210201 13:26:12.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:26:12.495" starttime="20210201 13:26:12.494"></status>
</kw>
<msg timestamp="20210201 13:26:12.495" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:26:12.495" starttime="20210201 13:26:12.494"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.495" starttime="20210201 13:26:12.491"></status>
</kw>
<msg timestamp="20210201 13:26:12.495" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:26:12.495" starttime="20210201 13:26:12.490"></status>
</kw>
<msg timestamp="20210201 13:26:12.496" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:26:12.496" starttime="20210201 13:26:12.490"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:26:12.498" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:26:12.498" starttime="20210201 13:26:12.498"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:26:12.499" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:26:12.499" starttime="20210201 13:26:12.498"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.499" starttime="20210201 13:26:12.498"></status>
</kw>
<msg timestamp="20210201 13:26:12.499" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:26:12.499" starttime="20210201 13:26:12.497"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:26:12.501" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210201 13:26:12.501" starttime="20210201 13:26:12.500"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:26:12.501" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210201 13:26:12.501" starttime="20210201 13:26:12.501"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.501" starttime="20210201 13:26:12.500"></status>
</kw>
<msg timestamp="20210201 13:26:12.501" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210201 13:26:12.501" starttime="20210201 13:26:12.499"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.502" starttime="20210201 13:26:12.497"></status>
</kw>
<msg timestamp="20210201 13:26:12.502" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:26:12.502" starttime="20210201 13:26:12.496"></status>
</kw>
<msg timestamp="20210201 13:26:12.502" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:26:12.502" starttime="20210201 13:26:12.496"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:26:12.505" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:26:12.505" starttime="20210201 13:26:12.505"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:26:12.505" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:26:12.505" starttime="20210201 13:26:12.505"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.506" starttime="20210201 13:26:12.504"></status>
</kw>
<msg timestamp="20210201 13:26:12.506" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:26:12.506" starttime="20210201 13:26:12.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:26:12.507" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210201 13:26:12.507" starttime="20210201 13:26:12.507"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:26:12.507" level="INFO">${result} = /wordcount-T3bdwL4i.txt</msg>
<status status="PASS" endtime="20210201 13:26:12.507" starttime="20210201 13:26:12.507"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.508" starttime="20210201 13:26:12.506"></status>
</kw>
<msg timestamp="20210201 13:26:12.508" level="INFO">${path_with_leading} = /wordcount-T3bdwL4i.txt</msg>
<status status="PASS" endtime="20210201 13:26:12.508" starttime="20210201 13:26:12.506"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:12.508" starttime="20210201 13:26:12.503"></status>
</kw>
<msg timestamp="20210201 13:26:12.508" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-T3bdwL4i.txt</msg>
<status status="PASS" endtime="20210201 13:26:12.508" starttime="20210201 13:26:12.503"></status>
</kw>
<msg timestamp="20210201 13:26:12.508" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-T3bdwL4i.txt</msg>
<status status="PASS" endtime="20210201 13:26:12.508" starttime="20210201 13:26:12.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:26:12.511" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-T3bdwL4i.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:26:41.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:26:41.653" level="INFO">${output} = 2021-02-01 13:26:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:26:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210201 13:26:41.653" starttime="20210201 13:26:12.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:26:41.654" level="INFO">2021-02-01 13:26:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:26:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:26:14 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:26:14 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 13:26:14 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-01 13:26:14 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:26:14 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9A9BA07370AB-&gt;17e89b6e-2551-4c8f-a2fd-094ea0229bc2
2021-02-01 13:26:14 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:26:15 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-01 13:26:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-998333BCB147-&gt;54b2d7c9-4ca2-4513-935e-f40387136302
2021-02-01 13:26:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:26:15 INFO  JobSubmitter:198 - number of splits:3
2021-02-01 13:26:15 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612185787331_0004
2021-02-01 13:26:15 INFO  YarnClientImpl:273 - Submitted application application_1612185787331_0004
2021-02-01 13:26:15 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612185787331_0004/
2021-02-01 13:26:15 INFO  Job:1339 - Running job: job_1612185787331_0004
2021-02-01 13:26:24 INFO  Job:1360 - Job job_1612185787331_0004 running in uber mode : false
2021-02-01 13:26:24 INFO  Job:1367 -  map 0% reduce 0%
2021-02-01 13:26:30 INFO  Job:1367 -  map 33% reduce 0%
2021-02-01 13:26:33 INFO  Job:1367 -  map 67% reduce 0%
2021-02-01 13:26:38 INFO  Job:1367 -  map 100% reduce 0%
2021-02-01 13:26:41 INFO  Job:1367 -  map 100% reduce 100%
2021-02-01 13:26:41 INFO  Job:1378 - Job job_1612185787331_0004 completed successfully
2021-02-01 13:26:41 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=33684
		Total time spent by all reduces in occupied slots (ms)=12440
		Total time spent by all map tasks (ms)=8421
		Total time spent by all reduce tasks (ms)=3110
		Total vcore-milliseconds taken by all map tasks=8421
		Total vcore-milliseconds taken by all reduce tasks=3110
		Total megabyte-milliseconds taken by all map tasks=34492416
		Total megabyte-milliseconds taken by all reduce tasks=12738560
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=505
		CPU time spent (ms)=5220
		Physical memory (bytes) snapshot=1155452928
		Virtual memory (bytes) snapshot=15722795008
		Total committed heap usage (bytes)=1097859072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210201 13:26:41.655" starttime="20210201 13:26:41.654"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:26:41.655" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:26:41.655" starttime="20210201 13:26:41.655"></status>
</kw>
<status status="PASS" endtime="20210201 13:26:41.655" starttime="20210201 13:26:12.509"></status>
</kw>
<msg timestamp="20210201 13:26:41.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:26:41.656" starttime="20210201 13:26:12.509"></status>
</kw>
<msg timestamp="20210201 13:26:41.656" level="INFO">${output} = 2021-02-01 13:26:14 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:26:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210201 13:26:41.656" starttime="20210201 13:26:12.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:26:41.656" starttime="20210201 13:26:41.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:26:41.657" starttime="20210201 13:26:41.657"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:26:41.657" critical="yes" starttime="20210201 13:26:12.478"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:26:41.658" starttime="20210201 13:25:42.915"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:18.817" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:18.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:18.821" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:18.821" starttime="20210201 13:24:18.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:18.822" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:18.822" starttime="20210201 13:24:18.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:18.823" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:18.823" starttime="20210201 13:24:18.822"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:18.823" starttime="20210201 13:24:18.813"></status>
</kw>
<msg timestamp="20210201 13:24:18.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:18.823" starttime="20210201 13:24:18.812"></status>
</kw>
<msg timestamp="20210201 13:24:18.823" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:18.823" starttime="20210201 13:24:18.812"></status>
</kw>
<msg timestamp="20210201 13:24:18.823" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:18.824" starttime="20210201 13:24:18.812"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:24:18.828" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:24:18.828" starttime="20210201 13:24:18.827"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:24:18.828" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:24:18.828" starttime="20210201 13:24:18.828"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:18.828" starttime="20210201 13:24:18.827"></status>
</kw>
<msg timestamp="20210201 13:24:18.828" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:24:18.828" starttime="20210201 13:24:18.826"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:18.829" starttime="20210201 13:24:18.826"></status>
</kw>
<msg timestamp="20210201 13:24:18.829" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:24:18.829" starttime="20210201 13:24:18.824"></status>
</kw>
<msg timestamp="20210201 13:24:18.829" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:24:18.829" starttime="20210201 13:24:18.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:18.832" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:56.621" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:56.621" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:24:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:20 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210201 13:24:56.622" starttime="20210201 13:24:18.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:56.623" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:24:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:20 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 13:24:20 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-01 13:24:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:24:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F6F082DD63C3-&gt;17e89b6e-2551-4c8f-a2fd-094ea0229bc2
2021-02-01 13:24:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-01 13:24:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB644BD5C540-&gt;54b2d7c9-4ca2-4513-935e-f40387136302
2021-02-01 13:24:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-01 13:24:24 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:24:24 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-01 13:24:25 INFO  JobSubmitter:198 - number of splits:3
2021-02-01 13:24:25 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612185787331_0001
2021-02-01 13:24:25 INFO  YarnClientImpl:273 - Submitted application application_1612185787331_0001
2021-02-01 13:24:25 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612185787331_0001/
2021-02-01 13:24:25 INFO  Job:1339 - Running job: job_1612185787331_0001
2021-02-01 13:24:34 INFO  Job:1360 - Job job_1612185787331_0001 running in uber mode : false
2021-02-01 13:24:34 INFO  Job:1367 -  map 0% reduce 0%
2021-02-01 13:24:40 INFO  Job:1367 -  map 33% reduce 0%
2021-02-01 13:24:45 INFO  Job:1367 -  map 67% reduce 0%
2021-02-01 13:24:49 INFO  Job:1367 -  map 100% reduce 0%
2021-02-01 13:24:52 INFO  Job:1367 -  map 100% reduce 100%
2021-02-01 13:24:55 INFO  Job:1378 - Job job_1612185787331_0001 completed successfully
2021-02-01 13:24:56 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35400
		Total time spent by all reduces in occupied slots (ms)=13364
		Total time spent by all map tasks (ms)=8850
		Total time spent by all reduce tasks (ms)=3341
		Total vcore-milliseconds taken by all map tasks=8850
		Total vcore-milliseconds taken by all reduce tasks=3341
		Total megabyte-milliseconds taken by all map tasks=36249600
		Total megabyte-milliseconds taken by all reduce tasks=13684736
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=581
		CPU time spent (ms)=5950
		Physical memory (bytes) snapshot=1186689024
		Virtual memory (bytes) snapshot=15787245568
		Total committed heap usage (bytes)=1063256064
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.606 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210201 13:24:56.623" starttime="20210201 13:24:56.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:56.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:56.624" starttime="20210201 13:24:56.623"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.624" starttime="20210201 13:24:18.830"></status>
</kw>
<msg timestamp="20210201 13:24:56.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:56.624" starttime="20210201 13:24:18.830"></status>
</kw>
<msg timestamp="20210201 13:24:56.625" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:24:20 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:20 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210201 13:24:56.626" starttime="20210201 13:24:18.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:24:56.626" starttime="20210201 13:24:56.626"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:24:56.626" critical="yes" starttime="20210201 13:24:18.811"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:56.631" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:24:56.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:24:56.637" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:56.637" starttime="20210201 13:24:56.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:24:56.638" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:56.638" starttime="20210201 13:24:56.637"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:24:56.638" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:24:56.639" starttime="20210201 13:24:56.638"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.639" starttime="20210201 13:24:56.629"></status>
</kw>
<msg timestamp="20210201 13:24:56.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:24:56.639" starttime="20210201 13:24:56.629"></status>
</kw>
<msg timestamp="20210201 13:24:56.639" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:56.639" starttime="20210201 13:24:56.628"></status>
</kw>
<msg timestamp="20210201 13:24:56.639" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210201 13:24:56.639" starttime="20210201 13:24:56.628"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:24:56.640" level="INFO">${random} = BjaHlX8R</msg>
<status status="PASS" endtime="20210201 13:24:56.640" starttime="20210201 13:24:56.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:24:56.643" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:24:56.643" starttime="20210201 13:24:56.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:24:56.644" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:24:56.644" starttime="20210201 13:24:56.643"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.644" starttime="20210201 13:24:56.642"></status>
</kw>
<msg timestamp="20210201 13:24:56.644" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:24:56.644" starttime="20210201 13:24:56.642"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.644" starttime="20210201 13:24:56.641"></status>
</kw>
<msg timestamp="20210201 13:24:56.644" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:24:56.644" starttime="20210201 13:24:56.641"></status>
</kw>
<msg timestamp="20210201 13:24:56.645" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:24:56.645" starttime="20210201 13:24:56.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:24:56.647" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:24:56.647" starttime="20210201 13:24:56.647"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:24:56.648" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:24:56.648" starttime="20210201 13:24:56.648"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.648" starttime="20210201 13:24:56.647"></status>
</kw>
<msg timestamp="20210201 13:24:56.648" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:24:56.648" starttime="20210201 13:24:56.646"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.649" starttime="20210201 13:24:56.646"></status>
</kw>
<msg timestamp="20210201 13:24:56.649" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:24:56.649" starttime="20210201 13:24:56.645"></status>
</kw>
<msg timestamp="20210201 13:24:56.649" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:24:56.649" starttime="20210201 13:24:56.645"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:24:56.652" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:24:56.652" starttime="20210201 13:24:56.651"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:24:56.652" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:24:56.652" starttime="20210201 13:24:56.652"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.652" starttime="20210201 13:24:56.651"></status>
</kw>
<msg timestamp="20210201 13:24:56.652" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:24:56.652" starttime="20210201 13:24:56.650"></status>
</kw>
<status status="PASS" endtime="20210201 13:24:56.653" starttime="20210201 13:24:56.650"></status>
</kw>
<msg timestamp="20210201 13:24:56.653" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-BjaHlX8R.txt</msg>
<status status="PASS" endtime="20210201 13:24:56.653" starttime="20210201 13:24:56.649"></status>
</kw>
<msg timestamp="20210201 13:24:56.653" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-BjaHlX8R.txt</msg>
<status status="PASS" endtime="20210201 13:24:56.653" starttime="20210201 13:24:56.649"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:24:56.656" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-BjaHlX8R.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:25:30.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:25:30.086" level="INFO">${output} = 2021-02-01 13:24:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:24:58 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210201 13:25:30.086" starttime="20210201 13:24:56.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:25:30.087" level="INFO">2021-02-01 13:24:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:24:58 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:24:58 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:24:58 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-01 13:24:58 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-01 13:24:59 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:24:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-24B167B0AF2C-&gt;17e89b6e-2551-4c8f-a2fd-094ea0229bc2
2021-02-01 13:24:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:24:59 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-01 13:24:59 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DF773E3FE6B1-&gt;54b2d7c9-4ca2-4513-935e-f40387136302
2021-02-01 13:24:59 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:24:59 INFO  JobSubmitter:198 - number of splits:3
2021-02-01 13:25:00 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612185787331_0002
2021-02-01 13:25:00 INFO  YarnClientImpl:273 - Submitted application application_1612185787331_0002
2021-02-01 13:25:00 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612185787331_0002/
2021-02-01 13:25:00 INFO  Job:1339 - Running job: job_1612185787331_0002
2021-02-01 13:25:08 INFO  Job:1360 - Job job_1612185787331_0002 running in uber mode : false
2021-02-01 13:25:08 INFO  Job:1367 -  map 0% reduce 0%
2021-02-01 13:25:14 INFO  Job:1367 -  map 33% reduce 0%
2021-02-01 13:25:19 INFO  Job:1367 -  map 67% reduce 0%
2021-02-01 13:25:23 INFO  Job:1367 -  map 100% reduce 0%
2021-02-01 13:25:26 INFO  Job:1367 -  map 100% reduce 100%
2021-02-01 13:25:29 INFO  Job:1378 - Job job_1612185787331_0002 completed successfully
2021-02-01 13:25:29 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34540
		Total time spent by all reduces in occupied slots (ms)=12516
		Total time spent by all map tasks (ms)=8635
		Total time spent by all reduce tasks (ms)=3129
		Total vcore-milliseconds taken by all map tasks=8635
		Total vcore-milliseconds taken by all reduce tasks=3129
		Total megabyte-milliseconds taken by all map tasks=35368960
		Total megabyte-milliseconds taken by all reduce tasks=12816384
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=543
		CPU time spent (ms)=5470
		Physical memory (bytes) snapshot=1148088320
		Virtual memory (bytes) snapshot=15754964992
		Total committed heap usage (bytes)=1058537472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210201 13:25:30.087" starttime="20210201 13:25:30.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:25:30.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:25:30.088" starttime="20210201 13:25:30.087"></status>
</kw>
<status status="PASS" endtime="20210201 13:25:30.088" starttime="20210201 13:24:56.654"></status>
</kw>
<msg timestamp="20210201 13:25:30.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:25:30.088" starttime="20210201 13:24:56.654"></status>
</kw>
<msg timestamp="20210201 13:25:30.088" level="INFO">${output} = 2021-02-01 13:24:58 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.9:8032
2021-02-01 13:24:58 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210201 13:25:30.088" starttime="20210201 13:24:56.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:25:30.089" starttime="20210201 13:25:30.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:25:30.089" starttime="20210201 13:25:30.089"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:25:30.090" critical="yes" starttime="20210201 13:24:56.627"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:25:30.091" starttime="20210201 13:24:18.766"></status>
</suite>
<status status="PASS" elapsedtime="165467" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:44.922" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:27:46.993" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:27:46.993" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:27:46.993" starttime="20210201 13:27:44.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:27:46.994" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:27:46.994" starttime="20210201 13:27:46.993"></status>
</kw>
<msg timestamp="20210201 13:27:46.995" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:27:46.995" starttime="20210201 13:27:44.917"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:47.000" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:27:49.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:27:49.034" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:27:49.034" starttime="20210201 13:27:46.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:27:49.035" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:27:49.035" starttime="20210201 13:27:49.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:27:49.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:27:49.036" starttime="20210201 13:27:49.036"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:49.036" starttime="20210201 13:27:46.996"></status>
</kw>
<msg timestamp="20210201 13:27:49.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:27:49.036" starttime="20210201 13:27:46.996"></status>
</kw>
<msg timestamp="20210201 13:27:49.037" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210201 13:27:49.037" starttime="20210201 13:27:46.996"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210201 13:27:49.037" starttime="20210201 13:27:49.037"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:49.037" starttime="20210201 13:27:46.995"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:49.037" starttime="20210201 13:27:46.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:49.041" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:27:50.845" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:27:50.845" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:27:50.845" starttime="20210201 13:27:49.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:27:50.846" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:27:50.846" starttime="20210201 13:27:50.845"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:27:50.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:27:50.847" starttime="20210201 13:27:50.846"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:50.847" starttime="20210201 13:27:49.039"></status>
</kw>
<msg timestamp="20210201 13:27:50.847" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:27:50.847" starttime="20210201 13:27:49.039"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:50.847" starttime="20210201 13:27:49.038"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:50.847" starttime="20210201 13:27:49.038"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:50.847" starttime="20210201 13:27:49.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210201 13:27:50.848" starttime="20210201 13:27:50.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:50.851" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:27:52.778" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:27:52.779" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:27...</msg>
<status status="PASS" endtime="20210201 13:27:52.779" starttime="20210201 13:27:50.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:27:52.780" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:27:50.812Z",
  "modificationTime" : "2021-02-01T13:27:50.812Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 13:27:52.780" starttime="20210201 13:27:52.779"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:27:52.780" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:27:52.780" starttime="20210201 13:27:52.780"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:52.781" starttime="20210201 13:27:50.849"></status>
</kw>
<msg timestamp="20210201 13:27:52.781" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:27:52.781" starttime="20210201 13:27:50.849"></status>
</kw>
<msg timestamp="20210201 13:27:52.781" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:27...</msg>
<status status="PASS" endtime="20210201 13:27:52.781" starttime="20210201 13:27:50.848"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210201 13:27:52.782" starttime="20210201 13:27:52.781"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:27:52.785" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:27:52.785" starttime="20210201 13:27:52.785"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:27:52.785" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:27:52.785" starttime="20210201 13:27:52.785"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:52.786" starttime="20210201 13:27:52.784"></status>
</kw>
<msg timestamp="20210201 13:27:52.786" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:27:52.786" starttime="20210201 13:27:52.784"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:52.786" starttime="20210201 13:27:52.783"></status>
</kw>
<msg timestamp="20210201 13:27:52.786" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:27:52.786" starttime="20210201 13:27:52.782"></status>
</kw>
<msg timestamp="20210201 13:27:52.786" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:27:52.786" starttime="20210201 13:27:52.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:52.789" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:27:54.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:27:54.643" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:27:54.643" starttime="20210201 13:27:52.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:27:54.644" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:27:54.645" starttime="20210201 13:27:54.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:27:54.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:27:54.645" starttime="20210201 13:27:54.645"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:54.645" starttime="20210201 13:27:52.787"></status>
</kw>
<msg timestamp="20210201 13:27:54.646" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:27:54.646" starttime="20210201 13:27:52.787"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:54.646" starttime="20210201 13:27:52.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:54.649" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:27:59.342" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:27:59.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:27:59.342" starttime="20210201 13:27:54.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:27:59.343" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:27:59.343" starttime="20210201 13:27:59.342"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:27:59.344" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:27:59.344" starttime="20210201 13:27:59.343"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:59.344" starttime="20210201 13:27:54.647"></status>
</kw>
<msg timestamp="20210201 13:27:59.344" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:27:59.344" starttime="20210201 13:27:54.647"></status>
</kw>
<status status="PASS" endtime="20210201 13:27:59.344" starttime="20210201 13:27:54.646"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:27:59.347" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:05.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:05.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:28:05.319" starttime="20210201 13:27:59.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:05.320" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:28:05.320" starttime="20210201 13:28:05.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:05.321" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:05.321" starttime="20210201 13:28:05.320"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:05.321" starttime="20210201 13:27:59.345"></status>
</kw>
<msg timestamp="20210201 13:28:05.321" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:05.321" starttime="20210201 13:27:59.345"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:05.321" starttime="20210201 13:27:59.345"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:05.325" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:08.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:08.927" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:28:08.927" starttime="20210201 13:28:05.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:08.928" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:28:08.928" starttime="20210201 13:28:08.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:08.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:08.929" starttime="20210201 13:28:08.929"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:08.929" starttime="20210201 13:28:05.322"></status>
</kw>
<msg timestamp="20210201 13:28:08.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:08.929" starttime="20210201 13:28:05.322"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:08.930" starttime="20210201 13:28:05.322"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:28:08.930" critical="yes" starttime="20210201 13:27:44.917"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:28:08.936" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:28:08.936" starttime="20210201 13:28:08.935"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:28:08.936" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:28:08.936" starttime="20210201 13:28:08.936"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:08.936" starttime="20210201 13:28:08.935"></status>
</kw>
<msg timestamp="20210201 13:28:08.937" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:28:08.937" starttime="20210201 13:28:08.934"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:08.937" starttime="20210201 13:28:08.934"></status>
</kw>
<msg timestamp="20210201 13:28:08.937" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:28:08.937" starttime="20210201 13:28:08.933"></status>
</kw>
<msg timestamp="20210201 13:28:08.937" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:28:08.937" starttime="20210201 13:28:08.932"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:08.940" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:10.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:10.823" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:28:10.823" starttime="20210201 13:28:08.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:10.824" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:28:10.824" starttime="20210201 13:28:10.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:10.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:10.825" starttime="20210201 13:28:10.824"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:10.825" starttime="20210201 13:28:08.938"></status>
</kw>
<msg timestamp="20210201 13:28:10.825" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:10.825" starttime="20210201 13:28:08.938"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:10.825" starttime="20210201 13:28:08.937"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:10.829" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:12.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:12.702" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:28:12.703" starttime="20210201 13:28:10.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:12.704" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:28:12.704" starttime="20210201 13:28:12.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:12.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:12.704" starttime="20210201 13:28:12.704"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:12.705" starttime="20210201 13:28:10.826"></status>
</kw>
<msg timestamp="20210201 13:28:12.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:12.705" starttime="20210201 13:28:10.826"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:12.705" starttime="20210201 13:28:10.826"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:28:12.705" critical="yes" starttime="20210201 13:28:08.931"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210201 13:28:12.706" starttime="20210201 13:27:44.867"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:29:43.327" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:29:43.327" starttime="20210201 13:29:43.326"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:29:43.327" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:29:43.327" starttime="20210201 13:29:43.327"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:43.328" starttime="20210201 13:29:43.326"></status>
</kw>
<msg timestamp="20210201 13:29:43.328" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:29:43.328" starttime="20210201 13:29:43.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:29:43.328" starttime="20210201 13:29:43.328"></status>
</kw>
<msg timestamp="20210201 13:29:43.329" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:29:43.329" starttime="20210201 13:29:43.328"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:43.329" starttime="20210201 13:29:43.325"></status>
</kw>
<msg timestamp="20210201 13:29:43.329" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:29:43.329" starttime="20210201 13:29:43.324"></status>
</kw>
<msg timestamp="20210201 13:29:43.329" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:29:43.329" starttime="20210201 13:29:43.324"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:29:43.330" level="INFO">${random} = 59109</msg>
<status status="PASS" endtime="20210201 13:29:43.330" starttime="20210201 13:29:43.329"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:29:43.335" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-59109 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:29:46.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:29:46.420" level="INFO">${output} = 2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:29:46.420" starttime="20210201 13:29:43.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:29:46.421" level="INFO">2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:45 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-01 13:29:45 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:29:45 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:29:45 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:29:45 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:29:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C96883491F92-&gt;559b4698-e431-4e6e-bffe-439b0f18b3ed
2021-02-01 13:29:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:29:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:29:46.421" starttime="20210201 13:29:46.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:29:46.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:29:46.422" starttime="20210201 13:29:46.421"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:46.422" starttime="20210201 13:29:43.331"></status>
</kw>
<msg timestamp="20210201 13:29:46.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:29:46.422" starttime="20210201 13:29:43.330"></status>
</kw>
<msg timestamp="20210201 13:29:46.423" level="INFO">${result} = 2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:44 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:29:46.423" starttime="20210201 13:29:43.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:29:46.426" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:29:48.203" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:29:48.203" level="INFO">${output} = 2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:29:48.203" starttime="20210201 13:29:46.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:29:48.204" level="INFO">2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:27 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-01 13:28 ofs://om/volume1/bucket1/ozone-07401
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-01 13:29 ofs://om/volume1/bucket1/ozone-59109
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:28 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:29 ofs://om/volume1/bucket1/wordcount-8JCSz5Be.txt
2021-02-01 13:29:48 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:29:48.204" starttime="20210201 13:29:48.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:29:48.205" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:29:48.205" starttime="20210201 13:29:48.205"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:48.205" starttime="20210201 13:29:46.424"></status>
</kw>
<msg timestamp="20210201 13:29:48.205" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:29:48.205" starttime="20210201 13:29:46.423"></status>
</kw>
<msg timestamp="20210201 13:29:48.206" level="INFO">${result} = 2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:47 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:47 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:29:48.206" starttime="20210201 13:29:46.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:29:48.206" starttime="20210201 13:29:48.206"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:29:48.206" critical="yes" starttime="20210201 13:29:43.323"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:29:48.208" starttime="20210201 13:29:43.277"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:28:16.861" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:28:16.861" starttime="20210201 13:28:16.861"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:28:16.862" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:28:16.862" starttime="20210201 13:28:16.862"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:16.862" starttime="20210201 13:28:16.861"></status>
</kw>
<msg timestamp="20210201 13:28:16.862" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:28:16.862" starttime="20210201 13:28:16.860"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:16.863" starttime="20210201 13:28:16.860"></status>
</kw>
<msg timestamp="20210201 13:28:16.863" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:28:16.863" starttime="20210201 13:28:16.859"></status>
</kw>
<msg timestamp="20210201 13:28:16.863" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:28:16.863" starttime="20210201 13:28:16.858"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:28:16.863" level="INFO">${random} = 07401</msg>
<status status="PASS" endtime="20210201 13:28:16.863" starttime="20210201 13:28:16.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:16.867" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-07401 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:20.245" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:20.245" level="INFO">${output} = 2021-02-01 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:28:20.245" starttime="20210201 13:28:16.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:20.247" level="INFO">2021-02-01 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:18 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-01 13:28:18 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:28:18 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:28:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:28:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:28:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-06EEB4ABAACF-&gt;559b4698-e431-4e6e-bffe-439b0f18b3ed
2021-02-01 13:28:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:28:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:28:20.247" starttime="20210201 13:28:20.245"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:20.248" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:20.248" starttime="20210201 13:28:20.247"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:20.248" starttime="20210201 13:28:16.864"></status>
</kw>
<msg timestamp="20210201 13:28:20.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:20.248" starttime="20210201 13:28:16.864"></status>
</kw>
<msg timestamp="20210201 13:28:20.248" level="INFO">${result} = 2021-02-01 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:17 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:18 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:28:20.248" starttime="20210201 13:28:16.863"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:20.253" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:21.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:21.831" level="INFO">${output} = 2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:28:21.831" starttime="20210201 13:28:20.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:21.832" level="INFO">2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:27 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-01 13:28 o3fs://bucket1.volume1.om/ozone-07401
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:28 o3fs://bucket1.volume1.om/user
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:28:21.832" starttime="20210201 13:28:21.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:21.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:21.833" starttime="20210201 13:28:21.833"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:21.833" starttime="20210201 13:28:20.249"></status>
</kw>
<msg timestamp="20210201 13:28:21.833" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:21.833" starttime="20210201 13:28:20.249"></status>
</kw>
<msg timestamp="20210201 13:28:21.834" level="INFO">${result} = 2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:21 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:28:21.834" starttime="20210201 13:28:20.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:28:21.834" starttime="20210201 13:28:21.834"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:28:21.834" critical="yes" starttime="20210201 13:28:16.858"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:28:21.835" starttime="20210201 13:28:16.813"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:29:52.376" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:29:52.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:29:52.381" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:52.381" starttime="20210201 13:29:52.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:29:52.382" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:52.382" starttime="20210201 13:29:52.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:29:52.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:29:52.383" starttime="20210201 13:29:52.382"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:52.383" starttime="20210201 13:29:52.373"></status>
</kw>
<msg timestamp="20210201 13:29:52.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:29:52.383" starttime="20210201 13:29:52.372"></status>
</kw>
<msg timestamp="20210201 13:29:52.383" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:52.383" starttime="20210201 13:29:52.372"></status>
</kw>
<msg timestamp="20210201 13:29:52.384" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:52.384" starttime="20210201 13:29:52.372"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:29:52.388" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:29:52.388" starttime="20210201 13:29:52.387"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:29:52.388" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:29:52.388" starttime="20210201 13:29:52.388"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:52.388" starttime="20210201 13:29:52.387"></status>
</kw>
<msg timestamp="20210201 13:29:52.388" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:29:52.388" starttime="20210201 13:29:52.386"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:29:52.389" starttime="20210201 13:29:52.389"></status>
</kw>
<msg timestamp="20210201 13:29:52.389" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:29:52.389" starttime="20210201 13:29:52.389"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:52.390" starttime="20210201 13:29:52.386"></status>
</kw>
<msg timestamp="20210201 13:29:52.390" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:29:52.390" starttime="20210201 13:29:52.384"></status>
</kw>
<msg timestamp="20210201 13:29:52.390" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:29:52.390" starttime="20210201 13:29:52.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:29:52.393" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:30:30.624" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:30:30.624" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29...</msg>
<status status="PASS" endtime="20210201 13:30:30.624" starttime="20210201 13:29:52.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:30:30.625" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:54 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-01 13:29:54 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:29:54 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:29:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:29:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:29:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FCC36B0274E1-&gt;559b4698-e431-4e6e-bffe-439b0f18b3ed
2021-02-01 13:29:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-01 13:29:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:55 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-01 13:29:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:29:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-81CD0E74D859-&gt;eb52f2f3-3518-42f9-914f-c17fd75b3e6c
2021-02-01 13:29:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:29:58 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:29:58 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:29:58 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186042201_0003
2021-02-01 13:29:58 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:29:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:58 INFO  Configuration:2752 - resource-types.xml not found
2021-02-01 13:29:58 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-01 13:29:58 INFO  YarnClientImpl:324 - Submitted application application_1612186042201_0003
2021-02-01 13:29:58 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612186042201_0003/
2021-02-01 13:29:58 INFO  Job:1619 - Running job: job_1612186042201_0003
2021-02-01 13:30:04 INFO  Job:1640 - Job job_1612186042201_0003 running in uber mode : false
2021-02-01 13:30:04 INFO  Job:1647 -  map 0% reduce 0%
2021-02-01 13:30:11 INFO  Job:1647 -  map 33% reduce 0%
2021-02-01 13:30:16 INFO  Job:1647 -  map 67% reduce 0%
2021-02-01 13:30:21 INFO  Job:1647 -  map 100% reduce 0%
2021-02-01 13:30:26 INFO  Job:1647 -  map 100% reduce 100%
2021-02-01 13:30:30 INFO  Job:1658 - Job job_1612186042201_0003 completed successfully
2021-02-01 13:30:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016157
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36880
		Total time spent by all reduces in occupied slots (ms)=12980
		Total time spent by all map tasks (ms)=9220
		Total time spent by all reduce tasks (ms)=3245
		Total vcore-milliseconds taken by all map tasks=9220
		Total vcore-milliseconds taken by all reduce tasks=3245
		Total megabyte-milliseconds taken by all map tasks=37765120
		Total megabyte-milliseconds taken by all reduce tasks=13291520
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=572
		CPU time spent (ms)=5820
		Physical memory (bytes) snapshot=1247973376
		Virtual memory (bytes) snapshot=15797231616
		Total committed heap usage (bytes)=1088421888
		Peak Map Physical memory (bytes)=317681664
		Peak Map Virtual memory (bytes)=3950743552
		Peak Reduce Physical memory (bytes)=314949632
		Peak Reduce Virtual memory (bytes)=3967639552
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.945 seconds
2021-02-01 13:30:30 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-01 13:30:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:30:30.625" starttime="20210201 13:30:30.625"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:30:30.626" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:30:30.626" starttime="20210201 13:30:30.626"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.626" starttime="20210201 13:29:52.391"></status>
</kw>
<msg timestamp="20210201 13:30:30.626" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:30:30.627" starttime="20210201 13:29:52.391"></status>
</kw>
<msg timestamp="20210201 13:30:30.627" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:53 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29...</msg>
<status status="PASS" endtime="20210201 13:30:30.627" starttime="20210201 13:29:52.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:30:30.628" starttime="20210201 13:30:30.627"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:30:30.628" critical="yes" starttime="20210201 13:29:52.371"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:30:30.633" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:30:30.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:30:30.638" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:30:30.638" starttime="20210201 13:30:30.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:30:30.638" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:30:30.638" starttime="20210201 13:30:30.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:30:30.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:30:30.639" starttime="20210201 13:30:30.639"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.639" starttime="20210201 13:30:30.630"></status>
</kw>
<msg timestamp="20210201 13:30:30.639" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:30:30.639" starttime="20210201 13:30:30.630"></status>
</kw>
<msg timestamp="20210201 13:30:30.640" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:30:30.640" starttime="20210201 13:30:30.630"></status>
</kw>
<msg timestamp="20210201 13:30:30.640" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:30:30.640" starttime="20210201 13:30:30.629"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:30:30.640" level="INFO">${random} = BEIFp45q</msg>
<status status="PASS" endtime="20210201 13:30:30.640" starttime="20210201 13:30:30.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:30:30.644" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:30:30.644" starttime="20210201 13:30:30.643"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:30:30.644" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:30:30.644" starttime="20210201 13:30:30.644"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.644" starttime="20210201 13:30:30.643"></status>
</kw>
<msg timestamp="20210201 13:30:30.644" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:30:30.645" starttime="20210201 13:30:30.642"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:30:30.645" starttime="20210201 13:30:30.645"></status>
</kw>
<msg timestamp="20210201 13:30:30.645" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:30:30.645" starttime="20210201 13:30:30.645"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.646" starttime="20210201 13:30:30.642"></status>
</kw>
<msg timestamp="20210201 13:30:30.646" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:30:30.646" starttime="20210201 13:30:30.641"></status>
</kw>
<msg timestamp="20210201 13:30:30.646" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:30:30.646" starttime="20210201 13:30:30.640"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:30:30.649" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:30:30.649" starttime="20210201 13:30:30.648"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:30:30.649" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:30:30.649" starttime="20210201 13:30:30.649"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.650" starttime="20210201 13:30:30.648"></status>
</kw>
<msg timestamp="20210201 13:30:30.650" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:30:30.650" starttime="20210201 13:30:30.648"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:30:30.651" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210201 13:30:30.651" starttime="20210201 13:30:30.650"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:30:30.651" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210201 13:30:30.651" starttime="20210201 13:30:30.651"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.652" starttime="20210201 13:30:30.650"></status>
</kw>
<msg timestamp="20210201 13:30:30.652" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210201 13:30:30.652" starttime="20210201 13:30:30.650"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.652" starttime="20210201 13:30:30.647"></status>
</kw>
<msg timestamp="20210201 13:30:30.652" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:30:30.652" starttime="20210201 13:30:30.647"></status>
</kw>
<msg timestamp="20210201 13:30:30.652" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:30:30.652" starttime="20210201 13:30:30.646"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:30:30.655" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:30:30.655" starttime="20210201 13:30:30.655"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:30:30.656" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:30:30.656" starttime="20210201 13:30:30.655"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.656" starttime="20210201 13:30:30.654"></status>
</kw>
<msg timestamp="20210201 13:30:30.656" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:30:30.656" starttime="20210201 13:30:30.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:30:30.657" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210201 13:30:30.657" starttime="20210201 13:30:30.657"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:30:30.658" level="INFO">${result} = /wordcount-BEIFp45q.txt</msg>
<status status="PASS" endtime="20210201 13:30:30.658" starttime="20210201 13:30:30.657"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.658" starttime="20210201 13:30:30.656"></status>
</kw>
<msg timestamp="20210201 13:30:30.658" level="INFO">${path_with_leading} = /wordcount-BEIFp45q.txt</msg>
<status status="PASS" endtime="20210201 13:30:30.658" starttime="20210201 13:30:30.656"></status>
</kw>
<status status="PASS" endtime="20210201 13:30:30.658" starttime="20210201 13:30:30.653"></status>
</kw>
<msg timestamp="20210201 13:30:30.658" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-BEIFp45q.txt</msg>
<status status="PASS" endtime="20210201 13:30:30.658" starttime="20210201 13:30:30.653"></status>
</kw>
<msg timestamp="20210201 13:30:30.659" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-BEIFp45q.txt</msg>
<status status="PASS" endtime="20210201 13:30:30.659" starttime="20210201 13:30:30.652"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:30:30.662" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-BEIFp45q.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:31:05.798" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:31:05.798" level="INFO">${output} = 2021-02-01 13:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:31:05.799" starttime="20210201 13:30:30.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:31:05.800" level="INFO">2021-02-01 13:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-01 13:30:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:30:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:30:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:30:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:30:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-94014A7695AB-&gt;559b4698-e431-4e6e-bffe-439b0f18b3ed
2021-02-01 13:30:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:30:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:30:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8AC6B605D67D-&gt;eb52f2f3-3518-42f9-914f-c17fd75b3e6c
2021-02-01 13:30:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:30:33 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:30:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186042201_0004
2021-02-01 13:30:36 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:30:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:36 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:36 INFO  Configuration:2752 - resource-types.xml not found
2021-02-01 13:30:36 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-01 13:30:36 INFO  YarnClientImpl:324 - Submitted application application_1612186042201_0004
2021-02-01 13:30:36 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612186042201_0004/
2021-02-01 13:30:36 INFO  Job:1619 - Running job: job_1612186042201_0004
2021-02-01 13:30:44 INFO  Job:1640 - Job job_1612186042201_0004 running in uber mode : false
2021-02-01 13:30:44 INFO  Job:1647 -  map 0% reduce 0%
2021-02-01 13:30:50 INFO  Job:1647 -  map 33% reduce 0%
2021-02-01 13:30:55 INFO  Job:1647 -  map 67% reduce 0%
2021-02-01 13:31:00 INFO  Job:1647 -  map 100% reduce 0%
2021-02-01 13:31:04 INFO  Job:1647 -  map 100% reduce 100%
2021-02-01 13:31:05 INFO  Job:1658 - Job job_1612186042201_0004 completed successfully
2021-02-01 13:31:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:31:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35436
		Total time spent by all reduces in occupied slots (ms)=12932
		Total time spent by all map tasks (ms)=8859
		Total time spent by all reduce tasks (ms)=3233
		Total vcore-milliseconds taken by all map tasks=8859
		Total vcore-milliseconds taken by all reduce tasks=3233
		Total megabyte-milliseconds taken by all map tasks=36286464
		Total megabyte-milliseconds taken by all reduce tasks=13242368
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=538
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1273851904
		Virtual memory (bytes) snapshot=15811612672
		Total committed heap usage (bytes)=1074790400
		Peak Map Physical memory (bytes)=322146304
		Peak Map Virtual memory (bytes)=3949166592
		Peak Reduce Physical memory (bytes)=309596160
		Peak Reduce Virtual memory (bytes)=3965681664
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-01 13:31:05 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:31:05.800" starttime="20210201 13:31:05.799"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:31:05.800" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:31:05.800" starttime="20210201 13:31:05.800"></status>
</kw>
<status status="PASS" endtime="20210201 13:31:05.801" starttime="20210201 13:30:30.660"></status>
</kw>
<msg timestamp="20210201 13:31:05.801" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:31:05.801" starttime="20210201 13:30:30.659"></status>
</kw>
<msg timestamp="20210201 13:31:05.801" level="INFO">${output} = 2021-02-01 13:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:30:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:31:05.801" starttime="20210201 13:30:30.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:31:05.802" starttime="20210201 13:31:05.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:31:05.802" starttime="20210201 13:31:05.802"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:31:05.802" critical="yes" starttime="20210201 13:30:30.629"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:31:05.803" starttime="20210201 13:29:52.325"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:26.002" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:28:26.008" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:28:26.008" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:28:26.008" starttime="20210201 13:28:25.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:28:26.008" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:28:26.009" starttime="20210201 13:28:26.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:28:26.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:28:26.009" starttime="20210201 13:28:26.009"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:26.009" starttime="20210201 13:28:25.998"></status>
</kw>
<msg timestamp="20210201 13:28:26.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:28:26.010" starttime="20210201 13:28:25.998"></status>
</kw>
<msg timestamp="20210201 13:28:26.010" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:28:26.010" starttime="20210201 13:28:25.997"></status>
</kw>
<msg timestamp="20210201 13:28:26.010" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:28:26.010" starttime="20210201 13:28:25.997"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:28:26.014" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:28:26.014" starttime="20210201 13:28:26.014"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:28:26.015" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:28:26.015" starttime="20210201 13:28:26.014"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:26.015" starttime="20210201 13:28:26.013"></status>
</kw>
<msg timestamp="20210201 13:28:26.015" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:28:26.015" starttime="20210201 13:28:26.013"></status>
</kw>
<status status="PASS" endtime="20210201 13:28:26.015" starttime="20210201 13:28:26.013"></status>
</kw>
<msg timestamp="20210201 13:28:26.015" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:28:26.015" starttime="20210201 13:28:26.011"></status>
</kw>
<msg timestamp="20210201 13:28:26.016" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:28:26.016" starttime="20210201 13:28:26.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:28:26.018" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:29:04.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:29:04.073" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28...</msg>
<status status="PASS" endtime="20210201 13:29:04.073" starttime="20210201 13:28:26.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:29:04.074" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:27 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-01 13:28:27 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:28:27 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:28:27 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:28:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:28:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D94DBC9CF3D8-&gt;559b4698-e431-4e6e-bffe-439b0f18b3ed
2021-02-01 13:28:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-01 13:28:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B9399CB11BC7-&gt;eb52f2f3-3518-42f9-914f-c17fd75b3e6c
2021-02-01 13:28:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-01 13:28:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:29 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-01 13:28:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:29 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:28:32 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:28:32 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186042201_0001
2021-02-01 13:28:32 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:28:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:32 INFO  Configuration:2752 - resource-types.xml not found
2021-02-01 13:28:32 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-01 13:28:33 INFO  YarnClientImpl:324 - Submitted application application_1612186042201_0001
2021-02-01 13:28:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612186042201_0001/
2021-02-01 13:28:33 INFO  Job:1619 - Running job: job_1612186042201_0001
2021-02-01 13:28:42 INFO  Job:1640 - Job job_1612186042201_0001 running in uber mode : false
2021-02-01 13:28:42 INFO  Job:1647 -  map 0% reduce 0%
2021-02-01 13:28:48 INFO  Job:1647 -  map 33% reduce 0%
2021-02-01 13:28:53 INFO  Job:1647 -  map 67% reduce 0%
2021-02-01 13:28:58 INFO  Job:1647 -  map 100% reduce 0%
2021-02-01 13:29:02 INFO  Job:1647 -  map 100% reduce 100%
2021-02-01 13:29:03 INFO  Job:1658 - Job job_1612186042201_0001 completed successfully
2021-02-01 13:29:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016377
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34688
		Total time spent by all reduces in occupied slots (ms)=13976
		Total time spent by all map tasks (ms)=8672
		Total time spent by all reduce tasks (ms)=3494
		Total vcore-milliseconds taken by all map tasks=8672
		Total vcore-milliseconds taken by all reduce tasks=3494
		Total megabyte-milliseconds taken by all map tasks=35520512
		Total megabyte-milliseconds taken by all reduce tasks=14311424
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=563
		CPU time spent (ms)=5360
		Physical memory (bytes) snapshot=1255403520
		Virtual memory (bytes) snapshot=15786696704
		Total committed heap usage (bytes)=1077936128
		Peak Map Physical memory (bytes)=322011136
		Peak Map Virtual memory (bytes)=3943682048
		Peak Reduce Physical memory (bytes)=313286656
		Peak Reduce Virtual memory (bytes)=3967594496
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.442 seconds
2021-02-01 13:29:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:03 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-01 13:29:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:29:04.074" starttime="20210201 13:29:04.073"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:29:04.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:29:04.075" starttime="20210201 13:29:04.074"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.075" starttime="20210201 13:28:26.017"></status>
</kw>
<msg timestamp="20210201 13:29:04.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:29:04.075" starttime="20210201 13:28:26.016"></status>
</kw>
<msg timestamp="20210201 13:29:04.076" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:28...</msg>
<status status="PASS" endtime="20210201 13:29:04.076" starttime="20210201 13:28:26.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:29:04.076" starttime="20210201 13:29:04.076"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:29:04.076" critical="yes" starttime="20210201 13:28:25.996"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:29:04.081" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:29:04.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:29:04.086" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:04.086" starttime="20210201 13:29:04.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:29:04.087" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:04.087" starttime="20210201 13:29:04.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:29:04.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:29:04.088" starttime="20210201 13:29:04.087"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.088" starttime="20210201 13:29:04.079"></status>
</kw>
<msg timestamp="20210201 13:29:04.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:29:04.088" starttime="20210201 13:29:04.078"></status>
</kw>
<msg timestamp="20210201 13:29:04.088" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:04.088" starttime="20210201 13:29:04.078"></status>
</kw>
<msg timestamp="20210201 13:29:04.089" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210201 13:29:04.089" starttime="20210201 13:29:04.078"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:29:04.089" level="INFO">${random} = 8JCSz5Be</msg>
<status status="PASS" endtime="20210201 13:29:04.089" starttime="20210201 13:29:04.089"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:29:04.092" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:29:04.092" starttime="20210201 13:29:04.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:29:04.093" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:29:04.093" starttime="20210201 13:29:04.093"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.093" starttime="20210201 13:29:04.092"></status>
</kw>
<msg timestamp="20210201 13:29:04.093" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:29:04.093" starttime="20210201 13:29:04.091"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.093" starttime="20210201 13:29:04.090"></status>
</kw>
<msg timestamp="20210201 13:29:04.094" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:29:04.094" starttime="20210201 13:29:04.090"></status>
</kw>
<msg timestamp="20210201 13:29:04.094" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:29:04.094" starttime="20210201 13:29:04.089"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:29:04.097" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:29:04.097" starttime="20210201 13:29:04.096"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:29:04.097" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:29:04.097" starttime="20210201 13:29:04.097"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.097" starttime="20210201 13:29:04.096"></status>
</kw>
<msg timestamp="20210201 13:29:04.097" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:29:04.097" starttime="20210201 13:29:04.096"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.098" starttime="20210201 13:29:04.095"></status>
</kw>
<msg timestamp="20210201 13:29:04.098" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:29:04.098" starttime="20210201 13:29:04.094"></status>
</kw>
<msg timestamp="20210201 13:29:04.098" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:29:04.098" starttime="20210201 13:29:04.094"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:29:04.101" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:29:04.101" starttime="20210201 13:29:04.100"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:29:04.101" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:29:04.101" starttime="20210201 13:29:04.101"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.101" starttime="20210201 13:29:04.100"></status>
</kw>
<msg timestamp="20210201 13:29:04.102" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:29:04.102" starttime="20210201 13:29:04.100"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:04.102" starttime="20210201 13:29:04.099"></status>
</kw>
<msg timestamp="20210201 13:29:04.102" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-8JCSz5Be.txt</msg>
<status status="PASS" endtime="20210201 13:29:04.102" starttime="20210201 13:29:04.099"></status>
</kw>
<msg timestamp="20210201 13:29:04.102" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-8JCSz5Be.txt</msg>
<status status="PASS" endtime="20210201 13:29:04.102" starttime="20210201 13:29:04.098"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:29:04.105" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-8JCSz5Be.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:29:39.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:29:39.136" level="INFO">${output} = 2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:29:39.137" starttime="20210201 13:29:04.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:29:39.138" level="INFO">2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:06 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-01 13:29:06 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-01 13:29:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:29:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:29:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:29:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D7713EA9C354-&gt;559b4698-e431-4e6e-bffe-439b0f18b3ed
2021-02-01 13:29:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:29:07 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:29:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1D0C87A73A02-&gt;eb52f2f3-3518-42f9-914f-c17fd75b3e6c
2021-02-01 13:29:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:29:09 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:29:10 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186042201_0002
2021-02-01 13:29:10 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:29:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:10 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:10 INFO  Configuration:2752 - resource-types.xml not found
2021-02-01 13:29:10 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-01 13:29:10 INFO  YarnClientImpl:324 - Submitted application application_1612186042201_0002
2021-02-01 13:29:10 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612186042201_0002/
2021-02-01 13:29:10 INFO  Job:1619 - Running job: job_1612186042201_0002
2021-02-01 13:29:17 INFO  Job:1640 - Job job_1612186042201_0002 running in uber mode : false
2021-02-01 13:29:17 INFO  Job:1647 -  map 0% reduce 0%
2021-02-01 13:29:23 INFO  Job:1647 -  map 33% reduce 0%
2021-02-01 13:29:28 INFO  Job:1647 -  map 67% reduce 0%
2021-02-01 13:29:33 INFO  Job:1647 -  map 100% reduce 0%
2021-02-01 13:29:38 INFO  Job:1647 -  map 100% reduce 100%
2021-02-01 13:29:38 INFO  Job:1658 - Job job_1612186042201_0002 completed successfully
2021-02-01 13:29:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:38 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35300
		Total time spent by all reduces in occupied slots (ms)=12996
		Total time spent by all map tasks (ms)=8825
		Total time spent by all reduce tasks (ms)=3249
		Total vcore-milliseconds taken by all map tasks=8825
		Total vcore-milliseconds taken by all reduce tasks=3249
		Total megabyte-milliseconds taken by all map tasks=36147200
		Total megabyte-milliseconds taken by all reduce tasks=13307904
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=560
		CPU time spent (ms)=6150
		Physical memory (bytes) snapshot=1284567040
		Virtual memory (bytes) snapshot=15811416064
		Total committed heap usage (bytes)=1069023232
		Peak Map Physical memory (bytes)=332984320
		Peak Map Virtual memory (bytes)=3949264896
		Peak Reduce Physical memory (bytes)=314429440
		Peak Reduce Virtual memory (bytes)=3973136384
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-01 13:29:38 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210201 13:29:39.138" starttime="20210201 13:29:39.137"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:29:39.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:29:39.138" starttime="20210201 13:29:39.138"></status>
</kw>
<status status="PASS" endtime="20210201 13:29:39.139" starttime="20210201 13:29:04.103"></status>
</kw>
<msg timestamp="20210201 13:29:39.139" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:29:39.139" starttime="20210201 13:29:04.103"></status>
</kw>
<msg timestamp="20210201 13:29:39.139" level="INFO">${output} = 2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-01 13:29:05 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210201 13:29:39.139" starttime="20210201 13:29:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:29:39.140" starttime="20210201 13:29:39.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:29:39.140" starttime="20210201 13:29:39.140"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:29:39.140" critical="yes" starttime="20210201 13:29:04.077"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:29:39.141" starttime="20210201 13:28:25.952"></status>
</suite>
<status status="PASS" elapsedtime="184459" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:09.510" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:20.183" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:32:20.183" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:32:20.183" starttime="20210201 13:32:09.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:20.184" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:32:20.184" starttime="20210201 13:32:20.183"></status>
</kw>
<msg timestamp="20210201 13:32:20.185" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:32:20.185" starttime="20210201 13:32:09.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:20.190" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:23.041" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:23.041" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:23.041" starttime="20210201 13:32:20.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:23.042" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:23.042" starttime="20210201 13:32:23.041"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:23.043" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:23.043" starttime="20210201 13:32:23.042"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:23.043" starttime="20210201 13:32:20.187"></status>
</kw>
<msg timestamp="20210201 13:32:23.043" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:23.043" starttime="20210201 13:32:20.187"></status>
</kw>
<msg timestamp="20210201 13:32:23.043" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210201 13:32:23.043" starttime="20210201 13:32:20.186"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210201 13:32:23.044" starttime="20210201 13:32:23.044"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:23.044" starttime="20210201 13:32:20.186"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:23.044" starttime="20210201 13:32:20.185"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:23.048" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:25.602" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:25.602" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:25.602" starttime="20210201 13:32:23.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:25.603" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:25.603" starttime="20210201 13:32:25.602"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:25.604" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:25.604" starttime="20210201 13:32:25.603"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:25.604" starttime="20210201 13:32:23.046"></status>
</kw>
<msg timestamp="20210201 13:32:25.604" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:25.604" starttime="20210201 13:32:23.045"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:25.604" starttime="20210201 13:32:23.045"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:25.605" starttime="20210201 13:32:23.045"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:25.605" starttime="20210201 13:32:23.044"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210201 13:32:25.605" starttime="20210201 13:32:25.605"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:25.609" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:28.587" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:28.587" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:32...</msg>
<status status="PASS" endtime="20210201 13:32:28.587" starttime="20210201 13:32:25.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:28.588" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:32:25.495Z",
  "modificationTime" : "2021-02-01T13:32:25.495Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 13:32:28.589" starttime="20210201 13:32:28.588"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:28.589" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:28.589" starttime="20210201 13:32:28.589"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:28.589" starttime="20210201 13:32:25.606"></status>
</kw>
<msg timestamp="20210201 13:32:28.589" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:28.590" starttime="20210201 13:32:25.606"></status>
</kw>
<msg timestamp="20210201 13:32:28.590" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:32...</msg>
<status status="PASS" endtime="20210201 13:32:28.590" starttime="20210201 13:32:25.606"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210201 13:32:28.590" starttime="20210201 13:32:28.590"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:32:28.594" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:32:28.594" starttime="20210201 13:32:28.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:32:28.594" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:32:28.594" starttime="20210201 13:32:28.594"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:28.595" starttime="20210201 13:32:28.593"></status>
</kw>
<msg timestamp="20210201 13:32:28.595" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:32:28.595" starttime="20210201 13:32:28.593"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:28.595" starttime="20210201 13:32:28.592"></status>
</kw>
<msg timestamp="20210201 13:32:28.595" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:32:28.595" starttime="20210201 13:32:28.591"></status>
</kw>
<msg timestamp="20210201 13:32:28.595" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:32:28.595" starttime="20210201 13:32:28.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:28.598" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:31.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:31.459" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:31.459" starttime="20210201 13:32:28.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:31.461" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:31.461" starttime="20210201 13:32:31.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:31.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:31.461" starttime="20210201 13:32:31.461"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:31.462" starttime="20210201 13:32:28.596"></status>
</kw>
<msg timestamp="20210201 13:32:31.462" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:31.462" starttime="20210201 13:32:28.596"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:31.462" starttime="20210201 13:32:28.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:31.471" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:37.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:37.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:37.179" starttime="20210201 13:32:31.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:37.180" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:37.180" starttime="20210201 13:32:37.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:37.180" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:37.180" starttime="20210201 13:32:37.180"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:37.180" starttime="20210201 13:32:31.463"></status>
</kw>
<msg timestamp="20210201 13:32:37.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:37.181" starttime="20210201 13:32:31.463"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:37.181" starttime="20210201 13:32:31.462"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:37.184" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:41.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:41.603" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:41.603" starttime="20210201 13:32:37.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:41.604" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:41.604" starttime="20210201 13:32:41.603"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:41.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:41.605" starttime="20210201 13:32:41.604"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:41.605" starttime="20210201 13:32:37.182"></status>
</kw>
<msg timestamp="20210201 13:32:41.605" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:41.605" starttime="20210201 13:32:37.181"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:41.606" starttime="20210201 13:32:37.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:41.609" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:46.029" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:46.029" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:46.029" starttime="20210201 13:32:41.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:46.030" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:46.030" starttime="20210201 13:32:46.029"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:46.030" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:46.031" starttime="20210201 13:32:46.030"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:46.031" starttime="20210201 13:32:41.606"></status>
</kw>
<msg timestamp="20210201 13:32:46.031" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:46.031" starttime="20210201 13:32:41.606"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:46.031" starttime="20210201 13:32:41.606"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:32:46.031" critical="yes" starttime="20210201 13:32:09.503"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:32:46.036" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:32:46.036" starttime="20210201 13:32:46.036"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:32:46.037" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:32:46.037" starttime="20210201 13:32:46.036"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:46.037" starttime="20210201 13:32:46.035"></status>
</kw>
<msg timestamp="20210201 13:32:46.037" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:32:46.037" starttime="20210201 13:32:46.035"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:46.037" starttime="20210201 13:32:46.034"></status>
</kw>
<msg timestamp="20210201 13:32:46.037" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:32:46.037" starttime="20210201 13:32:46.034"></status>
</kw>
<msg timestamp="20210201 13:32:46.037" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:32:46.037" starttime="20210201 13:32:46.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:46.041" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:48.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:48.592" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:48.592" starttime="20210201 13:32:46.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:48.593" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:48.593" starttime="20210201 13:32:48.592"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:48.593" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:48.594" starttime="20210201 13:32:48.593"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:48.594" starttime="20210201 13:32:46.038"></status>
</kw>
<msg timestamp="20210201 13:32:48.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:48.594" starttime="20210201 13:32:46.038"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:48.594" starttime="20210201 13:32:46.038"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:48.598" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:51.168" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:51.168" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:32:51.168" starttime="20210201 13:32:48.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:51.169" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:32:51.169" starttime="20210201 13:32:51.169"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:51.170" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:51.170" starttime="20210201 13:32:51.170"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:51.170" starttime="20210201 13:32:48.595"></status>
</kw>
<msg timestamp="20210201 13:32:51.171" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:51.171" starttime="20210201 13:32:48.595"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:51.171" starttime="20210201 13:32:48.595"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:32:51.171" critical="yes" starttime="20210201 13:32:46.032"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210201 13:32:51.172" starttime="20210201 13:32:09.448"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:34:29.905" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:34:29.905" starttime="20210201 13:34:29.904"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:34:29.905" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:34:29.905" starttime="20210201 13:34:29.905"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:29.905" starttime="20210201 13:34:29.904"></status>
</kw>
<msg timestamp="20210201 13:34:29.906" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:34:29.906" starttime="20210201 13:34:29.904"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:34:29.906" starttime="20210201 13:34:29.906"></status>
</kw>
<msg timestamp="20210201 13:34:29.906" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:34:29.906" starttime="20210201 13:34:29.906"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:29.907" starttime="20210201 13:34:29.903"></status>
</kw>
<msg timestamp="20210201 13:34:29.907" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:34:29.907" starttime="20210201 13:34:29.902"></status>
</kw>
<msg timestamp="20210201 13:34:29.907" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:34:29.907" starttime="20210201 13:34:29.901"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:34:29.908" level="INFO">${random} = 47745</msg>
<status status="PASS" endtime="20210201 13:34:29.908" starttime="20210201 13:34:29.907"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:34:29.913" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-47745 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:34:33.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:34:33.045" level="INFO">${output} = 2021-02-01 13:34:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:34:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:34:33.045" starttime="20210201 13:34:29.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:34:33.046" level="INFO">2021-02-01 13:34:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:34:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:34:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:34:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:34:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0BCDD21E28D5-&gt;d5857637-2084-4b24-9ed4-f4a85d390db5
2021-02-01 13:34:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210201 13:34:33.046" starttime="20210201 13:34:33.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:34:33.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:34:33.046" starttime="20210201 13:34:33.046"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:33.047" starttime="20210201 13:34:29.908"></status>
</kw>
<msg timestamp="20210201 13:34:33.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:34:33.047" starttime="20210201 13:34:29.908"></status>
</kw>
<msg timestamp="20210201 13:34:33.047" level="INFO">${result} = 2021-02-01 13:34:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:34:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:34:33.047" starttime="20210201 13:34:29.908"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:34:33.050" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:34:34.652" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:34:34.652" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:32 ofs://om/volume1/bucket1/ozone-28353
-rw-...</msg>
<status status="PASS" endtime="20210201 13:34:34.652" starttime="20210201 13:34:33.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:34:34.653" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:32 ofs://om/volume1/bucket1/ozone-28353
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:34 ofs://om/volume1/bucket1/ozone-47745
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:34 ofs://om/volume1/bucket1/wordcount-KrUYqGSD.txt</msg>
<status status="PASS" endtime="20210201 13:34:34.653" starttime="20210201 13:34:34.652"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:34:34.653" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:34:34.654" starttime="20210201 13:34:34.653"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:34.654" starttime="20210201 13:34:33.048"></status>
</kw>
<msg timestamp="20210201 13:34:34.654" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:34:34.654" starttime="20210201 13:34:33.048"></status>
</kw>
<msg timestamp="20210201 13:34:34.654" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:32 ofs://om/volume1/bucket1/ozone-28353
-rw-...</msg>
<status status="PASS" endtime="20210201 13:34:34.654" starttime="20210201 13:34:33.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:34:34.655" starttime="20210201 13:34:34.654"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:34:34.655" critical="yes" starttime="20210201 13:34:29.901"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:34:34.656" starttime="20210201 13:34:29.854"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:32:55.399" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:32:55.399" starttime="20210201 13:32:55.399"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:32:55.400" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:32:55.400" starttime="20210201 13:32:55.399"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:55.400" starttime="20210201 13:32:55.398"></status>
</kw>
<msg timestamp="20210201 13:32:55.400" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:32:55.400" starttime="20210201 13:32:55.398"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:55.400" starttime="20210201 13:32:55.397"></status>
</kw>
<msg timestamp="20210201 13:32:55.400" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:32:55.400" starttime="20210201 13:32:55.397"></status>
</kw>
<msg timestamp="20210201 13:32:55.401" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:32:55.401" starttime="20210201 13:32:55.396"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:32:55.401" level="INFO">${random} = 28353</msg>
<status status="PASS" endtime="20210201 13:32:55.401" starttime="20210201 13:32:55.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:55.406" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-28353 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:32:59.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:32:59.045" level="INFO">${output} = 2021-02-01 13:32:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:32:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:32:59.045" starttime="20210201 13:32:55.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:32:59.047" level="INFO">2021-02-01 13:32:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:32:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:32:57 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:32:57 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:32:57 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-55DC47E3301C-&gt;60631e0b-c062-4825-ac91-5cf849ff91b8
2021-02-01 13:32:57 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210201 13:32:59.047" starttime="20210201 13:32:59.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:32:59.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:32:59.048" starttime="20210201 13:32:59.047"></status>
</kw>
<status status="PASS" endtime="20210201 13:32:59.048" starttime="20210201 13:32:55.402"></status>
</kw>
<msg timestamp="20210201 13:32:59.048" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:32:59.048" starttime="20210201 13:32:55.402"></status>
</kw>
<msg timestamp="20210201 13:32:59.048" level="INFO">${result} = 2021-02-01 13:32:57 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:32:57 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:32:59.048" starttime="20210201 13:32:55.401"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:32:59.051" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:33:00.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:33:00.552" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:32 o3fs://bucket1.volume1.om/ozone-28353
dr...</msg>
<status status="PASS" endtime="20210201 13:33:00.553" starttime="20210201 13:32:59.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:33:00.554" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:32 o3fs://bucket1.volume1.om/ozone-28353
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:33:00.554" starttime="20210201 13:33:00.553"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:33:00.554" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:33:00.555" starttime="20210201 13:33:00.554"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:00.555" starttime="20210201 13:32:59.049"></status>
</kw>
<msg timestamp="20210201 13:33:00.555" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:33:00.555" starttime="20210201 13:32:59.049"></status>
</kw>
<msg timestamp="20210201 13:33:00.555" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:32 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:32 o3fs://bucket1.volume1.om/ozone-28353
dr...</msg>
<status status="PASS" endtime="20210201 13:33:00.555" starttime="20210201 13:32:59.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:33:00.556" starttime="20210201 13:33:00.555"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:33:00.556" critical="yes" starttime="20210201 13:32:55.395"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:33:00.557" starttime="20210201 13:32:55.349"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:34:38.922" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:34:38.927" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:34:38.927" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:34:38.927" starttime="20210201 13:34:38.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:34:38.928" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:34:38.928" starttime="20210201 13:34:38.928"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:34:38.929" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:34:38.929" starttime="20210201 13:34:38.928"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:38.929" starttime="20210201 13:34:38.918"></status>
</kw>
<msg timestamp="20210201 13:34:38.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:34:38.929" starttime="20210201 13:34:38.918"></status>
</kw>
<msg timestamp="20210201 13:34:38.929" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:34:38.929" starttime="20210201 13:34:38.917"></status>
</kw>
<msg timestamp="20210201 13:34:38.930" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:34:38.930" starttime="20210201 13:34:38.917"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:34:38.934" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:34:38.934" starttime="20210201 13:34:38.933"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:34:38.934" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:34:38.934" starttime="20210201 13:34:38.934"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:38.934" starttime="20210201 13:34:38.933"></status>
</kw>
<msg timestamp="20210201 13:34:38.934" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:34:38.934" starttime="20210201 13:34:38.932"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:34:38.935" starttime="20210201 13:34:38.935"></status>
</kw>
<msg timestamp="20210201 13:34:38.935" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:34:38.935" starttime="20210201 13:34:38.935"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:38.936" starttime="20210201 13:34:38.932"></status>
</kw>
<msg timestamp="20210201 13:34:38.936" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:34:38.936" starttime="20210201 13:34:38.930"></status>
</kw>
<msg timestamp="20210201 13:34:38.936" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:34:38.936" starttime="20210201 13:34:38.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:34:38.939" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:35:18.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:35:18.458" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:34:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:34:40 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:35:18.458" starttime="20210201 13:34:38.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:35:18.459" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:34:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:34:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:34:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:34:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:34:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A7992EABB41B-&gt;60631e0b-c062-4825-ac91-5cf849ff91b8
2021-02-01 13:34:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-01 13:34:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0C453F167F8F-&gt;d5857637-2084-4b24-9ed4-f4a85d390db5
2021-02-01 13:34:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-01 13:34:41 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:34:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:34:42 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:34:44 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:34:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186303618_0003
2021-02-01 13:34:45 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:34:45 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:34:45 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:34:45 INFO  YarnClientImpl:329 - Submitted application application_1612186303618_0003
2021-02-01 13:34:45 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612186303618_0003/
2021-02-01 13:34:45 INFO  Job:1614 - Running job: job_1612186303618_0003
2021-02-01 13:34:51 INFO  Job:1635 - Job job_1612186303618_0003 running in uber mode : false
2021-02-01 13:34:51 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:34:57 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:35:02 INFO  Job:1642 -  map 67% reduce 0%
2021-02-01 13:35:07 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:35:11 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:35:17 INFO  Job:1653 - Job job_1612186303618_0003 completed successfully
2021-02-01 13:35:17 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091549
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35388
		Total time spent by all reduces in occupied slots (ms)=12968
		Total time spent by all map tasks (ms)=8847
		Total time spent by all reduce tasks (ms)=3242
		Total vcore-milliseconds taken by all map tasks=8847
		Total vcore-milliseconds taken by all reduce tasks=3242
		Total megabyte-milliseconds taken by all map tasks=36237312
		Total megabyte-milliseconds taken by all reduce tasks=13279232
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=592
		CPU time spent (ms)=6420
		Physical memory (bytes) snapshot=1507143680
		Virtual memory (bytes) snapshot=15810899968
		Total committed heap usage (bytes)=1821900800
		Peak Map Physical memory (bytes)=371073024
		Peak Map Virtual memory (bytes)=3948175360
		Peak Reduce Physical memory (bytes)=398401536
		Peak Reduce Virtual memory (bytes)=3969982464
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.269 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210201 13:35:18.460" starttime="20210201 13:35:18.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:35:18.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:35:18.460" starttime="20210201 13:35:18.460"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.460" starttime="20210201 13:34:38.937"></status>
</kw>
<msg timestamp="20210201 13:35:18.460" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:35:18.461" starttime="20210201 13:34:38.937"></status>
</kw>
<msg timestamp="20210201 13:35:18.461" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:34:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:34:40 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:35:18.461" starttime="20210201 13:34:38.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:35:18.462" starttime="20210201 13:35:18.461"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:35:18.462" critical="yes" starttime="20210201 13:34:38.916"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:35:18.467" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:35:18.473" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:35:18.473" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:35:18.473" starttime="20210201 13:35:18.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:35:18.474" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:35:18.474" starttime="20210201 13:35:18.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:35:18.475" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:35:18.475" starttime="20210201 13:35:18.474"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.475" starttime="20210201 13:35:18.464"></status>
</kw>
<msg timestamp="20210201 13:35:18.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:35:18.476" starttime="20210201 13:35:18.464"></status>
</kw>
<msg timestamp="20210201 13:35:18.476" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:35:18.476" starttime="20210201 13:35:18.464"></status>
</kw>
<msg timestamp="20210201 13:35:18.476" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:35:18.476" starttime="20210201 13:35:18.463"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:35:18.477" level="INFO">${random} = a0xVpr8L</msg>
<status status="PASS" endtime="20210201 13:35:18.477" starttime="20210201 13:35:18.476"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:35:18.480" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:35:18.480" starttime="20210201 13:35:18.480"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:35:18.481" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:35:18.481" starttime="20210201 13:35:18.480"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.481" starttime="20210201 13:35:18.479"></status>
</kw>
<msg timestamp="20210201 13:35:18.481" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:35:18.481" starttime="20210201 13:35:18.479"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:35:18.482" starttime="20210201 13:35:18.482"></status>
</kw>
<msg timestamp="20210201 13:35:18.482" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:35:18.482" starttime="20210201 13:35:18.482"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.483" starttime="20210201 13:35:18.478"></status>
</kw>
<msg timestamp="20210201 13:35:18.483" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:35:18.483" starttime="20210201 13:35:18.477"></status>
</kw>
<msg timestamp="20210201 13:35:18.483" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:35:18.483" starttime="20210201 13:35:18.477"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:35:18.486" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:35:18.486" starttime="20210201 13:35:18.486"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:35:18.487" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:35:18.487" starttime="20210201 13:35:18.486"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.487" starttime="20210201 13:35:18.485"></status>
</kw>
<msg timestamp="20210201 13:35:18.487" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:35:18.487" starttime="20210201 13:35:18.485"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:35:18.488" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210201 13:35:18.488" starttime="20210201 13:35:18.488"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:35:18.489" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210201 13:35:18.489" starttime="20210201 13:35:18.489"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.489" starttime="20210201 13:35:18.488"></status>
</kw>
<msg timestamp="20210201 13:35:18.489" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210201 13:35:18.489" starttime="20210201 13:35:18.487"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.490" starttime="20210201 13:35:18.484"></status>
</kw>
<msg timestamp="20210201 13:35:18.490" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:35:18.490" starttime="20210201 13:35:18.484"></status>
</kw>
<msg timestamp="20210201 13:35:18.490" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:35:18.490" starttime="20210201 13:35:18.483"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:35:18.493" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:35:18.493" starttime="20210201 13:35:18.492"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:35:18.493" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:35:18.493" starttime="20210201 13:35:18.493"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.494" starttime="20210201 13:35:18.492"></status>
</kw>
<msg timestamp="20210201 13:35:18.494" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:35:18.494" starttime="20210201 13:35:18.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:35:18.495" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210201 13:35:18.495" starttime="20210201 13:35:18.495"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:35:18.496" level="INFO">${result} = /wordcount-a0xVpr8L.txt</msg>
<status status="PASS" endtime="20210201 13:35:18.496" starttime="20210201 13:35:18.495"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.496" starttime="20210201 13:35:18.494"></status>
</kw>
<msg timestamp="20210201 13:35:18.496" level="INFO">${path_with_leading} = /wordcount-a0xVpr8L.txt</msg>
<status status="PASS" endtime="20210201 13:35:18.496" starttime="20210201 13:35:18.494"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:18.496" starttime="20210201 13:35:18.491"></status>
</kw>
<msg timestamp="20210201 13:35:18.496" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-a0xVpr8L.txt</msg>
<status status="PASS" endtime="20210201 13:35:18.496" starttime="20210201 13:35:18.491"></status>
</kw>
<msg timestamp="20210201 13:35:18.497" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-a0xVpr8L.txt</msg>
<status status="PASS" endtime="20210201 13:35:18.497" starttime="20210201 13:35:18.490"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:35:18.500" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-a0xVpr8L.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:35:52.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:35:52.467" level="INFO">${output} = 2021-02-01 13:35:20 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:35:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210201 13:35:52.467" starttime="20210201 13:35:18.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:35:52.469" level="INFO">2021-02-01 13:35:20 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:35:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:35:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:35:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:35:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:35:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:35:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C5BBACE00AA0-&gt;60631e0b-c062-4825-ac91-5cf849ff91b8
2021-02-01 13:35:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:35:21 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:35:21 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:35:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EBA06CBBBFE2-&gt;d5857637-2084-4b24-9ed4-f4a85d390db5
2021-02-01 13:35:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:35:24 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186303618_0004
2021-02-01 13:35:24 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:35:24 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:35:24 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:35:24 INFO  YarnClientImpl:329 - Submitted application application_1612186303618_0004
2021-02-01 13:35:24 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612186303618_0004/
2021-02-01 13:35:24 INFO  Job:1614 - Running job: job_1612186303618_0004
2021-02-01 13:35:30 INFO  Job:1635 - Job job_1612186303618_0004 running in uber mode : false
2021-02-01 13:35:30 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:35:37 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:35:41 INFO  Job:1642 -  map 67% reduce 0%
2021-02-01 13:35:46 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:35:52 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:35:52 INFO  Job:1653 - Job job_1612186303618_0004 completed successfully
2021-02-01 13:35:52 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36104
		Total time spent by all reduces in occupied slots (ms)=12984
		Total time spent by all map tasks (ms)=9026
		Total time spent by all reduce tasks (ms)=3246
		Total vcore-milliseconds taken by all map tasks=9026
		Total vcore-milliseconds taken by all reduce tasks=3246
		Total megabyte-milliseconds taken by all map tasks=36970496
		Total megabyte-milliseconds taken by all reduce tasks=13295616
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=596
		CPU time spent (ms)=6780
		Physical memory (bytes) snapshot=1279696896
		Virtual memory (bytes) snapshot=15818301440
		Total committed heap usage (bytes)=1253048320
		Peak Map Physical memory (bytes)=372797440
		Peak Map Virtual memory (bytes)=3953872896
		Peak Reduce Physical memory (bytes)=298926080
		Peak Reduce Virtual memory (bytes)=3968937984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210201 13:35:52.469" starttime="20210201 13:35:52.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:35:52.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:35:52.469" starttime="20210201 13:35:52.469"></status>
</kw>
<status status="PASS" endtime="20210201 13:35:52.470" starttime="20210201 13:35:18.497"></status>
</kw>
<msg timestamp="20210201 13:35:52.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:35:52.470" starttime="20210201 13:35:18.497"></status>
</kw>
<msg timestamp="20210201 13:35:52.470" level="INFO">${output} = 2021-02-01 13:35:20 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:35:20 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210201 13:35:52.470" starttime="20210201 13:35:18.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:35:52.471" starttime="20210201 13:35:52.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:35:52.471" starttime="20210201 13:35:52.471"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:35:52.471" critical="yes" starttime="20210201 13:35:18.463"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:35:52.472" starttime="20210201 13:34:38.871"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:33:04.833" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:33:04.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:33:04.838" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:04.838" starttime="20210201 13:33:04.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:33:04.839" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:04.839" starttime="20210201 13:33:04.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:33:04.840" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:33:04.840" starttime="20210201 13:33:04.839"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:04.840" starttime="20210201 13:33:04.829"></status>
</kw>
<msg timestamp="20210201 13:33:04.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:33:04.840" starttime="20210201 13:33:04.829"></status>
</kw>
<msg timestamp="20210201 13:33:04.841" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:04.841" starttime="20210201 13:33:04.828"></status>
</kw>
<msg timestamp="20210201 13:33:04.841" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:04.841" starttime="20210201 13:33:04.828"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:33:04.845" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:33:04.845" starttime="20210201 13:33:04.845"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:33:04.846" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:33:04.846" starttime="20210201 13:33:04.845"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:04.846" starttime="20210201 13:33:04.844"></status>
</kw>
<msg timestamp="20210201 13:33:04.846" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:33:04.846" starttime="20210201 13:33:04.844"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:04.846" starttime="20210201 13:33:04.843"></status>
</kw>
<msg timestamp="20210201 13:33:04.846" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:33:04.846" starttime="20210201 13:33:04.842"></status>
</kw>
<msg timestamp="20210201 13:33:04.847" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:33:04.847" starttime="20210201 13:33:04.841"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:33:04.850" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:33:48.513" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:33:48.513" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:33:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:33:06 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:33:48.513" starttime="20210201 13:33:04.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:33:48.514" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:33:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:33:06 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:33:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:33:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:33:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6865F38239F4-&gt;60631e0b-c062-4825-ac91-5cf849ff91b8
2021-02-01 13:33:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-01 13:33:10 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:33:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-932131FCC98F-&gt;d5857637-2084-4b24-9ed4-f4a85d390db5
2021-02-01 13:33:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:33:10 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:33:13 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:33:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186303618_0001
2021-02-01 13:33:13 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:33:14 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:33:14 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:33:14 INFO  YarnClientImpl:329 - Submitted application application_1612186303618_0001
2021-02-01 13:33:14 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612186303618_0001/
2021-02-01 13:33:14 INFO  Job:1614 - Running job: job_1612186303618_0001
2021-02-01 13:33:23 INFO  Job:1635 - Job job_1612186303618_0001 running in uber mode : false
2021-02-01 13:33:23 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:33:29 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:33:34 INFO  Job:1642 -  map 67% reduce 0%
2021-02-01 13:33:39 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:33:43 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:33:47 INFO  Job:1653 - Job job_1612186303618_0001 completed successfully
2021-02-01 13:33:47 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091761
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36476
		Total time spent by all reduces in occupied slots (ms)=13732
		Total time spent by all map tasks (ms)=9119
		Total time spent by all reduce tasks (ms)=3433
		Total vcore-milliseconds taken by all map tasks=9119
		Total vcore-milliseconds taken by all reduce tasks=3433
		Total megabyte-milliseconds taken by all map tasks=37351424
		Total megabyte-milliseconds taken by all reduce tasks=14061568
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=646
		CPU time spent (ms)=6000
		Physical memory (bytes) snapshot=1363714048
		Virtual memory (bytes) snapshot=15805927424
		Total committed heap usage (bytes)=1457520640
		Peak Map Physical memory (bytes)=348807168
		Peak Map Virtual memory (bytes)=3955924992
		Peak Reduce Physical memory (bytes)=395259904
		Peak Reduce Virtual memory (bytes)=3970293760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.681 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210201 13:33:48.515" starttime="20210201 13:33:48.514"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:33:48.515" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:33:48.515" starttime="20210201 13:33:48.515"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.516" starttime="20210201 13:33:04.848"></status>
</kw>
<msg timestamp="20210201 13:33:48.516" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:33:48.516" starttime="20210201 13:33:04.847"></status>
</kw>
<msg timestamp="20210201 13:33:48.516" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:33:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:33:06 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:33:48.516" starttime="20210201 13:33:04.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:33:48.517" starttime="20210201 13:33:48.516"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:33:48.517" critical="yes" starttime="20210201 13:33:04.827"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:33:48.522" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:33:48.527" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:33:48.527" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:48.527" starttime="20210201 13:33:48.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:33:48.528" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:48.528" starttime="20210201 13:33:48.528"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:33:48.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:33:48.529" starttime="20210201 13:33:48.528"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.529" starttime="20210201 13:33:48.520"></status>
</kw>
<msg timestamp="20210201 13:33:48.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:33:48.529" starttime="20210201 13:33:48.519"></status>
</kw>
<msg timestamp="20210201 13:33:48.529" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:48.529" starttime="20210201 13:33:48.519"></status>
</kw>
<msg timestamp="20210201 13:33:48.530" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:33:48.530" starttime="20210201 13:33:48.518"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:33:48.530" level="INFO">${random} = KrUYqGSD</msg>
<status status="PASS" endtime="20210201 13:33:48.530" starttime="20210201 13:33:48.530"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:33:48.534" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:33:48.534" starttime="20210201 13:33:48.533"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:33:48.534" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:33:48.534" starttime="20210201 13:33:48.534"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.535" starttime="20210201 13:33:48.533"></status>
</kw>
<msg timestamp="20210201 13:33:48.535" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:33:48.535" starttime="20210201 13:33:48.533"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.535" starttime="20210201 13:33:48.532"></status>
</kw>
<msg timestamp="20210201 13:33:48.535" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:33:48.535" starttime="20210201 13:33:48.531"></status>
</kw>
<msg timestamp="20210201 13:33:48.535" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:33:48.535" starttime="20210201 13:33:48.530"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:33:48.538" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:33:48.538" starttime="20210201 13:33:48.538"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:33:48.539" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:33:48.539" starttime="20210201 13:33:48.538"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.539" starttime="20210201 13:33:48.537"></status>
</kw>
<msg timestamp="20210201 13:33:48.539" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:33:48.539" starttime="20210201 13:33:48.537"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.539" starttime="20210201 13:33:48.536"></status>
</kw>
<msg timestamp="20210201 13:33:48.539" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:33:48.539" starttime="20210201 13:33:48.536"></status>
</kw>
<msg timestamp="20210201 13:33:48.540" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:33:48.540" starttime="20210201 13:33:48.535"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:33:48.543" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:33:48.543" starttime="20210201 13:33:48.542"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:33:48.543" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:33:48.543" starttime="20210201 13:33:48.543"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.543" starttime="20210201 13:33:48.542"></status>
</kw>
<msg timestamp="20210201 13:33:48.543" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:33:48.543" starttime="20210201 13:33:48.541"></status>
</kw>
<status status="PASS" endtime="20210201 13:33:48.544" starttime="20210201 13:33:48.541"></status>
</kw>
<msg timestamp="20210201 13:33:48.544" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-KrUYqGSD.txt</msg>
<status status="PASS" endtime="20210201 13:33:48.544" starttime="20210201 13:33:48.540"></status>
</kw>
<msg timestamp="20210201 13:33:48.544" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-KrUYqGSD.txt</msg>
<status status="PASS" endtime="20210201 13:33:48.544" starttime="20210201 13:33:48.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:33:48.547" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-KrUYqGSD.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:34:25.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:34:25.702" level="INFO">${output} = 2021-02-01 13:33:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:33:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210201 13:34:25.702" starttime="20210201 13:33:48.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:34:25.703" level="INFO">2021-02-01 13:33:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:33:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:33:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:33:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:33:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:33:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:33:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3457D131E41-&gt;d5857637-2084-4b24-9ed4-f4a85d390db5
2021-02-01 13:33:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:33:51 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:33:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-20C0655461BF-&gt;60631e0b-c062-4825-ac91-5cf849ff91b8
2021-02-01 13:33:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:33:54 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:33:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612186303618_0002
2021-02-01 13:33:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-01 13:33:54 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:33:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:33:54 INFO  YarnClientImpl:329 - Submitted application application_1612186303618_0002
2021-02-01 13:33:54 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612186303618_0002/
2021-02-01 13:33:54 INFO  Job:1614 - Running job: job_1612186303618_0002
2021-02-01 13:34:02 INFO  Job:1635 - Job job_1612186303618_0002 running in uber mode : false
2021-02-01 13:34:02 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:34:08 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:34:13 INFO  Job:1642 -  map 67% reduce 0%
2021-02-01 13:34:18 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:34:22 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:34:25 INFO  Job:1653 - Job job_1612186303618_0002 completed successfully
2021-02-01 13:34:25 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36788
		Total time spent by all reduces in occupied slots (ms)=13192
		Total time spent by all map tasks (ms)=9197
		Total time spent by all reduce tasks (ms)=3298
		Total vcore-milliseconds taken by all map tasks=9197
		Total vcore-milliseconds taken by all reduce tasks=3298
		Total megabyte-milliseconds taken by all map tasks=37670912
		Total megabyte-milliseconds taken by all reduce tasks=13508608
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=555
		CPU time spent (ms)=6510
		Physical memory (bytes) snapshot=1379082240
		Virtual memory (bytes) snapshot=15807086592
		Total committed heap usage (bytes)=1455423488
		Peak Map Physical memory (bytes)=372768768
		Peak Map Virtual memory (bytes)=3947053056
		Peak Reduce Physical memory (bytes)=397430784
		Peak Reduce Virtual memory (bytes)=3969404928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210201 13:34:25.704" starttime="20210201 13:34:25.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:34:25.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:34:25.704" starttime="20210201 13:34:25.704"></status>
</kw>
<status status="PASS" endtime="20210201 13:34:25.705" starttime="20210201 13:33:48.545"></status>
</kw>
<msg timestamp="20210201 13:34:25.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:34:25.705" starttime="20210201 13:33:48.545"></status>
</kw>
<msg timestamp="20210201 13:34:25.705" level="INFO">${output} = 2021-02-01 13:33:50 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.2:8032
2021-02-01 13:33:50 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210201 13:34:25.705" starttime="20210201 13:33:48.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:34:25.706" starttime="20210201 13:34:25.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:34:25.706" starttime="20210201 13:34:25.706"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:34:25.706" critical="yes" starttime="20210201 13:33:48.518"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:34:25.708" starttime="20210201 13:33:04.782"></status>
</suite>
<status status="PASS" elapsedtime="206261" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="556187" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
