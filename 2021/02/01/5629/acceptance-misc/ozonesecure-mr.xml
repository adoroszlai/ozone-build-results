<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210201 13:55:01.945" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:06.027" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:09.794" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:51:09.794" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:51:09.794" starttime="20210201 13:51:06.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:09.795" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:51:09.795" starttime="20210201 13:51:09.795"></status>
</kw>
<msg timestamp="20210201 13:51:09.796" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210201 13:51:09.796" starttime="20210201 13:51:06.023"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:09.801" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:13.038" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:13.038" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:13.038" starttime="20210201 13:51:09.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:13.039" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:13.039" starttime="20210201 13:51:13.038"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:13.039" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:13.039" starttime="20210201 13:51:13.039"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:13.040" starttime="20210201 13:51:09.797"></status>
</kw>
<msg timestamp="20210201 13:51:13.040" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:13.040" starttime="20210201 13:51:09.797"></status>
</kw>
<msg timestamp="20210201 13:51:13.040" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210201 13:51:13.040" starttime="20210201 13:51:09.797"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210201 13:51:13.041" starttime="20210201 13:51:13.040"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:13.041" starttime="20210201 13:51:09.796"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:13.041" starttime="20210201 13:51:09.796"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:13.045" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:16.227" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:16.227" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:16.227" starttime="20210201 13:51:13.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:16.228" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:16.228" starttime="20210201 13:51:16.228"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:16.229" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:16.229" starttime="20210201 13:51:16.228"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:16.229" starttime="20210201 13:51:13.042"></status>
</kw>
<msg timestamp="20210201 13:51:16.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:16.229" starttime="20210201 13:51:13.042"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:16.230" starttime="20210201 13:51:13.042"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:16.230" starttime="20210201 13:51:13.041"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:16.230" starttime="20210201 13:51:13.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210201 13:51:16.230" starttime="20210201 13:51:16.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:16.234" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:19.678" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:19.678" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:51...</msg>
<status status="PASS" endtime="20210201 13:51:19.678" starttime="20210201 13:51:16.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:19.679" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:51:16.145Z",
  "modificationTime" : "2021-02-01T13:51:16.145Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 13:51:19.679" starttime="20210201 13:51:19.678"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:19.680" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:19.680" starttime="20210201 13:51:19.679"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:19.680" starttime="20210201 13:51:16.231"></status>
</kw>
<msg timestamp="20210201 13:51:19.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:19.680" starttime="20210201 13:51:16.231"></status>
</kw>
<msg timestamp="20210201 13:51:19.680" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:51...</msg>
<status status="PASS" endtime="20210201 13:51:19.680" starttime="20210201 13:51:16.230"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210201 13:51:19.681" starttime="20210201 13:51:19.681"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:51:19.684" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:51:19.684" starttime="20210201 13:51:19.684"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:51:19.685" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:51:19.685" starttime="20210201 13:51:19.684"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:19.685" starttime="20210201 13:51:19.684"></status>
</kw>
<msg timestamp="20210201 13:51:19.685" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:51:19.685" starttime="20210201 13:51:19.683"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:19.685" starttime="20210201 13:51:19.682"></status>
</kw>
<msg timestamp="20210201 13:51:19.686" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:51:19.686" starttime="20210201 13:51:19.682"></status>
</kw>
<msg timestamp="20210201 13:51:19.686" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210201 13:51:19.686" starttime="20210201 13:51:19.681"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:19.689" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:22.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:22.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:22.795" starttime="20210201 13:51:19.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:22.796" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:22.796" starttime="20210201 13:51:22.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:22.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:22.797" starttime="20210201 13:51:22.797"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:22.797" starttime="20210201 13:51:19.687"></status>
</kw>
<msg timestamp="20210201 13:51:22.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:22.798" starttime="20210201 13:51:19.686"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:22.798" starttime="20210201 13:51:19.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:22.802" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:30.876" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:30.876" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:30.876" starttime="20210201 13:51:22.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:30.877" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:30.877" starttime="20210201 13:51:30.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:30.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:30.878" starttime="20210201 13:51:30.877"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:30.878" starttime="20210201 13:51:22.799"></status>
</kw>
<msg timestamp="20210201 13:51:30.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:30.878" starttime="20210201 13:51:22.799"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:30.878" starttime="20210201 13:51:22.798"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:30.882" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:36.249" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:36.249" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:36.249" starttime="20210201 13:51:30.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:36.250" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:36.250" starttime="20210201 13:51:36.250"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:36.251" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:36.251" starttime="20210201 13:51:36.251"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:36.251" starttime="20210201 13:51:30.879"></status>
</kw>
<msg timestamp="20210201 13:51:36.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:36.251" starttime="20210201 13:51:30.879"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:36.252" starttime="20210201 13:51:30.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:36.255" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:44.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:44.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:44.136" starttime="20210201 13:51:36.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:44.137" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:44.137" starttime="20210201 13:51:44.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:44.138" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:44.138" starttime="20210201 13:51:44.137"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:44.138" starttime="20210201 13:51:36.253"></status>
</kw>
<msg timestamp="20210201 13:51:44.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:44.138" starttime="20210201 13:51:36.252"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:44.138" starttime="20210201 13:51:36.252"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:51:44.139" critical="yes" starttime="20210201 13:51:06.022"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:51:44.144" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:51:44.144" starttime="20210201 13:51:44.143"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:51:44.144" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:51:44.144" starttime="20210201 13:51:44.144"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:44.144" starttime="20210201 13:51:44.143"></status>
</kw>
<msg timestamp="20210201 13:51:44.144" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:51:44.144" starttime="20210201 13:51:44.142"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:44.145" starttime="20210201 13:51:44.142"></status>
</kw>
<msg timestamp="20210201 13:51:44.145" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:51:44.145" starttime="20210201 13:51:44.141"></status>
</kw>
<msg timestamp="20210201 13:51:44.145" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:51:44.145" starttime="20210201 13:51:44.140"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:44.148" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:46.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:46.990" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:46.990" starttime="20210201 13:51:44.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:46.991" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:46.992" starttime="20210201 13:51:46.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:46.992" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:46.992" starttime="20210201 13:51:46.992"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:46.992" starttime="20210201 13:51:44.146"></status>
</kw>
<msg timestamp="20210201 13:51:46.993" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:46.993" starttime="20210201 13:51:44.145"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:46.993" starttime="20210201 13:51:44.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:46.996" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:49.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:49.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:49.961" starttime="20210201 13:51:46.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:49.962" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:49.962" starttime="20210201 13:51:49.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:49.963" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:49.963" starttime="20210201 13:51:49.962"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:49.963" starttime="20210201 13:51:46.994"></status>
</kw>
<msg timestamp="20210201 13:51:49.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:49.963" starttime="20210201 13:51:46.993"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:49.963" starttime="20210201 13:51:46.993"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:51:49.964" critical="yes" starttime="20210201 13:51:44.140"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210201 13:51:49.965" starttime="20210201 13:51:05.974"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:53:38.647" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:53:38.647" starttime="20210201 13:53:38.646"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:53:38.647" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:53:38.647" starttime="20210201 13:53:38.647"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:38.648" starttime="20210201 13:53:38.646"></status>
</kw>
<msg timestamp="20210201 13:53:38.648" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:53:38.648" starttime="20210201 13:53:38.645"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:53:38.648" starttime="20210201 13:53:38.648"></status>
</kw>
<msg timestamp="20210201 13:53:38.649" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:53:38.649" starttime="20210201 13:53:38.648"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:38.649" starttime="20210201 13:53:38.645"></status>
</kw>
<msg timestamp="20210201 13:53:38.649" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:53:38.649" starttime="20210201 13:53:38.644"></status>
</kw>
<msg timestamp="20210201 13:53:38.649" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:53:38.649" starttime="20210201 13:53:38.643"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:53:38.650" level="INFO">${random} = 72049</msg>
<status status="PASS" endtime="20210201 13:53:38.650" starttime="20210201 13:53:38.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:53:38.665" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-72049 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:53:41.951" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:53:41.951" level="INFO">${output} = 2021-02-01 13:53:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:53:41.951" starttime="20210201 13:53:38.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:53:41.952" level="INFO">2021-02-01 13:53:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:53:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:53:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:53:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FC913702E743-&gt;f36837f2-fda3-47ca-ba98-7c496b838ce6
2021-02-01 13:53:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210201 13:53:41.953" starttime="20210201 13:53:41.952"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:53:41.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:53:41.953" starttime="20210201 13:53:41.953"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:41.953" starttime="20210201 13:53:38.651"></status>
</kw>
<msg timestamp="20210201 13:53:41.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:53:41.954" starttime="20210201 13:53:38.650"></status>
</kw>
<msg timestamp="20210201 13:53:41.954" level="INFO">${result} = 2021-02-01 13:53:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:53:41.954" starttime="20210201 13:53:38.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:53:41.957" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:53:43.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:53:43.675" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:53 ofs://om/volume1/bucket1/ozone-72049
-rw-...</msg>
<status status="PASS" endtime="20210201 13:53:43.675" starttime="20210201 13:53:41.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:53:43.676" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:53 ofs://om/volume1/bucket1/ozone-72049
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:52 ofs://om/volume1/bucket1/ozone-83476
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:53 ofs://om/volume1/bucket1/wordcount-7PJdxF67.txt</msg>
<status status="PASS" endtime="20210201 13:53:43.676" starttime="20210201 13:53:43.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:53:43.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:53:43.677" starttime="20210201 13:53:43.676"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:43.677" starttime="20210201 13:53:41.955"></status>
</kw>
<msg timestamp="20210201 13:53:43.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:53:43.677" starttime="20210201 13:53:41.954"></status>
</kw>
<msg timestamp="20210201 13:53:43.677" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:53 ofs://om/volume1/bucket1/ozone-72049
-rw-...</msg>
<status status="PASS" endtime="20210201 13:53:43.677" starttime="20210201 13:53:41.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:53:43.678" starttime="20210201 13:53:43.678"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:53:43.678" critical="yes" starttime="20210201 13:53:38.642"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:53:43.679" starttime="20210201 13:53:38.571"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:52:11.340" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:52:11.340" starttime="20210201 13:52:11.340"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:52:11.341" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:52:11.341" starttime="20210201 13:52:11.340"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:11.341" starttime="20210201 13:52:11.339"></status>
</kw>
<msg timestamp="20210201 13:52:11.341" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:52:11.341" starttime="20210201 13:52:11.339"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:11.341" starttime="20210201 13:52:11.338"></status>
</kw>
<msg timestamp="20210201 13:52:11.341" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:52:11.341" starttime="20210201 13:52:11.338"></status>
</kw>
<msg timestamp="20210201 13:52:11.342" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:52:11.342" starttime="20210201 13:52:11.337"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:52:11.342" level="INFO">${random} = 83476</msg>
<status status="PASS" endtime="20210201 13:52:11.342" starttime="20210201 13:52:11.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:11.346" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-83476 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:52:14.833" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:52:14.833" level="INFO">${output} = 2021-02-01 13:52:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:52:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:52:14.833" starttime="20210201 13:52:11.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:52:14.835" level="INFO">2021-02-01 13:52:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:52:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:52:13 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:52:13 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:52:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-72FF40BCBC44-&gt;79a64442-8175-4587-bd30-b29f187ed6d3
2021-02-01 13:52:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210201 13:52:14.835" starttime="20210201 13:52:14.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:52:14.836" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:52:14.836" starttime="20210201 13:52:14.835"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:14.836" starttime="20210201 13:52:11.343"></status>
</kw>
<msg timestamp="20210201 13:52:14.836" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:52:14.836" starttime="20210201 13:52:11.343"></status>
</kw>
<msg timestamp="20210201 13:52:14.836" level="INFO">${result} = 2021-02-01 13:52:13 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:52:13 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210201 13:52:14.836" starttime="20210201 13:52:11.342"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:14.840" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:52:16.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:52:16.743" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:52 o3fs://bucket1.volume1.om/ozone-83476
dr...</msg>
<status status="PASS" endtime="20210201 13:52:16.743" starttime="20210201 13:52:14.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:52:16.744" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:52 o3fs://bucket1.volume1.om/ozone-83476
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210201 13:52:16.745" starttime="20210201 13:52:16.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:52:16.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:52:16.745" starttime="20210201 13:52:16.745"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:16.746" starttime="20210201 13:52:14.837"></status>
</kw>
<msg timestamp="20210201 13:52:16.746" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:52:16.746" starttime="20210201 13:52:14.837"></status>
</kw>
<msg timestamp="20210201 13:52:16.746" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-01 13:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-01 13:52 o3fs://bucket1.volume1.om/ozone-83476
dr...</msg>
<status status="PASS" endtime="20210201 13:52:16.746" starttime="20210201 13:52:14.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:52:16.746" starttime="20210201 13:52:16.746"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:52:16.747" critical="yes" starttime="20210201 13:52:11.336"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210201 13:52:16.748" starttime="20210201 13:52:11.291"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:06.711" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:52:06.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:52:06.714" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210201 13:52:06.714" starttime="20210201 13:52:06.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:52:06.715" level="INFO">rm</msg>
<status status="PASS" endtime="20210201 13:52:06.715" starttime="20210201 13:52:06.714"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:52:06.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:52:06.716" starttime="20210201 13:52:06.715"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:06.716" starttime="20210201 13:52:06.707"></status>
</kw>
<msg timestamp="20210201 13:52:06.716" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:52:06.716" starttime="20210201 13:52:06.707"></status>
</kw>
<msg timestamp="20210201 13:52:06.716" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210201 13:52:06.716" starttime="20210201 13:52:06.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:52:06.717" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:52:06.717" starttime="20210201 13:52:06.716"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:06.720" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:52:06.731" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:52:06.731" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:52:06.731" starttime="20210201 13:52:06.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:52:06.732" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:52:06.732" starttime="20210201 13:52:06.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:52:06.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:52:06.733" starttime="20210201 13:52:06.732"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:06.733" starttime="20210201 13:52:06.718"></status>
</kw>
<msg timestamp="20210201 13:52:06.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:52:06.735" starttime="20210201 13:52:06.718"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:06.735" starttime="20210201 13:52:06.718"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:06.735" starttime="20210201 13:52:06.717"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:06.735" starttime="20210201 13:52:06.706"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:52:06.735" critical="yes" starttime="20210201 13:52:06.706"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210201 13:52:06.736" starttime="20210201 13:52:06.665"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:01.384" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:01.387" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:01.387" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210201 13:51:01.387" starttime="20210201 13:51:01.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:01.388" level="INFO">om</msg>
<status status="PASS" endtime="20210201 13:51:01.388" starttime="20210201 13:51:01.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:01.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:01.389" starttime="20210201 13:51:01.388"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:01.389" starttime="20210201 13:51:01.381"></status>
</kw>
<msg timestamp="20210201 13:51:01.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:01.389" starttime="20210201 13:51:01.380"></status>
</kw>
<msg timestamp="20210201 13:51:01.389" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210201 13:51:01.389" starttime="20210201 13:51:01.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:51:01.390" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:51:01.390" starttime="20210201 13:51:01.390"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:51:01.394" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:51:01.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:51:01.403" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:51:01.403" starttime="20210201 13:51:01.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:51:01.404" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:51:01.404" starttime="20210201 13:51:01.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:51:01.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:51:01.404" starttime="20210201 13:51:01.404"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:01.405" starttime="20210201 13:51:01.391"></status>
</kw>
<msg timestamp="20210201 13:51:01.405" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:51:01.405" starttime="20210201 13:51:01.391"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:01.405" starttime="20210201 13:51:01.391"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:01.405" starttime="20210201 13:51:01.390"></status>
</kw>
<status status="PASS" endtime="20210201 13:51:01.405" starttime="20210201 13:51:01.379"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:51:01.405" critical="yes" starttime="20210201 13:51:01.379"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210201 13:51:01.406" starttime="20210201 13:51:01.335"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:53:48.365" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:53:48.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:53:48.370" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:48.370" starttime="20210201 13:53:48.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:53:48.371" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:48.371" starttime="20210201 13:53:48.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:53:48.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:53:48.372" starttime="20210201 13:53:48.371"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:48.372" starttime="20210201 13:53:48.361"></status>
</kw>
<msg timestamp="20210201 13:53:48.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:53:48.372" starttime="20210201 13:53:48.361"></status>
</kw>
<msg timestamp="20210201 13:53:48.372" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:48.372" starttime="20210201 13:53:48.360"></status>
</kw>
<msg timestamp="20210201 13:53:48.373" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:48.373" starttime="20210201 13:53:48.360"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:53:48.377" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:53:48.377" starttime="20210201 13:53:48.376"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:53:48.377" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:53:48.377" starttime="20210201 13:53:48.377"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:48.377" starttime="20210201 13:53:48.376"></status>
</kw>
<msg timestamp="20210201 13:53:48.377" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:53:48.377" starttime="20210201 13:53:48.376"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:53:48.378" starttime="20210201 13:53:48.378"></status>
</kw>
<msg timestamp="20210201 13:53:48.378" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:53:48.378" starttime="20210201 13:53:48.378"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:48.379" starttime="20210201 13:53:48.375"></status>
</kw>
<msg timestamp="20210201 13:53:48.379" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:53:48.379" starttime="20210201 13:53:48.373"></status>
</kw>
<msg timestamp="20210201 13:53:48.379" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:53:48.379" starttime="20210201 13:53:48.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:53:48.383" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:54:23.002" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:54:23.002" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:53:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:50 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:54:23.002" starttime="20210201 13:53:48.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:54:23.003" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:53:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:53:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:53:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:53:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0C5EF0CDF074-&gt;f36837f2-fda3-47ca-ba98-7c496b838ce6
2021-02-01 13:53:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-01 13:53:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8BFB0B3C087B-&gt;79a64442-8175-4587-bd30-b29f187ed6d3
2021-02-01 13:53:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-01 13:53:51 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:53:51 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-02-01 13:53:51 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187631775, maxDate=1612792431775, sequenceNumber=3, masterKeyId=2))
2021-02-01 13:53:51 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d1 80 fc ee f5 2e 38 d1 88 ae 8f f8 2e 40 03 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-01 13:53:51 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187631775, maxDate=1612792431775, sequenceNumber=3, masterKeyId=2)
2021-02-01 13:53:51 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:53:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:53:54 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:53:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612187419087_0003
2021-02-01 13:53:55 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187631775, maxDate=1612792431775, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 d1 80 fc ee f5 2e 38 d1 88 ae 8f f8 2e 40 03 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-01 13:53:55 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:53:55 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:53:55 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-01 13:53:55 INFO  YarnClientImpl:329 - Submitted application application_1612187419087_0003
2021-02-01 13:53:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612187419087_0003/
2021-02-01 13:53:56 INFO  Job:1614 - Running job: job_1612187419087_0003
2021-02-01 13:54:03 INFO  Job:1635 - Job job_1612187419087_0003 running in uber mode : false
2021-02-01 13:54:03 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:54:12 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:54:14 INFO  Job:1642 -  map 67% reduce 0%
2021-02-01 13:54:15 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:54:18 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:54:22 INFO  Job:1653 - Job job_1612187419087_0003 completed successfully
2021-02-01 13:54:22 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101057
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39824
		Total time spent by all reduces in occupied slots (ms)=6758
		Total time spent by all map tasks (ms)=19912
		Total time spent by all reduce tasks (ms)=3379
		Total vcore-milliseconds taken by all map tasks=19912
		Total vcore-milliseconds taken by all reduce tasks=3379
		Total megabyte-milliseconds taken by all map tasks=40779776
		Total megabyte-milliseconds taken by all reduce tasks=6920192
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1024
		CPU time spent (ms)=6730
		Physical memory (bytes) snapshot=1428840448
		Virtual memory (bytes) snapshot=14048428032
		Total committed heap usage (bytes)=1201668096
		Peak Map Physical memory (bytes)=387502080
		Peak Map Virtual memory (bytes)=3510206464
		Peak Reduce Physical memory (bytes)=324399104
		Peak Reduce Virtual memory (bytes)=3526508544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 31.091 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210201 13:54:23.003" starttime="20210201 13:54:23.002"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:54:23.004" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:54:23.004" starttime="20210201 13:54:23.003"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.004" starttime="20210201 13:53:48.380"></status>
</kw>
<msg timestamp="20210201 13:54:23.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:54:23.004" starttime="20210201 13:53:48.380"></status>
</kw>
<msg timestamp="20210201 13:54:23.005" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:53:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:50 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:54:23.005" starttime="20210201 13:53:48.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:54:23.005" starttime="20210201 13:54:23.005"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:54:23.005" critical="yes" starttime="20210201 13:53:48.359"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:54:23.010" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:54:23.014" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:54:23.014" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:54:23.014" starttime="20210201 13:54:23.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:54:23.015" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:54:23.015" starttime="20210201 13:54:23.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:54:23.016" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:54:23.016" starttime="20210201 13:54:23.016"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.016" starttime="20210201 13:54:23.008"></status>
</kw>
<msg timestamp="20210201 13:54:23.016" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:54:23.016" starttime="20210201 13:54:23.007"></status>
</kw>
<msg timestamp="20210201 13:54:23.017" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:54:23.017" starttime="20210201 13:54:23.007"></status>
</kw>
<msg timestamp="20210201 13:54:23.017" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:54:23.017" starttime="20210201 13:54:23.007"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:54:23.017" level="INFO">${random} = m9H6yGvT</msg>
<status status="PASS" endtime="20210201 13:54:23.017" starttime="20210201 13:54:23.017"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:54:23.021" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:54:23.021" starttime="20210201 13:54:23.020"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:54:23.021" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:54:23.021" starttime="20210201 13:54:23.021"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.021" starttime="20210201 13:54:23.020"></status>
</kw>
<msg timestamp="20210201 13:54:23.022" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:54:23.022" starttime="20210201 13:54:23.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:54:23.022" starttime="20210201 13:54:23.022"></status>
</kw>
<msg timestamp="20210201 13:54:23.022" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210201 13:54:23.022" starttime="20210201 13:54:23.022"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.023" starttime="20210201 13:54:23.019"></status>
</kw>
<msg timestamp="20210201 13:54:23.023" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:54:23.023" starttime="20210201 13:54:23.018"></status>
</kw>
<msg timestamp="20210201 13:54:23.023" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210201 13:54:23.023" starttime="20210201 13:54:23.017"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:54:23.026" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:54:23.026" starttime="20210201 13:54:23.026"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:54:23.027" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:54:23.027" starttime="20210201 13:54:23.026"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.027" starttime="20210201 13:54:23.025"></status>
</kw>
<msg timestamp="20210201 13:54:23.027" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:54:23.027" starttime="20210201 13:54:23.025"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:54:23.028" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210201 13:54:23.028" starttime="20210201 13:54:23.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:54:23.029" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210201 13:54:23.029" starttime="20210201 13:54:23.028"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.029" starttime="20210201 13:54:23.028"></status>
</kw>
<msg timestamp="20210201 13:54:23.029" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210201 13:54:23.029" starttime="20210201 13:54:23.027"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.029" starttime="20210201 13:54:23.024"></status>
</kw>
<msg timestamp="20210201 13:54:23.029" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:54:23.030" starttime="20210201 13:54:23.024"></status>
</kw>
<msg timestamp="20210201 13:54:23.030" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210201 13:54:23.030" starttime="20210201 13:54:23.023"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210201 13:54:23.033" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210201 13:54:23.033" starttime="20210201 13:54:23.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:54:23.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210201 13:54:23.033" starttime="20210201 13:54:23.033"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.033" starttime="20210201 13:54:23.032"></status>
</kw>
<msg timestamp="20210201 13:54:23.033" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210201 13:54:23.034" starttime="20210201 13:54:23.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:54:23.035" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210201 13:54:23.035" starttime="20210201 13:54:23.034"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:54:23.035" level="INFO">${result} = /wordcount-m9H6yGvT.txt</msg>
<status status="PASS" endtime="20210201 13:54:23.035" starttime="20210201 13:54:23.035"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.035" starttime="20210201 13:54:23.034"></status>
</kw>
<msg timestamp="20210201 13:54:23.036" level="INFO">${path_with_leading} = /wordcount-m9H6yGvT.txt</msg>
<status status="PASS" endtime="20210201 13:54:23.036" starttime="20210201 13:54:23.034"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:23.036" starttime="20210201 13:54:23.031"></status>
</kw>
<msg timestamp="20210201 13:54:23.036" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-m9H6yGvT.txt</msg>
<status status="PASS" endtime="20210201 13:54:23.036" starttime="20210201 13:54:23.030"></status>
</kw>
<msg timestamp="20210201 13:54:23.036" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-m9H6yGvT.txt</msg>
<status status="PASS" endtime="20210201 13:54:23.036" starttime="20210201 13:54:23.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:54:23.039" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-m9H6yGvT.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:54:54.326" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:54:54.327" level="INFO">${output} = 2021-02-01 13:54:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:54:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210201 13:54:54.327" starttime="20210201 13:54:23.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:54:54.328" level="INFO">2021-02-01 13:54:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:54:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-02-01 13:54:25 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187665137, maxDate=1612792465137, sequenceNumber=4, masterKeyId=2))
2021-02-01 13:54:25 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9d 85 fe ee f5 2e 38 9d 8d b0 8f f8 2e 40 04 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-01 13:54:25 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187665137, maxDate=1612792465137, sequenceNumber=4, masterKeyId=2)
2021-02-01 13:54:25 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:54:25 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:54:25 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:54:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:54:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:54:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-51604A1FC0B6-&gt;79a64442-8175-4587-bd30-b29f187ed6d3
2021-02-01 13:54:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:54:26 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:54:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A3B64283631A-&gt;f36837f2-fda3-47ca-ba98-7c496b838ce6
2021-02-01 13:54:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:54:29 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:54:29 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612187419087_0004
2021-02-01 13:54:29 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187665137, maxDate=1612792465137, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 9d 85 fe ee f5 2e 38 9d 8d b0 8f f8 2e 40 04 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-01 13:54:29 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:54:29 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:54:29 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-01 13:54:30 INFO  YarnClientImpl:329 - Submitted application application_1612187419087_0004
2021-02-01 13:54:30 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612187419087_0004/
2021-02-01 13:54:30 INFO  Job:1614 - Running job: job_1612187419087_0004
2021-02-01 13:54:37 INFO  Job:1635 - Job job_1612187419087_0004 running in uber mode : false
2021-02-01 13:54:37 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:54:46 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:54:48 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:54:52 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:54:53 INFO  Job:1653 - Job job_1612187419087_0004 completed successfully
2021-02-01 13:54:53 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163731
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39500
		Total time spent by all reduces in occupied slots (ms)=6634
		Total time spent by all map tasks (ms)=19750
		Total time spent by all reduce tasks (ms)=3317
		Total vcore-milliseconds taken by all map tasks=19750
		Total vcore-milliseconds taken by all reduce tasks=3317
		Total megabyte-milliseconds taken by all map tasks=40448000
		Total megabyte-milliseconds taken by all reduce tasks=6793216
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=946
		CPU time spent (ms)=7080
		Physical memory (bytes) snapshot=1441009664
		Virtual memory (bytes) snapshot=14025420800
		Total committed heap usage (bytes)=1214251008
		Peak Map Physical memory (bytes)=392998912
		Peak Map Virtual memory (bytes)=3510689792
		Peak Reduce Physical memory (bytes)=323633152
		Peak Reduce Virtual memory (bytes)=3528105984
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210201 13:54:54.328" starttime="20210201 13:54:54.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:54:54.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:54:54.328" starttime="20210201 13:54:54.328"></status>
</kw>
<status status="PASS" endtime="20210201 13:54:54.329" starttime="20210201 13:54:23.037"></status>
</kw>
<msg timestamp="20210201 13:54:54.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:54:54.329" starttime="20210201 13:54:23.037"></status>
</kw>
<msg timestamp="20210201 13:54:54.329" level="INFO">${output} = 2021-02-01 13:54:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:54:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210201 13:54:54.329" starttime="20210201 13:54:23.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:54:54.330" starttime="20210201 13:54:54.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:54:54.330" starttime="20210201 13:54:54.330"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:54:54.330" critical="yes" starttime="20210201 13:54:23.006"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:54:54.332" starttime="20210201 13:53:48.314"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:21.355" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:52:21.360" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:52:21.360" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:52:21.360" starttime="20210201 13:52:21.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:52:21.361" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:52:21.361" starttime="20210201 13:52:21.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:52:21.362" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:52:21.362" starttime="20210201 13:52:21.361"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:21.362" starttime="20210201 13:52:21.351"></status>
</kw>
<msg timestamp="20210201 13:52:21.362" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:52:21.362" starttime="20210201 13:52:21.351"></status>
</kw>
<msg timestamp="20210201 13:52:21.362" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:52:21.362" starttime="20210201 13:52:21.351"></status>
</kw>
<msg timestamp="20210201 13:52:21.363" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:52:21.363" starttime="20210201 13:52:21.350"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:52:21.367" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:52:21.367" starttime="20210201 13:52:21.366"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:52:21.367" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:52:21.367" starttime="20210201 13:52:21.367"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:21.367" starttime="20210201 13:52:21.366"></status>
</kw>
<msg timestamp="20210201 13:52:21.367" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:52:21.367" starttime="20210201 13:52:21.365"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:21.368" starttime="20210201 13:52:21.365"></status>
</kw>
<msg timestamp="20210201 13:52:21.368" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:52:21.368" starttime="20210201 13:52:21.363"></status>
</kw>
<msg timestamp="20210201 13:52:21.368" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:52:21.368" starttime="20210201 13:52:21.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:21.371" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:52:59.986" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:52:59.986" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:52:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:52:23 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:52:59.986" starttime="20210201 13:52:21.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:52:59.987" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:52:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:52:23 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:52:23 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:52:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:52:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A1AE7039653-&gt;79a64442-8175-4587-bd30-b29f187ed6d3
2021-02-01 13:52:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-01 13:52:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D6E1007CA51E-&gt;f36837f2-fda3-47ca-ba98-7c496b838ce6
2021-02-01 13:52:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-01 13:52:24 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:52:24 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-02-01 13:52:25 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187545240, maxDate=1612792345240, sequenceNumber=1, masterKeyId=2))
2021-02-01 13:52:25 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8a db f6 ee f5 2e 38 8a e3 a8 8f f8 2e 40 01 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-01 13:52:25 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187545240, maxDate=1612792345240, sequenceNumber=1, masterKeyId=2)
2021-02-01 13:52:25 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:52:25 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:52:26 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612187419087_0001
2021-02-01 13:52:26 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187545240, maxDate=1612792345240, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 8a db f6 ee f5 2e 38 8a e3 a8 8f f8 2e 40 01 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-01 13:52:26 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:52:26 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:52:26 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-01 13:52:27 INFO  YarnClientImpl:329 - Submitted application application_1612187419087_0001
2021-02-01 13:52:27 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612187419087_0001/
2021-02-01 13:52:27 INFO  Job:1614 - Running job: job_1612187419087_0001
2021-02-01 13:52:38 INFO  Job:1635 - Job job_1612187419087_0001 running in uber mode : false
2021-02-01 13:52:38 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:52:47 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:52:49 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:52:53 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:52:59 INFO  Job:1653 - Job job_1612187419087_0001 completed successfully
2021-02-01 13:52:59 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101269
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40768
		Total time spent by all reduces in occupied slots (ms)=6892
		Total time spent by all map tasks (ms)=20384
		Total time spent by all reduce tasks (ms)=3446
		Total vcore-milliseconds taken by all map tasks=20384
		Total vcore-milliseconds taken by all reduce tasks=3446
		Total megabyte-milliseconds taken by all map tasks=41746432
		Total megabyte-milliseconds taken by all reduce tasks=7057408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=950
		CPU time spent (ms)=6570
		Physical memory (bytes) snapshot=1483411456
		Virtual memory (bytes) snapshot=14053834752
		Total committed heap usage (bytes)=1281359872
		Peak Map Physical memory (bytes)=387502080
		Peak Map Virtual memory (bytes)=3512397824
		Peak Reduce Physical memory (bytes)=322772992
		Peak Reduce Virtual memory (bytes)=3527548928
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.876 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210201 13:52:59.988" starttime="20210201 13:52:59.987"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:52:59.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:52:59.988" starttime="20210201 13:52:59.988"></status>
</kw>
<status status="PASS" endtime="20210201 13:52:59.989" starttime="20210201 13:52:21.369"></status>
</kw>
<msg timestamp="20210201 13:52:59.989" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:52:59.989" starttime="20210201 13:52:21.369"></status>
</kw>
<msg timestamp="20210201 13:52:59.989" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-01 13:52:23 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:52:23 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210201 13:52:59.989" starttime="20210201 13:52:21.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:52:59.990" starttime="20210201 13:52:59.989"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:52:59.990" critical="yes" starttime="20210201 13:52:21.350"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:52:59.995" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:53:00.000" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:53:00.000" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:00.000" starttime="20210201 13:52:59.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:53:00.001" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:00.001" starttime="20210201 13:53:00.001"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:53:00.002" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:53:00.002" starttime="20210201 13:53:00.001"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.002" starttime="20210201 13:52:59.992"></status>
</kw>
<msg timestamp="20210201 13:53:00.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:53:00.002" starttime="20210201 13:52:59.992"></status>
</kw>
<msg timestamp="20210201 13:53:00.002" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:00.002" starttime="20210201 13:52:59.991"></status>
</kw>
<msg timestamp="20210201 13:53:00.003" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210201 13:53:00.003" starttime="20210201 13:52:59.991"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:53:00.003" level="INFO">${random} = 7PJdxF67</msg>
<status status="PASS" endtime="20210201 13:53:00.003" starttime="20210201 13:53:00.003"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:53:00.007" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:53:00.007" starttime="20210201 13:53:00.006"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:53:00.007" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:53:00.007" starttime="20210201 13:53:00.007"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.007" starttime="20210201 13:53:00.006"></status>
</kw>
<msg timestamp="20210201 13:53:00.007" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:53:00.007" starttime="20210201 13:53:00.005"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.008" starttime="20210201 13:53:00.004"></status>
</kw>
<msg timestamp="20210201 13:53:00.008" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:53:00.008" starttime="20210201 13:53:00.004"></status>
</kw>
<msg timestamp="20210201 13:53:00.008" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210201 13:53:00.008" starttime="20210201 13:53:00.003"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:53:00.011" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:53:00.011" starttime="20210201 13:53:00.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:53:00.012" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:53:00.012" starttime="20210201 13:53:00.011"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.012" starttime="20210201 13:53:00.010"></status>
</kw>
<msg timestamp="20210201 13:53:00.012" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:53:00.012" starttime="20210201 13:53:00.010"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.012" starttime="20210201 13:53:00.009"></status>
</kw>
<msg timestamp="20210201 13:53:00.012" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:53:00.012" starttime="20210201 13:53:00.009"></status>
</kw>
<msg timestamp="20210201 13:53:00.013" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210201 13:53:00.013" starttime="20210201 13:53:00.008"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210201 13:53:00.015" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210201 13:53:00.015" starttime="20210201 13:53:00.015"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:53:00.016" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210201 13:53:00.016" starttime="20210201 13:53:00.015"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.016" starttime="20210201 13:53:00.015"></status>
</kw>
<msg timestamp="20210201 13:53:00.016" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210201 13:53:00.016" starttime="20210201 13:53:00.014"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:00.016" starttime="20210201 13:53:00.014"></status>
</kw>
<msg timestamp="20210201 13:53:00.016" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-7PJdxF67.txt</msg>
<status status="PASS" endtime="20210201 13:53:00.017" starttime="20210201 13:53:00.013"></status>
</kw>
<msg timestamp="20210201 13:53:00.017" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-7PJdxF67.txt</msg>
<status status="PASS" endtime="20210201 13:53:00.017" starttime="20210201 13:53:00.013"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:53:00.020" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-7PJdxF67.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:53:33.302" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:53:33.302" level="INFO">${output} = 2021-02-01 13:53:01 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:53:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210201 13:53:33.302" starttime="20210201 13:53:00.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:53:33.303" level="INFO">2021-02-01 13:53:01 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:53:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
2021-02-01 13:53:02 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187582219, maxDate=1612792382219, sequenceNumber=2, masterKeyId=2))
2021-02-01 13:53:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ba fd f8 ee f5 2e 38 ba 85 ab 8f f8 2e 40 02 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-01 13:53:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187582219, maxDate=1612792382219, sequenceNumber=2, masterKeyId=2)
2021-02-01 13:53:02 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-01 13:53:02 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-01 13:53:02 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:53:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-01 13:53:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:53:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6DB5BA87561C-&gt;f36837f2-fda3-47ca-ba98-7c496b838ce6
2021-02-01 13:53:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:53:03 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-01 13:53:06 INFO  JobSubmitter:202 - number of splits:3
2021-02-01 13:53:06 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612187419087_0002
2021-02-01 13:53:06 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612187582219, maxDate=1612792382219, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.27.0.8:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ba fd f8 ee f5 2e 38 ba 85 ab 8f f8 2e 40 02 48 01 5a 0d 32 30 30 30 33 38 38 34 33 33 34 35 35 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-01 13:53:06 INFO  Configuration:2795 - resource-types.xml not found
2021-02-01 13:53:06 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-01 13:53:06 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-01 13:53:07 INFO  YarnClientImpl:329 - Submitted application application_1612187419087_0002
2021-02-01 13:53:07 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612187419087_0002/
2021-02-01 13:53:07 INFO  Job:1614 - Running job: job_1612187419087_0002
2021-02-01 13:53:14 INFO  Job:1635 - Job job_1612187419087_0002 running in uber mode : false
2021-02-01 13:53:14 INFO  Job:1642 -  map 0% reduce 0%
2021-02-01 13:53:24 INFO  Job:1642 -  map 33% reduce 0%
2021-02-01 13:53:26 INFO  Job:1642 -  map 67% reduce 0%
2021-02-01 13:53:27 INFO  Job:1642 -  map 100% reduce 0%
2021-02-01 13:53:31 INFO  Job:1642 -  map 100% reduce 100%
2021-02-01 13:53:32 INFO  Job:1653 - Job job_1612187419087_0002 completed successfully
2021-02-01 13:53:32 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163815
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42588
		Total time spent by all reduces in occupied slots (ms)=6930
		Total time spent by all map tasks (ms)=21294
		Total time spent by all reduce tasks (ms)=3465
		Total vcore-milliseconds taken by all map tasks=21294
		Total vcore-milliseconds taken by all reduce tasks=3465
		Total megabyte-milliseconds taken by all map tasks=43610112
		Total megabyte-milliseconds taken by all reduce tasks=7096320
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1441
		CPU time spent (ms)=7150
		Physical memory (bytes) snapshot=1599082496
		Virtual memory (bytes) snapshot=14054793216
		Total committed heap usage (bytes)=1457520640
		Peak Map Physical memory (bytes)=553672704
		Peak Map Virtual memory (bytes)=3509592064
		Peak Reduce Physical memory (bytes)=325079040
		Peak Reduce Virtual memory (bytes)=3530260480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210201 13:53:33.303" starttime="20210201 13:53:33.302"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:53:33.304" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:53:33.304" starttime="20210201 13:53:33.303"></status>
</kw>
<status status="PASS" endtime="20210201 13:53:33.304" starttime="20210201 13:53:00.018"></status>
</kw>
<msg timestamp="20210201 13:53:33.304" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:53:33.304" starttime="20210201 13:53:00.017"></status>
</kw>
<msg timestamp="20210201 13:53:33.305" level="INFO">${output} = 2021-02-01 13:53:01 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.4:8032
2021-02-01 13:53:02 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.11:10200
20...</msg>
<status status="PASS" endtime="20210201 13:53:33.305" starttime="20210201 13:53:00.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210201 13:53:33.305" starttime="20210201 13:53:33.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210201 13:53:33.306" starttime="20210201 13:53:33.305"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210201 13:53:33.306" critical="yes" starttime="20210201 13:52:59.990"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210201 13:53:33.307" starttime="20210201 13:52:21.305"></status>
</suite>
<status status="PASS" elapsedtime="192718" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
