<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210201 14:00:35.998" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:07.926" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:20.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:20.597" level="INFO">${output} = 2021-02-01 13:57:10,204 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:10,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:20.597" starttime="20210201 13:57:07.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:20.598" level="INFO">2021-02-01 13:57:10,204 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:10,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:57:10,720 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-01 13:57:11,073 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-01 13:57:11,105 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:12,166 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:13,166 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:13,380 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-01 13:57:13,783 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-01 13:57:14,167 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:15,167 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:16,168 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:16,259 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-01 13:57:16,540 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-01 13:57:16,541 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-F7F9115C8B0D-&gt;c4155ab9-9300-488c-ae28-a8ff967d8971
2021-02-01 13:57:16,541 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-01 13:57:17,168 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:18,169 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:19,173 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:20,173 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-01 13:57:20,223 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=5309.372003, max=5309.372003, mean=5309.372003, stddev=0.0, median=5309.372003, p75=5309.372003, p95=5309.372003, p98=5309.372003, p99=5309.372003, p999=5309.372003, mean_rate=0.15968047696400064, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-01 13:57:20,223 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 9
2021-02-01 13:57:20,226 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-01 13:57:20,226 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210201 13:57:20.598" starttime="20210201 13:57:20.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:20.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:20.598" starttime="20210201 13:57:20.598"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:20.598" starttime="20210201 13:57:07.922"></status>
</kw>
<msg timestamp="20210201 13:57:20.599" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:20.599" starttime="20210201 13:57:07.922"></status>
</kw>
<msg timestamp="20210201 13:57:20.599" level="INFO">${result} = 2021-02-01 13:57:10,204 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:10,720 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:20.599" starttime="20210201 13:57:07.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:57:20.600" starttime="20210201 13:57:20.599"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:57:20.600" critical="yes" starttime="20210201 13:57:07.921"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:20.604" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:24.761" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:24.761" level="INFO">${output} = 2021-02-01 13:57:22,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:22,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:24.761" starttime="20210201 13:57:20.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:24.762" level="INFO">2021-02-01 13:57:22,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:22,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:57:22,252 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-01 13:57:22,392 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-01 13:57:22,416 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:23,424 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:24,424 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-01 13:57:24,662 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=224.435169, max=224.435169, mean=224.435169, stddev=0.0, median=224.435169, p75=224.435169, p95=224.435169, p98=224.435169, p99=224.435169, p999=224.435169, mean_rate=0.9742255488742658, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-01 13:57:24,662 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-01 13:57:24,663 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-01 13:57:24,663 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210201 13:57:24.762" starttime="20210201 13:57:24.761"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:24.763" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:24.763" starttime="20210201 13:57:24.762"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:24.763" starttime="20210201 13:57:20.602"></status>
</kw>
<msg timestamp="20210201 13:57:24.763" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:24.763" starttime="20210201 13:57:20.602"></status>
</kw>
<msg timestamp="20210201 13:57:24.764" level="INFO">${result} = 2021-02-01 13:57:22,130 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:22,252 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:24.764" starttime="20210201 13:57:20.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:57:24.764" starttime="20210201 13:57:24.764"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:57:24.764" critical="yes" starttime="20210201 13:57:20.600"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:24.769" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:28.855" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:28.855" level="INFO">${output} = 2021-02-01 13:57:26,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:26,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:28.855" starttime="20210201 13:57:24.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:28.856" level="INFO">2021-02-01 13:57:26,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:26,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:57:26,325 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-01 13:57:26,482 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-01 13:57:26,498 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:27,505 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:28,505 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-01 13:57:28,809 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=58.192202, max=58.192202, mean=58.192202, stddev=0.0, median=58.192202, p75=58.192202, p95=58.192202, p98=58.192202, p99=58.192202, p999=58.192202, mean_rate=0.9844097657075325, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-01 13:57:28,811 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-01 13:57:28,827 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-01 13:57:28,827 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210201 13:57:28.857" starttime="20210201 13:57:28.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:28.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:28.857" starttime="20210201 13:57:28.857"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:28.857" starttime="20210201 13:57:24.767"></status>
</kw>
<msg timestamp="20210201 13:57:28.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:28.858" starttime="20210201 13:57:24.767"></status>
</kw>
<msg timestamp="20210201 13:57:28.858" level="INFO">${result} = 2021-02-01 13:57:26,184 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:26,325 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:28.858" starttime="20210201 13:57:24.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:57:28.858" starttime="20210201 13:57:28.858"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:57:28.859" critical="yes" starttime="20210201 13:57:24.765"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210201 13:57:28.860" starttime="20210201 13:57:07.891"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:28.869" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:35.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:35.035" level="INFO">${output} = 2021-02-01 13:57:30,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:30,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:35.035" starttime="20210201 13:57:28.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:35.036" level="INFO">2021-02-01 13:57:30,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:30,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-01 13:57:30,553 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-01 13:57:30,701 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-01 13:57:30,725 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:31,731 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:32,732 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-01 13:57:32,945 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-01 13:57:33,732 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-01 13:57:34,692 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=67.79152, max=67.79152, mean=67.79152, stddev=0.0, median=67.79152, p75=67.79152, p95=67.79152, p98=67.79152, p99=67.79152, p999=67.79152, mean_rate=0.9693407918265371, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-01 13:57:34,693 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-01 13:57:34,694 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-01 13:57:34,694 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210201 13:57:35.036" starttime="20210201 13:57:35.035"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:35.038" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:35.038" starttime="20210201 13:57:35.036"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:35.038" starttime="20210201 13:57:28.867"></status>
</kw>
<msg timestamp="20210201 13:57:35.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:35.038" starttime="20210201 13:57:28.867"></status>
</kw>
<msg timestamp="20210201 13:57:35.038" level="INFO">${result} = 2021-02-01 13:57:30,430 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-01 13:57:30,553 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210201 13:57:35.038" starttime="20210201 13:57:28.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:57:35.039" starttime="20210201 13:57:35.039"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210201 13:57:35.039" critical="yes" starttime="20210201 13:57:28.866"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210201 13:57:35.040" starttime="20210201 13:57:28.862"></status>
</suite>
<status status="PASS" endtime="20210201 13:57:35.042" starttime="20210201 13:57:07.840"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:00.389" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:00.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:00.393" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:57:00.393" starttime="20210201 13:57:00.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:00.394" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:57:00.394" starttime="20210201 13:57:00.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:00.394" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:00.394" starttime="20210201 13:57:00.394"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:00.395" starttime="20210201 13:57:00.381"></status>
</kw>
<msg timestamp="20210201 13:57:00.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:00.395" starttime="20210201 13:57:00.380"></status>
</kw>
<msg timestamp="20210201 13:57:00.395" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:57:00.395" starttime="20210201 13:57:00.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:57:00.395" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:57:00.396" starttime="20210201 13:57:00.395"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:00.413" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:00.433" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:00.433" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:00.433" starttime="20210201 13:57:00.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:00.434" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:00.434" starttime="20210201 13:57:00.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:00.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:00.435" starttime="20210201 13:57:00.435"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:00.435" starttime="20210201 13:57:00.397"></status>
</kw>
<msg timestamp="20210201 13:57:00.435" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:00.435" starttime="20210201 13:57:00.396"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:00.436" starttime="20210201 13:57:00.396"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:00.436" starttime="20210201 13:57:00.396"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:00.436" starttime="20210201 13:57:00.375"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:57:00.436" critical="yes" starttime="20210201 13:57:00.370"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210201 13:57:00.440" starttime="20210201 13:57:00.274"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210201 13:57:39.896" level="INFO">${random} = 32137</msg>
<status status="PASS" endtime="20210201 13:57:39.896" starttime="20210201 13:57:39.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210201 13:57:39.897" level="INFO">${source} = 32137-source</msg>
<status status="PASS" endtime="20210201 13:57:39.897" starttime="20210201 13:57:39.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210201 13:57:39.898" level="INFO">${target} = 32137-target</msg>
<status status="PASS" endtime="20210201 13:57:39.898" starttime="20210201 13:57:39.897"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:39.902" level="INFO">Running command 'ozone sh volume create 32137-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:42.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:42.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:42.847" starttime="20210201 13:57:39.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:42.848" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:42.848" starttime="20210201 13:57:42.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:42.848" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:42.848" starttime="20210201 13:57:42.848"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:42.849" starttime="20210201 13:57:39.899"></status>
</kw>
<msg timestamp="20210201 13:57:42.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:42.849" starttime="20210201 13:57:39.898"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:42.849" starttime="20210201 13:57:39.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:42.852" level="INFO">Running command 'ozone sh volume create 32137-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:45.846" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:45.846" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:45.846" starttime="20210201 13:57:42.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:45.847" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:45.847" starttime="20210201 13:57:45.846"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:45.847" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:45.847" starttime="20210201 13:57:45.847"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:45.848" starttime="20210201 13:57:42.850"></status>
</kw>
<msg timestamp="20210201 13:57:45.848" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:45.848" starttime="20210201 13:57:42.850"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:45.848" starttime="20210201 13:57:42.849"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:45.852" level="INFO">Running command 'ozone sh bucket create 32137-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:48.784" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:48.784" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:48.784" starttime="20210201 13:57:45.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:48.785" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:48.785" starttime="20210201 13:57:48.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:48.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:48.786" starttime="20210201 13:57:48.785"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:48.786" starttime="20210201 13:57:45.850"></status>
</kw>
<msg timestamp="20210201 13:57:48.786" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:48.786" starttime="20210201 13:57:45.849"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:48.786" starttime="20210201 13:57:45.849"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:48.836" level="INFO">Running command 'ozone sh key put 32137-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:53.975" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:53.975" starttime="20210201 13:57:48.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:53.976" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:53.976" starttime="20210201 13:57:53.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:53.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:53.977" starttime="20210201 13:57:53.976"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:53.977" starttime="20210201 13:57:48.787"></status>
</kw>
<msg timestamp="20210201 13:57:53.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:53.977" starttime="20210201 13:57:48.787"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:53.977" starttime="20210201 13:57:48.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:53.980" level="INFO">Running command 'ozone sh bucket create 32137-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:56.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:56.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:56.938" starttime="20210201 13:57:53.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:56.939" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:56.939" starttime="20210201 13:57:56.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:56.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:56.939" starttime="20210201 13:57:56.939"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:56.940" starttime="20210201 13:57:53.978"></status>
</kw>
<msg timestamp="20210201 13:57:56.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:56.940" starttime="20210201 13:57:53.978"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:56.940" starttime="20210201 13:57:53.977"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:56.943" level="INFO">Running command 'ozone sh bucket link 32137-source/readable-bucket 32137-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:57:59.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:57:59.856" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:57:59.856" starttime="20210201 13:57:56.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:57:59.857" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:57:59.857" starttime="20210201 13:57:59.856"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:57:59.857" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:57:59.857" starttime="20210201 13:57:59.857"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:59.857" starttime="20210201 13:57:56.941"></status>
</kw>
<msg timestamp="20210201 13:57:59.858" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:57:59.858" starttime="20210201 13:57:56.941"></status>
</kw>
<status status="PASS" endtime="20210201 13:57:59.858" starttime="20210201 13:57:56.940"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:57:59.861" level="INFO">Running command 'ozone sh bucket link 32137-source/readable-bucket 32137-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:02.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:02.865" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:02.865" starttime="20210201 13:57:59.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:02.866" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:02.866" starttime="20210201 13:58:02.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:02.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:02.866" starttime="20210201 13:58:02.866"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:02.867" starttime="20210201 13:57:59.859"></status>
</kw>
<msg timestamp="20210201 13:58:02.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:02.867" starttime="20210201 13:57:59.858"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:02.867" starttime="20210201 13:57:59.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:02.870" level="INFO">Running command 'ozone sh bucket link 32137-source/unreadable-bucket 32137-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:05.782" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:05.782" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:05.783" starttime="20210201 13:58:02.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:05.783" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:05.784" starttime="20210201 13:58:05.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:05.784" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:05.784" starttime="20210201 13:58:05.784"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:05.784" starttime="20210201 13:58:02.868"></status>
</kw>
<msg timestamp="20210201 13:58:05.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:05.784" starttime="20210201 13:58:02.868"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:05.785" starttime="20210201 13:58:02.867"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:05.788" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 32137-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:08.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:08.542" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:08.542" starttime="20210201 13:58:05.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:08.543" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:08.543" starttime="20210201 13:58:08.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:08.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:08.544" starttime="20210201 13:58:08.543"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:08.544" starttime="20210201 13:58:05.785"></status>
</kw>
<msg timestamp="20210201 13:58:08.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:08.544" starttime="20210201 13:58:05.785"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:08.545" starttime="20210201 13:58:05.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:08.551" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 32137-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:11.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:11.772" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:11.772" starttime="20210201 13:58:08.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:11.773" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:11.773" starttime="20210201 13:58:11.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:11.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:11.774" starttime="20210201 13:58:11.773"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:11.774" starttime="20210201 13:58:08.546"></status>
</kw>
<msg timestamp="20210201 13:58:11.774" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:11.774" starttime="20210201 13:58:08.545"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:11.774" starttime="20210201 13:58:08.545"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:11.777" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 32137-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:14.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:14.671" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:14.671" starttime="20210201 13:58:11.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:14.672" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:14.672" starttime="20210201 13:58:14.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:14.672" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:14.673" starttime="20210201 13:58:14.672"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:14.673" starttime="20210201 13:58:11.775"></status>
</kw>
<msg timestamp="20210201 13:58:14.673" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:14.673" starttime="20210201 13:58:11.775"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:14.673" starttime="20210201 13:58:11.774"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:14.676" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 32137-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:17.598" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:17.598" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:17.598" starttime="20210201 13:58:14.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:17.599" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:17.599" starttime="20210201 13:58:17.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:17.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:17.600" starttime="20210201 13:58:17.599"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:17.600" starttime="20210201 13:58:14.674"></status>
</kw>
<msg timestamp="20210201 13:58:17.600" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:17.600" starttime="20210201 13:58:14.674"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:17.600" starttime="20210201 13:58:14.673"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:17.603" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 32137-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:20.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:20.595" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:20.595" starttime="20210201 13:58:17.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:20.596" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:58:20.596" starttime="20210201 13:58:20.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:20.596" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:20.596" starttime="20210201 13:58:20.596"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.597" starttime="20210201 13:58:17.601"></status>
</kw>
<msg timestamp="20210201 13:58:20.597" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:20.597" starttime="20210201 13:58:17.601"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.598" starttime="20210201 13:58:17.601"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.598" starttime="20210201 13:57:45.849"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.598" starttime="20210201 13:57:45.848"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.598" starttime="20210201 13:57:39.895"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:20.603" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:20.606" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:20.606" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:58:20.606" starttime="20210201 13:58:20.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:20.607" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:58:20.607" starttime="20210201 13:58:20.606"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:20.607" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:20.607" starttime="20210201 13:58:20.607"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.608" starttime="20210201 13:58:20.601"></status>
</kw>
<msg timestamp="20210201 13:58:20.608" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:20.608" starttime="20210201 13:58:20.601"></status>
</kw>
<msg timestamp="20210201 13:58:20.608" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:58:20.608" starttime="20210201 13:58:20.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:58:20.609" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:58:20.609" starttime="20210201 13:58:20.608"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:20.613" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:20.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:20.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:20.622" starttime="20210201 13:58:20.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:20.623" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:20.623" starttime="20210201 13:58:20.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:20.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.623"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.611"></status>
</kw>
<msg timestamp="20210201 13:58:20.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.610"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.610"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.609"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.600"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:20.624" starttime="20210201 13:58:20.599"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:20.628" level="INFO">Running command 'ozone sh bucket link 32137-source/no-such-bucket 32137-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:23.556" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:23.556" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:23.556" starttime="20210201 13:58:20.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:23.557" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:23.557" starttime="20210201 13:58:23.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:23.557" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:23.558" starttime="20210201 13:58:23.557"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:23.558" starttime="20210201 13:58:20.625"></status>
</kw>
<msg timestamp="20210201 13:58:23.558" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:23.558" starttime="20210201 13:58:20.625"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:23.558" starttime="20210201 13:58:20.625"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:23.561" level="INFO">Running command 'ozone sh key list 32137-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:26.350" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:58:26.350" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210201 13:58:26.350" starttime="20210201 13:58:23.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:26.351" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210201 13:58:26.351" starttime="20210201 13:58:26.350"></status>
</kw>
<msg timestamp="20210201 13:58:26.352" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210201 13:58:26.352" starttime="20210201 13:58:23.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210201 13:58:26.352" starttime="20210201 13:58:26.352"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:58:26.352" critical="yes" starttime="20210201 13:58:20.598"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:26.359" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:26.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:26.362" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:58:26.362" starttime="20210201 13:58:26.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:26.363" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:58:26.363" starttime="20210201 13:58:26.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:26.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:26.363" starttime="20210201 13:58:26.363"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:26.364" starttime="20210201 13:58:26.357"></status>
</kw>
<msg timestamp="20210201 13:58:26.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:26.364" starttime="20210201 13:58:26.356"></status>
</kw>
<msg timestamp="20210201 13:58:26.364" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:58:26.364" starttime="20210201 13:58:26.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:58:26.365" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:58:26.365" starttime="20210201 13:58:26.364"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:26.368" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:26.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:26.385" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:26.385" starttime="20210201 13:58:26.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:26.385" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:26.386" starttime="20210201 13:58:26.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:26.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:26.387" starttime="20210201 13:58:26.386"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:26.387" starttime="20210201 13:58:26.366"></status>
</kw>
<msg timestamp="20210201 13:58:26.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:26.387" starttime="20210201 13:58:26.366"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:26.387" starttime="20210201 13:58:26.365"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:26.387" starttime="20210201 13:58:26.365"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:26.387" starttime="20210201 13:58:26.355"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:26.388" starttime="20210201 13:58:26.355"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:26.391" level="INFO">Running command 'ozone sh bucket link 32137-source/bucket1 32137-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:29.292" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:29.292" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:29.293" starttime="20210201 13:58:26.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:29.294" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:29.294" starttime="20210201 13:58:29.293"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:29.294" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:29.294" starttime="20210201 13:58:29.294"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:29.295" starttime="20210201 13:58:26.389"></status>
</kw>
<msg timestamp="20210201 13:58:29.295" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:29.295" starttime="20210201 13:58:26.388"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:29.295" starttime="20210201 13:58:26.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:29.298" level="INFO">Running command 'ozone sh bucket create 32137-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:32.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:32.073" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:32.073" starttime="20210201 13:58:29.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:32.074" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:32.075" starttime="20210201 13:58:32.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:32.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:32.075" starttime="20210201 13:58:32.075"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:32.076" starttime="20210201 13:58:29.296"></status>
</kw>
<msg timestamp="20210201 13:58:32.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:32.076" starttime="20210201 13:58:29.296"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:32.076" starttime="20210201 13:58:29.295"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:32.079" level="INFO">Running command 'ozone sh key put 32137-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:37.150" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:37.150" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:37.150" starttime="20210201 13:58:32.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:37.151" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:37.151" starttime="20210201 13:58:37.150"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:37.152" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:37.152" starttime="20210201 13:58:37.151"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:37.152" starttime="20210201 13:58:32.077"></status>
</kw>
<msg timestamp="20210201 13:58:37.152" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:37.152" starttime="20210201 13:58:32.077"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:37.152" starttime="20210201 13:58:32.076"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210201 13:58:37.154" level="INFO">${postfix} = 86500</msg>
<status status="PASS" endtime="20210201 13:58:37.154" starttime="20210201 13:58:37.153"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210201 13:58:37.154" level="INFO">${tmpfile} = /tmp/tempkey-86500</msg>
<status status="PASS" endtime="20210201 13:58:37.154" starttime="20210201 13:58:37.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:37.157" level="INFO">Running command 'ozone sh key get -f 32137-target/link1/key1 /tmp/tempkey-86500 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:41.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:41.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:41.710" starttime="20210201 13:58:37.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.712" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:41.712" starttime="20210201 13:58:41.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:41.713" starttime="20210201 13:58:41.712"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.713" starttime="20210201 13:58:37.155"></status>
</kw>
<msg timestamp="20210201 13:58:41.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:41.713" starttime="20210201 13:58:37.155"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.713" starttime="20210201 13:58:37.154"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210201 13:58:41.716" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-86500 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:41.719" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210201 13:58:41.719" starttime="20210201 13:58:41.713"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:41.723" level="INFO">Running command 'rm -f /tmp/tempkey-86500 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:41.726" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:41.726" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:41.726" starttime="20210201 13:58:41.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.727" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:41.727" starttime="20210201 13:58:41.726"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.728" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:41.728" starttime="20210201 13:58:41.727"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.728" starttime="20210201 13:58:41.721"></status>
</kw>
<msg timestamp="20210201 13:58:41.728" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:41.728" starttime="20210201 13:58:41.720"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.728" starttime="20210201 13:58:41.720"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:58:41.729" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210201 13:58:41.729" starttime="20210201 13:58:41.728"></status>
</kw>
<msg timestamp="20210201 13:58:41.729" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210201 13:58:41.729" starttime="20210201 13:58:37.153"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:58:41.730" starttime="20210201 13:58:41.729"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.730" starttime="20210201 13:58:37.152"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:58:41.730" critical="yes" starttime="20210201 13:58:26.354"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:41.739" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:41.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:41.741" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:58:41.741" starttime="20210201 13:58:41.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.742" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:58:41.742" starttime="20210201 13:58:41.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:41.743" starttime="20210201 13:58:41.743"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.743" starttime="20210201 13:58:41.737"></status>
</kw>
<msg timestamp="20210201 13:58:41.743" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:41.743" starttime="20210201 13:58:41.733"></status>
</kw>
<msg timestamp="20210201 13:58:41.744" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:58:41.744" starttime="20210201 13:58:41.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:58:41.744" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:58:41.744" starttime="20210201 13:58:41.744"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:41.748" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:41.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:41.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:41.758" starttime="20210201 13:58:41.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.759" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:41.759" starttime="20210201 13:58:41.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:41.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:41.760" starttime="20210201 13:58:41.759"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.760" starttime="20210201 13:58:41.746"></status>
</kw>
<msg timestamp="20210201 13:58:41.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:41.760" starttime="20210201 13:58:41.745"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.760" starttime="20210201 13:58:41.745"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.761" starttime="20210201 13:58:41.744"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.761" starttime="20210201 13:58:41.732"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:41.761" starttime="20210201 13:58:41.732"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:41.764" level="INFO">Running command 'ozone sh key put 32137-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:46.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:46.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:46.679" starttime="20210201 13:58:41.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:46.680" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:46.681" starttime="20210201 13:58:46.680"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:46.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:46.681" starttime="20210201 13:58:46.681"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:46.681" starttime="20210201 13:58:41.762"></status>
</kw>
<msg timestamp="20210201 13:58:46.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:46.682" starttime="20210201 13:58:41.761"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:46.682" starttime="20210201 13:58:41.761"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210201 13:58:46.683" level="INFO">${postfix} = 49712</msg>
<status status="PASS" endtime="20210201 13:58:46.683" starttime="20210201 13:58:46.683"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210201 13:58:46.684" level="INFO">${tmpfile} = /tmp/tempkey-49712</msg>
<status status="PASS" endtime="20210201 13:58:46.684" starttime="20210201 13:58:46.683"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:46.687" level="INFO">Running command 'ozone sh key get -f 32137-source/bucket1/key2 /tmp/tempkey-49712 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:51.568" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:51.568" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:51.569" starttime="20210201 13:58:46.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.570" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:51.570" starttime="20210201 13:58:51.569"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.570" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:51.570" starttime="20210201 13:58:51.570"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.570" starttime="20210201 13:58:46.685"></status>
</kw>
<msg timestamp="20210201 13:58:51.570" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:51.571" starttime="20210201 13:58:46.684"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.571" starttime="20210201 13:58:46.684"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210201 13:58:51.573" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-49712 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:51.575" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210201 13:58:51.575" starttime="20210201 13:58:51.571"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:51.579" level="INFO">Running command 'rm -f /tmp/tempkey-49712 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:51.581" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:51.581" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:51.581" starttime="20210201 13:58:51.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.582" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:51.582" starttime="20210201 13:58:51.581"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.582" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:51.583" starttime="20210201 13:58:51.582"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.583" starttime="20210201 13:58:51.577"></status>
</kw>
<msg timestamp="20210201 13:58:51.583" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:51.583" starttime="20210201 13:58:51.576"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.583" starttime="20210201 13:58:51.576"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 13:58:51.584" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210201 13:58:51.584" starttime="20210201 13:58:51.583"></status>
</kw>
<msg timestamp="20210201 13:58:51.584" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210201 13:58:51.584" starttime="20210201 13:58:46.682"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:58:51.584" starttime="20210201 13:58:51.584"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.585" starttime="20210201 13:58:46.682"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:58:51.585" critical="yes" starttime="20210201 13:58:41.731"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:51.590" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:51.592" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:51.593" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:58:51.593" starttime="20210201 13:58:51.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.593" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:58:51.593" starttime="20210201 13:58:51.593"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.594" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:51.594" starttime="20210201 13:58:51.594"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.594" starttime="20210201 13:58:51.588"></status>
</kw>
<msg timestamp="20210201 13:58:51.594" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:51.594" starttime="20210201 13:58:51.588"></status>
</kw>
<msg timestamp="20210201 13:58:51.595" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:58:51.595" starttime="20210201 13:58:51.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:58:51.595" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:58:51.595" starttime="20210201 13:58:51.595"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:51.599" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:51.614" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:51.614" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:51.615" starttime="20210201 13:58:51.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.616" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:51.616" starttime="20210201 13:58:51.615"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:51.616" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:51.616" starttime="20210201 13:58:51.616"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.617" starttime="20210201 13:58:51.596"></status>
</kw>
<msg timestamp="20210201 13:58:51.617" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:51.617" starttime="20210201 13:58:51.596"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.617" starttime="20210201 13:58:51.596"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.617" starttime="20210201 13:58:51.595"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.617" starttime="20210201 13:58:51.587"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:51.617" starttime="20210201 13:58:51.586"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:51.620" level="INFO">Running command 'ozone sh key list 32137-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:54.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:54.782" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210201 13:58:54.782" starttime="20210201 13:58:51.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:54.783" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210201 13:58:54.783" starttime="20210201 13:58:54.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:54.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:54.783" starttime="20210201 13:58:54.783"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:54.784" starttime="20210201 13:58:51.618"></status>
</kw>
<msg timestamp="20210201 13:58:54.784" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:54.784" starttime="20210201 13:58:51.618"></status>
</kw>
<msg timestamp="20210201 13:58:54.784" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210201 13:58:54.784" starttime="20210201 13:58:51.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:54.788" level="INFO">Running command 'ozone sh key list 32137-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:57.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:57.797" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210201 13:58:57.797" starttime="20210201 13:58:54.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:57.798" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210201 13:58:57.798" starttime="20210201 13:58:57.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:57.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:57.799" starttime="20210201 13:58:57.798"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.799" starttime="20210201 13:58:54.785"></status>
</kw>
<msg timestamp="20210201 13:58:57.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:57.799" starttime="20210201 13:58:54.785"></status>
</kw>
<msg timestamp="20210201 13:58:57.799" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210201 13:58:57.799" starttime="20210201 13:58:54.784"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:58:57.800" starttime="20210201 13:58:57.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:58:57.800" starttime="20210201 13:58:57.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210201 13:58:57.801" starttime="20210201 13:58:57.801"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:58:57.801" critical="yes" starttime="20210201 13:58:51.586"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:57.806" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:57.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:57.809" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:58:57.809" starttime="20210201 13:58:57.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:57.809" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:58:57.810" starttime="20210201 13:58:57.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:57.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:57.810" starttime="20210201 13:58:57.810"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.810" starttime="20210201 13:58:57.804"></status>
</kw>
<msg timestamp="20210201 13:58:57.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:57.810" starttime="20210201 13:58:57.804"></status>
</kw>
<msg timestamp="20210201 13:58:57.811" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:58:57.811" starttime="20210201 13:58:57.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:58:57.811" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:58:57.811" starttime="20210201 13:58:57.811"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:57.815" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:58:57.830" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:58:57.830" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:58:57.830" starttime="20210201 13:58:57.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:58:57.831" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:58:57.831" starttime="20210201 13:58:57.831"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:58:57.832" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:58:57.832" starttime="20210201 13:58:57.831"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.832" starttime="20210201 13:58:57.813"></status>
</kw>
<msg timestamp="20210201 13:58:57.832" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:58:57.832" starttime="20210201 13:58:57.812"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.832" starttime="20210201 13:58:57.812"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.832" starttime="20210201 13:58:57.812"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.833" starttime="20210201 13:58:57.803"></status>
</kw>
<status status="PASS" endtime="20210201 13:58:57.833" starttime="20210201 13:58:57.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:58:57.837" level="INFO">Running command 'ozone sh key delete 32137-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:00.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:00.758" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:00.758" starttime="20210201 13:58:57.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:00.759" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:00.759" starttime="20210201 13:59:00.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:00.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:00.760" starttime="20210201 13:59:00.760"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:00.760" starttime="20210201 13:58:57.834"></status>
</kw>
<msg timestamp="20210201 13:59:00.760" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:00.760" starttime="20210201 13:58:57.833"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:00.761" starttime="20210201 13:58:57.833"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:00.767" level="INFO">Running command 'ozone sh key list 32137-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:03.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:03.854" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210201 13:59:03.854" starttime="20210201 13:59:00.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:03.855" level="INFO">key1</msg>
<status status="PASS" endtime="20210201 13:59:03.855" starttime="20210201 13:59:03.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:03.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:03.856" starttime="20210201 13:59:03.855"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.856" starttime="20210201 13:59:00.763"></status>
</kw>
<msg timestamp="20210201 13:59:03.856" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:03.856" starttime="20210201 13:59:00.761"></status>
</kw>
<msg timestamp="20210201 13:59:03.856" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210201 13:59:03.856" starttime="20210201 13:59:00.761"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:03.857" starttime="20210201 13:59:03.856"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:03.857" critical="yes" starttime="20210201 13:58:57.802"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:03.862" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:03.865" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:03.865" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:03.865" starttime="20210201 13:59:03.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:03.866" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:03.866" starttime="20210201 13:59:03.865"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:03.866" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:03.866" starttime="20210201 13:59:03.866"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.867" starttime="20210201 13:59:03.860"></status>
</kw>
<msg timestamp="20210201 13:59:03.867" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:03.867" starttime="20210201 13:59:03.860"></status>
</kw>
<msg timestamp="20210201 13:59:03.867" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:03.867" starttime="20210201 13:59:03.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:03.868" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:03.868" starttime="20210201 13:59:03.867"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:03.871" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:03.881" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:03.881" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:03.881" starttime="20210201 13:59:03.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:03.882" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:03.882" starttime="20210201 13:59:03.882"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:03.883" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:03.883" starttime="20210201 13:59:03.882"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.883" starttime="20210201 13:59:03.869"></status>
</kw>
<msg timestamp="20210201 13:59:03.883" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:03.883" starttime="20210201 13:59:03.869"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.883" starttime="20210201 13:59:03.868"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.883" starttime="20210201 13:59:03.868"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.884" starttime="20210201 13:59:03.859"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:03.884" starttime="20210201 13:59:03.859"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:03.887" level="INFO">Running command 'ozone sh bucket list 32137-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:07.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:07.410" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210201 13:59:07.410" starttime="20210201 13:59:03.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:07.411" level="INFO">{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:23.453Z",
  "modificationTime" : "2021-02-01T13:58:23.453Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:05.594Z",
  "modificationTime" : "2021-02-01T13:58:20.457Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:29.149Z",
  "modificationTime" : "2021-02-01T13:58:29.149Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:57:59.731Z",
  "modificationTime" : "2021-02-01T13:58:17.516Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:02.788Z",
  "modificationTime" : "2021-02-01T13:58:02.788Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 13:59:07.411" starttime="20210201 13:59:07.410"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:07.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:07.412" starttime="20210201 13:59:07.411"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.412" starttime="20210201 13:59:03.885"></status>
</kw>
<msg timestamp="20210201 13:59:07.412" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:07.412" starttime="20210201 13:59:03.884"></status>
</kw>
<msg timestamp="20210201 13:59:07.412" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210201 13:59:07.413" starttime="20210201 13:59:03.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:07.413" starttime="20210201 13:59:07.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:07.413" starttime="20210201 13:59:07.413"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:07.414" critical="yes" starttime="20210201 13:59:03.858"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:07.419" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:07.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:07.422" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:07.422" starttime="20210201 13:59:07.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:07.422" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:07.423" starttime="20210201 13:59:07.422"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:07.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:07.423" starttime="20210201 13:59:07.423"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.424" starttime="20210201 13:59:07.417"></status>
</kw>
<msg timestamp="20210201 13:59:07.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:07.424" starttime="20210201 13:59:07.416"></status>
</kw>
<msg timestamp="20210201 13:59:07.424" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:07.424" starttime="20210201 13:59:07.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:07.425" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:07.425" starttime="20210201 13:59:07.424"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:07.428" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:07.445" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:07.445" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:07.445" starttime="20210201 13:59:07.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:07.446" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:07.446" starttime="20210201 13:59:07.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:07.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:07.447" starttime="20210201 13:59:07.447"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.447" starttime="20210201 13:59:07.426"></status>
</kw>
<msg timestamp="20210201 13:59:07.447" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:07.448" starttime="20210201 13:59:07.426"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.448" starttime="20210201 13:59:07.425"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.448" starttime="20210201 13:59:07.425"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.448" starttime="20210201 13:59:07.416"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:07.448" starttime="20210201 13:59:07.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:07.455" level="INFO">Running command 'ozone sh bucket info 32137-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:10.429" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:10.429" level="INFO">${output} = 32137-source bucket1</msg>
<status status="PASS" endtime="20210201 13:59:10.429" starttime="20210201 13:59:07.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:10.430" level="INFO">32137-source bucket1</msg>
<status status="PASS" endtime="20210201 13:59:10.431" starttime="20210201 13:59:10.430"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:10.431" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:10.431" starttime="20210201 13:59:10.431"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.432" starttime="20210201 13:59:07.453"></status>
</kw>
<msg timestamp="20210201 13:59:10.432" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:10.432" starttime="20210201 13:59:07.451"></status>
</kw>
<msg timestamp="20210201 13:59:10.432" level="INFO">${result} = 32137-source bucket1</msg>
<status status="PASS" endtime="20210201 13:59:10.432" starttime="20210201 13:59:07.450"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:10.433" starttime="20210201 13:59:10.432"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:10.433" critical="yes" starttime="20210201 13:59:07.414"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:10.438" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:10.440" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:10.440" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:10.440" starttime="20210201 13:59:10.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:10.441" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:10.441" starttime="20210201 13:59:10.441"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:10.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:10.442" starttime="20210201 13:59:10.441"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.442" starttime="20210201 13:59:10.436"></status>
</kw>
<msg timestamp="20210201 13:59:10.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:10.442" starttime="20210201 13:59:10.435"></status>
</kw>
<msg timestamp="20210201 13:59:10.443" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:10.443" starttime="20210201 13:59:10.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:10.443" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:10.443" starttime="20210201 13:59:10.443"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:10.446" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:10.456" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:10.456" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:10.456" starttime="20210201 13:59:10.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:10.457" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:10.457" starttime="20210201 13:59:10.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:10.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.457"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.445"></status>
</kw>
<msg timestamp="20210201 13:59:10.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.444"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.444"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.443"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.435"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:10.458" starttime="20210201 13:59:10.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:10.462" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 32137-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:13.495" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:13.495" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:59:13.495" starttime="20210201 13:59:10.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:13.496" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:59:13.496" starttime="20210201 13:59:13.495"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:13.496" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:13.496" starttime="20210201 13:59:13.496"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:13.497" starttime="20210201 13:59:10.459"></status>
</kw>
<msg timestamp="20210201 13:59:13.497" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:13.497" starttime="20210201 13:59:10.459"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:13.497" starttime="20210201 13:59:10.458"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:13.501" level="INFO">Running command 'ozone sh bucket getacl 32137-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:16.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:16.743" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210201 13:59:16.743" starttime="20210201 13:59:13.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:16.744" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210201 13:59:16.744" starttime="20210201 13:59:16.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:16.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:16.745" starttime="20210201 13:59:16.744"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:16.745" starttime="20210201 13:59:13.499"></status>
</kw>
<msg timestamp="20210201 13:59:16.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:16.745" starttime="20210201 13:59:13.499"></status>
</kw>
<msg timestamp="20210201 13:59:16.746" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210201 13:59:16.746" starttime="20210201 13:59:13.498"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:16.746" starttime="20210201 13:59:16.746"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:16.746" starttime="20210201 13:59:13.497"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:16.750" level="INFO">Running command 'ozone sh bucket getacl 32137-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:19.760" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:19.760" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:19.760" starttime="20210201 13:59:16.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:19.761" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:19.761" starttime="20210201 13:59:19.760"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:19.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:19.762" starttime="20210201 13:59:19.761"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:19.762" starttime="20210201 13:59:16.748"></status>
</kw>
<msg timestamp="20210201 13:59:19.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:19.762" starttime="20210201 13:59:16.748"></status>
</kw>
<msg timestamp="20210201 13:59:19.762" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210201 13:59:19.762" starttime="20210201 13:59:16.747"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:19.763" starttime="20210201 13:59:19.762"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:19.763" starttime="20210201 13:59:16.746"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:19.767" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 32137-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:22.570" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:22.570" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:59:22.570" starttime="20210201 13:59:19.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:22.571" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210201 13:59:22.571" starttime="20210201 13:59:22.570"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:22.572" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:22.572" starttime="20210201 13:59:22.571"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:22.572" starttime="20210201 13:59:19.764"></status>
</kw>
<msg timestamp="20210201 13:59:22.572" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:22.572" starttime="20210201 13:59:19.764"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:22.572" starttime="20210201 13:59:19.763"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:22.576" level="INFO">Running command 'ozone sh bucket getacl 32137-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:25.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:25.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:25.938" starttime="20210201 13:59:22.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:25.939" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:25.940" starttime="20210201 13:59:25.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:25.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:25.940" starttime="20210201 13:59:25.940"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:25.940" starttime="20210201 13:59:22.574"></status>
</kw>
<msg timestamp="20210201 13:59:25.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:25.941" starttime="20210201 13:59:22.574"></status>
</kw>
<msg timestamp="20210201 13:59:25.941" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210201 13:59:25.941" starttime="20210201 13:59:22.573"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:25.941" starttime="20210201 13:59:25.941"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:25.942" starttime="20210201 13:59:22.572"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:25.945" level="INFO">Running command 'ozone sh bucket getacl 32137-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:29.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:29.071" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210201 13:59:29.071" starttime="20210201 13:59:25.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:29.072" level="INFO">READ</msg>
<status status="PASS" endtime="20210201 13:59:29.072" starttime="20210201 13:59:29.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:29.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:29.073" starttime="20210201 13:59:29.072"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.073" starttime="20210201 13:59:25.943"></status>
</kw>
<msg timestamp="20210201 13:59:29.073" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:29.073" starttime="20210201 13:59:25.943"></status>
</kw>
<msg timestamp="20210201 13:59:29.073" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210201 13:59:29.074" starttime="20210201 13:59:25.942"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:29.074" starttime="20210201 13:59:29.074"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.074" starttime="20210201 13:59:25.942"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:29.074" critical="yes" starttime="20210201 13:59:10.433"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:29.080" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:29.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:29.082" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:29.082" starttime="20210201 13:59:29.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:29.083" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:29.083" starttime="20210201 13:59:29.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:29.084" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:29.084" starttime="20210201 13:59:29.083"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.084" starttime="20210201 13:59:29.077"></status>
</kw>
<msg timestamp="20210201 13:59:29.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:29.084" starttime="20210201 13:59:29.077"></status>
</kw>
<msg timestamp="20210201 13:59:29.084" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:29.084" starttime="20210201 13:59:29.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:29.085" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:29.085" starttime="20210201 13:59:29.084"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:29.088" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:29.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:29.104" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:29.104" starttime="20210201 13:59:29.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:29.105" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:29.105" starttime="20210201 13:59:29.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:29.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:29.105" starttime="20210201 13:59:29.105"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.106" starttime="20210201 13:59:29.086"></status>
</kw>
<msg timestamp="20210201 13:59:29.106" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:29.106" starttime="20210201 13:59:29.086"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.106" starttime="20210201 13:59:29.085"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.106" starttime="20210201 13:59:29.085"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.106" starttime="20210201 13:59:29.076"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:29.106" starttime="20210201 13:59:29.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:29.109" level="INFO">Running command 'ozone sh bucket link 32137-source/bucket2 32137-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:31.849" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:31.849" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:31.849" starttime="20210201 13:59:29.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:31.850" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:31.850" starttime="20210201 13:59:31.849"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:31.850" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:31.850" starttime="20210201 13:59:31.850"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:31.851" starttime="20210201 13:59:29.107"></status>
</kw>
<msg timestamp="20210201 13:59:31.851" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:31.851" starttime="20210201 13:59:29.107"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:31.851" starttime="20210201 13:59:29.106"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:31.854" level="INFO">Running command 'ozone sh bucket create 32137-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:34.963" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:59:34.963" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210201 13:59:34.963" starttime="20210201 13:59:31.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:34.964" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210201 13:59:34.964" starttime="20210201 13:59:34.964"></status>
</kw>
<msg timestamp="20210201 13:59:34.965" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210201 13:59:34.965" starttime="20210201 13:59:31.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:34.965" starttime="20210201 13:59:34.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:34.969" level="INFO">Running command 'ozone sh bucket create 32137-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:38.033" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:38.033" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:38.033" starttime="20210201 13:59:34.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:38.034" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:38.034" starttime="20210201 13:59:38.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:38.035" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:38.035" starttime="20210201 13:59:38.034"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:38.035" starttime="20210201 13:59:34.966"></status>
</kw>
<msg timestamp="20210201 13:59:38.035" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:38.035" starttime="20210201 13:59:34.966"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:38.036" starttime="20210201 13:59:34.965"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:38.038" level="INFO">Running command 'ozone sh bucket link 32137-source/bucket1 32137-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:41.109" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:59:41.109" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210201 13:59:41.109" starttime="20210201 13:59:38.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.110" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210201 13:59:41.110" starttime="20210201 13:59:41.110"></status>
</kw>
<msg timestamp="20210201 13:59:41.111" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210201 13:59:41.111" starttime="20210201 13:59:38.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:41.111" starttime="20210201 13:59:41.111"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:41.112" critical="yes" starttime="20210201 13:59:29.075"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:41.119" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:41.121" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:41.121" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:41.122" starttime="20210201 13:59:41.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.122" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:41.122" starttime="20210201 13:59:41.122"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.123" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:41.123" starttime="20210201 13:59:41.123"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.123" starttime="20210201 13:59:41.116"></status>
</kw>
<msg timestamp="20210201 13:59:41.123" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:41.123" starttime="20210201 13:59:41.116"></status>
</kw>
<msg timestamp="20210201 13:59:41.124" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:41.124" starttime="20210201 13:59:41.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:41.124" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:41.124" starttime="20210201 13:59:41.124"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:41.128" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:41.144" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:41.144" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:41.144" starttime="20210201 13:59:41.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.145" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:41.145" starttime="20210201 13:59:41.145"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.146" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:41.146" starttime="20210201 13:59:41.146"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.146" starttime="20210201 13:59:41.126"></status>
</kw>
<msg timestamp="20210201 13:59:41.146" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:41.146" starttime="20210201 13:59:41.125"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.147" starttime="20210201 13:59:41.125"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.147" starttime="20210201 13:59:41.124"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.147" starttime="20210201 13:59:41.115"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.147" starttime="20210201 13:59:41.115"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:41.151" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:41.155" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:41.155" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:41.155" starttime="20210201 13:59:41.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.156" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:41.156" starttime="20210201 13:59:41.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:41.157" starttime="20210201 13:59:41.156"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.157" starttime="20210201 13:59:41.149"></status>
</kw>
<msg timestamp="20210201 13:59:41.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:41.157" starttime="20210201 13:59:41.149"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.157" starttime="20210201 13:59:41.148"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:41.161" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:41.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:41.163" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:41.163" starttime="20210201 13:59:41.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.164" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:41.164" starttime="20210201 13:59:41.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:41.165" starttime="20210201 13:59:41.164"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.165" starttime="20210201 13:59:41.159"></status>
</kw>
<msg timestamp="20210201 13:59:41.165" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:41.165" starttime="20210201 13:59:41.158"></status>
</kw>
<msg timestamp="20210201 13:59:41.165" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:41.165" starttime="20210201 13:59:41.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:41.166" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:41.166" starttime="20210201 13:59:41.165"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:41.170" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:41.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:41.179" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:41.179" starttime="20210201 13:59:41.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.180" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:41.180" starttime="20210201 13:59:41.179"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:41.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:41.181" starttime="20210201 13:59:41.180"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.181" starttime="20210201 13:59:41.167"></status>
</kw>
<msg timestamp="20210201 13:59:41.181" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:41.181" starttime="20210201 13:59:41.167"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.181" starttime="20210201 13:59:41.166"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.182" starttime="20210201 13:59:41.166"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.182" starttime="20210201 13:59:41.158"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:41.182" starttime="20210201 13:59:41.157"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:41.184" level="INFO">Running command 'ozone sh key list 32137-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:44.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:44.447" level="INFO">${output} = {
  "volumeName" : "32137-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-01T13:57:51.502Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210201 13:59:44.447" starttime="20210201 13:59:41.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.448" level="INFO">{
  "volumeName" : "32137-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-01T13:57:51.502Z",
  "modificationTime" : "2021-02-01T13:57:53.428Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210201 13:59:44.448" starttime="20210201 13:59:44.448"></status>
</kw>
<msg timestamp="20210201 13:59:44.449" level="INFO">${result} = {
  "volumeName" : "32137-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-01T13:57:51.502Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210201 13:59:44.449" starttime="20210201 13:59:41.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:44.449" starttime="20210201 13:59:44.449"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.449" starttime="20210201 13:59:41.148"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.449" starttime="20210201 13:59:41.147"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:44.450" critical="yes" starttime="20210201 13:59:41.114"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:44.455" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:44.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:44.458" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:44.458" starttime="20210201 13:59:44.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.458" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:44.458" starttime="20210201 13:59:44.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.459" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:44.459" starttime="20210201 13:59:44.459"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.459" starttime="20210201 13:59:44.453"></status>
</kw>
<msg timestamp="20210201 13:59:44.459" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:44.460" starttime="20210201 13:59:44.453"></status>
</kw>
<msg timestamp="20210201 13:59:44.460" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:44.460" starttime="20210201 13:59:44.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:44.460" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:44.460" starttime="20210201 13:59:44.460"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:44.464" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:44.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:44.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:44.475" starttime="20210201 13:59:44.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.475" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:44.476" starttime="20210201 13:59:44.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:44.476" starttime="20210201 13:59:44.476"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.476" starttime="20210201 13:59:44.462"></status>
</kw>
<msg timestamp="20210201 13:59:44.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:44.477" starttime="20210201 13:59:44.461"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.477" starttime="20210201 13:59:44.461"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.477" starttime="20210201 13:59:44.461"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.477" starttime="20210201 13:59:44.452"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.477" starttime="20210201 13:59:44.452"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:44.481" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:44.484" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:44.484" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:44.484" starttime="20210201 13:59:44.479"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.485" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:44.485" starttime="20210201 13:59:44.484"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.485" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:44.485" starttime="20210201 13:59:44.485"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.485" starttime="20210201 13:59:44.479"></status>
</kw>
<msg timestamp="20210201 13:59:44.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:44.486" starttime="20210201 13:59:44.479"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.486" starttime="20210201 13:59:44.478"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:44.489" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:44.491" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:44.491" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:44.491" starttime="20210201 13:59:44.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.492" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:44.492" starttime="20210201 13:59:44.492"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.493" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:44.493" starttime="20210201 13:59:44.492"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.493" starttime="20210201 13:59:44.487"></status>
</kw>
<msg timestamp="20210201 13:59:44.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:44.493" starttime="20210201 13:59:44.487"></status>
</kw>
<msg timestamp="20210201 13:59:44.493" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:44.493" starttime="20210201 13:59:44.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:44.494" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:44.494" starttime="20210201 13:59:44.493"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:44.497" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:44.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:44.507" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:44.507" starttime="20210201 13:59:44.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.508" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:44.508" starttime="20210201 13:59:44.507"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:44.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:44.508" starttime="20210201 13:59:44.508"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.509" starttime="20210201 13:59:44.495"></status>
</kw>
<msg timestamp="20210201 13:59:44.509" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:44.509" starttime="20210201 13:59:44.495"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.509" starttime="20210201 13:59:44.494"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.509" starttime="20210201 13:59:44.494"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.509" starttime="20210201 13:59:44.486"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:44.509" starttime="20210201 13:59:44.486"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:44.512" level="INFO">Running command 'ozone sh key list 32137-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:47.462" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:59:47.462" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 32137-target unreadable-link null</msg>
<status status="PASS" endtime="20210201 13:59:47.462" starttime="20210201 13:59:44.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.463" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 32137-target unreadable-link null</msg>
<status status="PASS" endtime="20210201 13:59:47.463" starttime="20210201 13:59:47.462"></status>
</kw>
<msg timestamp="20210201 13:59:47.463" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 32137-target unreadable-link null</msg>
<status status="PASS" endtime="20210201 13:59:47.463" starttime="20210201 13:59:44.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:47.464" starttime="20210201 13:59:47.464"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.464" starttime="20210201 13:59:44.478"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.464" starttime="20210201 13:59:44.477"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:47.464" critical="yes" starttime="20210201 13:59:44.451"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:47.470" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:47.472" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:47.472" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:47.472" starttime="20210201 13:59:47.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.473" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:47.473" starttime="20210201 13:59:47.472"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.473" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:47.474" starttime="20210201 13:59:47.473"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.474" starttime="20210201 13:59:47.467"></status>
</kw>
<msg timestamp="20210201 13:59:47.474" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:47.474" starttime="20210201 13:59:47.467"></status>
</kw>
<msg timestamp="20210201 13:59:47.474" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:47.474" starttime="20210201 13:59:47.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:47.475" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:47.475" starttime="20210201 13:59:47.474"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:47.478" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:47.493" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:47.494" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:47.494" starttime="20210201 13:59:47.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.495" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:47.495" starttime="20210201 13:59:47.494"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.495" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:47.495" starttime="20210201 13:59:47.495"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.496" starttime="20210201 13:59:47.476"></status>
</kw>
<msg timestamp="20210201 13:59:47.496" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:47.496" starttime="20210201 13:59:47.476"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.496" starttime="20210201 13:59:47.475"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.496" starttime="20210201 13:59:47.475"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.496" starttime="20210201 13:59:47.466"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.496" starttime="20210201 13:59:47.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:47.500" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:47.503" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:47.503" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:47.503" starttime="20210201 13:59:47.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.504" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:47.504" starttime="20210201 13:59:47.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:47.505" starttime="20210201 13:59:47.504"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.505" starttime="20210201 13:59:47.498"></status>
</kw>
<msg timestamp="20210201 13:59:47.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:47.505" starttime="20210201 13:59:47.497"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.505" starttime="20210201 13:59:47.497"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:47.509" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:47.511" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:47.511" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:47.511" starttime="20210201 13:59:47.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.512" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:47.512" starttime="20210201 13:59:47.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:47.513" starttime="20210201 13:59:47.512"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.513" starttime="20210201 13:59:47.507"></status>
</kw>
<msg timestamp="20210201 13:59:47.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:47.513" starttime="20210201 13:59:47.507"></status>
</kw>
<msg timestamp="20210201 13:59:47.513" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:47.513" starttime="20210201 13:59:47.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:47.514" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:47.514" starttime="20210201 13:59:47.513"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:47.517" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:47.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:47.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:47.526" starttime="20210201 13:59:47.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.527" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:47.527" starttime="20210201 13:59:47.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:47.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:47.528" starttime="20210201 13:59:47.527"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.528" starttime="20210201 13:59:47.515"></status>
</kw>
<msg timestamp="20210201 13:59:47.528" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:47.528" starttime="20210201 13:59:47.515"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.528" starttime="20210201 13:59:47.514"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.528" starttime="20210201 13:59:47.514"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.529" starttime="20210201 13:59:47.506"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:47.529" starttime="20210201 13:59:47.506"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:47.533" level="INFO">Running command 'ozone sh bucket info 32137-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:50.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:50.715" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210201 13:59:50.715" starttime="20210201 13:59:47.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:50.716" level="INFO">{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:05.594Z",
  "modificationTime" : "2021-02-01T13:58:20.457Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 13:59:50.717" starttime="20210201 13:59:50.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:50.717" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:50.717" starttime="20210201 13:59:50.717"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:50.717" starttime="20210201 13:59:47.530"></status>
</kw>
<msg timestamp="20210201 13:59:50.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:50.718" starttime="20210201 13:59:47.529"></status>
</kw>
<msg timestamp="20210201 13:59:50.718" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210201 13:59:50.718" starttime="20210201 13:59:47.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:50.718" starttime="20210201 13:59:50.718"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:50.719" starttime="20210201 13:59:50.719"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:50.721" level="INFO">Running command 'ozone sh key list 32137-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:53.959" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 13:59:53.960" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 32137-source unreadable-bucket </msg>
<status status="PASS" endtime="20210201 13:59:53.960" starttime="20210201 13:59:50.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:53.961" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 32137-source unreadable-bucket </msg>
<status status="PASS" endtime="20210201 13:59:53.961" starttime="20210201 13:59:53.960"></status>
</kw>
<msg timestamp="20210201 13:59:53.961" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 32137-source unreadable-bucket </msg>
<status status="PASS" endtime="20210201 13:59:53.962" starttime="20210201 13:59:50.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210201 13:59:53.962" starttime="20210201 13:59:53.962"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:53.962" starttime="20210201 13:59:47.497"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:53.962" starttime="20210201 13:59:47.496"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 13:59:53.963" critical="yes" starttime="20210201 13:59:47.465"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:53.972" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:53.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:53.975" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 13:59:53.975" starttime="20210201 13:59:53.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:53.976" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 13:59:53.976" starttime="20210201 13:59:53.976"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:53.978" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:53.978" starttime="20210201 13:59:53.976"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:53.979" starttime="20210201 13:59:53.967"></status>
</kw>
<msg timestamp="20210201 13:59:53.980" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:53.980" starttime="20210201 13:59:53.967"></status>
</kw>
<msg timestamp="20210201 13:59:53.980" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 13:59:53.980" starttime="20210201 13:59:53.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 13:59:53.981" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 13:59:53.981" starttime="20210201 13:59:53.980"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:53.986" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:54.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:54.007" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:54.007" starttime="20210201 13:59:53.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:54.008" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:54.008" starttime="20210201 13:59:54.008"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:54.009" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:54.009" starttime="20210201 13:59:54.009"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:54.009" starttime="20210201 13:59:53.982"></status>
</kw>
<msg timestamp="20210201 13:59:54.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:54.010" starttime="20210201 13:59:53.982"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:54.010" starttime="20210201 13:59:53.981"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:54.010" starttime="20210201 13:59:53.981"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:54.010" starttime="20210201 13:59:53.965"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:54.010" starttime="20210201 13:59:53.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:54.014" level="INFO">Running command 'ozone sh bucket link 32137-target/loop1 32137-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:57.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:57.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:57.039" starttime="20210201 13:59:54.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:57.040" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:57.040" starttime="20210201 13:59:57.040"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:57.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:57.041" starttime="20210201 13:59:57.040"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:57.041" starttime="20210201 13:59:54.011"></status>
</kw>
<msg timestamp="20210201 13:59:57.041" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:57.041" starttime="20210201 13:59:54.011"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:57.041" starttime="20210201 13:59:54.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:57.045" level="INFO">Running command 'ozone sh bucket link 32137-target/loop2 32137-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 13:59:59.949" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 13:59:59.949" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 13:59:59.949" starttime="20210201 13:59:57.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 13:59:59.950" level="INFO"></msg>
<status status="PASS" endtime="20210201 13:59:59.951" starttime="20210201 13:59:59.950"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 13:59:59.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 13:59:59.951" starttime="20210201 13:59:59.951"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:59.951" starttime="20210201 13:59:57.042"></status>
</kw>
<msg timestamp="20210201 13:59:59.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 13:59:59.952" starttime="20210201 13:59:57.042"></status>
</kw>
<status status="PASS" endtime="20210201 13:59:59.952" starttime="20210201 13:59:57.042"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 13:59:59.955" level="INFO">Running command 'ozone sh bucket link 32137-target/loop3 32137-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:02.917" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:02.917" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:02.917" starttime="20210201 13:59:59.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:02.918" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:02.918" starttime="20210201 14:00:02.917"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:02.919" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:02.919" starttime="20210201 14:00:02.918"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:02.919" starttime="20210201 13:59:59.953"></status>
</kw>
<msg timestamp="20210201 14:00:02.919" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:02.919" starttime="20210201 13:59:59.952"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:02.919" starttime="20210201 13:59:59.952"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:02.922" level="INFO">Running command 'ozone sh key list 32137-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:05.828" level="INFO">${rc} = 255</msg>
<msg timestamp="20210201 14:00:05.828" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210201 14:00:05.828" starttime="20210201 14:00:02.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:05.829" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210201 14:00:05.829" starttime="20210201 14:00:05.828"></status>
</kw>
<msg timestamp="20210201 14:00:05.829" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210201 14:00:05.829" starttime="20210201 14:00:02.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210201 14:00:05.830" starttime="20210201 14:00:05.830"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 14:00:05.830" critical="yes" starttime="20210201 13:59:53.963"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:05.835" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:05.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:05.838" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 14:00:05.838" starttime="20210201 14:00:05.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:05.839" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 14:00:05.839" starttime="20210201 14:00:05.838"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:05.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:05.839" starttime="20210201 14:00:05.839"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:05.840" starttime="20210201 14:00:05.833"></status>
</kw>
<msg timestamp="20210201 14:00:05.840" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:05.840" starttime="20210201 14:00:05.833"></status>
</kw>
<msg timestamp="20210201 14:00:05.840" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 14:00:05.840" starttime="20210201 14:00:05.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 14:00:05.841" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 14:00:05.841" starttime="20210201 14:00:05.840"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:05.844" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:05.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:05.854" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:05.854" starttime="20210201 14:00:05.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:05.855" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:05.855" starttime="20210201 14:00:05.854"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:05.855" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:05.855" starttime="20210201 14:00:05.855"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:05.855" starttime="20210201 14:00:05.842"></status>
</kw>
<msg timestamp="20210201 14:00:05.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:05.856" starttime="20210201 14:00:05.842"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:05.856" starttime="20210201 14:00:05.841"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:05.856" starttime="20210201 14:00:05.841"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:05.856" starttime="20210201 14:00:05.832"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:05.856" starttime="20210201 14:00:05.831"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:05.859" level="INFO">Running command 'ozone sh bucket link 32137-source/bucket1 32137-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:08.884" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:08.884" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:08.884" starttime="20210201 14:00:05.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:08.885" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:08.885" starttime="20210201 14:00:08.885"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:08.886" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:08.886" starttime="20210201 14:00:08.885"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:08.886" starttime="20210201 14:00:05.857"></status>
</kw>
<msg timestamp="20210201 14:00:08.886" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:08.886" starttime="20210201 14:00:05.857"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:08.886" starttime="20210201 14:00:05.856"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:08.890" level="INFO">Running command 'ozone sh key put 32137-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:13.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:13.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:13.930" starttime="20210201 14:00:08.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:13.932" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:13.932" starttime="20210201 14:00:13.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:13.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:13.932" starttime="20210201 14:00:13.932"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:13.932" starttime="20210201 14:00:08.887"></status>
</kw>
<msg timestamp="20210201 14:00:13.933" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:13.933" starttime="20210201 14:00:08.887"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:13.933" starttime="20210201 14:00:08.887"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210201 14:00:13.935" level="INFO">${postfix} = 98073</msg>
<status status="PASS" endtime="20210201 14:00:13.935" starttime="20210201 14:00:13.934"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210201 14:00:13.935" level="INFO">${tmpfile} = /tmp/tempkey-98073</msg>
<status status="PASS" endtime="20210201 14:00:13.935" starttime="20210201 14:00:13.935"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get -f ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:13.940" level="INFO">Running command 'ozone sh key get -f 32137-target/link1/key3 /tmp/tempkey-98073 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:18.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:18.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:18.827" starttime="20210201 14:00:13.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.828" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:18.828" starttime="20210201 14:00:18.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:18.828" starttime="20210201 14:00:18.828"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.829" starttime="20210201 14:00:13.938"></status>
</kw>
<msg timestamp="20210201 14:00:18.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:18.829" starttime="20210201 14:00:13.938"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.829" starttime="20210201 14:00:13.937"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210201 14:00:18.831" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-98073 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:18.833" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210201 14:00:18.833" starttime="20210201 14:00:18.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:18.837" level="INFO">Running command 'rm -f /tmp/tempkey-98073 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:18.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:18.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:18.839" starttime="20210201 14:00:18.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.840" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:18.840" starttime="20210201 14:00:18.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.841" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:18.841" starttime="20210201 14:00:18.840"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.841" starttime="20210201 14:00:18.835"></status>
</kw>
<msg timestamp="20210201 14:00:18.841" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:18.841" starttime="20210201 14:00:18.835"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.841" starttime="20210201 14:00:18.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210201 14:00:18.842" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210201 14:00:18.842" starttime="20210201 14:00:18.842"></status>
</kw>
<msg timestamp="20210201 14:00:18.842" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210201 14:00:18.842" starttime="20210201 14:00:13.933"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210201 14:00:18.843" starttime="20210201 14:00:18.842"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.843" starttime="20210201 14:00:13.933"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 14:00:18.843" critical="yes" starttime="20210201 14:00:05.831"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:18.848" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:18.850" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:18.850" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210201 14:00:18.850" starttime="20210201 14:00:18.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.851" level="INFO">scm</msg>
<status status="PASS" endtime="20210201 14:00:18.851" starttime="20210201 14:00:18.851"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.852" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:18.852" starttime="20210201 14:00:18.851"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.853" starttime="20210201 14:00:18.846"></status>
</kw>
<msg timestamp="20210201 14:00:18.853" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:18.853" starttime="20210201 14:00:18.846"></status>
</kw>
<msg timestamp="20210201 14:00:18.853" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210201 14:00:18.853" starttime="20210201 14:00:18.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210201 14:00:18.853" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210201 14:00:18.854" starttime="20210201 14:00:18.853"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:18.857" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:18.867" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:18.867" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:18.867" starttime="20210201 14:00:18.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.868" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:18.868" starttime="20210201 14:00:18.867"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:18.868" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:18.868" starttime="20210201 14:00:18.868"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.868" starttime="20210201 14:00:18.855"></status>
</kw>
<msg timestamp="20210201 14:00:18.868" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:18.869" starttime="20210201 14:00:18.854"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.869" starttime="20210201 14:00:18.854"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.869" starttime="20210201 14:00:18.854"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.869" starttime="20210201 14:00:18.845"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:18.869" starttime="20210201 14:00:18.845"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:18.872" level="INFO">Running command 'ozone sh bucket delete 32137-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:21.681" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:21.681" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210201 14:00:21.681" starttime="20210201 14:00:18.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:21.682" level="INFO"></msg>
<status status="PASS" endtime="20210201 14:00:21.682" starttime="20210201 14:00:21.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:21.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:21.683" starttime="20210201 14:00:21.683"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:21.683" starttime="20210201 14:00:18.870"></status>
</kw>
<msg timestamp="20210201 14:00:21.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:21.683" starttime="20210201 14:00:18.870"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:21.684" starttime="20210201 14:00:18.869"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:21.687" level="INFO">Running command 'ozone sh bucket list 32137-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:25.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:25.025" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T...</msg>
<status status="PASS" endtime="20210201 14:00:25.025" starttime="20210201 14:00:21.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:25.026" level="INFO">{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:59:37.958Z",
  "modificationTime" : "2021-02-01T13:59:37.958Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:23.453Z",
  "modificationTime" : "2021-02-01T13:58:23.453Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:05.594Z",
  "modificationTime" : "2021-02-01T13:58:20.457Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:59:31.764Z",
  "modificationTime" : "2021-02-01T13:59:31.764Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T14:00:08.670Z",
  "modificationTime" : "2021-02-01T14:00:08.670Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T14:00:02.839Z",
  "modificationTime" : "2021-02-01T14:00:02.839Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:59:56.958Z",
  "modificationTime" : "2021-02-01T13:59:56.958Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:59:59.866Z",
  "modificationTime" : "2021-02-01T13:59:59.866Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:57:59.731Z",
  "modificationTime" : "2021-02-01T13:58:17.516Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T13:58:02.788Z",
  "modificationTime" : "2021-02-01T13:58:02.788Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "32137-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210201 14:00:25.027" starttime="20210201 14:00:25.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:25.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:25.027" starttime="20210201 14:00:25.027"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:25.027" starttime="20210201 14:00:21.685"></status>
</kw>
<msg timestamp="20210201 14:00:25.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:25.028" starttime="20210201 14:00:21.684"></status>
</kw>
<msg timestamp="20210201 14:00:25.028" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "32137-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-01T...</msg>
<status status="PASS" endtime="20210201 14:00:25.028" starttime="20210201 14:00:21.684"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210201 14:00:25.028" starttime="20210201 14:00:25.028"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210201 14:00:25.032" level="INFO">Running command 'ozone sh key list 32137-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210201 14:00:28.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210201 14:00:28.095" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210201 14:00:28.095" starttime="20210201 14:00:25.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210201 14:00:28.096" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210201 14:00:28.096" starttime="20210201 14:00:28.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210201 14:00:28.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210201 14:00:28.097" starttime="20210201 14:00:28.096"></status>
</kw>
<status status="PASS" endtime="20210201 14:00:28.097" starttime="20210201 14:00:25.029"></status>
</kw>
<msg timestamp="20210201 14:00:28.097" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210201 14:00:28.097" starttime="20210201 14:00:25.029"></status>
</kw>
<msg timestamp="20210201 14:00:28.097" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210201 14:00:28.097" starttime="20210201 14:00:25.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210201 14:00:28.098" starttime="20210201 14:00:28.097"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210201 14:00:28.098" critical="yes" starttime="20210201 14:00:18.844"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210201 14:00:28.100" starttime="20210201 13:57:39.848"></status>
</suite>
<status status="PASS" elapsedtime="195620" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
