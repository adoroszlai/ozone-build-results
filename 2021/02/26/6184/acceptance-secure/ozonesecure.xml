<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210226 02:23:55.662" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure">
<suite source="/opt/hadoop/smoketest/basic" id="s1-s1" name="Basic">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1-s1" name="Basic">
<test id="s1-s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<kw name="Kinit HTTP user" library="commonlib">
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:18.340" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:18.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:18.343" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:39:18.343" starttime="20210226 01:39:18.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.344" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:39:18.344" starttime="20210226 01:39:18.343"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:18.345" starttime="20210226 01:39:18.344"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.345" starttime="20210226 01:39:18.336"></status>
</kw>
<msg timestamp="20210226 01:39:18.345" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:18.345" starttime="20210226 01:39:18.336"></status>
</kw>
<msg timestamp="20210226 01:39:18.345" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:39:18.346" starttime="20210226 01:39:18.335"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k HTTP/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:18.349" level="INFO">Running command 'kinit -k HTTP/scm@EXAMPLE.COM -t /etc/security/keytabs/HTTP.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:18.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:18.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:39:18.356" starttime="20210226 01:39:18.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.357" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:39:18.357" starttime="20210226 01:39:18.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:18.358" starttime="20210226 01:39:18.358"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.358" starttime="20210226 01:39:18.347"></status>
</kw>
<msg timestamp="20210226 01:39:18.358" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:18.359" starttime="20210226 01:39:18.347"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.359" starttime="20210226 01:39:18.346"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.359" starttime="20210226 01:39:18.346"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.359" starttime="20210226 01:39:18.335"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.359" starttime="20210226 01:39:18.334"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:18.362" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:18.496" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:18.496" level="INFO">${output} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210226 01:39:18.497" starttime="20210226 01:39:18.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.498" level="INFO">HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Control: must-revalidate,no-cache,no-store
Content-Type: text/html;charset=iso-8859-1
Content-Length: 484

HTTP/1.1 200 OK
Date: Fri, 26 Feb 2021 01:39:18 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate YGoGCSqGSIb3EgECAgIAb1swWaADAgEFoQMCAQ+iTTBLoAMCARKiRARCfC7qyQCKIgpqdw610oqAUVl2lSrzO7y46RKmcDi0F3zYWgnR1oNGSnNFXqEFhQzYilcJ9GBdPsbVhYZUa/ziISoF
Set-Cookie: hadoop.auth="u=root&amp;p=HTTP/scm@EXAMPLE.COM&amp;t=kerberos&amp;e=1614339558486&amp;s=0b9TAKQRX079FyLvpOwmseVrYIziopTkDIstpYQ2b00="; Path=/; HttpOnly
Last-Modified: Fri, 26 Feb 2021 01:23:18 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210226 01:39:18.498" starttime="20210226 01:39:18.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.498" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:18.499" starttime="20210226 01:39:18.498"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.499" starttime="20210226 01:39:18.360"></status>
</kw>
<msg timestamp="20210226 01:39:18.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:18.499" starttime="20210226 01:39:18.360"></status>
</kw>
<msg timestamp="20210226 01:39:18.500" level="INFO">${result} = HTTP/1.1 401 Unauthorized
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
WWW-Authenticate: Negotiate
Set-Cookie: hadoop.auth=; Path=/; HttpOnly
Cache-Contr...</msg>
<status status="PASS" endtime="20210226 01:39:18.500" starttime="20210226 01:39:18.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210226 01:39:18.500" starttime="20210226 01:39:18.500"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 01:39:18.500" critical="yes" starttime="20210226 01:39:18.333"></status>
</test>
<test id="s1-s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:18.518" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:18.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:18.520" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:39:18.520" starttime="20210226 01:39:18.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.521" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:39:18.522" starttime="20210226 01:39:18.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.522" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:18.522" starttime="20210226 01:39:18.522"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.522" starttime="20210226 01:39:18.504"></status>
</kw>
<msg timestamp="20210226 01:39:18.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:18.523" starttime="20210226 01:39:18.504"></status>
</kw>
<msg timestamp="20210226 01:39:18.523" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:39:18.523" starttime="20210226 01:39:18.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:39:18.525" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:39:18.525" starttime="20210226 01:39:18.523"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:18.528" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:18.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:18.536" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:39:18.536" starttime="20210226 01:39:18.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.537" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:39:18.537" starttime="20210226 01:39:18.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:18.537" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:18.537" starttime="20210226 01:39:18.537"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.538" starttime="20210226 01:39:18.526"></status>
</kw>
<msg timestamp="20210226 01:39:18.538" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:18.538" starttime="20210226 01:39:18.526"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.538" starttime="20210226 01:39:18.525"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.538" starttime="20210226 01:39:18.525"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.538" starttime="20210226 01:39:18.503"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:18.538" starttime="20210226 01:39:18.502"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:18.557" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:18.502" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 01:44:18.502" starttime="20210226 01:39:18.552"></status>
</kw>
<status status="FAIL" endtime="20210226 01:44:18.503" starttime="20210226 01:39:18.551"></status>
</kw>
<msg timestamp="20210226 01:44:18.503" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 01:44:18.503" starttime="20210226 01:39:18.551"></status>
</kw>
<status status="FAIL" endtime="20210226 01:44:18.504" starttime="20210226 01:39:18.550"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210226 01:44:18.504" critical="yes" starttime="20210226 01:39:18.501">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="FAIL" endtime="20210226 01:44:18.505" starttime="20210226 01:39:18.301"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/getconf.robot" id="s1-s1-s2" name="Getconf">
<test id="s1-s1-s2-t1" name="Get OM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:18.518" level="INFO">Running command 'ozone getconf ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:21.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:21.185" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210226 01:44:21.185" starttime="20210226 01:44:18.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:21.186" level="INFO">om</msg>
<status status="PASS" endtime="20210226 01:44:21.186" starttime="20210226 01:44:21.186"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:21.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:21.187" starttime="20210226 01:44:21.187"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:21.188" starttime="20210226 01:44:18.516"></status>
</kw>
<msg timestamp="20210226 01:44:21.188" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:21.188" starttime="20210226 01:44:18.515"></status>
</kw>
<msg timestamp="20210226 01:44:21.188" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210226 01:44:21.188" starttime="20210226 01:44:18.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:21.189" starttime="20210226 01:44:21.188"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -ozonemanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:21.194" level="INFO">Running command 'ozone getconf -ozonemanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:23.863" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:23.863" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210226 01:44:23.864" starttime="20210226 01:44:21.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:23.867" level="INFO">om</msg>
<status status="PASS" endtime="20210226 01:44:23.868" starttime="20210226 01:44:23.864"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:23.869" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:23.870" starttime="20210226 01:44:23.868"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:23.870" starttime="20210226 01:44:21.190"></status>
</kw>
<msg timestamp="20210226 01:44:23.870" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:23.871" starttime="20210226 01:44:21.190"></status>
</kw>
<msg timestamp="20210226 01:44:23.871" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210226 01:44:23.871" starttime="20210226 01:44:21.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:23.873" starttime="20210226 01:44:23.872"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 01:44:23.873" critical="yes" starttime="20210226 01:44:18.513"></status>
</test>
<test id="s1-s1-s2-t2" name="Get SCM">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:23.882" level="INFO">Running command 'ozone getconf storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:26.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:26.563" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:44:26.563" starttime="20210226 01:44:23.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:26.565" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:44:26.566" starttime="20210226 01:44:26.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:26.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:26.567" starttime="20210226 01:44:26.566"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:26.567" starttime="20210226 01:44:23.878"></status>
</kw>
<msg timestamp="20210226 01:44:26.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:26.568" starttime="20210226 01:44:23.877"></status>
</kw>
<msg timestamp="20210226 01:44:26.568" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210226 01:44:26.569" starttime="20210226 01:44:23.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:26.570" starttime="20210226 01:44:26.569"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -storagecontainermanagers</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:26.577" level="INFO">Running command 'ozone getconf -storagecontainermanagers 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:29.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:29.452" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:44:29.452" starttime="20210226 01:44:26.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:29.453" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:44:29.453" starttime="20210226 01:44:29.452"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:29.454" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:29.454" starttime="20210226 01:44:29.453"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:29.454" starttime="20210226 01:44:26.572"></status>
</kw>
<msg timestamp="20210226 01:44:29.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:29.454" starttime="20210226 01:44:26.571"></status>
</kw>
<msg timestamp="20210226 01:44:29.455" level="INFO">${result} = scm</msg>
<status status="PASS" endtime="20210226 01:44:29.455" starttime="20210226 01:44:26.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>scm</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:29.455" starttime="20210226 01:44:29.455"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 01:44:29.456" critical="yes" starttime="20210226 01:44:23.875"></status>
</test>
<test id="s1-s1-s2-t3" name="Get existing config key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:29.463" level="INFO">Running command 'ozone getconf confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:32.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:32.173" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210226 01:44:32.173" starttime="20210226 01:44:29.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:32.175" level="INFO">om</msg>
<status status="PASS" endtime="20210226 01:44:32.175" starttime="20210226 01:44:32.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:32.176" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:32.176" starttime="20210226 01:44:32.175"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:32.177" starttime="20210226 01:44:29.460"></status>
</kw>
<msg timestamp="20210226 01:44:32.177" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:32.177" starttime="20210226 01:44:29.460"></status>
</kw>
<msg timestamp="20210226 01:44:32.177" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210226 01:44:32.177" starttime="20210226 01:44:29.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:32.178" starttime="20210226 01:44:32.177"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:32.178" starttime="20210226 01:44:32.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone getconf -confKey ozone.om.address</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:32.183" level="INFO">Running command 'ozone getconf -confKey ozone.om.address 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:34.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:34.675" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210226 01:44:34.675" starttime="20210226 01:44:32.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:34.677" level="INFO">om</msg>
<status status="PASS" endtime="20210226 01:44:34.678" starttime="20210226 01:44:34.676"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:34.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:34.679" starttime="20210226 01:44:34.678"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:34.679" starttime="20210226 01:44:32.179"></status>
</kw>
<msg timestamp="20210226 01:44:34.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:34.679" starttime="20210226 01:44:32.179"></status>
</kw>
<msg timestamp="20210226 01:44:34.680" level="INFO">${result} = om</msg>
<status status="PASS" endtime="20210226 01:44:34.680" starttime="20210226 01:44:32.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>om</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:34.680" starttime="20210226 01:44:34.680"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>is missing</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:34.681" starttime="20210226 01:44:34.680"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 01:44:34.681" critical="yes" starttime="20210226 01:44:29.458"></status>
</test>
<test id="s1-s1-s2-t4" name="Get undefined config key">
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:34.687" level="INFO">Running command 'ozone getconf confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:36.951" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:44:36.951" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210226 01:44:36.951" starttime="20210226 01:44:34.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:36.952" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210226 01:44:36.953" starttime="20210226 01:44:36.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:36.953" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:36.953" starttime="20210226 01:44:36.953"></status>
</kw>
<msg timestamp="20210226 01:44:36.954" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210226 01:44:36.954" starttime="20210226 01:44:34.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:36.954" starttime="20210226 01:44:36.954"></status>
</kw>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>ozone getconf -confKey no-such-config-key</arg>
<arg>255</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:36.957" level="INFO">Running command 'ozone getconf -confKey no-such-config-key 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:39.582" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:44:39.582" level="INFO">${output} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210226 01:44:39.582" starttime="20210226 01:44:36.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:39.583" level="INFO">Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210226 01:44:39.584" starttime="20210226 01:44:39.583"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:39.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:39.585" starttime="20210226 01:44:39.584"></status>
</kw>
<msg timestamp="20210226 01:44:39.586" level="INFO">${result} = Configuration no-such-config-key is missing.</msg>
<status status="PASS" endtime="20210226 01:44:39.586" starttime="20210226 01:44:36.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Configuration no-such-config-key is missing</arg>
</arguments>
<status status="PASS" endtime="20210226 01:44:39.587" starttime="20210226 01:44:39.586"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 01:44:39.588" critical="yes" starttime="20210226 01:44:34.683"></status>
</test>
<doc>Test 'ozone getconf' command</doc>
<status status="PASS" endtime="20210226 01:44:39.591" starttime="20210226 01:44:18.508"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210226 01:44:39.614" level="INFO">${random} = 36263</msg>
<status status="PASS" endtime="20210226 01:44:39.614" starttime="20210226 01:44:39.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210226 01:44:39.615" level="INFO">${source} = 36263-source</msg>
<status status="PASS" endtime="20210226 01:44:39.615" starttime="20210226 01:44:39.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210226 01:44:39.617" level="INFO">${target} = 36263-target</msg>
<status status="PASS" endtime="20210226 01:44:39.617" starttime="20210226 01:44:39.616"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:39.621" level="INFO">Running command 'ozone sh volume create 36263-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:46.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:46.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:44:46.114" starttime="20210226 01:44:39.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:46.115" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:44:46.115" starttime="20210226 01:44:46.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:46.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:46.116" starttime="20210226 01:44:46.115"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:46.117" starttime="20210226 01:44:39.618"></status>
</kw>
<msg timestamp="20210226 01:44:46.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:46.117" starttime="20210226 01:44:39.618"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:46.117" starttime="20210226 01:44:39.617"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:46.121" level="INFO">Running command 'ozone sh volume create 36263-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:53.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:53.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:44:53.327" starttime="20210226 01:44:46.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:53.328" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:44:53.328" starttime="20210226 01:44:53.327"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:53.328" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:53.329" starttime="20210226 01:44:53.328"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:53.329" starttime="20210226 01:44:46.118"></status>
</kw>
<msg timestamp="20210226 01:44:53.329" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:53.329" starttime="20210226 01:44:46.118"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:53.329" starttime="20210226 01:44:46.117"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:53.335" level="INFO">Running command 'ozone sh bucket create 36263-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:44:57.578" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:44:57.578" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:44:57.578" starttime="20210226 01:44:53.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:44:57.583" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:44:57.583" starttime="20210226 01:44:57.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:44:57.584" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:44:57.584" starttime="20210226 01:44:57.583"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:57.584" starttime="20210226 01:44:53.332"></status>
</kw>
<msg timestamp="20210226 01:44:57.584" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:44:57.584" starttime="20210226 01:44:53.332"></status>
</kw>
<status status="PASS" endtime="20210226 01:44:57.585" starttime="20210226 01:44:53.330"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:44:57.588" level="INFO">Running command 'ozone sh key put 36263-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:07.515" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:07.515" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:48:07.515" starttime="20210226 01:44:57.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:07.517" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:48:07.517" starttime="20210226 01:48:07.516"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:07.518" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:07.519" starttime="20210226 01:48:07.518"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:07.519" starttime="20210226 01:44:57.586"></status>
</kw>
<msg timestamp="20210226 01:48:07.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:07.520" starttime="20210226 01:44:57.586"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:07.520" starttime="20210226 01:44:57.585"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:07.526" level="INFO">Running command 'ozone sh bucket create 36263-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:14.240" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:14.240" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:48:14.240" starttime="20210226 01:48:07.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:14.241" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:48:14.241" starttime="20210226 01:48:14.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:14.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:14.242" starttime="20210226 01:48:14.241"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:14.242" starttime="20210226 01:48:07.522"></status>
</kw>
<msg timestamp="20210226 01:48:14.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:14.242" starttime="20210226 01:48:07.521"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:14.242" starttime="20210226 01:48:07.520"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:14.247" level="INFO">Running command 'ozone sh bucket link 36263-source/readable-bucket 36263-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:20.117" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:20.117" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:48:20.117" starttime="20210226 01:48:14.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:20.118" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:48:20.119" starttime="20210226 01:48:20.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:20.119" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:20.119" starttime="20210226 01:48:20.119"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:20.120" starttime="20210226 01:48:14.244"></status>
</kw>
<msg timestamp="20210226 01:48:20.120" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:20.120" starttime="20210226 01:48:14.243"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:20.120" starttime="20210226 01:48:14.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:20.124" level="INFO">Running command 'ozone sh bucket link 36263-source/readable-bucket 36263-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:25.875" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:25.875" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:48:25.876" starttime="20210226 01:48:20.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:25.876" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:48:25.877" starttime="20210226 01:48:25.876"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:25.878" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:25.878" starttime="20210226 01:48:25.877"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:25.878" starttime="20210226 01:48:20.121"></status>
</kw>
<msg timestamp="20210226 01:48:25.878" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:25.878" starttime="20210226 01:48:20.121"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:25.879" starttime="20210226 01:48:20.120"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:25.885" level="INFO">Running command 'ozone sh bucket link 36263-source/unreadable-bucket 36263-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:32.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:32.400" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:48:32.400" starttime="20210226 01:48:25.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:32.401" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:48:32.401" starttime="20210226 01:48:32.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:32.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:32.402" starttime="20210226 01:48:32.401"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:32.402" starttime="20210226 01:48:25.880"></status>
</kw>
<msg timestamp="20210226 01:48:32.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:32.402" starttime="20210226 01:48:25.879"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:32.403" starttime="20210226 01:48:25.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:32.407" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36263-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:38.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:38.393" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:38.393" starttime="20210226 01:48:32.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:38.394" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:38.394" starttime="20210226 01:48:38.393"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:38.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:38.395" starttime="20210226 01:48:38.394"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:38.395" starttime="20210226 01:48:32.404"></status>
</kw>
<msg timestamp="20210226 01:48:38.395" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:38.395" starttime="20210226 01:48:32.403"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:38.395" starttime="20210226 01:48:32.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:38.401" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 36263-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:44.838" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:44.839" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:44.839" starttime="20210226 01:48:38.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:44.841" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:44.841" starttime="20210226 01:48:44.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:44.842" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:44.843" starttime="20210226 01:48:44.841"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:44.843" starttime="20210226 01:48:38.397"></status>
</kw>
<msg timestamp="20210226 01:48:44.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:44.844" starttime="20210226 01:48:38.396"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:44.844" starttime="20210226 01:48:38.396"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:44.850" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 36263-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:51.419" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:51.419" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:51.419" starttime="20210226 01:48:44.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:51.420" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:51.421" starttime="20210226 01:48:51.420"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:51.421" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:51.421" starttime="20210226 01:48:51.421"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:51.422" starttime="20210226 01:48:44.846"></status>
</kw>
<msg timestamp="20210226 01:48:51.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:51.422" starttime="20210226 01:48:44.845"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:51.422" starttime="20210226 01:48:44.844"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:51.426" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36263-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:48:55.378" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:48:55.378" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:55.378" starttime="20210226 01:48:51.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:48:55.379" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:48:55.379" starttime="20210226 01:48:55.378"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:48:55.380" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:48:55.380" starttime="20210226 01:48:55.379"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:55.380" starttime="20210226 01:48:51.423"></status>
</kw>
<msg timestamp="20210226 01:48:55.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:48:55.380" starttime="20210226 01:48:51.423"></status>
</kw>
<status status="PASS" endtime="20210226 01:48:55.381" starttime="20210226 01:48:51.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:48:55.386" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 36263-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:02.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:02.096" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:49:02.096" starttime="20210226 01:48:55.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:02.097" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:49:02.097" starttime="20210226 01:49:02.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:02.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:02.098" starttime="20210226 01:49:02.098"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.098" starttime="20210226 01:48:55.382"></status>
</kw>
<msg timestamp="20210226 01:49:02.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:02.099" starttime="20210226 01:48:55.381"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.099" starttime="20210226 01:48:55.381"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.099" starttime="20210226 01:44:53.330"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.099" starttime="20210226 01:44:53.329"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.099" starttime="20210226 01:44:39.613"></status>
</kw>
<test id="s1-s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:02.110" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:02.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:02.114" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:49:02.114" starttime="20210226 01:49:02.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:02.115" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:49:02.115" starttime="20210226 01:49:02.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:02.116" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:02.117" starttime="20210226 01:49:02.116"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.117" starttime="20210226 01:49:02.106"></status>
</kw>
<msg timestamp="20210226 01:49:02.117" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:02.117" starttime="20210226 01:49:02.106"></status>
</kw>
<msg timestamp="20210226 01:49:02.118" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:49:02.118" starttime="20210226 01:49:02.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:49:02.119" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:49:02.120" starttime="20210226 01:49:02.118"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:02.125" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:02.184" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:02.184" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:49:02.184" starttime="20210226 01:49:02.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:02.185" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:49:02.185" starttime="20210226 01:49:02.184"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:02.186" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:02.186" starttime="20210226 01:49:02.185"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.186" starttime="20210226 01:49:02.122"></status>
</kw>
<msg timestamp="20210226 01:49:02.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:02.187" starttime="20210226 01:49:02.122"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.187" starttime="20210226 01:49:02.121"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.187" starttime="20210226 01:49:02.120"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.187" starttime="20210226 01:49:02.103"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:02.187" starttime="20210226 01:49:02.102"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:02.191" level="INFO">Running command 'ozone sh bucket link 36263-source/no-such-bucket 36263-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:06.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:06.643" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:49:06.643" starttime="20210226 01:49:02.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:06.644" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:49:06.644" starttime="20210226 01:49:06.643"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:06.645" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:06.645" starttime="20210226 01:49:06.644"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:06.645" starttime="20210226 01:49:02.188"></status>
</kw>
<msg timestamp="20210226 01:49:06.645" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:06.646" starttime="20210226 01:49:02.188"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:06.646" starttime="20210226 01:49:02.188"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:06.649" level="INFO">Running command 'ozone sh key list 36263-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:13.502" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:49:13.502" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210226 01:49:13.502" starttime="20210226 01:49:06.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:13.503" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210226 01:49:13.503" starttime="20210226 01:49:13.502"></status>
</kw>
<msg timestamp="20210226 01:49:13.503" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210226 01:49:13.503" starttime="20210226 01:49:06.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210226 01:49:13.504" starttime="20210226 01:49:13.504"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:49:13.504" critical="yes" starttime="20210226 01:49:02.100"></status>
</test>
<test id="s1-s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:13.514" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:13.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:13.518" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:49:13.518" starttime="20210226 01:49:13.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:13.519" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:49:13.519" starttime="20210226 01:49:13.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:13.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:13.521" starttime="20210226 01:49:13.519"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:13.521" starttime="20210226 01:49:13.510"></status>
</kw>
<msg timestamp="20210226 01:49:13.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:13.521" starttime="20210226 01:49:13.510"></status>
</kw>
<msg timestamp="20210226 01:49:13.522" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:49:13.522" starttime="20210226 01:49:13.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:49:13.523" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:49:13.523" starttime="20210226 01:49:13.522"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:13.528" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:13.538" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:13.538" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:49:13.538" starttime="20210226 01:49:13.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:13.540" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:49:13.540" starttime="20210226 01:49:13.539"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:13.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:13.541" starttime="20210226 01:49:13.540"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:13.541" starttime="20210226 01:49:13.525"></status>
</kw>
<msg timestamp="20210226 01:49:13.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:13.542" starttime="20210226 01:49:13.525"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:13.542" starttime="20210226 01:49:13.524"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:13.542" starttime="20210226 01:49:13.523"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:13.542" starttime="20210226 01:49:13.508"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:13.542" starttime="20210226 01:49:13.507"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:13.548" level="INFO">Running command 'ozone sh bucket link 36263-source/bucket1 36263-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:20.519" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:20.519" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:49:20.519" starttime="20210226 01:49:13.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:20.520" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:49:20.520" starttime="20210226 01:49:20.519"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:20.521" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:20.521" starttime="20210226 01:49:20.520"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:20.521" starttime="20210226 01:49:13.544"></status>
</kw>
<msg timestamp="20210226 01:49:20.521" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:20.521" starttime="20210226 01:49:13.544"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:20.522" starttime="20210226 01:49:13.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:20.527" level="INFO">Running command 'ozone sh bucket create 36263-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:49:28.051" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:49:28.051" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:49:28.051" starttime="20210226 01:49:20.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:49:28.053" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:49:28.053" starttime="20210226 01:49:28.052"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:49:28.054" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:49:28.054" starttime="20210226 01:49:28.053"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:28.054" starttime="20210226 01:49:20.523"></status>
</kw>
<msg timestamp="20210226 01:49:28.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:49:28.054" starttime="20210226 01:49:20.523"></status>
</kw>
<status status="PASS" endtime="20210226 01:49:28.055" starttime="20210226 01:49:20.522"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:49:28.061" level="INFO">Running command 'ozone sh key put 36263-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:51:13.506" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 01:51:13.506" starttime="20210226 01:49:28.058"></status>
</kw>
<status status="FAIL" endtime="20210226 01:51:13.507" starttime="20210226 01:49:28.057"></status>
</kw>
<msg timestamp="20210226 01:51:13.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 01:51:13.507" starttime="20210226 01:49:28.056"></status>
</kw>
<status status="FAIL" endtime="20210226 01:51:13.507" starttime="20210226 01:49:28.055"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210226 01:51:13.508" critical="yes" starttime="20210226 01:49:13.505">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:51:13.515" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:51:13.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:51:13.520" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:51:13.520" starttime="20210226 01:51:13.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:51:13.523" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:51:13.523" starttime="20210226 01:51:13.520"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:51:13.527" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:51:13.528" starttime="20210226 01:51:13.524"></status>
</kw>
<status status="PASS" endtime="20210226 01:51:13.529" starttime="20210226 01:51:13.513"></status>
</kw>
<msg timestamp="20210226 01:51:13.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:51:13.529" starttime="20210226 01:51:13.512"></status>
</kw>
<msg timestamp="20210226 01:51:13.529" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:51:13.529" starttime="20210226 01:51:13.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:51:13.530" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:51:13.530" starttime="20210226 01:51:13.530"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:51:13.537" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:51:13.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:51:13.555" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:51:13.555" starttime="20210226 01:51:13.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:51:13.557" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:51:13.557" starttime="20210226 01:51:13.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:51:13.558" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:51:13.558" starttime="20210226 01:51:13.557"></status>
</kw>
<status status="PASS" endtime="20210226 01:51:13.559" starttime="20210226 01:51:13.533"></status>
</kw>
<msg timestamp="20210226 01:51:13.559" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:51:13.559" starttime="20210226 01:51:13.533"></status>
</kw>
<status status="PASS" endtime="20210226 01:51:13.559" starttime="20210226 01:51:13.531"></status>
</kw>
<status status="PASS" endtime="20210226 01:51:13.559" starttime="20210226 01:51:13.530"></status>
</kw>
<status status="PASS" endtime="20210226 01:51:13.559" starttime="20210226 01:51:13.511"></status>
</kw>
<status status="PASS" endtime="20210226 01:51:13.560" starttime="20210226 01:51:13.510"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:51:13.564" level="INFO">Running command 'ozone sh key put 36263-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:13.511" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 01:53:13.511" starttime="20210226 01:51:13.562"></status>
</kw>
<status status="FAIL" endtime="20210226 01:53:13.512" starttime="20210226 01:51:13.561"></status>
</kw>
<msg timestamp="20210226 01:53:13.512" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 01:53:13.512" starttime="20210226 01:51:13.561"></status>
</kw>
<status status="FAIL" endtime="20210226 01:53:13.512" starttime="20210226 01:51:13.560"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210226 01:53:13.512" critical="yes" starttime="20210226 01:51:13.509">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:13.520" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:13.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:13.524" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:53:13.524" starttime="20210226 01:53:13.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:13.525" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:53:13.525" starttime="20210226 01:53:13.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:13.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:13.527" starttime="20210226 01:53:13.526"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:13.527" starttime="20210226 01:53:13.517"></status>
</kw>
<msg timestamp="20210226 01:53:13.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:13.529" starttime="20210226 01:53:13.517"></status>
</kw>
<msg timestamp="20210226 01:53:13.529" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:53:13.529" starttime="20210226 01:53:13.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:53:13.531" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:53:13.531" starttime="20210226 01:53:13.530"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:13.537" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:13.546" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:13.546" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:53:13.546" starttime="20210226 01:53:13.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:13.547" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:53:13.547" starttime="20210226 01:53:13.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:13.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:13.548" starttime="20210226 01:53:13.547"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:13.548" starttime="20210226 01:53:13.534"></status>
</kw>
<msg timestamp="20210226 01:53:13.548" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:13.549" starttime="20210226 01:53:13.533"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:13.549" starttime="20210226 01:53:13.532"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:13.549" starttime="20210226 01:53:13.532"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:13.549" starttime="20210226 01:53:13.516"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:13.549" starttime="20210226 01:53:13.515"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:13.555" level="INFO">Running command 'ozone sh key list 36263-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:21.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:21.248" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210226 01:53:21.248" starttime="20210226 01:53:13.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:21.251" level="INFO">key1</msg>
<status status="PASS" endtime="20210226 01:53:21.252" starttime="20210226 01:53:21.248"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:21.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:21.253" starttime="20210226 01:53:21.252"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:21.253" starttime="20210226 01:53:13.551"></status>
</kw>
<msg timestamp="20210226 01:53:21.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:21.254" starttime="20210226 01:53:13.550"></status>
</kw>
<msg timestamp="20210226 01:53:21.254" level="INFO">${target_list} = key1</msg>
<status status="PASS" endtime="20210226 01:53:21.254" starttime="20210226 01:53:13.549"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:21.264" level="INFO">Running command 'ozone sh key list 36263-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:29.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:29.015" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210226 01:53:29.015" starttime="20210226 01:53:21.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:29.017" level="INFO">key1</msg>
<status status="PASS" endtime="20210226 01:53:29.017" starttime="20210226 01:53:29.016"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:29.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:29.017" starttime="20210226 01:53:29.017"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.018" starttime="20210226 01:53:21.255"></status>
</kw>
<msg timestamp="20210226 01:53:29.018" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:29.018" starttime="20210226 01:53:21.255"></status>
</kw>
<msg timestamp="20210226 01:53:29.018" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210226 01:53:29.018" starttime="20210226 01:53:21.254"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210226 01:53:29.019" starttime="20210226 01:53:29.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210226 01:53:29.020" starttime="20210226 01:53:29.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<msg timestamp="20210226 01:53:29.021" level="FAIL">'key1' does not contain 'key2'</msg>
<status status="FAIL" endtime="20210226 01:53:29.021" starttime="20210226 01:53:29.020"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210226 01:53:29.022" critical="yes" starttime="20210226 01:53:13.514">'key1' does not contain 'key2'</status>
</test>
<test id="s1-s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:29.031" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:29.035" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:29.035" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:53:29.035" starttime="20210226 01:53:29.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:29.036" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:53:29.037" starttime="20210226 01:53:29.036"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:29.037" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:29.037" starttime="20210226 01:53:29.037"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.038" starttime="20210226 01:53:29.027"></status>
</kw>
<msg timestamp="20210226 01:53:29.038" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:29.038" starttime="20210226 01:53:29.027"></status>
</kw>
<msg timestamp="20210226 01:53:29.038" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:53:29.038" starttime="20210226 01:53:29.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:53:29.039" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:53:29.039" starttime="20210226 01:53:29.038"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:29.046" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:29.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:29.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:53:29.056" starttime="20210226 01:53:29.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:29.057" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:53:29.057" starttime="20210226 01:53:29.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:29.058" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:29.058" starttime="20210226 01:53:29.057"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.058" starttime="20210226 01:53:29.042"></status>
</kw>
<msg timestamp="20210226 01:53:29.058" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:29.059" starttime="20210226 01:53:29.041"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.059" starttime="20210226 01:53:29.040"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.059" starttime="20210226 01:53:29.039"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.059" starttime="20210226 01:53:29.025"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:29.059" starttime="20210226 01:53:29.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:29.066" level="INFO">Running command 'ozone sh key delete 36263-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:35.658" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:53:35.658" level="INFO">${output} = KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210226 01:53:35.658" starttime="20210226 01:53:29.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:35.659" level="INFO">KEY_NOT_FOUND Key not found</msg>
<status status="PASS" endtime="20210226 01:53:35.660" starttime="20210226 01:53:35.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:35.661" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210226 01:53:35.661" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210226 01:53:35.661" starttime="20210226 01:53:35.660"></status>
</kw>
<status status="FAIL" endtime="20210226 01:53:35.661" starttime="20210226 01:53:29.061"></status>
</kw>
<msg timestamp="20210226 01:53:35.662" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 01:53:35.662" starttime="20210226 01:53:29.060"></status>
</kw>
<status status="FAIL" endtime="20210226 01:53:35.664" starttime="20210226 01:53:29.059"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210226 01:53:35.664" critical="yes" starttime="20210226 01:53:29.023">255 != 0</status>
</test>
<test id="s1-s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:35.673" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:35.677" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:35.677" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:53:35.677" starttime="20210226 01:53:35.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:35.678" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:53:35.678" starttime="20210226 01:53:35.677"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:35.679" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:35.679" starttime="20210226 01:53:35.679"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:35.680" starttime="20210226 01:53:35.669"></status>
</kw>
<msg timestamp="20210226 01:53:35.680" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:35.680" starttime="20210226 01:53:35.669"></status>
</kw>
<msg timestamp="20210226 01:53:35.680" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:53:35.680" starttime="20210226 01:53:35.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:53:35.681" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:53:35.681" starttime="20210226 01:53:35.681"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:35.687" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:35.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:35.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:53:35.697" starttime="20210226 01:53:35.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:35.698" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:53:35.698" starttime="20210226 01:53:35.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:35.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:35.699" starttime="20210226 01:53:35.698"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:35.700" starttime="20210226 01:53:35.684"></status>
</kw>
<msg timestamp="20210226 01:53:35.700" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:35.700" starttime="20210226 01:53:35.683"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:35.700" starttime="20210226 01:53:35.682"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:35.701" starttime="20210226 01:53:35.682"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:35.701" starttime="20210226 01:53:35.668"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:35.701" starttime="20210226 01:53:35.667"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:35.707" level="INFO">Running command 'ozone sh bucket list 36263-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:42.637" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:42.637" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210226 01:53:42.637" starttime="20210226 01:53:35.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:42.639" level="INFO">{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:49:06.393Z",
  "modificationTime" : "2021-02-26T01:49:06.393Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:32.057Z",
  "modificationTime" : "2021-02-26T01:49:01.968Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:49:20.451Z",
  "modificationTime" : "2021-02-26T01:49:20.451Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:20.027Z",
  "modificationTime" : "2021-02-26T01:48:55.255Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:25.787Z",
  "modificationTime" : "2021-02-26T01:48:25.787Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210226 01:53:42.640" starttime="20210226 01:53:42.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:42.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:42.641" starttime="20210226 01:53:42.640"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.642" starttime="20210226 01:53:35.703"></status>
</kw>
<msg timestamp="20210226 01:53:42.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:42.642" starttime="20210226 01:53:35.702"></status>
</kw>
<msg timestamp="20210226 01:53:42.643" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210226 01:53:42.643" starttime="20210226 01:53:35.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210226 01:53:42.644" starttime="20210226 01:53:42.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210226 01:53:42.646" starttime="20210226 01:53:42.645"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:53:42.646" critical="yes" starttime="20210226 01:53:35.665"></status>
</test>
<test id="s1-s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:42.658" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:42.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:42.661" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:53:42.661" starttime="20210226 01:53:42.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:42.662" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:53:42.662" starttime="20210226 01:53:42.661"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:42.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:42.663" starttime="20210226 01:53:42.662"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.663" starttime="20210226 01:53:42.654"></status>
</kw>
<msg timestamp="20210226 01:53:42.663" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:42.663" starttime="20210226 01:53:42.654"></status>
</kw>
<msg timestamp="20210226 01:53:42.664" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:53:42.664" starttime="20210226 01:53:42.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:53:42.665" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:53:42.665" starttime="20210226 01:53:42.664"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:42.671" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:42.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:42.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:53:42.679" starttime="20210226 01:53:42.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:42.680" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:53:42.681" starttime="20210226 01:53:42.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:42.682" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:42.682" starttime="20210226 01:53:42.681"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.682" starttime="20210226 01:53:42.668"></status>
</kw>
<msg timestamp="20210226 01:53:42.683" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:42.683" starttime="20210226 01:53:42.667"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.683" starttime="20210226 01:53:42.666"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.683" starttime="20210226 01:53:42.666"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.684" starttime="20210226 01:53:42.652"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:42.684" starttime="20210226 01:53:42.651"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:42.691" level="INFO">Running command 'ozone sh bucket info 36263-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:49.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:49.223" level="INFO">${output} = 36263-source bucket1</msg>
<status status="PASS" endtime="20210226 01:53:49.224" starttime="20210226 01:53:42.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:49.225" level="INFO">36263-source bucket1</msg>
<status status="PASS" endtime="20210226 01:53:49.225" starttime="20210226 01:53:49.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:49.226" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:49.226" starttime="20210226 01:53:49.225"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.227" starttime="20210226 01:53:42.686"></status>
</kw>
<msg timestamp="20210226 01:53:49.227" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:49.227" starttime="20210226 01:53:42.685"></status>
</kw>
<msg timestamp="20210226 01:53:49.227" level="INFO">${result} = 36263-source bucket1</msg>
<status status="PASS" endtime="20210226 01:53:49.227" starttime="20210226 01:53:42.684"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210226 01:53:49.228" starttime="20210226 01:53:49.227"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:53:49.228" critical="yes" starttime="20210226 01:53:42.649"></status>
</test>
<test id="s1-s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:49.235" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:49.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:49.239" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:53:49.239" starttime="20210226 01:53:49.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:49.241" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:53:49.241" starttime="20210226 01:53:49.239"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:49.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:49.242" starttime="20210226 01:53:49.242"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.242" starttime="20210226 01:53:49.232"></status>
</kw>
<msg timestamp="20210226 01:53:49.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:49.243" starttime="20210226 01:53:49.232"></status>
</kw>
<msg timestamp="20210226 01:53:49.243" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:53:49.243" starttime="20210226 01:53:49.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:53:49.244" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:53:49.244" starttime="20210226 01:53:49.243"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:49.249" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:49.258" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:49.258" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:53:49.258" starttime="20210226 01:53:49.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:49.259" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:53:49.259" starttime="20210226 01:53:49.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:49.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:49.260" starttime="20210226 01:53:49.259"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.260" starttime="20210226 01:53:49.246"></status>
</kw>
<msg timestamp="20210226 01:53:49.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:49.260" starttime="20210226 01:53:49.245"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.261" starttime="20210226 01:53:49.245"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.261" starttime="20210226 01:53:49.244"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.261" starttime="20210226 01:53:49.231"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:49.261" starttime="20210226 01:53:49.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:49.266" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 36263-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:53:55.093" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:53:55.093" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:53:55.093" starttime="20210226 01:53:49.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:53:55.095" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:53:55.095" starttime="20210226 01:53:55.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:53:55.096" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:53:55.097" starttime="20210226 01:53:55.096"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:55.098" starttime="20210226 01:53:49.262"></status>
</kw>
<msg timestamp="20210226 01:53:55.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:53:55.098" starttime="20210226 01:53:49.262"></status>
</kw>
<status status="PASS" endtime="20210226 01:53:55.099" starttime="20210226 01:53:49.261"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:53:55.108" level="INFO">Running command 'ozone sh bucket getacl 36263-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:02.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:02.468" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210226 01:54:02.468" starttime="20210226 01:53:55.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:02.470" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210226 01:54:02.470" starttime="20210226 01:54:02.469"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:02.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:02.471" starttime="20210226 01:54:02.470"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:02.471" starttime="20210226 01:53:55.103"></status>
</kw>
<msg timestamp="20210226 01:54:02.471" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:02.472" starttime="20210226 01:53:55.102"></status>
</kw>
<msg timestamp="20210226 01:54:02.472" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210226 01:54:02.472" starttime="20210226 01:53:55.101"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210226 01:54:02.474" starttime="20210226 01:54:02.473"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:02.474" starttime="20210226 01:53:55.099"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:02.483" level="INFO">Running command 'ozone sh bucket getacl 36263-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:09.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:09.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:09.795" starttime="20210226 01:54:02.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:09.797" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:09.797" starttime="20210226 01:54:09.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:09.799" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:09.799" starttime="20210226 01:54:09.798"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:09.800" starttime="20210226 01:54:02.478"></status>
</kw>
<msg timestamp="20210226 01:54:09.800" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:09.800" starttime="20210226 01:54:02.478"></status>
</kw>
<msg timestamp="20210226 01:54:09.801" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210226 01:54:09.801" starttime="20210226 01:54:02.476"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210226 01:54:09.804" starttime="20210226 01:54:09.801"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:09.804" starttime="20210226 01:54:02.474"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:09.809" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 36263-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:16.993" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:16.993" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:54:16.994" starttime="20210226 01:54:09.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:16.997" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 01:54:16.997" starttime="20210226 01:54:16.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:16.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:16.999" starttime="20210226 01:54:16.998"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:17.000" starttime="20210226 01:54:09.805"></status>
</kw>
<msg timestamp="20210226 01:54:17.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:17.001" starttime="20210226 01:54:09.805"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:17.002" starttime="20210226 01:54:09.804"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:17.015" level="INFO">Running command 'ozone sh bucket getacl 36263-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:24.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:24.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:24.840" starttime="20210226 01:54:17.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:24.841" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:24.842" starttime="20210226 01:54:24.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:24.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:24.843" starttime="20210226 01:54:24.842"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:24.844" starttime="20210226 01:54:17.009"></status>
</kw>
<msg timestamp="20210226 01:54:24.844" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:24.844" starttime="20210226 01:54:17.008"></status>
</kw>
<msg timestamp="20210226 01:54:24.844" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210226 01:54:24.845" starttime="20210226 01:54:17.005"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210226 01:54:24.846" starttime="20210226 01:54:24.845"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:24.846" starttime="20210226 01:54:17.003"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:24.854" level="INFO">Running command 'ozone sh bucket getacl 36263-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:31.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:31.638" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210226 01:54:31.638" starttime="20210226 01:54:24.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:31.640" level="INFO">READ</msg>
<status status="PASS" endtime="20210226 01:54:31.640" starttime="20210226 01:54:31.639"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:31.641" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:31.641" starttime="20210226 01:54:31.641"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.642" starttime="20210226 01:54:24.849"></status>
</kw>
<msg timestamp="20210226 01:54:31.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:31.642" starttime="20210226 01:54:24.849"></status>
</kw>
<msg timestamp="20210226 01:54:31.643" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210226 01:54:31.643" starttime="20210226 01:54:24.847"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210226 01:54:31.644" starttime="20210226 01:54:31.643"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.644" starttime="20210226 01:54:24.846"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:54:31.645" critical="yes" starttime="20210226 01:53:49.229"></status>
</test>
<test id="s1-s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:31.668" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:31.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:31.671" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:54:31.671" starttime="20210226 01:54:31.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:31.672" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:54:31.672" starttime="20210226 01:54:31.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:31.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:31.677" starttime="20210226 01:54:31.672"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.677" starttime="20210226 01:54:31.655"></status>
</kw>
<msg timestamp="20210226 01:54:31.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:31.677" starttime="20210226 01:54:31.654"></status>
</kw>
<msg timestamp="20210226 01:54:31.677" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:54:31.677" starttime="20210226 01:54:31.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:54:31.681" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:54:31.681" starttime="20210226 01:54:31.678"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:31.689" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:31.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:31.754" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:31.755" starttime="20210226 01:54:31.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:31.756" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:31.756" starttime="20210226 01:54:31.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:31.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:31.757" starttime="20210226 01:54:31.756"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.757" starttime="20210226 01:54:31.683"></status>
</kw>
<msg timestamp="20210226 01:54:31.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:31.757" starttime="20210226 01:54:31.683"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.758" starttime="20210226 01:54:31.682"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.758" starttime="20210226 01:54:31.681"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.758" starttime="20210226 01:54:31.651"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:31.758" starttime="20210226 01:54:31.650"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:31.764" level="INFO">Running command 'ozone sh bucket link 36263-source/bucket2 36263-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:37.672" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:37.672" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:37.673" starttime="20210226 01:54:31.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:37.675" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:37.675" starttime="20210226 01:54:37.674"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:37.677" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:37.678" starttime="20210226 01:54:37.676"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:37.679" starttime="20210226 01:54:31.759"></status>
</kw>
<msg timestamp="20210226 01:54:37.679" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:37.679" starttime="20210226 01:54:31.759"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:37.680" starttime="20210226 01:54:31.758"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:37.685" level="INFO">Running command 'ozone sh bucket create 36263-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:44.439" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:54:44.439" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210226 01:54:44.439" starttime="20210226 01:54:37.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:44.442" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210226 01:54:44.442" starttime="20210226 01:54:44.440"></status>
</kw>
<msg timestamp="20210226 01:54:44.442" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210226 01:54:44.443" starttime="20210226 01:54:37.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210226 01:54:44.445" starttime="20210226 01:54:44.443"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:44.449" level="INFO">Running command 'ozone sh bucket create 36263-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:51.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:51.043" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:51.043" starttime="20210226 01:54:44.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:51.045" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:51.045" starttime="20210226 01:54:51.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:51.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:51.046" starttime="20210226 01:54:51.045"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:51.046" starttime="20210226 01:54:44.446"></status>
</kw>
<msg timestamp="20210226 01:54:51.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:51.046" starttime="20210226 01:54:44.445"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:51.047" starttime="20210226 01:54:44.445"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:51.052" level="INFO">Running command 'ozone sh bucket link 36263-source/bucket1 36263-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:57.704" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:54:57.704" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210226 01:54:57.704" starttime="20210226 01:54:51.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.705" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210226 01:54:57.705" starttime="20210226 01:54:57.705"></status>
</kw>
<msg timestamp="20210226 01:54:57.706" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210226 01:54:57.706" starttime="20210226 01:54:51.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210226 01:54:57.706" starttime="20210226 01:54:57.706"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:54:57.707" critical="yes" starttime="20210226 01:54:31.647"></status>
</test>
<test id="s1-s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:57.714" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:57.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:57.716" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:54:57.716" starttime="20210226 01:54:57.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.718" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:54:57.718" starttime="20210226 01:54:57.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:57.719" starttime="20210226 01:54:57.718"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.719" starttime="20210226 01:54:57.711"></status>
</kw>
<msg timestamp="20210226 01:54:57.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:57.719" starttime="20210226 01:54:57.710"></status>
</kw>
<msg timestamp="20210226 01:54:57.720" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:54:57.720" starttime="20210226 01:54:57.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:54:57.721" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:54:57.721" starttime="20210226 01:54:57.720"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:57.725" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:57.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:57.733" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:57.733" starttime="20210226 01:54:57.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.734" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:57.734" starttime="20210226 01:54:57.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.734" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:57.735" starttime="20210226 01:54:57.734"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.735" starttime="20210226 01:54:57.722"></status>
</kw>
<msg timestamp="20210226 01:54:57.735" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:57.735" starttime="20210226 01:54:57.722"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.735" starttime="20210226 01:54:57.721"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.735" starttime="20210226 01:54:57.721"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.736" starttime="20210226 01:54:57.709"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.736" starttime="20210226 01:54:57.709"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:57.741" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:57.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:57.745" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:57.745" starttime="20210226 01:54:57.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.746" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:57.746" starttime="20210226 01:54:57.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:57.747" starttime="20210226 01:54:57.746"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.747" starttime="20210226 01:54:57.738"></status>
</kw>
<msg timestamp="20210226 01:54:57.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:57.747" starttime="20210226 01:54:57.738"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.747" starttime="20210226 01:54:57.737"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:57.752" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:57.754" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:57.755" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:54:57.755" starttime="20210226 01:54:57.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.755" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:54:57.756" starttime="20210226 01:54:57.755"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.758" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:57.758" starttime="20210226 01:54:57.756"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.758" starttime="20210226 01:54:57.749"></status>
</kw>
<msg timestamp="20210226 01:54:57.759" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:57.759" starttime="20210226 01:54:57.749"></status>
</kw>
<msg timestamp="20210226 01:54:57.759" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:54:57.759" starttime="20210226 01:54:57.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:54:57.760" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:54:57.760" starttime="20210226 01:54:57.759"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:57.766" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:54:57.772" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:54:57.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:54:57.772" starttime="20210226 01:54:57.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.773" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:54:57.774" starttime="20210226 01:54:57.773"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:54:57.774" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:54:57.774" starttime="20210226 01:54:57.774"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.775" starttime="20210226 01:54:57.762"></status>
</kw>
<msg timestamp="20210226 01:54:57.775" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:54:57.775" starttime="20210226 01:54:57.762"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.775" starttime="20210226 01:54:57.761"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.775" starttime="20210226 01:54:57.760"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.775" starttime="20210226 01:54:57.748"></status>
</kw>
<status status="PASS" endtime="20210226 01:54:57.775" starttime="20210226 01:54:57.748"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:54:57.778" level="INFO">Running command 'ozone sh key list 36263-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:02.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:02.960" level="INFO">${output} = {
  "volumeName" : "36263-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-26T01:45:03.493Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210226 01:55:02.961" starttime="20210226 01:54:57.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:02.963" level="INFO">{
  "volumeName" : "36263-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-26T01:45:03.493Z",
  "modificationTime" : "2021-02-26T01:48:06.354Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210226 01:55:02.964" starttime="20210226 01:55:02.962"></status>
</kw>
<msg timestamp="20210226 01:55:02.964" level="INFO">${result} = {
  "volumeName" : "36263-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-26T01:45:03.493Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210226 01:55:02.965" starttime="20210226 01:54:57.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210226 01:55:02.966" starttime="20210226 01:55:02.965"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:02.967" starttime="20210226 01:54:57.737"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:02.967" starttime="20210226 01:54:57.736"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:55:02.967" critical="yes" starttime="20210226 01:54:57.708"></status>
</test>
<test id="s1-s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:02.977" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:02.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:02.983" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:55:02.983" starttime="20210226 01:55:02.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:02.985" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:55:02.986" starttime="20210226 01:55:02.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:02.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:02.988" starttime="20210226 01:55:02.986"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:02.988" starttime="20210226 01:55:02.974"></status>
</kw>
<msg timestamp="20210226 01:55:02.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:02.988" starttime="20210226 01:55:02.973"></status>
</kw>
<msg timestamp="20210226 01:55:02.989" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:55:02.989" starttime="20210226 01:55:02.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:55:02.990" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:55:02.990" starttime="20210226 01:55:02.989"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:02.996" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:03.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:03.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:03.005" starttime="20210226 01:55:02.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.006" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:03.006" starttime="20210226 01:55:03.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:03.007" starttime="20210226 01:55:03.007"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.007" starttime="20210226 01:55:02.993"></status>
</kw>
<msg timestamp="20210226 01:55:03.008" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:03.008" starttime="20210226 01:55:02.992"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.008" starttime="20210226 01:55:02.991"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.009" starttime="20210226 01:55:02.991"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.009" starttime="20210226 01:55:02.970"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.009" starttime="20210226 01:55:02.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:03.016" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:03.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:03.020" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:03.020" starttime="20210226 01:55:03.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.021" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:03.021" starttime="20210226 01:55:03.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:03.022" starttime="20210226 01:55:03.021"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.022" starttime="20210226 01:55:03.012"></status>
</kw>
<msg timestamp="20210226 01:55:03.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:03.023" starttime="20210226 01:55:03.012"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.023" starttime="20210226 01:55:03.012"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:03.029" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:03.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:03.032" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:55:03.032" starttime="20210226 01:55:03.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.033" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:55:03.033" starttime="20210226 01:55:03.033"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:03.034" starttime="20210226 01:55:03.033"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.034" starttime="20210226 01:55:03.026"></status>
</kw>
<msg timestamp="20210226 01:55:03.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:03.035" starttime="20210226 01:55:03.026"></status>
</kw>
<msg timestamp="20210226 01:55:03.035" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:55:03.035" starttime="20210226 01:55:03.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:55:03.036" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:55:03.036" starttime="20210226 01:55:03.035"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:03.041" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:03.050" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:03.050" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:03.051" starttime="20210226 01:55:03.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.052" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:03.052" starttime="20210226 01:55:03.051"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:03.053" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:03.053" starttime="20210226 01:55:03.052"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.054" starttime="20210226 01:55:03.038"></status>
</kw>
<msg timestamp="20210226 01:55:03.054" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:03.054" starttime="20210226 01:55:03.038"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.054" starttime="20210226 01:55:03.037"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.054" starttime="20210226 01:55:03.036"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.054" starttime="20210226 01:55:03.024"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:03.055" starttime="20210226 01:55:03.023"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:03.058" level="INFO">Running command 'ozone sh key list 36263-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:09.197" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:55:09.198" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 36263-target unreadable-link null</msg>
<status status="PASS" endtime="20210226 01:55:09.198" starttime="20210226 01:55:03.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.199" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 36263-target unreadable-link null</msg>
<status status="PASS" endtime="20210226 01:55:09.199" starttime="20210226 01:55:09.198"></status>
</kw>
<msg timestamp="20210226 01:55:09.199" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 36263-target unreadable-link null</msg>
<status status="PASS" endtime="20210226 01:55:09.199" starttime="20210226 01:55:03.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210226 01:55:09.200" starttime="20210226 01:55:09.200"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.200" starttime="20210226 01:55:03.011"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.200" starttime="20210226 01:55:03.010"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:55:09.201" critical="yes" starttime="20210226 01:55:02.968"></status>
</test>
<test id="s1-s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:09.208" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:09.211" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:09.211" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:55:09.211" starttime="20210226 01:55:09.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.212" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:55:09.212" starttime="20210226 01:55:09.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:09.213" starttime="20210226 01:55:09.212"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.213" starttime="20210226 01:55:09.204"></status>
</kw>
<msg timestamp="20210226 01:55:09.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:09.214" starttime="20210226 01:55:09.204"></status>
</kw>
<msg timestamp="20210226 01:55:09.214" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:55:09.214" starttime="20210226 01:55:09.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:55:09.215" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:55:09.215" starttime="20210226 01:55:09.214"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:09.219" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:09.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:09.226" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:09.226" starttime="20210226 01:55:09.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.227" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:09.228" starttime="20210226 01:55:09.227"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.228" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:09.228" starttime="20210226 01:55:09.228"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.229" starttime="20210226 01:55:09.217"></status>
</kw>
<msg timestamp="20210226 01:55:09.229" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:09.229" starttime="20210226 01:55:09.216"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.229" starttime="20210226 01:55:09.215"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.229" starttime="20210226 01:55:09.215"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.229" starttime="20210226 01:55:09.203"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.230" starttime="20210226 01:55:09.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:09.234" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:09.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:09.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:09.238" starttime="20210226 01:55:09.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.239" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:09.239" starttime="20210226 01:55:09.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:09.240" starttime="20210226 01:55:09.239"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.240" starttime="20210226 01:55:09.232"></status>
</kw>
<msg timestamp="20210226 01:55:09.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:09.241" starttime="20210226 01:55:09.232"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.241" starttime="20210226 01:55:09.231"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:09.246" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:09.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:09.248" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:55:09.248" starttime="20210226 01:55:09.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.250" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:55:09.250" starttime="20210226 01:55:09.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:09.250" starttime="20210226 01:55:09.250"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.251" starttime="20210226 01:55:09.243"></status>
</kw>
<msg timestamp="20210226 01:55:09.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:09.251" starttime="20210226 01:55:09.243"></status>
</kw>
<msg timestamp="20210226 01:55:09.251" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:55:09.251" starttime="20210226 01:55:09.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:55:09.252" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:55:09.252" starttime="20210226 01:55:09.252"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:09.257" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:09.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:09.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:09.264" starttime="20210226 01:55:09.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.265" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:09.265" starttime="20210226 01:55:09.264"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:09.266" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:09.266" starttime="20210226 01:55:09.265"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.266" starttime="20210226 01:55:09.254"></status>
</kw>
<msg timestamp="20210226 01:55:09.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:09.266" starttime="20210226 01:55:09.254"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.267" starttime="20210226 01:55:09.253"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.267" starttime="20210226 01:55:09.252"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.267" starttime="20210226 01:55:09.242"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:09.267" starttime="20210226 01:55:09.241"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:09.271" level="INFO">Running command 'ozone sh bucket info 36263-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:14.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:14.219" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210226 01:55:14.219" starttime="20210226 01:55:09.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:14.220" level="INFO">{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:32.057Z",
  "modificationTime" : "2021-02-26T01:49:01.968Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210226 01:55:14.220" starttime="20210226 01:55:14.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:14.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:14.221" starttime="20210226 01:55:14.220"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:14.221" starttime="20210226 01:55:09.268"></status>
</kw>
<msg timestamp="20210226 01:55:14.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:14.221" starttime="20210226 01:55:09.268"></status>
</kw>
<msg timestamp="20210226 01:55:14.222" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210226 01:55:14.222" starttime="20210226 01:55:09.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210226 01:55:14.222" starttime="20210226 01:55:14.222"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210226 01:55:14.223" starttime="20210226 01:55:14.223"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:14.229" level="INFO">Running command 'ozone sh key list 36263-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:21.360" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:55:21.361" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 36263-source unreadable-bucket </msg>
<status status="PASS" endtime="20210226 01:55:21.361" starttime="20210226 01:55:14.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:21.362" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 36263-source unreadable-bucket </msg>
<status status="PASS" endtime="20210226 01:55:21.362" starttime="20210226 01:55:21.361"></status>
</kw>
<msg timestamp="20210226 01:55:21.362" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 36263-source unreadable-bucket </msg>
<status status="PASS" endtime="20210226 01:55:21.362" starttime="20210226 01:55:14.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210226 01:55:21.363" starttime="20210226 01:55:21.363"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.363" starttime="20210226 01:55:09.230"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.363" starttime="20210226 01:55:09.230"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:55:21.364" critical="yes" starttime="20210226 01:55:09.201"></status>
</test>
<test id="s1-s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:21.372" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:21.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:21.376" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:55:21.376" starttime="20210226 01:55:21.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:21.378" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:55:21.378" starttime="20210226 01:55:21.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:21.379" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:21.379" starttime="20210226 01:55:21.379"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.380" starttime="20210226 01:55:21.369"></status>
</kw>
<msg timestamp="20210226 01:55:21.380" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:21.380" starttime="20210226 01:55:21.368"></status>
</kw>
<msg timestamp="20210226 01:55:21.380" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:55:21.380" starttime="20210226 01:55:21.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:55:21.382" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:55:21.382" starttime="20210226 01:55:21.381"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:21.387" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:21.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:21.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:21.397" starttime="20210226 01:55:21.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:21.399" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:21.399" starttime="20210226 01:55:21.398"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:21.402" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:21.402" starttime="20210226 01:55:21.399"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.402" starttime="20210226 01:55:21.383"></status>
</kw>
<msg timestamp="20210226 01:55:21.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:21.402" starttime="20210226 01:55:21.383"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.403" starttime="20210226 01:55:21.382"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.403" starttime="20210226 01:55:21.382"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.403" starttime="20210226 01:55:21.367"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:21.403" starttime="20210226 01:55:21.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:21.409" level="INFO">Running command 'ozone sh bucket link 36263-target/loop1 36263-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:26.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:26.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:26.427" starttime="20210226 01:55:21.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:26.429" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:26.429" starttime="20210226 01:55:26.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:26.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:26.431" starttime="20210226 01:55:26.429"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:26.431" starttime="20210226 01:55:21.405"></status>
</kw>
<msg timestamp="20210226 01:55:26.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:26.432" starttime="20210226 01:55:21.404"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:26.432" starttime="20210226 01:55:21.403"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:26.437" level="INFO">Running command 'ozone sh bucket link 36263-target/loop2 36263-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:34.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:34.474" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:34.474" starttime="20210226 01:55:26.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:34.476" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:34.477" starttime="20210226 01:55:34.474"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:34.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:34.482" starttime="20210226 01:55:34.477"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:34.483" starttime="20210226 01:55:26.434"></status>
</kw>
<msg timestamp="20210226 01:55:34.483" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:34.483" starttime="20210226 01:55:26.433"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:34.483" starttime="20210226 01:55:26.432"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:34.493" level="INFO">Running command 'ozone sh bucket link 36263-target/loop3 36263-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:40.912" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:40.912" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:40.912" starttime="20210226 01:55:34.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:40.913" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:40.913" starttime="20210226 01:55:40.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:40.914" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:40.914" starttime="20210226 01:55:40.913"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:40.915" starttime="20210226 01:55:34.487"></status>
</kw>
<msg timestamp="20210226 01:55:40.915" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:40.915" starttime="20210226 01:55:34.486"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:40.915" starttime="20210226 01:55:34.483"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:40.918" level="INFO">Running command 'ozone sh key list 36263-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:45.775" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:55:45.775" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210226 01:55:45.775" starttime="20210226 01:55:40.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:45.777" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210226 01:55:45.777" starttime="20210226 01:55:45.776"></status>
</kw>
<msg timestamp="20210226 01:55:45.778" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210226 01:55:45.778" starttime="20210226 01:55:40.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210226 01:55:45.779" starttime="20210226 01:55:45.778"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:55:45.779" critical="yes" starttime="20210226 01:55:21.365"></status>
</test>
<test id="s1-s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:45.788" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:45.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:45.791" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:55:45.791" starttime="20210226 01:55:45.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:45.792" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:55:45.792" starttime="20210226 01:55:45.791"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:45.793" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:45.793" starttime="20210226 01:55:45.792"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:45.793" starttime="20210226 01:55:45.784"></status>
</kw>
<msg timestamp="20210226 01:55:45.793" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:45.793" starttime="20210226 01:55:45.784"></status>
</kw>
<msg timestamp="20210226 01:55:45.794" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:55:45.794" starttime="20210226 01:55:45.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:55:45.794" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:55:45.794" starttime="20210226 01:55:45.794"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:45.800" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:45.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:45.807" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:45.807" starttime="20210226 01:55:45.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:45.809" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:45.809" starttime="20210226 01:55:45.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:45.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:45.810" starttime="20210226 01:55:45.809"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:45.810" starttime="20210226 01:55:45.796"></status>
</kw>
<msg timestamp="20210226 01:55:45.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:45.810" starttime="20210226 01:55:45.796"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:45.811" starttime="20210226 01:55:45.795"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:45.811" starttime="20210226 01:55:45.795"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:45.811" starttime="20210226 01:55:45.783"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:45.811" starttime="20210226 01:55:45.782"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:45.815" level="INFO">Running command 'ozone sh bucket link 36263-source/bucket1 36263-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:55:52.500" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:55:52.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:55:52.500" starttime="20210226 01:55:45.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:55:52.503" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:55:52.503" starttime="20210226 01:55:52.501"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:55:52.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:55:52.505" starttime="20210226 01:55:52.504"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:52.506" starttime="20210226 01:55:45.812"></status>
</kw>
<msg timestamp="20210226 01:55:52.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:55:52.507" starttime="20210226 01:55:45.812"></status>
</kw>
<status status="PASS" endtime="20210226 01:55:52.508" starttime="20210226 01:55:45.811"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:55:52.516" level="INFO">Running command 'ozone sh key put 36263-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:57:45.782" level="FAIL">Test timeout 2 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 01:57:45.782" starttime="20210226 01:55:52.513"></status>
</kw>
<status status="FAIL" endtime="20210226 01:57:45.782" starttime="20210226 01:55:52.511"></status>
</kw>
<msg timestamp="20210226 01:57:45.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 01:57:45.783" starttime="20210226 01:55:52.510"></status>
</kw>
<status status="FAIL" endtime="20210226 01:57:45.783" starttime="20210226 01:55:52.508"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="FAIL" endtime="20210226 01:57:45.783" critical="yes" starttime="20210226 01:55:45.781">Test timeout 2 minutes exceeded.</status>
</test>
<test id="s1-s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:57:45.793" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:57:45.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:57:45.800" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:57:45.800" starttime="20210226 01:57:45.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:57:45.802" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:57:45.802" starttime="20210226 01:57:45.800"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:57:45.804" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:57:45.804" starttime="20210226 01:57:45.802"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:45.804" starttime="20210226 01:57:45.788"></status>
</kw>
<msg timestamp="20210226 01:57:45.804" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:57:45.805" starttime="20210226 01:57:45.788"></status>
</kw>
<msg timestamp="20210226 01:57:45.805" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:57:45.805" starttime="20210226 01:57:45.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:57:45.806" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:57:45.806" starttime="20210226 01:57:45.805"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:57:45.814" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:57:45.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:57:45.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:57:45.822" starttime="20210226 01:57:45.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:57:45.824" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:57:45.825" starttime="20210226 01:57:45.823"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:57:45.826" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:57:45.826" starttime="20210226 01:57:45.825"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:45.826" starttime="20210226 01:57:45.808"></status>
</kw>
<msg timestamp="20210226 01:57:45.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:57:45.827" starttime="20210226 01:57:45.808"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:45.827" starttime="20210226 01:57:45.807"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:45.828" starttime="20210226 01:57:45.806"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:45.828" starttime="20210226 01:57:45.786"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:45.828" starttime="20210226 01:57:45.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:57:45.834" level="INFO">Running command 'ozone sh bucket delete 36263-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:57:52.670" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:57:52.671" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:57:52.671" starttime="20210226 01:57:45.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:57:52.673" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:57:52.673" starttime="20210226 01:57:52.671"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:57:52.675" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:57:52.675" starttime="20210226 01:57:52.674"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:52.675" starttime="20210226 01:57:45.830"></status>
</kw>
<msg timestamp="20210226 01:57:52.676" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:57:52.676" starttime="20210226 01:57:45.830"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:52.677" starttime="20210226 01:57:45.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:57:52.682" level="INFO">Running command 'ozone sh bucket list 36263-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:57:59.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:57:59.716" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T...</msg>
<status status="PASS" endtime="20210226 01:57:59.716" starttime="20210226 01:57:52.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:57:59.717" level="INFO">{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:54:50.945Z",
  "modificationTime" : "2021-02-26T01:54:50.945Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:49:06.393Z",
  "modificationTime" : "2021-02-26T01:49:06.393Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:32.057Z",
  "modificationTime" : "2021-02-26T01:49:01.968Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:54:37.585Z",
  "modificationTime" : "2021-02-26T01:54:37.585Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:55:52.393Z",
  "modificationTime" : "2021-02-26T01:55:52.393Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:55:40.788Z",
  "modificationTime" : "2021-02-26T01:55:40.788Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:55:26.186Z",
  "modificationTime" : "2021-02-26T01:55:26.186Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:55:34.243Z",
  "modificationTime" : "2021-02-26T01:55:34.243Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:20.027Z",
  "modificationTime" : "2021-02-26T01:48:55.255Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T01:48:25.787Z",
  "modificationTime" : "2021-02-26T01:48:25.787Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "36263-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210226 01:57:59.717" starttime="20210226 01:57:59.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:57:59.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:57:59.718" starttime="20210226 01:57:59.718"></status>
</kw>
<status status="PASS" endtime="20210226 01:57:59.719" starttime="20210226 01:57:52.679"></status>
</kw>
<msg timestamp="20210226 01:57:59.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:57:59.719" starttime="20210226 01:57:52.678"></status>
</kw>
<msg timestamp="20210226 01:57:59.719" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "36263-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-26T...</msg>
<status status="PASS" endtime="20210226 01:57:59.719" starttime="20210226 01:57:52.677"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210226 01:57:59.720" starttime="20210226 01:57:59.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:57:59.724" level="INFO">Running command 'ozone sh key list 36263-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:05.316" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:05.316" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210226 01:58:05.316" starttime="20210226 01:57:59.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:05.317" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210226 01:58:05.318" starttime="20210226 01:58:05.317"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:05.318" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:05.318" starttime="20210226 01:58:05.318"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:05.319" starttime="20210226 01:57:59.721"></status>
</kw>
<msg timestamp="20210226 01:58:05.319" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:05.319" starttime="20210226 01:57:59.721"></status>
</kw>
<msg timestamp="20210226 01:58:05.319" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210226 01:58:05.320" starttime="20210226 01:57:59.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210226 01:58:05.320" starttime="20210226 01:58:05.320"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:58:05.321" critical="yes" starttime="20210226 01:57:45.784"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="FAIL" endtime="20210226 01:58:05.325" starttime="20210226 01:44:39.595"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell-single.robot" id="s1-s1-s4" name="Ozone-Shell-Single">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210226 01:58:05.367" level="INFO">${random} = 93459</msg>
<status status="PASS" endtime="20210226 01:58:05.367" starttime="20210226 01:58:05.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210226 01:58:05.367" level="INFO">${prefix} = 93459</msg>
<status status="PASS" endtime="20210226 01:58:05.368" starttime="20210226 01:58:05.367"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:05.368" starttime="20210226 01:58:05.366"></status>
</kw>
<test id="s1-s1-s4-t1" name="Test ozone shell">
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcbasic</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:05.374" level="INFO">Running command 'ozone sh volume info /93459-rpcbasic 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:12.369" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 01:58:12.369" level="INFO">${output} = VOLUME_NOT_FOUND Volume 93459-rpcbasic is not found</msg>
<status status="PASS" endtime="20210226 01:58:12.369" starttime="20210226 01:58:05.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:12.371" level="INFO">VOLUME_NOT_FOUND Volume 93459-rpcbasic is not found</msg>
<status status="PASS" endtime="20210226 01:58:12.371" starttime="20210226 01:58:12.370"></status>
</kw>
<msg timestamp="20210226 01:58:12.372" level="INFO">${result} = VOLUME_NOT_FOUND Volume 93459-rpcbasic is not found</msg>
<status status="PASS" endtime="20210226 01:58:12.372" starttime="20210226 01:58:05.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210226 01:58:12.373" starttime="20210226 01:58:12.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:12.380" level="INFO">Running command 'ozone sh volume create /93459-rpcbasic --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:19.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:19.605" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:58:19.605" starttime="20210226 01:58:12.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:19.608" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:58:19.608" starttime="20210226 01:58:19.607"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:19.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:19.610" starttime="20210226 01:58:19.609"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:19.611" starttime="20210226 01:58:12.375"></status>
</kw>
<msg timestamp="20210226 01:58:19.611" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:19.611" starttime="20210226 01:58:12.375"></status>
</kw>
<msg timestamp="20210226 01:58:19.612" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210226 01:58:19.612" starttime="20210226 01:58:12.373"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210226 01:58:19.613" starttime="20210226 01:58:19.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:19.620" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="93459-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:27.632" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:27.633" level="INFO">${output} = {
  "metadata": {},
  "name": "93459-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 01:58:27.633" starttime="20210226 01:58:19.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:27.635" level="INFO">{
  "metadata": {},
  "name": "93459-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T01:58:19.243Z",
  "modificationTime": "2021-02-26T01:58:19.243Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 01:58:27.635" starttime="20210226 01:58:27.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:27.636" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:27.637" starttime="20210226 01:58:27.636"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:27.637" starttime="20210226 01:58:19.615"></status>
</kw>
<msg timestamp="20210226 01:58:27.637" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:27.638" starttime="20210226 01:58:19.615"></status>
</kw>
<msg timestamp="20210226 01:58:27.638" level="INFO">${result} = {
  "metadata": {},
  "name": "93459-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 01:58:27.638" starttime="20210226 01:58:19.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 01:58:27.639" starttime="20210226 01:58:27.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:27.646" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="93459-rpcbasic")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:35.129" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:35.129" level="INFO">${output} = {
  "metadata": {},
  "name": "93459-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 01:58:35.129" starttime="20210226 01:58:27.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:35.131" level="INFO">{
  "metadata": {},
  "name": "93459-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T01:58:19.243Z",
  "modificationTime": "2021-02-26T01:58:19.243Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 01:58:35.131" starttime="20210226 01:58:35.130"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:35.132" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:35.132" starttime="20210226 01:58:35.131"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:35.132" starttime="20210226 01:58:27.641"></status>
</kw>
<msg timestamp="20210226 01:58:35.132" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:35.133" starttime="20210226 01:58:27.641"></status>
</kw>
<msg timestamp="20210226 01:58:35.133" level="INFO">${result} = {
  "metadata": {},
  "name": "93459-rpcbasic",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 01:58:35.133" starttime="20210226 01:58:27.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 01:58:35.134" starttime="20210226 01:58:35.133"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:35.139" level="INFO">Running command 'ozone sh volume setquota /93459-rpcbasic --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:41.773" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:41.774" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:58:41.774" starttime="20210226 01:58:35.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:41.775" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:58:41.775" starttime="20210226 01:58:41.774"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:41.776" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:41.776" starttime="20210226 01:58:41.775"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:41.777" starttime="20210226 01:58:35.135"></status>
</kw>
<msg timestamp="20210226 01:58:41.777" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:41.777" starttime="20210226 01:58:35.135"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:41.777" starttime="20210226 01:58:35.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:41.782" level="INFO">Running command 'ozone sh volume info /93459-rpcbasic | jq -r '. | select(.name=="93459-rpcbasic") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:46.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:46.299" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 01:58:46.299" starttime="20210226 01:58:41.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:46.300" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 01:58:46.300" starttime="20210226 01:58:46.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:46.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:46.301" starttime="20210226 01:58:46.301"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:46.301" starttime="20210226 01:58:41.779"></status>
</kw>
<msg timestamp="20210226 01:58:46.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:46.302" starttime="20210226 01:58:41.779"></status>
</kw>
<msg timestamp="20210226 01:58:46.302" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 01:58:46.302" starttime="20210226 01:58:41.777"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 01:58:46.303" starttime="20210226 01:58:46.302"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:46.307" level="INFO">Running command 'ozone sh bucket create /93459-rpcbasic/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:58:53.030" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:58:53.030" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:58:53.030" starttime="20210226 01:58:46.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:58:53.031" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:58:53.032" starttime="20210226 01:58:53.030"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:58:53.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:58:53.033" starttime="20210226 01:58:53.032"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:53.033" starttime="20210226 01:58:46.304"></status>
</kw>
<msg timestamp="20210226 01:58:53.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:58:53.034" starttime="20210226 01:58:46.304"></status>
</kw>
<status status="PASS" endtime="20210226 01:58:53.034" starttime="20210226 01:58:46.303"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:58:53.040" level="INFO">Running command 'ozone sh bucket info /93459-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:01.123" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:01.123" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210226 01:59:01.123" starttime="20210226 01:58:53.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:01.125" level="INFO">DISK</msg>
<status status="PASS" endtime="20210226 01:59:01.126" starttime="20210226 01:59:01.124"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:01.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:01.127" starttime="20210226 01:59:01.126"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:01.127" starttime="20210226 01:58:53.037"></status>
</kw>
<msg timestamp="20210226 01:59:01.128" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:01.128" starttime="20210226 01:58:53.036"></status>
</kw>
<msg timestamp="20210226 01:59:01.128" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210226 01:59:01.129" starttime="20210226 01:58:53.034"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210226 01:59:01.129" starttime="20210226 01:59:01.129"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:01.135" level="INFO">Running command 'ozone sh bucket info /93459-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:08.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:08.718" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 01:59:08.718" starttime="20210226 01:59:01.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:08.720" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 01:59:08.720" starttime="20210226 01:59:08.719"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:08.722" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:08.722" starttime="20210226 01:59:08.721"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:08.723" starttime="20210226 01:59:01.131"></status>
</kw>
<msg timestamp="20210226 01:59:08.723" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:08.723" starttime="20210226 01:59:01.130"></status>
</kw>
<msg timestamp="20210226 01:59:08.724" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 01:59:08.724" starttime="20210226 01:59:01.129"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 01:59:08.725" starttime="20210226 01:59:08.724"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:08.733" level="INFO">Running command 'ozone sh bucket info /93459-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:15.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:15.940" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210226 01:59:15.940" starttime="20210226 01:59:08.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:15.943" level="INFO">100</msg>
<status status="PASS" endtime="20210226 01:59:15.943" starttime="20210226 01:59:15.941"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:15.945" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:15.945" starttime="20210226 01:59:15.944"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:15.946" starttime="20210226 01:59:08.728"></status>
</kw>
<msg timestamp="20210226 01:59:15.946" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:15.946" starttime="20210226 01:59:08.727"></status>
</kw>
<msg timestamp="20210226 01:59:15.946" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210226 01:59:15.946" starttime="20210226 01:59:08.725"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210226 01:59:15.948" starttime="20210226 01:59:15.947"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:15.955" level="INFO">Running command 'ozone sh bucket setquota /93459-rpcbasic/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:23.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:23.111" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:59:23.111" starttime="20210226 01:59:15.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:23.113" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:59:23.113" starttime="20210226 01:59:23.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:23.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:23.115" starttime="20210226 01:59:23.113"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:23.115" starttime="20210226 01:59:15.950"></status>
</kw>
<msg timestamp="20210226 01:59:23.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:23.116" starttime="20210226 01:59:15.949"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:23.117" starttime="20210226 01:59:15.948"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:23.122" level="INFO">Running command 'ozone sh bucket info /93459-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:30.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:30.823" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210226 01:59:30.823" starttime="20210226 01:59:23.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:30.824" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210226 01:59:30.825" starttime="20210226 01:59:30.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:30.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:30.825" starttime="20210226 01:59:30.825"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:30.826" starttime="20210226 01:59:23.118"></status>
</kw>
<msg timestamp="20210226 01:59:30.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:30.826" starttime="20210226 01:59:23.118"></status>
</kw>
<msg timestamp="20210226 01:59:30.826" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210226 01:59:30.826" starttime="20210226 01:59:23.117"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210226 01:59:30.827" starttime="20210226 01:59:30.826"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:30.832" level="INFO">Running command 'ozone sh bucket info /93459-rpcbasic/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:36.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:36.347" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210226 01:59:36.347" starttime="20210226 01:59:30.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:36.349" level="INFO">1000</msg>
<status status="PASS" endtime="20210226 01:59:36.349" starttime="20210226 01:59:36.348"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:36.350" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:36.350" starttime="20210226 01:59:36.349"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:36.350" starttime="20210226 01:59:30.828"></status>
</kw>
<msg timestamp="20210226 01:59:36.350" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:36.351" starttime="20210226 01:59:30.828"></status>
</kw>
<msg timestamp="20210226 01:59:36.351" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210226 01:59:36.351" starttime="20210226 01:59:30.827"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210226 01:59:36.352" starttime="20210226 01:59:36.351"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:36.360" level="INFO">Running command 'ozone sh bucket list /93459-rpcbasic/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:59:43.732" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:59:43.732" level="INFO">${output} = 93459-rpcbasic</msg>
<status status="PASS" endtime="20210226 01:59:43.732" starttime="20210226 01:59:36.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:59:43.735" level="INFO">93459-rpcbasic</msg>
<status status="PASS" endtime="20210226 01:59:43.735" starttime="20210226 01:59:43.733"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:59:43.736" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:59:43.736" starttime="20210226 01:59:43.735"></status>
</kw>
<status status="PASS" endtime="20210226 01:59:43.737" starttime="20210226 01:59:36.355"></status>
</kw>
<msg timestamp="20210226 01:59:43.737" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:59:43.737" starttime="20210226 01:59:36.354"></status>
</kw>
<msg timestamp="20210226 01:59:43.737" level="INFO">${result} = 93459-rpcbasic</msg>
<status status="PASS" endtime="20210226 01:59:43.737" starttime="20210226 01:59:36.352"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210226 01:59:43.739" starttime="20210226 01:59:43.738"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:59:43.746" level="INFO">Running command 'ozone sh key put /93459-rpcbasic/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:02:53.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:02:53.704" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:02:53.704" starttime="20210226 01:59:43.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:02:53.705" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:02:53.705" starttime="20210226 02:02:53.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:02:53.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:02:53.706" starttime="20210226 02:02:53.706"></status>
</kw>
<status status="PASS" endtime="20210226 02:02:53.706" starttime="20210226 01:59:43.742"></status>
</kw>
<msg timestamp="20210226 02:02:53.707" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:02:53.707" starttime="20210226 01:59:43.742"></status>
</kw>
<status status="PASS" endtime="20210226 02:02:53.707" starttime="20210226 01:59:43.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:02:53.711" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:02:53.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:02:53.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:02:53.716" starttime="20210226 02:02:53.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:02:53.718" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:02:53.718" starttime="20210226 02:02:53.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:02:53.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:02:53.720" starttime="20210226 02:02:53.718"></status>
</kw>
<status status="PASS" endtime="20210226 02:02:53.720" starttime="20210226 02:02:53.708"></status>
</kw>
<msg timestamp="20210226 02:02:53.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:02:53.721" starttime="20210226 02:02:53.708"></status>
</kw>
<status status="PASS" endtime="20210226 02:02:53.721" starttime="20210226 02:02:53.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:02:53.727" level="INFO">Running command 'ozone sh key get /93459-rpcbasic/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:04.039" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:04.039" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:03:04.039" starttime="20210226 02:02:53.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:04.040" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:03:04.041" starttime="20210226 02:03:04.039"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:04.041" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:04.041" starttime="20210226 02:03:04.041"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:04.042" starttime="20210226 02:02:53.723"></status>
</kw>
<msg timestamp="20210226 02:03:04.042" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:04.042" starttime="20210226 02:02:53.723"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:04.042" starttime="20210226 02:02:53.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:04.059" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:04.063" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:04.064" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:03:04.064" starttime="20210226 02:03:04.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:04.072" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:03:04.072" starttime="20210226 02:03:04.066"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:04.073" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:04.073" starttime="20210226 02:03:04.072"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:04.074" starttime="20210226 02:03:04.044"></status>
</kw>
<msg timestamp="20210226 02:03:04.074" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:04.074" starttime="20210226 02:03:04.043"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:04.074" starttime="20210226 02:03:04.043"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:04.081" level="INFO">Running command 'ozone sh key put -t RATIS /93459-rpcbasic/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:05.370" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 02:03:05.370" starttime="20210226 02:03:04.077"></status>
</kw>
<status status="FAIL" endtime="20210226 02:03:05.371" starttime="20210226 02:03:04.076"></status>
</kw>
<msg timestamp="20210226 02:03:05.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 02:03:05.371" starttime="20210226 02:03:04.075"></status>
</kw>
<status status="FAIL" endtime="20210226 02:03:05.371" starttime="20210226 02:03:04.074"></status>
</kw>
<status status="FAIL" endtime="20210226 02:03:05.372" starttime="20210226 01:59:43.739"></status>
</kw>
<status status="FAIL" endtime="20210226 02:03:05.372" starttime="20210226 01:59:43.739"></status>
</kw>
<status status="FAIL" endtime="20210226 02:03:05.375" starttime="20210226 01:58:05.369"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210226 02:03:05.376" critical="yes" starttime="20210226 01:58:05.368">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210226 02:03:05.389" starttime="20210226 01:58:05.337"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/ozone-shell.robot" id="s1-s1-s5" name="Ozone-Shell">
<kw type="setup" name="Generate prefix" library="ozone-shell-lib">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210226 02:03:05.441" level="INFO">${random} = 10938</msg>
<status status="PASS" endtime="20210226 02:03:05.441" starttime="20210226 02:03:05.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${prefix}</arg>
<arg>${random}</arg>
</arguments>
<msg timestamp="20210226 02:03:05.442" level="INFO">${prefix} = 10938</msg>
<status status="PASS" endtime="20210226 02:03:05.442" starttime="20210226 02:03:05.441"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.442" starttime="20210226 02:03:05.435"></status>
</kw>
<test id="s1-s1-s5-t1" name="RpcClient with port">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:05.472" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:05.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:05.487" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 02:03:05.488" starttime="20210226 02:03:05.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:05.491" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 02:03:05.491" starttime="20210226 02:03:05.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:05.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:05.493" starttime="20210226 02:03:05.491"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.494" starttime="20210226 02:03:05.460"></status>
</kw>
<msg timestamp="20210226 02:03:05.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:05.496" starttime="20210226 02:03:05.458"></status>
</kw>
<msg timestamp="20210226 02:03:05.498" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 02:03:05.498" starttime="20210226 02:03:05.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 02:03:05.503" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 02:03:05.504" starttime="20210226 02:03:05.498"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:05.543" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:05.647" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:05.647" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:03:05.648" starttime="20210226 02:03:05.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:05.649" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:03:05.650" starttime="20210226 02:03:05.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:05.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:05.652" starttime="20210226 02:03:05.650"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.652" starttime="20210226 02:03:05.516"></status>
</kw>
<msg timestamp="20210226 02:03:05.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:05.653" starttime="20210226 02:03:05.513"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.654" starttime="20210226 02:03:05.512"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.654" starttime="20210226 02:03:05.504"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.654" starttime="20210226 02:03:05.446"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:05.655" starttime="20210226 02:03:05.445"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:05.674" level="INFO">Running command 'ozone sh volume info o3://om:9862/10938-rpcwoport 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:20.278" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 02:03:20.278" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10938-rpcwoport is not found</msg>
<status status="PASS" endtime="20210226 02:03:20.278" starttime="20210226 02:03:05.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:20.279" level="INFO">VOLUME_NOT_FOUND Volume 10938-rpcwoport is not found</msg>
<status status="PASS" endtime="20210226 02:03:20.279" starttime="20210226 02:03:20.278"></status>
</kw>
<msg timestamp="20210226 02:03:20.286" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10938-rpcwoport is not found</msg>
<status status="PASS" endtime="20210226 02:03:20.286" starttime="20210226 02:03:05.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210226 02:03:20.288" starttime="20210226 02:03:20.288"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:20.298" level="INFO">Running command 'ozone sh volume create o3://om:9862/10938-rpcwoport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:28.671" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:28.671" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:03:28.671" starttime="20210226 02:03:20.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:28.673" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:03:28.673" starttime="20210226 02:03:28.672"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:28.673" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:28.674" starttime="20210226 02:03:28.673"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:28.674" starttime="20210226 02:03:20.290"></status>
</kw>
<msg timestamp="20210226 02:03:28.674" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:28.674" starttime="20210226 02:03:20.289"></status>
</kw>
<msg timestamp="20210226 02:03:28.674" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210226 02:03:28.675" starttime="20210226 02:03:20.289"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210226 02:03:28.675" starttime="20210226 02:03:28.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:28.680" level="INFO">Running command 'ozone sh volume list o3://om:9862/ | jq -r '. | select(.name=="10938-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:34.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:34.386" level="INFO">${output} = {
  "metadata": {},
  "name": "10938-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210226 02:03:34.386" starttime="20210226 02:03:28.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:34.387" level="INFO">{
  "metadata": {},
  "name": "10938-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T02:03:28.469Z",
  "modificationTime": "2021-02-26T02:03:28.469Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 02:03:34.388" starttime="20210226 02:03:34.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:34.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:34.389" starttime="20210226 02:03:34.388"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:34.389" starttime="20210226 02:03:28.677"></status>
</kw>
<msg timestamp="20210226 02:03:34.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:34.389" starttime="20210226 02:03:28.676"></status>
</kw>
<msg timestamp="20210226 02:03:34.390" level="INFO">${result} = {
  "metadata": {},
  "name": "10938-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210226 02:03:34.390" starttime="20210226 02:03:28.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 02:03:34.390" starttime="20210226 02:03:34.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:34.394" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10938-rpcwoport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:42.104" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:42.104" level="INFO">${output} = {
  "metadata": {},
  "name": "10938-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210226 02:03:42.104" starttime="20210226 02:03:34.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:42.107" level="INFO">{
  "metadata": {},
  "name": "10938-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T02:03:28.469Z",
  "modificationTime": "2021-02-26T02:03:28.469Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 02:03:42.107" starttime="20210226 02:03:42.105"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:42.109" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:42.109" starttime="20210226 02:03:42.107"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:42.110" starttime="20210226 02:03:34.392"></status>
</kw>
<msg timestamp="20210226 02:03:42.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:42.110" starttime="20210226 02:03:34.391"></status>
</kw>
<msg timestamp="20210226 02:03:42.110" level="INFO">${result} = {
  "metadata": {},
  "name": "10938-rpcwoport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedName...</msg>
<status status="PASS" endtime="20210226 02:03:42.110" starttime="20210226 02:03:34.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 02:03:42.113" starttime="20210226 02:03:42.110"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:42.121" level="INFO">Running command 'ozone sh volume setquota o3://om:9862/10938-rpcwoport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:48.338" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:48.338" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:03:48.338" starttime="20210226 02:03:42.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:48.339" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:03:48.340" starttime="20210226 02:03:48.339"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:48.340" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:48.340" starttime="20210226 02:03:48.340"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:48.341" starttime="20210226 02:03:42.115"></status>
</kw>
<msg timestamp="20210226 02:03:48.341" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:48.341" starttime="20210226 02:03:42.114"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:48.341" starttime="20210226 02:03:42.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:48.345" level="INFO">Running command 'ozone sh volume info o3://om:9862/10938-rpcwoport | jq -r '. | select(.name=="10938-rpcwoport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:03:53.968" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:03:53.969" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:03:53.969" starttime="20210226 02:03:48.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:03:53.970" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 02:03:53.970" starttime="20210226 02:03:53.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:03:53.971" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:03:53.971" starttime="20210226 02:03:53.970"></status>
</kw>
<status status="PASS" endtime="20210226 02:03:53.971" starttime="20210226 02:03:48.343"></status>
</kw>
<msg timestamp="20210226 02:03:53.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:03:53.971" starttime="20210226 02:03:48.342"></status>
</kw>
<msg timestamp="20210226 02:03:53.972" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:03:53.972" starttime="20210226 02:03:48.341"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 02:03:53.972" starttime="20210226 02:03:53.972"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:03:53.981" level="INFO">Running command 'ozone sh bucket create o3://om:9862/10938-rpcwoport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:00.994" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:00.994" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:04:00.994" starttime="20210226 02:03:53.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:00.997" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:04:00.997" starttime="20210226 02:04:00.995"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:00.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:00.998" starttime="20210226 02:04:00.997"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:00.999" starttime="20210226 02:03:53.974"></status>
</kw>
<msg timestamp="20210226 02:04:00.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:00.999" starttime="20210226 02:03:53.973"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:01.000" starttime="20210226 02:03:53.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:01.007" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10938-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:08.192" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:08.192" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210226 02:04:08.192" starttime="20210226 02:04:01.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:08.206" level="INFO">DISK</msg>
<status status="PASS" endtime="20210226 02:04:08.206" starttime="20210226 02:04:08.192"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:08.207" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:08.208" starttime="20210226 02:04:08.206"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:08.208" starttime="20210226 02:04:01.002"></status>
</kw>
<msg timestamp="20210226 02:04:08.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:08.208" starttime="20210226 02:04:01.002"></status>
</kw>
<msg timestamp="20210226 02:04:08.209" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210226 02:04:08.209" starttime="20210226 02:04:01.000"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210226 02:04:08.210" starttime="20210226 02:04:08.209"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:08.217" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10938-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:15.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:15.313" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:04:15.313" starttime="20210226 02:04:08.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:15.314" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 02:04:15.314" starttime="20210226 02:04:15.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:15.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:15.315" starttime="20210226 02:04:15.314"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:15.315" starttime="20210226 02:04:08.212"></status>
</kw>
<msg timestamp="20210226 02:04:15.315" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:15.316" starttime="20210226 02:04:08.211"></status>
</kw>
<msg timestamp="20210226 02:04:15.316" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:04:15.316" starttime="20210226 02:04:08.210"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 02:04:15.317" starttime="20210226 02:04:15.316"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:15.324" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10938-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:22.840" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:22.841" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210226 02:04:22.841" starttime="20210226 02:04:15.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:22.843" level="INFO">100</msg>
<status status="PASS" endtime="20210226 02:04:22.843" starttime="20210226 02:04:22.842"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:22.845" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:22.845" starttime="20210226 02:04:22.844"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:22.846" starttime="20210226 02:04:15.320"></status>
</kw>
<msg timestamp="20210226 02:04:22.846" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:22.846" starttime="20210226 02:04:15.319"></status>
</kw>
<msg timestamp="20210226 02:04:22.846" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210226 02:04:22.847" starttime="20210226 02:04:15.317"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210226 02:04:22.848" starttime="20210226 02:04:22.847"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:22.861" level="INFO">Running command 'ozone sh bucket setquota o3://om:9862/10938-rpcwoport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:31.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:31.032" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:04:31.032" starttime="20210226 02:04:22.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:31.033" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:04:31.033" starttime="20210226 02:04:31.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:31.034" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:31.034" starttime="20210226 02:04:31.033"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:31.034" starttime="20210226 02:04:22.856"></status>
</kw>
<msg timestamp="20210226 02:04:31.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:31.035" starttime="20210226 02:04:22.855"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:31.035" starttime="20210226 02:04:22.848"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:31.040" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10938-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:38.367" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:38.367" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210226 02:04:38.367" starttime="20210226 02:04:31.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:38.368" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210226 02:04:38.368" starttime="20210226 02:04:38.367"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:38.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:38.369" starttime="20210226 02:04:38.369"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:38.370" starttime="20210226 02:04:31.036"></status>
</kw>
<msg timestamp="20210226 02:04:38.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:38.370" starttime="20210226 02:04:31.036"></status>
</kw>
<msg timestamp="20210226 02:04:38.370" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210226 02:04:38.370" starttime="20210226 02:04:31.035"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210226 02:04:38.371" starttime="20210226 02:04:38.371"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:38.376" level="INFO">Running command 'ozone sh bucket info o3://om:9862/10938-rpcwoport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:45.970" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:45.970" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210226 02:04:45.970" starttime="20210226 02:04:38.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:45.972" level="INFO">1000</msg>
<status status="PASS" endtime="20210226 02:04:45.973" starttime="20210226 02:04:45.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:45.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:45.974" starttime="20210226 02:04:45.973"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:45.975" starttime="20210226 02:04:38.373"></status>
</kw>
<msg timestamp="20210226 02:04:45.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:45.975" starttime="20210226 02:04:38.373"></status>
</kw>
<msg timestamp="20210226 02:04:45.975" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210226 02:04:45.976" starttime="20210226 02:04:38.371"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210226 02:04:45.977" starttime="20210226 02:04:45.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:45.984" level="INFO">Running command 'ozone sh bucket list o3://om:9862/10938-rpcwoport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:04:51.297" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:04:51.297" level="INFO">${output} = 10938-rpcwoport</msg>
<status status="PASS" endtime="20210226 02:04:51.298" starttime="20210226 02:04:45.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:04:51.299" level="INFO">10938-rpcwoport</msg>
<status status="PASS" endtime="20210226 02:04:51.299" starttime="20210226 02:04:51.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:04:51.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:04:51.300" starttime="20210226 02:04:51.299"></status>
</kw>
<status status="PASS" endtime="20210226 02:04:51.300" starttime="20210226 02:04:45.980"></status>
</kw>
<msg timestamp="20210226 02:04:51.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:04:51.301" starttime="20210226 02:04:45.979"></status>
</kw>
<msg timestamp="20210226 02:04:51.301" level="INFO">${result} = 10938-rpcwoport</msg>
<status status="PASS" endtime="20210226 02:04:51.301" starttime="20210226 02:04:45.977"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210226 02:04:51.303" starttime="20210226 02:04:51.302"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:04:51.313" level="INFO">Running command 'ozone sh key put o3://om:9862/10938-rpcwoport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:03.530" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:03.532" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:08:03.532" starttime="20210226 02:04:51.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:03.534" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:08:03.534" starttime="20210226 02:08:03.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:03.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:03.536" starttime="20210226 02:08:03.535"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:03.536" starttime="20210226 02:04:51.308"></status>
</kw>
<msg timestamp="20210226 02:08:03.536" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:03.536" starttime="20210226 02:04:51.308"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:03.537" starttime="20210226 02:04:51.306"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:03.541" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:03.544" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:03.545" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:08:03.545" starttime="20210226 02:08:03.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:03.546" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:08:03.546" starttime="20210226 02:08:03.545"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:03.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:03.546" starttime="20210226 02:08:03.546"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:03.547" starttime="20210226 02:08:03.538"></status>
</kw>
<msg timestamp="20210226 02:08:03.547" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:03.547" starttime="20210226 02:08:03.538"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:03.547" starttime="20210226 02:08:03.537"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:03.552" level="INFO">Running command 'ozone sh key get o3://om:9862/10938-rpcwoport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:05.443" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 02:08:05.443" starttime="20210226 02:08:03.550"></status>
</kw>
<status status="FAIL" endtime="20210226 02:08:05.444" starttime="20210226 02:08:03.549"></status>
</kw>
<msg timestamp="20210226 02:08:05.444" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 02:08:05.444" starttime="20210226 02:08:03.549"></status>
</kw>
<status status="FAIL" endtime="20210226 02:08:05.445" starttime="20210226 02:08:03.547"></status>
</kw>
<status status="FAIL" endtime="20210226 02:08:05.445" starttime="20210226 02:04:51.304"></status>
</kw>
<status status="FAIL" endtime="20210226 02:08:05.445" starttime="20210226 02:04:51.304"></status>
</kw>
<status status="FAIL" endtime="20210226 02:08:05.446" starttime="20210226 02:03:05.655"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210226 02:08:05.446" critical="yes" starttime="20210226 02:03:05.442">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t2" name="RpcClient volume acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:05.474" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:05.480" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:05.480" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 02:08:05.481" starttime="20210226 02:08:05.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:05.481" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 02:08:05.482" starttime="20210226 02:08:05.481"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:05.482" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:05.483" starttime="20210226 02:08:05.482"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:05.485" starttime="20210226 02:08:05.458"></status>
</kw>
<msg timestamp="20210226 02:08:05.486" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:05.486" starttime="20210226 02:08:05.457"></status>
</kw>
<msg timestamp="20210226 02:08:05.486" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 02:08:05.486" starttime="20210226 02:08:05.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 02:08:05.495" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 02:08:05.495" starttime="20210226 02:08:05.486"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:05.516" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:05.545" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:05.546" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:08:05.546" starttime="20210226 02:08:05.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:05.547" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:08:05.547" starttime="20210226 02:08:05.546"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:05.548" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:05.550" starttime="20210226 02:08:05.547"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:05.551" starttime="20210226 02:08:05.500"></status>
</kw>
<msg timestamp="20210226 02:08:05.551" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:05.551" starttime="20210226 02:08:05.497"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:05.554" starttime="20210226 02:08:05.495"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:05.556" starttime="20210226 02:08:05.495"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:05.556" starttime="20210226 02:08:05.450"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:05.556" starttime="20210226 02:08:05.448"></status>
</kw>
<kw name="Test Volume Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:05.597" level="INFO">Running command 'ozone sh volume create o3://om:9862/10938-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:17.095" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:17.095" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:08:17.095" starttime="20210226 02:08:05.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:17.096" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:08:17.096" starttime="20210226 02:08:17.095"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:17.097" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:17.098" starttime="20210226 02:08:17.097"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:17.098" starttime="20210226 02:08:05.576"></status>
</kw>
<msg timestamp="20210226 02:08:17.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:17.098" starttime="20210226 02:08:05.574"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:17.099" starttime="20210226 02:08:05.568"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:17.114" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10938-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:24.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:24.999" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:08:25.000" starttime="20210226 02:08:17.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:25.001" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:08:25.002" starttime="20210226 02:08:25.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:25.003" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:25.003" starttime="20210226 02:08:25.002"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:25.003" starttime="20210226 02:08:17.103"></status>
</kw>
<msg timestamp="20210226 02:08:25.004" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:25.004" starttime="20210226 02:08:17.102"></status>
</kw>
<msg timestamp="20210226 02:08:25.004" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:08:25.004" starttime="20210226 02:08:17.099"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:08:25.006" starttime="20210226 02:08:25.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl ${protocol}${server}/${volume} -a user:superuser1:rwxy[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:25.011" level="INFO">Running command 'ozone sh volume addacl o3://om:9862/10938-rpcwoport2 -a user:superuser1:rwxy[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:31.743" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:31.743" level="INFO">${output} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210226 02:08:31.743" starttime="20210226 02:08:25.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:31.745" level="INFO">ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210226 02:08:31.745" starttime="20210226 02:08:31.744"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:31.746" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:31.746" starttime="20210226 02:08:31.745"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:31.747" starttime="20210226 02:08:25.007"></status>
</kw>
<msg timestamp="20210226 02:08:31.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:31.748" starttime="20210226 02:08:25.006"></status>
</kw>
<msg timestamp="20210226 02:08:31.748" level="INFO">${result} = ACL user:superuser1:rwxy[DEFAULT] added successfully.</msg>
<status status="PASS" endtime="20210226 02:08:31.748" starttime="20210226 02:08:25.006"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:31.755" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10938-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:38.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:38.618" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:08:38.618" starttime="20210226 02:08:31.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:38.620" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:08:38.620" starttime="20210226 02:08:38.619"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:38.621" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:38.621" starttime="20210226 02:08:38.620"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:38.622" starttime="20210226 02:08:31.751"></status>
</kw>
<msg timestamp="20210226 02:08:38.622" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:38.622" starttime="20210226 02:08:31.750"></status>
</kw>
<msg timestamp="20210226 02:08:38.622" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:08:38.622" starttime="20210226 02:08:31.748"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:08:38.623" starttime="20210226 02:08:38.622"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume removeacl ${protocol}${server}/${volume} -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:38.639" level="INFO">Running command 'ozone sh volume removeacl o3://om:9862/10938-rpcwoport2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:45.276" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:45.276" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210226 02:08:45.276" starttime="20210226 02:08:38.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:45.278" level="INFO">ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210226 02:08:45.278" starttime="20210226 02:08:45.276"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:45.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:45.279" starttime="20210226 02:08:45.279"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:45.280" starttime="20210226 02:08:38.625"></status>
</kw>
<msg timestamp="20210226 02:08:45.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:45.280" starttime="20210226 02:08:38.624"></status>
</kw>
<msg timestamp="20210226 02:08:45.281" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] doesn't exist.</msg>
<status status="PASS" endtime="20210226 02:08:45.281" starttime="20210226 02:08:38.623"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:45.286" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10938-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:52.092" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:52.093" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:08:52.093" starttime="20210226 02:08:45.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:52.094" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:08:52.094" starttime="20210226 02:08:52.093"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:52.095" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:52.095" starttime="20210226 02:08:52.094"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:52.095" starttime="20210226 02:08:45.283"></status>
</kw>
<msg timestamp="20210226 02:08:52.095" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:52.095" starttime="20210226 02:08:45.283"></status>
</kw>
<msg timestamp="20210226 02:08:52.096" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:08:52.096" starttime="20210226 02:08:45.281"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:08:52.097" starttime="20210226 02:08:52.096"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setacl ${protocol}${server}/${volume} -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:52.101" level="INFO">Running command 'ozone sh volume setacl o3://om:9862/10938-rpcwoport2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:08:57.158" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:08:57.158" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:08:57.158" starttime="20210226 02:08:52.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:08:57.160" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:08:57.160" starttime="20210226 02:08:57.159"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:08:57.160" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:08:57.161" starttime="20210226 02:08:57.160"></status>
</kw>
<status status="PASS" endtime="20210226 02:08:57.161" starttime="20210226 02:08:52.098"></status>
</kw>
<msg timestamp="20210226 02:08:57.161" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:08:57.161" starttime="20210226 02:08:52.098"></status>
</kw>
<msg timestamp="20210226 02:08:57.162" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:08:57.162" starttime="20210226 02:08:52.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume getacl ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:08:57.167" level="INFO">Running command 'ozone sh volume getacl o3://om:9862/10938-rpcwoport2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:04.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:04.179" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210226 02:09:04.180" starttime="20210226 02:08:57.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:04.181" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:09:04.181" starttime="20210226 02:09:04.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:04.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:04.182" starttime="20210226 02:09:04.182"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.183" starttime="20210226 02:08:57.163"></status>
</kw>
<msg timestamp="20210226 02:09:04.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:04.183" starttime="20210226 02:08:57.163"></status>
</kw>
<msg timestamp="20210226 02:09:04.184" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "ac...</msg>
<status status="PASS" endtime="20210226 02:09:04.184" starttime="20210226 02:08:57.162"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:04.184" starttime="20210226 02:09:04.184"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:04.185" starttime="20210226 02:09:04.185"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.186" starttime="20210226 02:08:05.559"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 02:09:04.186" critical="yes" starttime="20210226 02:08:05.447"></status>
</test>
<test id="s1-s1-s5-t3" name="RpcClient bucket acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:04.195" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:04.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:04.198" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 02:09:04.199" starttime="20210226 02:09:04.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:04.200" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 02:09:04.200" starttime="20210226 02:09:04.199"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:04.201" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:04.201" starttime="20210226 02:09:04.201"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.202" starttime="20210226 02:09:04.191"></status>
</kw>
<msg timestamp="20210226 02:09:04.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:04.202" starttime="20210226 02:09:04.190"></status>
</kw>
<msg timestamp="20210226 02:09:04.202" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 02:09:04.202" starttime="20210226 02:09:04.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 02:09:04.203" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 02:09:04.203" starttime="20210226 02:09:04.203"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:04.211" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:04.299" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:04.299" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:09:04.299" starttime="20210226 02:09:04.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:04.301" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:09:04.301" starttime="20210226 02:09:04.300"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:04.301" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:04.301" starttime="20210226 02:09:04.301"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.302" starttime="20210226 02:09:04.206"></status>
</kw>
<msg timestamp="20210226 02:09:04.302" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:04.302" starttime="20210226 02:09:04.205"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.307" starttime="20210226 02:09:04.204"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.307" starttime="20210226 02:09:04.204"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.307" starttime="20210226 02:09:04.189"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:04.307" starttime="20210226 02:09:04.188"></status>
</kw>
<kw name="Test Bucket Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:04.312" level="INFO">Running command 'ozone sh bucket create o3://om:9862/10938-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:10.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:10.974" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:09:10.974" starttime="20210226 02:09:04.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:10.975" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:09:10.975" starttime="20210226 02:09:10.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:10.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:10.976" starttime="20210226 02:09:10.975"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:10.976" starttime="20210226 02:09:04.309"></status>
</kw>
<msg timestamp="20210226 02:09:10.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:10.977" starttime="20210226 02:09:04.309"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:10.977" starttime="20210226 02:09:04.308"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:10.988" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10938-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:15.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:15.767" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:09:15.767" starttime="20210226 02:09:10.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:15.768" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:09:15.769" starttime="20210226 02:09:15.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:15.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:15.769" starttime="20210226 02:09:15.769"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:15.770" starttime="20210226 02:09:10.982"></status>
</kw>
<msg timestamp="20210226 02:09:15.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:15.770" starttime="20210226 02:09:10.978"></status>
</kw>
<msg timestamp="20210226 02:09:15.770" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:09:15.770" starttime="20210226 02:09:10.977"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:15.771" starttime="20210226 02:09:15.770"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:15.776" level="INFO">Running command 'ozone sh bucket addacl o3://om:9862/10938-rpcwoport2/bb1 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:22.304" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:22.304" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210226 02:09:22.304" starttime="20210226 02:09:15.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:22.306" level="INFO">ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210226 02:09:22.306" starttime="20210226 02:09:22.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:22.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:22.307" starttime="20210226 02:09:22.306"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:22.307" starttime="20210226 02:09:15.773"></status>
</kw>
<msg timestamp="20210226 02:09:22.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:22.308" starttime="20210226 02:09:15.772"></status>
</kw>
<msg timestamp="20210226 02:09:22.308" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] already exists.</msg>
<status status="PASS" endtime="20210226 02:09:22.308" starttime="20210226 02:09:15.771"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:22.315" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10938-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:27.363" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:27.363" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:09:27.363" starttime="20210226 02:09:22.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:27.364" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:09:27.364" starttime="20210226 02:09:27.364"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:27.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:27.365" starttime="20210226 02:09:27.365"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:27.366" starttime="20210226 02:09:22.311"></status>
</kw>
<msg timestamp="20210226 02:09:27.366" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:27.366" starttime="20210226 02:09:22.310"></status>
</kw>
<msg timestamp="20210226 02:09:27.366" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:09:27.366" starttime="20210226 02:09:22.309"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:27.368" starttime="20210226 02:09:27.367"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket removeacl ${protocol}${server}/${volume}/bb1 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:27.372" level="INFO">Running command 'ozone sh bucket removeacl o3://om:9862/10938-rpcwoport2/bb1 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:33.337" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:33.337" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210226 02:09:33.337" starttime="20210226 02:09:27.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:33.339" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210226 02:09:33.339" starttime="20210226 02:09:33.338"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:33.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:33.341" starttime="20210226 02:09:33.339"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:33.342" starttime="20210226 02:09:27.369"></status>
</kw>
<msg timestamp="20210226 02:09:33.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:33.342" starttime="20210226 02:09:27.368"></status>
</kw>
<msg timestamp="20210226 02:09:33.342" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210226 02:09:33.342" starttime="20210226 02:09:27.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:33.349" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10938-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:38.162" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:38.162" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:09:38.162" starttime="20210226 02:09:33.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:38.163" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:09:38.164" starttime="20210226 02:09:38.163"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:38.164" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:38.164" starttime="20210226 02:09:38.164"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:38.165" starttime="20210226 02:09:33.344"></status>
</kw>
<msg timestamp="20210226 02:09:38.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:38.166" starttime="20210226 02:09:33.344"></status>
</kw>
<msg timestamp="20210226 02:09:38.166" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:09:38.166" starttime="20210226 02:09:33.343"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:38.167" starttime="20210226 02:09:38.167"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setacl ${protocol}${server}/${volume}/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT]</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:38.172" level="INFO">Running command 'ozone sh bucket setacl o3://om:9862/10938-rpcwoport2/bb1 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc,group:superuser1:a[DEFAULT] 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:43.650" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:43.651" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:09:43.651" starttime="20210226 02:09:38.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:43.652" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:09:43.652" starttime="20210226 02:09:43.651"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:43.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:43.653" starttime="20210226 02:09:43.652"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:43.653" starttime="20210226 02:09:38.169"></status>
</kw>
<msg timestamp="20210226 02:09:43.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:43.653" starttime="20210226 02:09:38.168"></status>
</kw>
<msg timestamp="20210226 02:09:43.653" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:09:43.654" starttime="20210226 02:09:38.168"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket getacl ${protocol}${server}/${volume}/bb1</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:43.657" level="INFO">Running command 'ozone sh bucket getacl o3://om:9862/10938-rpcwoport2/bb1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:48.856" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:48.856" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210226 02:09:48.856" starttime="20210226 02:09:43.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:48.857" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "DEFAULT",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:09:48.857" starttime="20210226 02:09:48.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:48.858" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:48.859" starttime="20210226 02:09:48.858"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.859" starttime="20210226 02:09:43.655"></status>
</kw>
<msg timestamp="20210226 02:09:48.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:48.860" starttime="20210226 02:09:43.654"></status>
</kw>
<msg timestamp="20210226 02:09:48.860" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210226 02:09:48.860" starttime="20210226 02:09:43.654"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:48.861" starttime="20210226 02:09:48.861"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"DEFAULT\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:09:48.862" starttime="20210226 02:09:48.862"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.863" starttime="20210226 02:09:04.308"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 02:09:48.863" critical="yes" starttime="20210226 02:09:04.187"></status>
</test>
<test id="s1-s1-s5-t4" name="RpcClient key acls">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:48.871" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:48.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:48.874" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 02:09:48.874" starttime="20210226 02:09:48.869"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:48.875" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 02:09:48.875" starttime="20210226 02:09:48.875"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:48.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:48.876" starttime="20210226 02:09:48.876"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.876" starttime="20210226 02:09:48.869"></status>
</kw>
<msg timestamp="20210226 02:09:48.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:48.877" starttime="20210226 02:09:48.868"></status>
</kw>
<msg timestamp="20210226 02:09:48.877" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 02:09:48.877" starttime="20210226 02:09:48.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 02:09:48.878" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 02:09:48.878" starttime="20210226 02:09:48.877"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:48.883" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:09:48.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:09:48.894" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:09:48.894" starttime="20210226 02:09:48.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:09:48.896" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:09:48.896" starttime="20210226 02:09:48.895"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:09:48.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:09:48.897" starttime="20210226 02:09:48.896"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.898" starttime="20210226 02:09:48.879"></status>
</kw>
<msg timestamp="20210226 02:09:48.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:09:48.898" starttime="20210226 02:09:48.879"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.899" starttime="20210226 02:09:48.879"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.899" starttime="20210226 02:09:48.878"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.900" starttime="20210226 02:09:48.867"></status>
</kw>
<status status="PASS" endtime="20210226 02:09:48.900" starttime="20210226 02:09:48.866"></status>
</kw>
<kw name="Test key Acls" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>om:9862</arg>
<arg>${prefix}-rpcwoport2</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:09:48.907" level="INFO">Running command 'ozone sh key put o3://om:9862/10938-rpcwoport2/bb1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:12:59.730" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:12:59.730" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:12:59.730" starttime="20210226 02:09:48.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:12:59.732" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:12:59.732" starttime="20210226 02:12:59.731"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:12:59.732" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:12:59.732" starttime="20210226 02:12:59.732"></status>
</kw>
<status status="PASS" endtime="20210226 02:12:59.733" starttime="20210226 02:09:48.904"></status>
</kw>
<msg timestamp="20210226 02:12:59.733" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:12:59.733" starttime="20210226 02:09:48.903"></status>
</kw>
<status status="PASS" endtime="20210226 02:12:59.733" starttime="20210226 02:09:48.902"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:12:59.738" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10938-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:06.402" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:06.402" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:13:06.402" starttime="20210226 02:12:59.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:06.403" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:13:06.403" starttime="20210226 02:13:06.402"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:06.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:06.404" starttime="20210226 02:13:06.403"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:06.404" starttime="20210226 02:12:59.734"></status>
</kw>
<msg timestamp="20210226 02:13:06.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:06.405" starttime="20210226 02:12:59.734"></status>
</kw>
<msg timestamp="20210226 02:13:06.405" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:13:06.405" starttime="20210226 02:12:59.733"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \".*\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:06.406" starttime="20210226 02:13:06.405"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key addacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:rwxy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:06.410" level="INFO">Running command 'ozone sh key addacl o3://om:9862/10938-rpcwoport2/bb1/key2 -a user:superuser1:rwxy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:11.972" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:11.972" level="INFO">${output} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 02:13:11.972" starttime="20210226 02:13:06.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:11.973" level="INFO">ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 02:13:11.973" starttime="20210226 02:13:11.972"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:11.974" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:11.974" starttime="20210226 02:13:11.973"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:11.974" starttime="20210226 02:13:06.407"></status>
</kw>
<msg timestamp="20210226 02:13:11.974" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:11.975" starttime="20210226 02:13:06.407"></status>
</kw>
<msg timestamp="20210226 02:13:11.975" level="INFO">${result} = ACL user:superuser1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210226 02:13:11.975" starttime="20210226 02:13:06.406"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:11.979" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10938-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:18.198" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:18.199" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:13:18.199" starttime="20210226 02:13:11.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:18.202" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:13:18.202" starttime="20210226 02:13:18.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:18.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:18.203" starttime="20210226 02:13:18.202"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:18.203" starttime="20210226 02:13:11.976"></status>
</kw>
<msg timestamp="20210226 02:13:18.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:18.203" starttime="20210226 02:13:11.976"></status>
</kw>
<msg timestamp="20210226 02:13:18.204" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:13:18.204" starttime="20210226 02:13:11.975"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:18.205" starttime="20210226 02:13:18.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key removeacl ${protocol}${server}/${volume}/bb1/key2 -a user:superuser1:xy</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:18.210" level="INFO">Running command 'ozone sh key removeacl o3://om:9862/10938-rpcwoport2/bb1/key2 -a user:superuser1:xy 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:24.686" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:24.686" level="INFO">${output} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210226 02:13:24.686" starttime="20210226 02:13:18.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:24.687" level="INFO">ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210226 02:13:24.687" starttime="20210226 02:13:24.687"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:24.688" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:24.688" starttime="20210226 02:13:24.688"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:24.689" starttime="20210226 02:13:18.207"></status>
</kw>
<msg timestamp="20210226 02:13:24.689" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:24.689" starttime="20210226 02:13:18.206"></status>
</kw>
<msg timestamp="20210226 02:13:24.689" level="INFO">${result} = ACL user:superuser1:xy[ACCESS] removed successfully.</msg>
<status status="PASS" endtime="20210226 02:13:24.689" starttime="20210226 02:13:18.206"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:24.696" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10938-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:31.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:31.193" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:13:31.194" starttime="20210226 02:13:24.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:31.195" level="INFO">[ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:13:31.195" starttime="20210226 02:13:31.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:31.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:31.196" starttime="20210226 02:13:31.195"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:31.197" starttime="20210226 02:13:24.692"></status>
</kw>
<msg timestamp="20210226 02:13:31.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:31.197" starttime="20210226 02:13:24.691"></status>
</kw>
<msg timestamp="20210226 02:13:31.197" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "GROUP",
  "name" : "root",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL...</msg>
<status status="PASS" endtime="20210226 02:13:31.198" starttime="20210226 02:13:24.689"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\"</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:31.199" starttime="20210226 02:13:31.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key setacl ${protocol}${server}/${volume}/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:31.204" level="INFO">Running command 'ozone sh key setacl o3://om:9862/10938-rpcwoport2/bb1/key2 -al user:superuser1:rwxy,group:superuser1:a,user:testuser/scm@EXAMPLE.COM:rwxyc 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:37.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:37.426" level="INFO">${output} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:13:37.427" starttime="20210226 02:13:31.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:37.428" level="INFO">ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:13:37.429" starttime="20210226 02:13:37.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:37.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:37.430" starttime="20210226 02:13:37.429"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:37.431" starttime="20210226 02:13:31.200"></status>
</kw>
<msg timestamp="20210226 02:13:37.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:37.431" starttime="20210226 02:13:31.200"></status>
</kw>
<msg timestamp="20210226 02:13:37.432" level="INFO">${result} = ACLs set successfully.</msg>
<status status="PASS" endtime="20210226 02:13:37.432" starttime="20210226 02:13:31.199"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key getacl ${protocol}${server}/${volume}/bb1/key2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:37.437" level="INFO">Running command 'ozone sh key getacl o3://om:9862/10938-rpcwoport2/bb1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:44.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:44.278" level="INFO">${output} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210226 02:13:44.278" starttime="20210226 02:13:37.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:44.279" level="INFO">[ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "ALL" ]
}, {
  "type" : "USER",
  "name" : "testuser/scm@EXAMPLE.COM",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "CREATE", "READ_ACL", "WRITE_ACL" ]
} ]</msg>
<status status="PASS" endtime="20210226 02:13:44.279" starttime="20210226 02:13:44.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:44.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:44.280" starttime="20210226 02:13:44.280"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.281" starttime="20210226 02:13:37.434"></status>
</kw>
<msg timestamp="20210226 02:13:44.281" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:44.281" starttime="20210226 02:13:37.433"></status>
</kw>
<msg timestamp="20210226 02:13:44.281" level="INFO">${result} = [ {
  "type" : "USER",
  "name" : "superuser1",
  "aclScope" : "ACCESS",
  "aclList" : [ "READ", "WRITE", "READ_ACL", "WRITE_ACL" ]
}, {
  "type" : "GROUP",
  "name" : "superuser1",
  "aclScope" : "AC...</msg>
<status status="PASS" endtime="20210226 02:13:44.281" starttime="20210226 02:13:37.432"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"USER\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"READ\", \"WRITE\", \"READ_ACL\", \"WRITE_ACL\"</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:44.282" starttime="20210226 02:13:44.281"></status>
</kw>
<kw name="Should Match Regexp" library="BuiltIn">
<doc>Fails if ``string`` does not match ``pattern`` as a regular expression.</doc>
<arguments>
<arg>${result}</arg>
<arg>\"type\" : \"GROUP\",\n.*\"name\" : \"superuser1\",\n.*\"aclScope\" : \"ACCESS\",\n.*\"aclList\" : . \"ALL\" .</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:44.283" starttime="20210226 02:13:44.282"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.283" starttime="20210226 02:09:48.901"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210226 02:13:44.283" critical="yes" starttime="20210226 02:09:48.864"></status>
</test>
<test id="s1-s1-s5-t5" name="RpcClient without host">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:44.291" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:44.294" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:44.294" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 02:13:44.294" starttime="20210226 02:13:44.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:44.295" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 02:13:44.295" starttime="20210226 02:13:44.294"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:44.295" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:44.296" starttime="20210226 02:13:44.295"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.296" starttime="20210226 02:13:44.287"></status>
</kw>
<msg timestamp="20210226 02:13:44.296" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:44.296" starttime="20210226 02:13:44.287"></status>
</kw>
<msg timestamp="20210226 02:13:44.297" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 02:13:44.297" starttime="20210226 02:13:44.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 02:13:44.298" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 02:13:44.298" starttime="20210226 02:13:44.297"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:44.304" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:44.313" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:44.313" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:13:44.313" starttime="20210226 02:13:44.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:44.314" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:13:44.314" starttime="20210226 02:13:44.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:44.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:44.315" starttime="20210226 02:13:44.315"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.316" starttime="20210226 02:13:44.300"></status>
</kw>
<msg timestamp="20210226 02:13:44.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:44.316" starttime="20210226 02:13:44.299"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.316" starttime="20210226 02:13:44.298"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.316" starttime="20210226 02:13:44.298"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.317" starttime="20210226 02:13:44.285"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:44.317" starttime="20210226 02:13:44.285"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>o3://</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwport</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:44.322" level="INFO">Running command 'ozone sh volume info o3:///10938-rpcwport 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:50.913" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 02:13:50.913" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10938-rpcwport is not found</msg>
<status status="PASS" endtime="20210226 02:13:50.913" starttime="20210226 02:13:44.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:50.915" level="INFO">VOLUME_NOT_FOUND Volume 10938-rpcwport is not found</msg>
<status status="PASS" endtime="20210226 02:13:50.915" starttime="20210226 02:13:50.914"></status>
</kw>
<msg timestamp="20210226 02:13:50.916" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10938-rpcwport is not found</msg>
<status status="PASS" endtime="20210226 02:13:50.916" starttime="20210226 02:13:44.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:50.917" starttime="20210226 02:13:50.916"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:50.921" level="INFO">Running command 'ozone sh volume create o3:///10938-rpcwport --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:13:57.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:13:57.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:13:57.282" starttime="20210226 02:13:50.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:13:57.283" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:13:57.283" starttime="20210226 02:13:57.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:13:57.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:13:57.284" starttime="20210226 02:13:57.283"></status>
</kw>
<status status="PASS" endtime="20210226 02:13:57.285" starttime="20210226 02:13:50.918"></status>
</kw>
<msg timestamp="20210226 02:13:57.285" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:13:57.285" starttime="20210226 02:13:50.918"></status>
</kw>
<msg timestamp="20210226 02:13:57.285" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210226 02:13:57.285" starttime="20210226 02:13:50.917"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210226 02:13:57.286" starttime="20210226 02:13:57.285"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:13:57.294" level="INFO">Running command 'ozone sh volume list o3:/// | jq -r '. | select(.name=="10938-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:04.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:04.539" level="INFO">${output} = {
  "metadata": {},
  "name": "10938-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 02:14:04.539" starttime="20210226 02:13:57.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:04.541" level="INFO">{
  "metadata": {},
  "name": "10938-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T02:13:57.202Z",
  "modificationTime": "2021-02-26T02:13:57.202Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 02:14:04.541" starttime="20210226 02:14:04.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:04.542" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:04.542" starttime="20210226 02:14:04.541"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:04.542" starttime="20210226 02:13:57.288"></status>
</kw>
<msg timestamp="20210226 02:14:04.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:04.542" starttime="20210226 02:13:57.287"></status>
</kw>
<msg timestamp="20210226 02:14:04.543" level="INFO">${result} = {
  "metadata": {},
  "name": "10938-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 02:14:04.543" starttime="20210226 02:13:57.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 02:14:04.544" starttime="20210226 02:14:04.543"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:04.550" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10938-rpcwport")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:11.937" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:11.938" level="INFO">${output} = {
  "metadata": {},
  "name": "10938-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 02:14:11.938" starttime="20210226 02:14:04.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:11.939" level="INFO">{
  "metadata": {},
  "name": "10938-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T02:13:57.202Z",
  "modificationTime": "2021-02-26T02:13:57.202Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 02:14:11.939" starttime="20210226 02:14:11.938"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:11.939" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:11.940" starttime="20210226 02:14:11.939"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:11.940" starttime="20210226 02:14:04.546"></status>
</kw>
<msg timestamp="20210226 02:14:11.940" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:11.940" starttime="20210226 02:14:04.545"></status>
</kw>
<msg timestamp="20210226 02:14:11.940" level="INFO">${result} = {
  "metadata": {},
  "name": "10938-rpcwport",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNames...</msg>
<status status="PASS" endtime="20210226 02:14:11.941" starttime="20210226 02:14:04.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 02:14:11.941" starttime="20210226 02:14:11.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:11.946" level="INFO">Running command 'ozone sh volume setquota o3:///10938-rpcwport --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:18.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:18.344" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:14:18.344" starttime="20210226 02:14:11.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:18.345" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:14:18.345" starttime="20210226 02:14:18.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:18.346" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:18.346" starttime="20210226 02:14:18.345"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:18.346" starttime="20210226 02:14:11.942"></status>
</kw>
<msg timestamp="20210226 02:14:18.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:18.346" starttime="20210226 02:14:11.942"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:18.346" starttime="20210226 02:14:11.941"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:18.356" level="INFO">Running command 'ozone sh volume info o3:///10938-rpcwport | jq -r '. | select(.name=="10938-rpcwport") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:25.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:25.066" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:14:25.067" starttime="20210226 02:14:18.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:25.069" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 02:14:25.069" starttime="20210226 02:14:25.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:25.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:25.070" starttime="20210226 02:14:25.069"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:25.071" starttime="20210226 02:14:18.348"></status>
</kw>
<msg timestamp="20210226 02:14:25.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:25.072" starttime="20210226 02:14:18.348"></status>
</kw>
<msg timestamp="20210226 02:14:25.072" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:14:25.072" starttime="20210226 02:14:18.347"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 02:14:25.073" starttime="20210226 02:14:25.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:25.081" level="INFO">Running command 'ozone sh bucket create o3:///10938-rpcwport/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:31.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:31.060" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:14:31.060" starttime="20210226 02:14:25.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:31.061" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:14:31.062" starttime="20210226 02:14:31.061"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:31.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:31.062" starttime="20210226 02:14:31.062"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:31.063" starttime="20210226 02:14:25.076"></status>
</kw>
<msg timestamp="20210226 02:14:31.063" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:31.063" starttime="20210226 02:14:25.075"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:31.063" starttime="20210226 02:14:25.073"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:31.069" level="INFO">Running command 'ozone sh bucket info o3:///10938-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:38.056" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:38.056" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210226 02:14:38.056" starttime="20210226 02:14:31.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:38.058" level="INFO">DISK</msg>
<status status="PASS" endtime="20210226 02:14:38.058" starttime="20210226 02:14:38.057"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:38.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:38.059" starttime="20210226 02:14:38.058"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:38.060" starttime="20210226 02:14:31.065"></status>
</kw>
<msg timestamp="20210226 02:14:38.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:38.061" starttime="20210226 02:14:31.064"></status>
</kw>
<msg timestamp="20210226 02:14:38.061" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210226 02:14:38.061" starttime="20210226 02:14:31.063"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210226 02:14:38.062" starttime="20210226 02:14:38.061"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:38.069" level="INFO">Running command 'ozone sh bucket info o3:///10938-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:43.254" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:43.255" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:14:43.255" starttime="20210226 02:14:38.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:43.258" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 02:14:43.258" starttime="20210226 02:14:43.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:43.259" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:43.260" starttime="20210226 02:14:43.258"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:43.260" starttime="20210226 02:14:38.063"></status>
</kw>
<msg timestamp="20210226 02:14:43.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:43.261" starttime="20210226 02:14:38.063"></status>
</kw>
<msg timestamp="20210226 02:14:43.261" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:14:43.261" starttime="20210226 02:14:38.062"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 02:14:43.262" starttime="20210226 02:14:43.261"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:43.270" level="INFO">Running command 'ozone sh bucket info o3:///10938-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:48.619" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:48.620" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210226 02:14:48.620" starttime="20210226 02:14:43.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:48.622" level="INFO">100</msg>
<status status="PASS" endtime="20210226 02:14:48.622" starttime="20210226 02:14:48.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:48.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:48.622" starttime="20210226 02:14:48.622"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:48.623" starttime="20210226 02:14:43.265"></status>
</kw>
<msg timestamp="20210226 02:14:48.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:48.623" starttime="20210226 02:14:43.265"></status>
</kw>
<msg timestamp="20210226 02:14:48.623" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210226 02:14:48.623" starttime="20210226 02:14:43.262"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210226 02:14:48.624" starttime="20210226 02:14:48.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:48.631" level="INFO">Running command 'ozone sh bucket setquota o3:///10938-rpcwport/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:14:54.979" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:14:54.979" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:14:54.979" starttime="20210226 02:14:48.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:14:54.980" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:14:54.980" starttime="20210226 02:14:54.979"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:14:54.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:14:54.981" starttime="20210226 02:14:54.980"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:54.981" starttime="20210226 02:14:48.626"></status>
</kw>
<msg timestamp="20210226 02:14:54.981" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:14:54.981" starttime="20210226 02:14:48.625"></status>
</kw>
<status status="PASS" endtime="20210226 02:14:54.982" starttime="20210226 02:14:48.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:14:54.986" level="INFO">Running command 'ozone sh bucket info o3:///10938-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:15:00.284" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:15:00.284" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210226 02:15:00.285" starttime="20210226 02:14:54.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:15:00.287" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210226 02:15:00.287" starttime="20210226 02:15:00.285"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:15:00.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:15:00.289" starttime="20210226 02:15:00.287"></status>
</kw>
<status status="PASS" endtime="20210226 02:15:00.289" starttime="20210226 02:14:54.983"></status>
</kw>
<msg timestamp="20210226 02:15:00.289" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:15:00.290" starttime="20210226 02:14:54.983"></status>
</kw>
<msg timestamp="20210226 02:15:00.290" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210226 02:15:00.290" starttime="20210226 02:14:54.982"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210226 02:15:00.291" starttime="20210226 02:15:00.290"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:15:00.298" level="INFO">Running command 'ozone sh bucket info o3:///10938-rpcwport/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:15:07.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:15:07.417" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210226 02:15:07.417" starttime="20210226 02:15:00.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:15:07.419" level="INFO">1000</msg>
<status status="PASS" endtime="20210226 02:15:07.419" starttime="20210226 02:15:07.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:15:07.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:15:07.420" starttime="20210226 02:15:07.420"></status>
</kw>
<status status="PASS" endtime="20210226 02:15:07.421" starttime="20210226 02:15:00.294"></status>
</kw>
<msg timestamp="20210226 02:15:07.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:15:07.421" starttime="20210226 02:15:00.293"></status>
</kw>
<msg timestamp="20210226 02:15:07.421" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210226 02:15:07.421" starttime="20210226 02:15:00.292"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210226 02:15:07.422" starttime="20210226 02:15:07.421"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:15:07.427" level="INFO">Running command 'ozone sh bucket list o3:///10938-rpcwport/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:15:14.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:15:14.648" level="INFO">${output} = 10938-rpcwport</msg>
<status status="PASS" endtime="20210226 02:15:14.648" starttime="20210226 02:15:07.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:15:14.650" level="INFO">10938-rpcwport</msg>
<status status="PASS" endtime="20210226 02:15:14.651" starttime="20210226 02:15:14.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:15:14.652" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:15:14.652" starttime="20210226 02:15:14.651"></status>
</kw>
<status status="PASS" endtime="20210226 02:15:14.653" starttime="20210226 02:15:07.423"></status>
</kw>
<msg timestamp="20210226 02:15:14.653" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:15:14.653" starttime="20210226 02:15:07.423"></status>
</kw>
<msg timestamp="20210226 02:15:14.654" level="INFO">${result} = 10938-rpcwport</msg>
<status status="PASS" endtime="20210226 02:15:14.654" starttime="20210226 02:15:07.422"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210226 02:15:14.655" starttime="20210226 02:15:14.654"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:15:14.664" level="INFO">Running command 'ozone sh key put o3:///10938-rpcwport/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:26.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:18:26.526" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:18:26.526" starttime="20210226 02:15:14.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:26.528" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:18:26.528" starttime="20210226 02:18:26.526"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:18:26.529" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:18:26.530" starttime="20210226 02:18:26.529"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:26.530" starttime="20210226 02:15:14.660"></status>
</kw>
<msg timestamp="20210226 02:18:26.530" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:18:26.531" starttime="20210226 02:15:14.659"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:26.531" starttime="20210226 02:15:14.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:26.537" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:26.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:18:26.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:18:26.542" starttime="20210226 02:18:26.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:26.544" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:18:26.544" starttime="20210226 02:18:26.543"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:18:26.545" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:18:26.546" starttime="20210226 02:18:26.544"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:26.546" starttime="20210226 02:18:26.533"></status>
</kw>
<msg timestamp="20210226 02:18:26.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:18:26.547" starttime="20210226 02:18:26.533"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:26.547" starttime="20210226 02:18:26.531"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:26.553" level="INFO">Running command 'ozone sh key get o3:///10938-rpcwport/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:37.327" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:18:37.327" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:18:37.327" starttime="20210226 02:18:26.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:37.332" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:18:37.333" starttime="20210226 02:18:37.330"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:18:37.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:18:37.334" starttime="20210226 02:18:37.333"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:37.335" starttime="20210226 02:18:26.550"></status>
</kw>
<msg timestamp="20210226 02:18:37.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:18:37.336" starttime="20210226 02:18:26.549"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:37.336" starttime="20210226 02:18:26.548"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:37.345" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:37.349" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:18:37.349" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:18:37.349" starttime="20210226 02:18:37.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:37.351" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:18:37.351" starttime="20210226 02:18:37.350"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:18:37.353" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:18:37.354" starttime="20210226 02:18:37.351"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:37.355" starttime="20210226 02:18:37.339"></status>
</kw>
<msg timestamp="20210226 02:18:37.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:18:37.356" starttime="20210226 02:18:37.338"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:37.356" starttime="20210226 02:18:37.337"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put -t RATIS ${protocol}${server}/${volume}/bb1/key1_RATIS /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:37.363" level="INFO">Running command 'ozone sh key put -t RATIS o3:///10938-rpcwport/bb1/key1_RATIS /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:44.285" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 02:18:44.285" starttime="20210226 02:18:37.359"></status>
</kw>
<status status="FAIL" endtime="20210226 02:18:44.285" starttime="20210226 02:18:37.358"></status>
</kw>
<msg timestamp="20210226 02:18:44.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 02:18:44.286" starttime="20210226 02:18:37.358"></status>
</kw>
<status status="FAIL" endtime="20210226 02:18:44.286" starttime="20210226 02:18:37.357"></status>
</kw>
<status status="FAIL" endtime="20210226 02:18:44.286" starttime="20210226 02:15:14.656"></status>
</kw>
<status status="FAIL" endtime="20210226 02:18:44.286" starttime="20210226 02:15:14.656"></status>
</kw>
<status status="FAIL" endtime="20210226 02:18:44.287" starttime="20210226 02:13:44.317"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210226 02:18:44.289" critical="yes" starttime="20210226 02:13:44.284">Test timeout 5 minutes exceeded.</status>
</test>
<test id="s1-s1-s5-t6" name="RpcClient without scheme">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:44.318" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:44.336" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:18:44.337" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 02:18:44.337" starttime="20210226 02:18:44.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:44.340" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 02:18:44.340" starttime="20210226 02:18:44.337"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:18:44.341" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:18:44.341" starttime="20210226 02:18:44.340"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:44.341" starttime="20210226 02:18:44.306"></status>
</kw>
<msg timestamp="20210226 02:18:44.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:18:44.342" starttime="20210226 02:18:44.306"></status>
</kw>
<msg timestamp="20210226 02:18:44.342" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 02:18:44.342" starttime="20210226 02:18:44.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 02:18:44.345" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 02:18:44.345" starttime="20210226 02:18:44.344"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:44.378" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:44.428" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:18:44.428" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:18:44.428" starttime="20210226 02:18:44.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:44.429" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:18:44.430" starttime="20210226 02:18:44.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:18:44.430" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:18:44.430" starttime="20210226 02:18:44.430"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:44.431" starttime="20210226 02:18:44.357"></status>
</kw>
<msg timestamp="20210226 02:18:44.431" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:18:44.431" starttime="20210226 02:18:44.356"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:44.431" starttime="20210226 02:18:44.346"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:44.431" starttime="20210226 02:18:44.345"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:44.431" starttime="20210226 02:18:44.297"></status>
</kw>
<status status="PASS" endtime="20210226 02:18:44.431" starttime="20210226 02:18:44.296"></status>
</kw>
<kw name="Test ozone shell" library="ozone-shell-lib">
<arguments>
<arg>${EMPTY}</arg>
<arg>${EMPTY}</arg>
<arg>${prefix}-rpcwoscheme</arg>
</arguments>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:44.450" level="INFO">Running command 'ozone sh volume info /10938-rpcwoscheme 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:18:54.754" level="INFO">${rc} = 255</msg>
<msg timestamp="20210226 02:18:54.754" level="INFO">${output} = VOLUME_NOT_FOUND Volume 10938-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210226 02:18:54.755" starttime="20210226 02:18:44.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:18:54.757" level="INFO">VOLUME_NOT_FOUND Volume 10938-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210226 02:18:54.757" starttime="20210226 02:18:54.756"></status>
</kw>
<msg timestamp="20210226 02:18:54.758" level="INFO">${result} = VOLUME_NOT_FOUND Volume 10938-rpcwoscheme is not found</msg>
<status status="PASS" endtime="20210226 02:18:54.758" starttime="20210226 02:18:44.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>VOLUME_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210226 02:18:54.759" starttime="20210226 02:18:54.758"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${protocol}${server}/${volume} --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:18:54.764" level="INFO">Running command 'ozone sh volume create /10938-rpcwoscheme --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:03.319" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:03.319" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:19:03.320" starttime="20210226 02:18:54.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:03.321" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:19:03.321" starttime="20210226 02:19:03.320"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:03.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:03.322" starttime="20210226 02:19:03.321"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:03.322" starttime="20210226 02:18:54.760"></status>
</kw>
<msg timestamp="20210226 02:19:03.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:03.322" starttime="20210226 02:18:54.760"></status>
</kw>
<msg timestamp="20210226 02:19:03.322" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210226 02:19:03.323" starttime="20210226 02:18:54.759"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:03.323" starttime="20210226 02:19:03.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list ${protocol}${server}/ | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:03.329" level="INFO">Running command 'ozone sh volume list / | jq -r '. | select(.name=="10938-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:11.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:11.179" level="INFO">${output} = {
  "metadata": {},
  "name": "10938-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210226 02:19:11.180" starttime="20210226 02:19:03.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:11.181" level="INFO">{
  "metadata": {},
  "name": "10938-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T02:19:03.009Z",
  "modificationTime": "2021-02-26T02:19:03.009Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 02:19:11.181" starttime="20210226 02:19:11.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:11.182" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:11.182" starttime="20210226 02:19:11.181"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:11.182" starttime="20210226 02:19:03.325"></status>
</kw>
<msg timestamp="20210226 02:19:11.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:11.182" starttime="20210226 02:19:03.325"></status>
</kw>
<msg timestamp="20210226 02:19:11.183" level="INFO">${result} = {
  "metadata": {},
  "name": "10938-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210226 02:19:11.183" starttime="20210226 02:19:03.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:11.184" starttime="20210226 02:19:11.183"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume list | jq -r '. | select(.name=="${volume}")'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:11.190" level="INFO">Running command 'ozone sh volume list | jq -r '. | select(.name=="10938-rpcwoscheme")' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:16.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:16.816" level="INFO">${output} = {
  "metadata": {},
  "name": "10938-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210226 02:19:16.816" starttime="20210226 02:19:11.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:16.817" level="INFO">{
  "metadata": {},
  "name": "10938-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNamespace": 0,
  "creationTime": "2021-02-26T02:19:03.009Z",
  "modificationTime": "2021-02-26T02:19:03.009Z",
  "acls": [
    {
      "type": "USER",
      "name": "testuser/scm@EXAMPLE.COM",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    },
    {
      "type": "GROUP",
      "name": "root",
      "aclScope": "ACCESS",
      "aclList": [
        "ALL"
      ]
    }
  ]
}</msg>
<status status="PASS" endtime="20210226 02:19:16.818" starttime="20210226 02:19:16.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:16.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:16.818" starttime="20210226 02:19:16.818"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:16.819" starttime="20210226 02:19:11.185"></status>
</kw>
<msg timestamp="20210226 02:19:16.819" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:16.819" starttime="20210226 02:19:11.185"></status>
</kw>
<msg timestamp="20210226 02:19:16.820" level="INFO">${result} = {
  "metadata": {},
  "name": "10938-rpcwoscheme",
  "admin": "testuser/scm@EXAMPLE.COM",
  "owner": "testuser/scm@EXAMPLE.COM",
  "quotaInBytes": 109951162777600,
  "quotaInNamespace": 100,
  "usedNa...</msg>
<status status="PASS" endtime="20210226 02:19:16.820" starttime="20210226 02:19:11.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>creationTime</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:16.821" starttime="20210226 02:19:16.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume setquota ${protocol}${server}/${volume} --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:16.826" level="INFO">Running command 'ozone sh volume setquota /10938-rpcwoscheme --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:23.285" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:23.285" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:19:23.286" starttime="20210226 02:19:16.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:23.289" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:19:23.289" starttime="20210226 02:19:23.287"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:23.290" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:23.290" starttime="20210226 02:19:23.289"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:23.291" starttime="20210226 02:19:16.822"></status>
</kw>
<msg timestamp="20210226 02:19:23.291" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:23.291" starttime="20210226 02:19:16.822"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:23.292" starttime="20210226 02:19:16.821"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume info ${protocol}${server}/${volume} | jq -r '. | select(.name=="${volume}") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:23.297" level="INFO">Running command 'ozone sh volume info /10938-rpcwoscheme | jq -r '. | select(.name=="10938-rpcwoscheme") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:31.235" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:31.235" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:19:31.235" starttime="20210226 02:19:23.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:31.237" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 02:19:31.237" starttime="20210226 02:19:31.236"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:31.238" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:31.238" starttime="20210226 02:19:31.237"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:31.238" starttime="20210226 02:19:23.294"></status>
</kw>
<msg timestamp="20210226 02:19:31.238" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:31.238" starttime="20210226 02:19:23.293"></status>
</kw>
<msg timestamp="20210226 02:19:31.239" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:19:31.239" starttime="20210226 02:19:23.292"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:31.239" starttime="20210226 02:19:31.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${protocol}${server}/${volume}/bb1 --space-quota 10TB --namespace-quota 100</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:31.245" level="INFO">Running command 'ozone sh bucket create /10938-rpcwoscheme/bb1 --space-quota 10TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:38.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:38.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:19:38.055" starttime="20210226 02:19:31.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:38.057" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:19:38.058" starttime="20210226 02:19:38.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:38.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:38.059" starttime="20210226 02:19:38.058"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:38.060" starttime="20210226 02:19:31.242"></status>
</kw>
<msg timestamp="20210226 02:19:38.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:38.060" starttime="20210226 02:19:31.241"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:38.061" starttime="20210226 02:19:31.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .storageType'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:38.069" level="INFO">Running command 'ozone sh bucket info /10938-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .storageType' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:45.356" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:45.356" level="INFO">${output} = DISK</msg>
<status status="PASS" endtime="20210226 02:19:45.356" starttime="20210226 02:19:38.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:45.358" level="INFO">DISK</msg>
<status status="PASS" endtime="20210226 02:19:45.358" starttime="20210226 02:19:45.357"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:45.359" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:45.359" starttime="20210226 02:19:45.358"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:45.359" starttime="20210226 02:19:38.064"></status>
</kw>
<msg timestamp="20210226 02:19:45.360" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:45.360" starttime="20210226 02:19:38.064"></status>
</kw>
<msg timestamp="20210226 02:19:45.360" level="INFO">${result} = DISK</msg>
<status status="PASS" endtime="20210226 02:19:45.360" starttime="20210226 02:19:38.061"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>DISK</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:45.361" starttime="20210226 02:19:45.360"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:45.367" level="INFO">Running command 'ozone sh bucket info /10938-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:52.914" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:52.914" level="INFO">${output} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:19:52.914" starttime="20210226 02:19:45.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:52.915" level="INFO">10995116277760</msg>
<status status="PASS" endtime="20210226 02:19:52.916" starttime="20210226 02:19:52.915"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:52.916" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:52.916" starttime="20210226 02:19:52.916"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:52.917" starttime="20210226 02:19:45.363"></status>
</kw>
<msg timestamp="20210226 02:19:52.917" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:52.917" starttime="20210226 02:19:45.363"></status>
</kw>
<msg timestamp="20210226 02:19:52.917" level="INFO">${result} = 10995116277760</msg>
<status status="PASS" endtime="20210226 02:19:52.917" starttime="20210226 02:19:45.361"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>10995116277760</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:52.918" starttime="20210226 02:19:52.918"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:52.922" level="INFO">Running command 'ozone sh bucket info /10938-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:19:59.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:19:59.078" level="INFO">${output} = 100</msg>
<status status="PASS" endtime="20210226 02:19:59.078" starttime="20210226 02:19:52.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:19:59.079" level="INFO">100</msg>
<status status="PASS" endtime="20210226 02:19:59.079" starttime="20210226 02:19:59.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:19:59.080" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:19:59.080" starttime="20210226 02:19:59.079"></status>
</kw>
<status status="PASS" endtime="20210226 02:19:59.080" starttime="20210226 02:19:52.919"></status>
</kw>
<msg timestamp="20210226 02:19:59.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:19:59.081" starttime="20210226 02:19:52.919"></status>
</kw>
<msg timestamp="20210226 02:19:59.081" level="INFO">${result} = 100</msg>
<status status="PASS" endtime="20210226 02:19:59.081" starttime="20210226 02:19:52.918"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>100</arg>
</arguments>
<status status="PASS" endtime="20210226 02:19:59.082" starttime="20210226 02:19:59.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket setquota ${protocol}${server}/${volume}/bb1 --space-quota 1TB --namespace-quota 1000</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:19:59.091" level="INFO">Running command 'ozone sh bucket setquota /10938-rpcwoscheme/bb1 --space-quota 1TB --namespace-quota 1000 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:20:06.405" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:20:06.405" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:20:06.405" starttime="20210226 02:19:59.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:20:06.406" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:20:06.407" starttime="20210226 02:20:06.405"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:20:06.407" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:20:06.408" starttime="20210226 02:20:06.407"></status>
</kw>
<status status="PASS" endtime="20210226 02:20:06.408" starttime="20210226 02:19:59.087"></status>
</kw>
<msg timestamp="20210226 02:20:06.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:20:06.408" starttime="20210226 02:19:59.083"></status>
</kw>
<status status="PASS" endtime="20210226 02:20:06.409" starttime="20210226 02:19:59.082"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:20:06.419" level="INFO">Running command 'ozone sh bucket info /10938-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInBytes' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:20:12.443" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:20:12.443" level="INFO">${output} = 1099511627776</msg>
<status status="PASS" endtime="20210226 02:20:12.443" starttime="20210226 02:20:06.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:20:12.444" level="INFO">1099511627776</msg>
<status status="PASS" endtime="20210226 02:20:12.444" starttime="20210226 02:20:12.443"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:20:12.445" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:20:12.445" starttime="20210226 02:20:12.444"></status>
</kw>
<status status="PASS" endtime="20210226 02:20:12.446" starttime="20210226 02:20:06.410"></status>
</kw>
<msg timestamp="20210226 02:20:12.446" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:20:12.446" starttime="20210226 02:20:06.410"></status>
</kw>
<msg timestamp="20210226 02:20:12.446" level="INFO">${result} = 1099511627776</msg>
<status status="PASS" endtime="20210226 02:20:12.446" starttime="20210226 02:20:06.409"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1099511627776</arg>
</arguments>
<status status="PASS" endtime="20210226 02:20:12.447" starttime="20210226 02:20:12.446"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${protocol}${server}/${volume}/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:20:12.451" level="INFO">Running command 'ozone sh bucket info /10938-rpcwoscheme/bb1 | jq -r '. | select(.name=="bb1") | .quotaInNamespace' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:20:18.757" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:20:18.757" level="INFO">${output} = 1000</msg>
<status status="PASS" endtime="20210226 02:20:18.757" starttime="20210226 02:20:12.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:20:18.759" level="INFO">1000</msg>
<status status="PASS" endtime="20210226 02:20:18.760" starttime="20210226 02:20:18.758"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:20:18.761" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:20:18.761" starttime="20210226 02:20:18.760"></status>
</kw>
<status status="PASS" endtime="20210226 02:20:18.762" starttime="20210226 02:20:12.448"></status>
</kw>
<msg timestamp="20210226 02:20:18.762" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:20:18.762" starttime="20210226 02:20:12.448"></status>
</kw>
<msg timestamp="20210226 02:20:18.763" level="INFO">${result} = 1000</msg>
<status status="PASS" endtime="20210226 02:20:18.763" starttime="20210226 02:20:12.447"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>1000</arg>
</arguments>
<status status="PASS" endtime="20210226 02:20:18.764" starttime="20210226 02:20:18.763"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${protocol}${server}/${volume}/ | jq -r '. | select(.name=="bb1") | .volumeName'</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:20:18.771" level="INFO">Running command 'ozone sh bucket list /10938-rpcwoscheme/ | jq -r '. | select(.name=="bb1") | .volumeName' 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:20:26.343" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:20:26.343" level="INFO">${output} = 10938-rpcwoscheme</msg>
<status status="PASS" endtime="20210226 02:20:26.343" starttime="20210226 02:20:18.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:20:26.344" level="INFO">10938-rpcwoscheme</msg>
<status status="PASS" endtime="20210226 02:20:26.344" starttime="20210226 02:20:26.344"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:20:26.345" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:20:26.345" starttime="20210226 02:20:26.345"></status>
</kw>
<status status="PASS" endtime="20210226 02:20:26.346" starttime="20210226 02:20:18.767"></status>
</kw>
<msg timestamp="20210226 02:20:26.346" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:20:26.346" starttime="20210226 02:20:18.766"></status>
</kw>
<msg timestamp="20210226 02:20:26.346" level="INFO">${result} = 10938-rpcwoscheme</msg>
<status status="PASS" endtime="20210226 02:20:26.346" starttime="20210226 02:20:18.764"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${volume}</arg>
</arguments>
<status status="PASS" endtime="20210226 02:20:26.347" starttime="20210226 02:20:26.346"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Test key handling</arg>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Test key handling" library="ozone-shell-lib">
<arguments>
<arg>${protocol}</arg>
<arg>${server}</arg>
<arg>${volume}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${protocol}${server}/${volume}/bb1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:20:26.355" level="INFO">Running command 'ozone sh key put /10938-rpcwoscheme/bb1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:23:37.618" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:23:37.618" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:23:37.619" starttime="20210226 02:20:26.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:23:37.621" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:23:37.621" starttime="20210226 02:23:37.620"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:23:37.623" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:23:37.623" starttime="20210226 02:23:37.622"></status>
</kw>
<status status="PASS" endtime="20210226 02:23:37.623" starttime="20210226 02:20:26.350"></status>
</kw>
<msg timestamp="20210226 02:23:37.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:23:37.623" starttime="20210226 02:20:26.350"></status>
</kw>
<status status="PASS" endtime="20210226 02:23:37.624" starttime="20210226 02:20:26.348"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:23:37.631" level="INFO">Running command 'rm -f /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:23:37.634" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 02:23:37.635" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 02:23:37.635" starttime="20210226 02:23:37.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 02:23:37.637" level="INFO"></msg>
<status status="PASS" endtime="20210226 02:23:37.638" starttime="20210226 02:23:37.636"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 02:23:37.639" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 02:23:37.639" starttime="20210226 02:23:37.638"></status>
</kw>
<status status="PASS" endtime="20210226 02:23:37.640" starttime="20210226 02:23:37.626"></status>
</kw>
<msg timestamp="20210226 02:23:37.640" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 02:23:37.640" starttime="20210226 02:23:37.625"></status>
</kw>
<status status="PASS" endtime="20210226 02:23:37.640" starttime="20210226 02:23:37.624"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${protocol}${server}/${volume}/bb1/key1 /tmp/NOTICE.txt.1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 02:23:37.646" level="INFO">Running command 'ozone sh key get /10938-rpcwoscheme/bb1/key1 /tmp/NOTICE.txt.1 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 02:23:44.295" level="FAIL">Test timeout 5 minutes exceeded.</msg>
<status status="FAIL" endtime="20210226 02:23:44.296" starttime="20210226 02:23:37.644"></status>
</kw>
<status status="FAIL" endtime="20210226 02:23:44.296" starttime="20210226 02:23:37.643"></status>
</kw>
<msg timestamp="20210226 02:23:44.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210226 02:23:44.297" starttime="20210226 02:23:37.642"></status>
</kw>
<status status="FAIL" endtime="20210226 02:23:44.297" starttime="20210226 02:23:37.641"></status>
</kw>
<status status="FAIL" endtime="20210226 02:23:44.297" starttime="20210226 02:20:26.347"></status>
</kw>
<status status="FAIL" endtime="20210226 02:23:44.297" starttime="20210226 02:20:26.347"></status>
</kw>
<status status="FAIL" endtime="20210226 02:23:44.298" starttime="20210226 02:18:44.439"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="FAIL" endtime="20210226 02:23:44.299" critical="yes" starttime="20210226 02:18:44.293">Test timeout 5 minutes exceeded.</status>
</test>
<doc>Test ozone shell CLI usage</doc>
<status status="FAIL" endtime="20210226 02:23:44.305" starttime="20210226 02:03:05.400"></status>
</suite>
<status status="FAIL" endtime="20210226 02:23:44.331" starttime="20210226 01:39:18.262"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:13.151" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:13.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:13.154" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210226 01:39:13.155" starttime="20210226 01:39:13.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:13.156" level="INFO">scm</msg>
<status status="PASS" endtime="20210226 01:39:13.156" starttime="20210226 01:39:13.155"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:13.156" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:13.156" starttime="20210226 01:39:13.156"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:13.157" starttime="20210226 01:39:13.146"></status>
</kw>
<msg timestamp="20210226 01:39:13.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:13.157" starttime="20210226 01:39:13.146"></status>
</kw>
<msg timestamp="20210226 01:39:13.157" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210226 01:39:13.157" starttime="20210226 01:39:13.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210226 01:39:13.158" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210226 01:39:13.158" starttime="20210226 01:39:13.157"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210226 01:39:13.163" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210226 01:39:13.170" level="INFO">${rc} = 0</msg>
<msg timestamp="20210226 01:39:13.170" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210226 01:39:13.170" starttime="20210226 01:39:13.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210226 01:39:13.171" level="INFO"></msg>
<status status="PASS" endtime="20210226 01:39:13.171" starttime="20210226 01:39:13.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210226 01:39:13.172" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210226 01:39:13.172" starttime="20210226 01:39:13.171"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:13.172" starttime="20210226 01:39:13.160"></status>
</kw>
<msg timestamp="20210226 01:39:13.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210226 01:39:13.172" starttime="20210226 01:39:13.160"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:13.172" starttime="20210226 01:39:13.159"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:13.173" starttime="20210226 01:39:13.159"></status>
</kw>
<status status="PASS" endtime="20210226 01:39:13.173" starttime="20210226 01:39:13.145"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210226 01:39:13.173" critical="yes" starttime="20210226 01:39:13.144"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210226 01:39:13.174" starttime="20210226 01:39:13.078"></status>
</suite>
<status status="FAIL" elapsedtime="2666165" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="10" pass="19">Critical Tests</stat>
<stat fail="10" pass="19">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="10" id="s1" name="ozonesecure" pass="19">ozonesecure</stat>
<stat fail="10" id="s1-s1" name="Basic" pass="18">ozonesecure.Basic</stat>
<stat fail="1" id="s1-s1-s1" name="Basic" pass="1">ozonesecure.Basic.Basic</stat>
<stat fail="0" id="s1-s1-s2" name="Getconf" pass="4">ozonesecure.Basic.Getconf</stat>
<stat fail="5" id="s1-s1-s3" name="Links" pass="10">ozonesecure.Basic.Links</stat>
<stat fail="1" id="s1-s1-s4" name="Ozone-Shell-Single" pass="0">ozonesecure.Basic.Ozone-Shell-Single</stat>
<stat fail="3" id="s1-s1-s5" name="Ozone-Shell" pass="3">ozonesecure.Basic.Ozone-Shell</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure.Kinit</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
