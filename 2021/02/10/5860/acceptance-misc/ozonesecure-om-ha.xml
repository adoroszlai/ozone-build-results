<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:46:13.500" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:25.068" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:42:37.532" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:42:37.532" level="INFO">${output} = 2021-02-10 13:42:26,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:26,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:37.532" starttime="20210210 13:42:25.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:42:37.533" level="INFO">2021-02-10 13:42:26,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:26,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:42:26,823 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:42:26,958 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-10 13:42:26,969 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:27,832 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-10 13:42:27,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:28,199 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:42:28,679 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:42:28,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:29,971 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:30,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:31,232 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:42:31,458 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:42:31,458 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-1324228A4775-&gt;c8a2ae06-b1b0-4f17-8913-97175a5c791a
2021-02-10 13:42:31,459 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:42:31,972 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:32,973 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:33,973 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:34,974 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:35,974 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:36,974 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:42:37,080 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=7901.639655, max=7901.639655, mean=7901.639655, stddev=0.0, median=7901.639655, p75=7901.639655, p95=7901.639655, p98=7901.639655, p99=7901.639655, p999=7901.639655, mean_rate=0.12318880037082905, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:42:37,080 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 10
2021-02-10 13:42:37,085 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:42:37,085 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:42:37.533" starttime="20210210 13:42:37.532"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:42:37.534" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:42:37.534" starttime="20210210 13:42:37.533"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:37.534" starttime="20210210 13:42:25.064"></status>
</kw>
<msg timestamp="20210210 13:42:37.534" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:42:37.534" starttime="20210210 13:42:25.064"></status>
</kw>
<msg timestamp="20210210 13:42:37.535" level="INFO">${result} = 2021-02-10 13:42:26,666 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:26,823 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:37.535" starttime="20210210 13:42:25.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:42:37.535" starttime="20210210 13:42:37.535"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:42:37.535" critical="yes" starttime="20210210 13:42:25.062"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:37.540" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:42:41.662" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:42:41.663" level="INFO">${output} = 2021-02-10 13:42:39,030 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:39,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:41.663" starttime="20210210 13:42:37.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:42:41.664" level="INFO">2021-02-10 13:42:39,030 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:39,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:42:39,113 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:42:39,302 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-10 13:42:39,323 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:40,249 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-10 13:42:40,330 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:40,720 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-10 13:42:41,331 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:42:41,615 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=282.559972, max=282.559972, mean=282.559972, stddev=0.0, median=282.559972, p75=282.559972, p95=282.559972, p98=282.559972, p99=282.559972, p999=282.559972, mean_rate=0.9860798645547519, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:42:41,616 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 13:42:41,616 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:42:41,616 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:42:41.664" starttime="20210210 13:42:41.663"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:42:41.664" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:42:41.664" starttime="20210210 13:42:41.664"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:41.665" starttime="20210210 13:42:37.538"></status>
</kw>
<msg timestamp="20210210 13:42:41.665" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:42:41.665" starttime="20210210 13:42:37.537"></status>
</kw>
<msg timestamp="20210210 13:42:41.665" level="INFO">${result} = 2021-02-10 13:42:39,030 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:39,113 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:41.665" starttime="20210210 13:42:37.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:42:41.666" starttime="20210210 13:42:41.666"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:42:41.666" critical="yes" starttime="20210210 13:42:37.536"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:41.671" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:42:46.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:42:46.653" level="INFO">${output} = 2021-02-10 13:42:43,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:43,239 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:46.653" starttime="20210210 13:42:41.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:42:46.654" level="INFO">2021-02-10 13:42:43,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:43,239 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:42:43,239 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:42:43,465 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-10 13:42:43,503 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:44,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:45,179 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-10 13:42:45,532 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:45,672 [pool-1-thread-1] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:146)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-10 13:42:46,533 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:42:46,598 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=145.247307, max=145.247307, mean=145.247307, stddev=0.0, median=145.247307, p75=145.247307, p95=145.247307, p98=145.247307, p99=145.247307, p999=145.247307, mean_rate=0.9692924939259044, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:42:46,607 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 13:42:46,609 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:42:46,609 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:42:46.654" starttime="20210210 13:42:46.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:42:46.654" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:42:46.655" starttime="20210210 13:42:46.654"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:46.655" starttime="20210210 13:42:41.668"></status>
</kw>
<msg timestamp="20210210 13:42:46.655" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:42:46.655" starttime="20210210 13:42:41.668"></status>
</kw>
<msg timestamp="20210210 13:42:46.655" level="INFO">${result} = 2021-02-10 13:42:43,080 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:43,239 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:46.655" starttime="20210210 13:42:41.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:42:46.656" starttime="20210210 13:42:46.656"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:42:46.656" critical="yes" starttime="20210210 13:42:41.667"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210210 13:42:46.658" starttime="20210210 13:42:25.047"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:46.667" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:42:53.026" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:42:53.026" level="INFO">${output} = 2021-02-10 13:42:48,221 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:48,332 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:53.026" starttime="20210210 13:42:46.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:42:53.027" level="INFO">2021-02-10 13:42:48,221 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:48,332 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:42:48,332 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:42:48,449 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-10 13:42:48,462 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:49,373 [main] INFO retry.RetryInvocationHandler: com.google.protobuf.ServiceException: org.apache.hadoop.ipc.RemoteException(org.apache.hadoop.ozone.om.exceptions.OMNotLeaderException): OM:om2 is not the leader. Could not determine the leader node.
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createNotLeaderException(OzoneManagerProtocolServerSideTranslatorPB.java:202)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.createLeaderErrorException(OzoneManagerProtocolServerSideTranslatorPB.java:215)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitReadRequestToOM(OzoneManagerProtocolServerSideTranslatorPB.java:192)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.processRequest(OzoneManagerProtocolServerSideTranslatorPB.java:132)
	at org.apache.hadoop.hdds.server.OzoneProtocolMessageDispatcher.processRequest(OzoneProtocolMessageDispatcher.java:87)
	at org.apache.hadoop.ozone.protocolPB.OzoneManagerProtocolServerSideTranslatorPB.submitRequest(OzoneManagerProtocolServerSideTranslatorPB.java:122)
	at org.apache.hadoop.ozone.protocol.proto.OzoneManagerProtocolProtos$OzoneManagerService$2.callBlockingMethod(OzoneManagerProtocolProtos.java)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Server$ProtoBufRpcInvoker.call(ProtobufRpcEngine.java:528)
	at org.apache.hadoop.ipc.RPC$Server.call(RPC.java:1086)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:1029)
	at org.apache.hadoop.ipc.Server$RpcCall.run(Server.java:957)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/javax.security.auth.Subject.doAs(Subject.java:423)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.ipc.Server$Handler.run(Server.java:2957)
, while invoking $Proxy21.submitRequest over nodeId=om2,nodeAddress=om2:9862 after 1 failover attempts. Trying to failover immediately.
2021-02-10 13:42:49,466 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:50,467 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:50,607 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:42:51,472 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:42:52,472 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:42:52,691 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=64.164655, max=64.164655, mean=64.164655, stddev=0.0, median=64.164655, p75=64.164655, p95=64.164655, p98=64.164655, p99=64.164655, p999=64.164655, mean_rate=0.9666092228848878, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:42:52,692 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-10 13:42:52,692 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:42:52,692 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:42:53.027" starttime="20210210 13:42:53.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:42:53.028" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:42:53.028" starttime="20210210 13:42:53.027"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:53.028" starttime="20210210 13:42:46.665"></status>
</kw>
<msg timestamp="20210210 13:42:53.028" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:42:53.028" starttime="20210210 13:42:46.665"></status>
</kw>
<msg timestamp="20210210 13:42:53.029" level="INFO">${result} = 2021-02-10 13:42:48,221 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:42:48,332 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:42:53.029" starttime="20210210 13:42:46.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:42:53.029" starttime="20210210 13:42:53.029"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:42:53.029" critical="yes" starttime="20210210 13:42:46.663"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 13:42:53.030" starttime="20210210 13:42:46.660"></status>
</suite>
<status status="PASS" endtime="20210210 13:42:53.032" starttime="20210210 13:42:25.020"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:20.463" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:42:20.467" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:42:20.467" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:42:20.467" starttime="20210210 13:42:20.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:42:20.468" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:42:20.468" starttime="20210210 13:42:20.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:42:20.468" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:42:20.468" starttime="20210210 13:42:20.468"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:20.468" starttime="20210210 13:42:20.459"></status>
</kw>
<msg timestamp="20210210 13:42:20.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:42:20.469" starttime="20210210 13:42:20.459"></status>
</kw>
<msg timestamp="20210210 13:42:20.469" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:42:20.469" starttime="20210210 13:42:20.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:42:20.469" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:42:20.469" starttime="20210210 13:42:20.469"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:20.473" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:42:20.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:42:20.479" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:42:20.479" starttime="20210210 13:42:20.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:42:20.480" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:42:20.480" starttime="20210210 13:42:20.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:42:20.480" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:42:20.480" starttime="20210210 13:42:20.480"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:20.481" starttime="20210210 13:42:20.471"></status>
</kw>
<msg timestamp="20210210 13:42:20.481" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:42:20.481" starttime="20210210 13:42:20.471"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:20.481" starttime="20210210 13:42:20.470"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:20.481" starttime="20210210 13:42:20.470"></status>
</kw>
<status status="PASS" endtime="20210210 13:42:20.481" starttime="20210210 13:42:20.458"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:42:20.481" critical="yes" starttime="20210210 13:42:20.457"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210210 13:42:20.482" starttime="20210210 13:42:20.415"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:42:57.656" level="INFO">${random} = 53638</msg>
<status status="PASS" endtime="20210210 13:42:57.656" starttime="20210210 13:42:57.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210210 13:42:57.658" level="INFO">${source} = 53638-source</msg>
<status status="PASS" endtime="20210210 13:42:57.658" starttime="20210210 13:42:57.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210210 13:42:57.659" level="INFO">${target} = 53638-target</msg>
<status status="PASS" endtime="20210210 13:42:57.659" starttime="20210210 13:42:57.658"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:42:57.670" level="INFO">Running command 'ozone sh volume create 53638-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:00.724" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:00.724" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:00.724" starttime="20210210 13:42:57.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:00.725" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:00.725" starttime="20210210 13:43:00.724"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:00.725" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:00.725" starttime="20210210 13:43:00.725"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:00.726" starttime="20210210 13:42:57.659"></status>
</kw>
<msg timestamp="20210210 13:43:00.726" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:00.726" starttime="20210210 13:42:57.659"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:00.726" starttime="20210210 13:42:57.659"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:00.729" level="INFO">Running command 'ozone sh volume create 53638-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:03.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:03.764" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:03.764" starttime="20210210 13:43:00.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:03.764" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:03.765" starttime="20210210 13:43:03.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:03.765" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:03.765" starttime="20210210 13:43:03.765"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:03.765" starttime="20210210 13:43:00.727"></status>
</kw>
<msg timestamp="20210210 13:43:03.765" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:03.765" starttime="20210210 13:43:00.727"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:03.766" starttime="20210210 13:43:00.726"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:03.770" level="INFO">Running command 'ozone sh bucket create 53638-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:07.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:07.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:07.132" starttime="20210210 13:43:03.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:07.133" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:07.133" starttime="20210210 13:43:07.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:07.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:07.133" starttime="20210210 13:43:07.133"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:07.134" starttime="20210210 13:43:03.767"></status>
</kw>
<msg timestamp="20210210 13:43:07.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:07.134" starttime="20210210 13:43:03.767"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:07.134" starttime="20210210 13:43:03.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:07.137" level="INFO">Running command 'ozone sh key put 53638-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:14.822" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:14.822" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:14.822" starttime="20210210 13:43:07.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:14.823" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:14.823" starttime="20210210 13:43:14.822"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:14.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:14.824" starttime="20210210 13:43:14.823"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:14.824" starttime="20210210 13:43:07.135"></status>
</kw>
<msg timestamp="20210210 13:43:14.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:14.824" starttime="20210210 13:43:07.135"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:14.824" starttime="20210210 13:43:07.134"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:14.828" level="INFO">Running command 'ozone sh bucket create 53638-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:17.928" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:17.928" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:17.928" starttime="20210210 13:43:14.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:17.929" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:17.929" starttime="20210210 13:43:17.929"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:17.930" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:17.930" starttime="20210210 13:43:17.929"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:17.930" starttime="20210210 13:43:14.825"></status>
</kw>
<msg timestamp="20210210 13:43:17.930" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:17.930" starttime="20210210 13:43:14.825"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:17.930" starttime="20210210 13:43:14.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:17.934" level="INFO">Running command 'ozone sh bucket link 53638-source/readable-bucket 53638-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:21.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:21.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:21.088" starttime="20210210 13:43:17.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:21.089" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:21.089" starttime="20210210 13:43:21.089"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:21.090" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:21.090" starttime="20210210 13:43:21.089"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:21.090" starttime="20210210 13:43:17.931"></status>
</kw>
<msg timestamp="20210210 13:43:21.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:21.090" starttime="20210210 13:43:17.931"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:21.090" starttime="20210210 13:43:17.930"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:21.094" level="INFO">Running command 'ozone sh bucket link 53638-source/readable-bucket 53638-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:24.370" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:24.370" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:24.370" starttime="20210210 13:43:21.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:24.371" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:24.372" starttime="20210210 13:43:24.371"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:24.372" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:24.372" starttime="20210210 13:43:24.372"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:24.372" starttime="20210210 13:43:21.091"></status>
</kw>
<msg timestamp="20210210 13:43:24.372" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:24.373" starttime="20210210 13:43:21.091"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:24.373" starttime="20210210 13:43:21.090"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:24.376" level="INFO">Running command 'ozone sh bucket link 53638-source/unreadable-bucket 53638-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:27.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:27.692" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:27.692" starttime="20210210 13:43:24.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:27.693" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:27.693" starttime="20210210 13:43:27.692"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:27.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:27.693" starttime="20210210 13:43:27.693"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:27.694" starttime="20210210 13:43:24.374"></status>
</kw>
<msg timestamp="20210210 13:43:27.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:27.694" starttime="20210210 13:43:24.373"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:27.694" starttime="20210210 13:43:24.373"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:27.697" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53638-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:31.058" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:31.058" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:31.058" starttime="20210210 13:43:27.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:31.059" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:31.059" starttime="20210210 13:43:31.058"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:31.059" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:31.059" starttime="20210210 13:43:31.059"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:31.060" starttime="20210210 13:43:27.695"></status>
</kw>
<msg timestamp="20210210 13:43:31.060" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:31.060" starttime="20210210 13:43:27.695"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:31.060" starttime="20210210 13:43:27.694"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:31.063" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53638-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:34.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:34.416" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:34.416" starttime="20210210 13:43:31.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:34.417" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:34.417" starttime="20210210 13:43:34.416"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:34.417" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:34.417" starttime="20210210 13:43:34.417"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:34.418" starttime="20210210 13:43:31.061"></status>
</kw>
<msg timestamp="20210210 13:43:34.418" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:34.418" starttime="20210210 13:43:31.061"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:34.418" starttime="20210210 13:43:31.060"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:34.421" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 53638-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:37.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:37.463" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:37.463" starttime="20210210 13:43:34.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:37.464" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:37.464" starttime="20210210 13:43:37.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:37.465" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:37.465" starttime="20210210 13:43:37.464"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:37.465" starttime="20210210 13:43:34.419"></status>
</kw>
<msg timestamp="20210210 13:43:37.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:37.465" starttime="20210210 13:43:34.419"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:37.465" starttime="20210210 13:43:34.418"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:37.469" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53638-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:40.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:40.459" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:40.459" starttime="20210210 13:43:37.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:40.460" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:40.460" starttime="20210210 13:43:40.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:40.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:40.461" starttime="20210210 13:43:40.460"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:40.461" starttime="20210210 13:43:37.466"></status>
</kw>
<msg timestamp="20210210 13:43:40.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:40.461" starttime="20210210 13:43:37.466"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:40.461" starttime="20210210 13:43:37.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:40.464" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 53638-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:43.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:43.384" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:43.384" starttime="20210210 13:43:40.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:43.385" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:43:43.385" starttime="20210210 13:43:43.384"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:43.385" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:43.385" starttime="20210210 13:43:43.385"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.386" starttime="20210210 13:43:40.462"></status>
</kw>
<msg timestamp="20210210 13:43:43.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:43.386" starttime="20210210 13:43:40.462"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.386" starttime="20210210 13:43:40.461"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.386" starttime="20210210 13:43:03.766"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.386" starttime="20210210 13:43:03.766"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.386" starttime="20210210 13:42:57.656"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:43.392" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:43.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:43.394" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:43:43.394" starttime="20210210 13:43:43.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:43.395" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:43:43.395" starttime="20210210 13:43:43.395"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:43.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:43.396" starttime="20210210 13:43:43.395"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.396" starttime="20210210 13:43:43.389"></status>
</kw>
<msg timestamp="20210210 13:43:43.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:43.396" starttime="20210210 13:43:43.389"></status>
</kw>
<msg timestamp="20210210 13:43:43.396" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:43:43.396" starttime="20210210 13:43:43.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:43:43.398" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:43:43.398" starttime="20210210 13:43:43.397"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:43.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:43.408" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:43.408" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:43.408" starttime="20210210 13:43:43.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:43.409" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:43.409" starttime="20210210 13:43:43.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:43.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:43.409" starttime="20210210 13:43:43.409"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.409" starttime="20210210 13:43:43.399"></status>
</kw>
<msg timestamp="20210210 13:43:43.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:43.410" starttime="20210210 13:43:43.399"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.410" starttime="20210210 13:43:43.398"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.410" starttime="20210210 13:43:43.398"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.410" starttime="20210210 13:43:43.388"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:43.410" starttime="20210210 13:43:43.388"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:43.413" level="INFO">Running command 'ozone sh bucket link 53638-source/no-such-bucket 53638-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:46.805" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:46.805" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:46.805" starttime="20210210 13:43:43.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:46.806" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:46.807" starttime="20210210 13:43:46.806"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:46.807" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:46.807" starttime="20210210 13:43:46.807"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:46.807" starttime="20210210 13:43:43.411"></status>
</kw>
<msg timestamp="20210210 13:43:46.807" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:46.808" starttime="20210210 13:43:43.411"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:46.808" starttime="20210210 13:43:43.410"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:46.810" level="INFO">Running command 'ozone sh key list 53638-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:50.099" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:43:50.099" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210210 13:43:50.099" starttime="20210210 13:43:46.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:50.100" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210210 13:43:50.100" starttime="20210210 13:43:50.100"></status>
</kw>
<msg timestamp="20210210 13:43:50.101" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210210 13:43:50.101" starttime="20210210 13:43:46.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 13:43:50.101" starttime="20210210 13:43:50.101"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:43:50.102" critical="yes" starttime="20210210 13:43:43.387"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:50.108" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:50.111" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:50.111" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:43:50.111" starttime="20210210 13:43:50.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:50.112" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:43:50.112" starttime="20210210 13:43:50.112"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:50.113" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:50.113" starttime="20210210 13:43:50.113"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:50.113" starttime="20210210 13:43:50.106"></status>
</kw>
<msg timestamp="20210210 13:43:50.114" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:50.114" starttime="20210210 13:43:50.106"></status>
</kw>
<msg timestamp="20210210 13:43:50.114" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:43:50.114" starttime="20210210 13:43:50.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:43:50.114" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:43:50.115" starttime="20210210 13:43:50.114"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:50.118" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:50.125" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:50.125" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:50.125" starttime="20210210 13:43:50.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:50.126" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:50.126" starttime="20210210 13:43:50.125"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:50.127" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:50.127" starttime="20210210 13:43:50.126"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:50.127" starttime="20210210 13:43:50.116"></status>
</kw>
<msg timestamp="20210210 13:43:50.127" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:50.127" starttime="20210210 13:43:50.116"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:50.127" starttime="20210210 13:43:50.115"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:50.127" starttime="20210210 13:43:50.115"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:50.128" starttime="20210210 13:43:50.105"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:50.128" starttime="20210210 13:43:50.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:50.131" level="INFO">Running command 'ozone sh bucket link 53638-source/bucket1 53638-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:53.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:53.210" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:53.211" starttime="20210210 13:43:50.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:53.212" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:53.212" starttime="20210210 13:43:53.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:53.213" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:53.213" starttime="20210210 13:43:53.212"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:53.213" starttime="20210210 13:43:50.129"></status>
</kw>
<msg timestamp="20210210 13:43:53.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:53.213" starttime="20210210 13:43:50.128"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:53.213" starttime="20210210 13:43:50.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:53.218" level="INFO">Running command 'ozone sh bucket create 53638-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:43:56.312" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:43:56.312" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:43:56.312" starttime="20210210 13:43:53.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:43:56.313" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:43:56.313" starttime="20210210 13:43:56.313"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:43:56.314" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:43:56.314" starttime="20210210 13:43:56.314"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:56.314" starttime="20210210 13:43:53.214"></status>
</kw>
<msg timestamp="20210210 13:43:56.314" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:43:56.315" starttime="20210210 13:43:53.214"></status>
</kw>
<status status="PASS" endtime="20210210 13:43:56.315" starttime="20210210 13:43:53.214"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:43:56.318" level="INFO">Running command 'ozone sh key put 53638-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:04.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:04.389" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:04.389" starttime="20210210 13:43:56.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:04.390" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:04.390" starttime="20210210 13:44:04.389"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:04.390" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:04.391" starttime="20210210 13:44:04.390"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:04.391" starttime="20210210 13:43:56.316"></status>
</kw>
<msg timestamp="20210210 13:44:04.391" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:04.391" starttime="20210210 13:43:56.315"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:04.391" starttime="20210210 13:43:56.315"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:44:04.393" level="INFO">${postfix} = 09739</msg>
<status status="PASS" endtime="20210210 13:44:04.393" starttime="20210210 13:44:04.392"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:44:04.393" level="INFO">${tmpfile} = /tmp/tempkey-09739</msg>
<status status="PASS" endtime="20210210 13:44:04.393" starttime="20210210 13:44:04.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:04.397" level="INFO">Running command 'ozone sh key get 53638-target/link1/key1 /tmp/tempkey-09739 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:09.522" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:09.523" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:09.523" starttime="20210210 13:44:04.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.524" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:09.524" starttime="20210210 13:44:09.523"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.525" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:09.525" starttime="20210210 13:44:09.524"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.525" starttime="20210210 13:44:04.394"></status>
</kw>
<msg timestamp="20210210 13:44:09.525" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:09.525" starttime="20210210 13:44:04.394"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.526" starttime="20210210 13:44:04.394"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:44:09.528" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-09739 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:09.531" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:44:09.531" starttime="20210210 13:44:09.526"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:09.535" level="INFO">Running command 'rm -f /tmp/tempkey-09739 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:09.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:09.537" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:09.537" starttime="20210210 13:44:09.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.538" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:09.538" starttime="20210210 13:44:09.537"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:09.539" starttime="20210210 13:44:09.538"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.539" starttime="20210210 13:44:09.532"></status>
</kw>
<msg timestamp="20210210 13:44:09.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:09.539" starttime="20210210 13:44:09.532"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.539" starttime="20210210 13:44:09.531"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:44:09.540" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:44:09.540" starttime="20210210 13:44:09.539"></status>
</kw>
<msg timestamp="20210210 13:44:09.540" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:44:09.540" starttime="20210210 13:44:04.392"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:09.541" starttime="20210210 13:44:09.540"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.541" starttime="20210210 13:44:04.391"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:44:09.541" critical="yes" starttime="20210210 13:43:50.103"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:09.546" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:09.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:09.548" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:44:09.548" starttime="20210210 13:44:09.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.549" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:44:09.549" starttime="20210210 13:44:09.549"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:09.550" starttime="20210210 13:44:09.549"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.550" starttime="20210210 13:44:09.544"></status>
</kw>
<msg timestamp="20210210 13:44:09.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:09.550" starttime="20210210 13:44:09.544"></status>
</kw>
<msg timestamp="20210210 13:44:09.551" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:44:09.551" starttime="20210210 13:44:09.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:44:09.551" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:44:09.551" starttime="20210210 13:44:09.551"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:09.555" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:09.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:09.561" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:09.561" starttime="20210210 13:44:09.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.562" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:09.562" starttime="20210210 13:44:09.562"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:09.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:09.563" starttime="20210210 13:44:09.562"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.563" starttime="20210210 13:44:09.553"></status>
</kw>
<msg timestamp="20210210 13:44:09.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:09.563" starttime="20210210 13:44:09.553"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.563" starttime="20210210 13:44:09.552"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.563" starttime="20210210 13:44:09.551"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.564" starttime="20210210 13:44:09.543"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:09.564" starttime="20210210 13:44:09.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:09.567" level="INFO">Running command 'ozone sh key put 53638-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:17.204" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:17.204" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:17.204" starttime="20210210 13:44:09.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:17.205" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:17.205" starttime="20210210 13:44:17.204"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:17.206" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:17.206" starttime="20210210 13:44:17.205"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:17.206" starttime="20210210 13:44:09.565"></status>
</kw>
<msg timestamp="20210210 13:44:17.206" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:17.206" starttime="20210210 13:44:09.564"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:17.206" starttime="20210210 13:44:09.564"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:44:17.208" level="INFO">${postfix} = 29806</msg>
<status status="PASS" endtime="20210210 13:44:17.208" starttime="20210210 13:44:17.207"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:44:17.208" level="INFO">${tmpfile} = /tmp/tempkey-29806</msg>
<status status="PASS" endtime="20210210 13:44:17.208" starttime="20210210 13:44:17.208"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:17.211" level="INFO">Running command 'ozone sh key get 53638-source/bucket1/key2 /tmp/tempkey-29806 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:22.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:22.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:22.172" starttime="20210210 13:44:17.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.173" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:22.173" starttime="20210210 13:44:22.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.173" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:22.173" starttime="20210210 13:44:22.173"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.174" starttime="20210210 13:44:17.209"></status>
</kw>
<msg timestamp="20210210 13:44:22.174" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:22.174" starttime="20210210 13:44:17.209"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.174" starttime="20210210 13:44:17.208"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:44:22.176" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-29806 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:22.179" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:44:22.179" starttime="20210210 13:44:22.174"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:22.183" level="INFO">Running command 'rm -f /tmp/tempkey-29806 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:22.185" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:22.185" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:22.185" starttime="20210210 13:44:22.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.186" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:22.186" starttime="20210210 13:44:22.185"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.187" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:22.187" starttime="20210210 13:44:22.186"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.187" starttime="20210210 13:44:22.180"></status>
</kw>
<msg timestamp="20210210 13:44:22.187" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:22.187" starttime="20210210 13:44:22.180"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.187" starttime="20210210 13:44:22.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:44:22.188" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:44:22.188" starttime="20210210 13:44:22.187"></status>
</kw>
<msg timestamp="20210210 13:44:22.188" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:44:22.188" starttime="20210210 13:44:17.207"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:22.188" starttime="20210210 13:44:22.188"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.189" starttime="20210210 13:44:17.206"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:44:22.189" critical="yes" starttime="20210210 13:44:09.542"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:22.194" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:22.197" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:22.197" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:44:22.197" starttime="20210210 13:44:22.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.197" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:44:22.198" starttime="20210210 13:44:22.197"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.198" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:22.198" starttime="20210210 13:44:22.198"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.198" starttime="20210210 13:44:22.192"></status>
</kw>
<msg timestamp="20210210 13:44:22.198" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:22.199" starttime="20210210 13:44:22.192"></status>
</kw>
<msg timestamp="20210210 13:44:22.199" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:44:22.199" starttime="20210210 13:44:22.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:44:22.199" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:44:22.199" starttime="20210210 13:44:22.199"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:22.203" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:22.209" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:22.209" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:22.209" starttime="20210210 13:44:22.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.210" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:22.210" starttime="20210210 13:44:22.209"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:22.211" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:22.211" starttime="20210210 13:44:22.210"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.211" starttime="20210210 13:44:22.201"></status>
</kw>
<msg timestamp="20210210 13:44:22.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:22.211" starttime="20210210 13:44:22.201"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.211" starttime="20210210 13:44:22.200"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.211" starttime="20210210 13:44:22.200"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.211" starttime="20210210 13:44:22.191"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:22.212" starttime="20210210 13:44:22.191"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:22.215" level="INFO">Running command 'ozone sh key list 53638-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:25.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:25.386" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210210 13:44:25.386" starttime="20210210 13:44:22.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:25.387" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210210 13:44:25.388" starttime="20210210 13:44:25.387"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:25.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:25.388" starttime="20210210 13:44:25.388"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:25.389" starttime="20210210 13:44:22.213"></status>
</kw>
<msg timestamp="20210210 13:44:25.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:25.389" starttime="20210210 13:44:22.212"></status>
</kw>
<msg timestamp="20210210 13:44:25.389" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210210 13:44:25.389" starttime="20210210 13:44:22.212"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:25.392" level="INFO">Running command 'ozone sh key list 53638-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:28.596" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:28.596" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210210 13:44:28.596" starttime="20210210 13:44:25.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:28.597" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210210 13:44:28.597" starttime="20210210 13:44:28.597"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:28.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:28.598" starttime="20210210 13:44:28.597"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.598" starttime="20210210 13:44:25.390"></status>
</kw>
<msg timestamp="20210210 13:44:28.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:28.598" starttime="20210210 13:44:25.390"></status>
</kw>
<msg timestamp="20210210 13:44:28.599" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210210 13:44:28.599" starttime="20210210 13:44:25.389"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:28.599" starttime="20210210 13:44:28.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:28.600" starttime="20210210 13:44:28.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:28.600" starttime="20210210 13:44:28.600"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:44:28.600" critical="yes" starttime="20210210 13:44:22.190"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:28.606" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:28.608" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:28.608" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:44:28.608" starttime="20210210 13:44:28.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:28.609" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:44:28.609" starttime="20210210 13:44:28.609"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:28.610" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:28.610" starttime="20210210 13:44:28.609"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.610" starttime="20210210 13:44:28.603"></status>
</kw>
<msg timestamp="20210210 13:44:28.610" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:28.610" starttime="20210210 13:44:28.603"></status>
</kw>
<msg timestamp="20210210 13:44:28.610" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:44:28.610" starttime="20210210 13:44:28.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:44:28.611" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:44:28.611" starttime="20210210 13:44:28.610"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:28.616" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:28.622" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:28.622" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:28.622" starttime="20210210 13:44:28.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:28.623" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:28.623" starttime="20210210 13:44:28.622"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:28.624" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:28.624" starttime="20210210 13:44:28.623"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.624" starttime="20210210 13:44:28.612"></status>
</kw>
<msg timestamp="20210210 13:44:28.624" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:28.624" starttime="20210210 13:44:28.612"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.624" starttime="20210210 13:44:28.611"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.624" starttime="20210210 13:44:28.611"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.625" starttime="20210210 13:44:28.602"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:28.625" starttime="20210210 13:44:28.602"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:28.628" level="INFO">Running command 'ozone sh key delete 53638-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:31.903" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:31.903" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:31.903" starttime="20210210 13:44:28.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:31.904" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:31.904" starttime="20210210 13:44:31.904"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:31.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:31.905" starttime="20210210 13:44:31.905"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:31.905" starttime="20210210 13:44:28.626"></status>
</kw>
<msg timestamp="20210210 13:44:31.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:31.906" starttime="20210210 13:44:28.625"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:31.906" starttime="20210210 13:44:28.625"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:31.910" level="INFO">Running command 'ozone sh key list 53638-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:35.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:35.506" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210210 13:44:35.506" starttime="20210210 13:44:31.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:35.507" level="INFO">key1</msg>
<status status="PASS" endtime="20210210 13:44:35.507" starttime="20210210 13:44:35.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:35.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:35.508" starttime="20210210 13:44:35.507"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.508" starttime="20210210 13:44:31.907"></status>
</kw>
<msg timestamp="20210210 13:44:35.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:35.508" starttime="20210210 13:44:31.907"></status>
</kw>
<msg timestamp="20210210 13:44:35.508" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210210 13:44:35.508" starttime="20210210 13:44:31.906"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:35.509" starttime="20210210 13:44:35.509"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:44:35.509" critical="yes" starttime="20210210 13:44:28.601"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:35.514" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:35.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:35.517" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:44:35.517" starttime="20210210 13:44:35.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:35.518" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:44:35.518" starttime="20210210 13:44:35.517"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:35.519" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:35.519" starttime="20210210 13:44:35.518"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.519" starttime="20210210 13:44:35.512"></status>
</kw>
<msg timestamp="20210210 13:44:35.519" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:35.519" starttime="20210210 13:44:35.512"></status>
</kw>
<msg timestamp="20210210 13:44:35.519" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:44:35.519" starttime="20210210 13:44:35.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:44:35.520" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:44:35.520" starttime="20210210 13:44:35.519"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:35.523" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:35.529" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:35.530" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:35.530" starttime="20210210 13:44:35.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:35.530" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:35.531" starttime="20210210 13:44:35.530"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:35.531" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:35.531" starttime="20210210 13:44:35.531"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.531" starttime="20210210 13:44:35.521"></status>
</kw>
<msg timestamp="20210210 13:44:35.531" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:35.532" starttime="20210210 13:44:35.521"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.532" starttime="20210210 13:44:35.520"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.532" starttime="20210210 13:44:35.520"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.532" starttime="20210210 13:44:35.511"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:35.532" starttime="20210210 13:44:35.510"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:35.535" level="INFO">Running command 'ozone sh bucket list 53638-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:38.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:38.771" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210210 13:44:38.771" starttime="20210210 13:44:35.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:38.772" level="INFO">{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:46.703Z",
  "modificationTime" : "2021-02-10T13:43:46.703Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:27.611Z",
  "modificationTime" : "2021-02-10T13:43:43.178Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:53.126Z",
  "modificationTime" : "2021-02-10T13:43:53.126Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:20.929Z",
  "modificationTime" : "2021-02-10T13:43:40.290Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:24.202Z",
  "modificationTime" : "2021-02-10T13:43:24.202Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:44:38.772" starttime="20210210 13:44:38.771"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:38.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:38.773" starttime="20210210 13:44:38.772"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.773" starttime="20210210 13:44:35.533"></status>
</kw>
<msg timestamp="20210210 13:44:38.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:38.773" starttime="20210210 13:44:35.533"></status>
</kw>
<msg timestamp="20210210 13:44:38.773" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210210 13:44:38.773" starttime="20210210 13:44:35.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:38.774" starttime="20210210 13:44:38.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:38.774" starttime="20210210 13:44:38.774"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:44:38.774" critical="yes" starttime="20210210 13:44:35.510"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:38.781" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:38.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:38.783" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:44:38.783" starttime="20210210 13:44:38.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:38.784" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:44:38.784" starttime="20210210 13:44:38.783"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:38.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:38.785" starttime="20210210 13:44:38.784"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.785" starttime="20210210 13:44:38.778"></status>
</kw>
<msg timestamp="20210210 13:44:38.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:38.785" starttime="20210210 13:44:38.778"></status>
</kw>
<msg timestamp="20210210 13:44:38.786" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:44:38.786" starttime="20210210 13:44:38.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:44:38.786" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:44:38.786" starttime="20210210 13:44:38.786"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:38.790" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:38.796" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:38.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:38.797" starttime="20210210 13:44:38.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:38.797" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:38.797" starttime="20210210 13:44:38.797"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:38.798" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:38.798" starttime="20210210 13:44:38.798"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.798" starttime="20210210 13:44:38.788"></status>
</kw>
<msg timestamp="20210210 13:44:38.798" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:38.798" starttime="20210210 13:44:38.787"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.799" starttime="20210210 13:44:38.787"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.799" starttime="20210210 13:44:38.786"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.799" starttime="20210210 13:44:38.777"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:38.799" starttime="20210210 13:44:38.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:38.802" level="INFO">Running command 'ozone sh bucket info 53638-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:42.108" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:42.108" level="INFO">${output} = 53638-source bucket1</msg>
<status status="PASS" endtime="20210210 13:44:42.108" starttime="20210210 13:44:38.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:42.109" level="INFO">53638-source bucket1</msg>
<status status="PASS" endtime="20210210 13:44:42.109" starttime="20210210 13:44:42.108"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:42.110" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:42.110" starttime="20210210 13:44:42.109"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.110" starttime="20210210 13:44:38.800"></status>
</kw>
<msg timestamp="20210210 13:44:42.110" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:42.110" starttime="20210210 13:44:38.800"></status>
</kw>
<msg timestamp="20210210 13:44:42.110" level="INFO">${result} = 53638-source bucket1</msg>
<status status="PASS" endtime="20210210 13:44:42.110" starttime="20210210 13:44:38.799"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:42.111" starttime="20210210 13:44:42.110"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:44:42.111" critical="yes" starttime="20210210 13:44:38.776"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:42.117" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:42.119" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:42.119" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:44:42.119" starttime="20210210 13:44:42.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:42.120" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:44:42.120" starttime="20210210 13:44:42.120"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:42.121" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:42.121" starttime="20210210 13:44:42.120"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.122" starttime="20210210 13:44:42.115"></status>
</kw>
<msg timestamp="20210210 13:44:42.122" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:42.122" starttime="20210210 13:44:42.114"></status>
</kw>
<msg timestamp="20210210 13:44:42.122" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:44:42.122" starttime="20210210 13:44:42.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:44:42.122" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:44:42.122" starttime="20210210 13:44:42.122"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:42.126" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:42.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:42.132" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:42.132" starttime="20210210 13:44:42.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:42.133" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:42.133" starttime="20210210 13:44:42.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:42.133" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.133"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.124"></status>
</kw>
<msg timestamp="20210210 13:44:42.134" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.123"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.123"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.123"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.113"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:42.134" starttime="20210210 13:44:42.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:42.138" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 53638-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:45.548" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:45.548" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:44:45.548" starttime="20210210 13:44:42.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:45.549" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:44:45.549" starttime="20210210 13:44:45.548"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:45.550" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:45.550" starttime="20210210 13:44:45.549"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:45.550" starttime="20210210 13:44:42.135"></status>
</kw>
<msg timestamp="20210210 13:44:45.550" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:45.550" starttime="20210210 13:44:42.135"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:45.550" starttime="20210210 13:44:42.135"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:45.558" level="INFO">Running command 'ozone sh bucket getacl 53638-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:48.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:48.584" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210210 13:44:48.584" starttime="20210210 13:44:45.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:48.585" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210210 13:44:48.585" starttime="20210210 13:44:48.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:48.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:48.586" starttime="20210210 13:44:48.585"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:48.586" starttime="20210210 13:44:45.552"></status>
</kw>
<msg timestamp="20210210 13:44:48.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:48.586" starttime="20210210 13:44:45.552"></status>
</kw>
<msg timestamp="20210210 13:44:48.587" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210210 13:44:48.587" starttime="20210210 13:44:45.551"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:48.587" starttime="20210210 13:44:48.587"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:48.587" starttime="20210210 13:44:45.551"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:48.592" level="INFO">Running command 'ozone sh bucket getacl 53638-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:51.786" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:51.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:51.786" starttime="20210210 13:44:48.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:51.787" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:51.787" starttime="20210210 13:44:51.787"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:51.788" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:51.788" starttime="20210210 13:44:51.788"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:51.788" starttime="20210210 13:44:48.589"></status>
</kw>
<msg timestamp="20210210 13:44:51.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:51.788" starttime="20210210 13:44:48.589"></status>
</kw>
<msg timestamp="20210210 13:44:51.789" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210210 13:44:51.789" starttime="20210210 13:44:48.588"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:51.789" starttime="20210210 13:44:51.789"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:51.789" starttime="20210210 13:44:48.588"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:51.793" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 53638-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:54.688" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:54.688" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:44:54.688" starttime="20210210 13:44:51.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:54.689" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 13:44:54.689" starttime="20210210 13:44:54.688"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:54.690" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:54.690" starttime="20210210 13:44:54.689"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:54.690" starttime="20210210 13:44:51.790"></status>
</kw>
<msg timestamp="20210210 13:44:54.690" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:54.690" starttime="20210210 13:44:51.790"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:54.690" starttime="20210210 13:44:51.789"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:54.694" level="INFO">Running command 'ozone sh bucket getacl 53638-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:44:58.307" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:44:58.307" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:44:58.307" starttime="20210210 13:44:54.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:44:58.308" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:44:58.308" starttime="20210210 13:44:58.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:44:58.309" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:44:58.309" starttime="20210210 13:44:58.309"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:58.309" starttime="20210210 13:44:54.692"></status>
</kw>
<msg timestamp="20210210 13:44:58.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:44:58.309" starttime="20210210 13:44:54.692"></status>
</kw>
<msg timestamp="20210210 13:44:58.310" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210210 13:44:58.310" starttime="20210210 13:44:54.691"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:44:58.310" starttime="20210210 13:44:58.310"></status>
</kw>
<status status="PASS" endtime="20210210 13:44:58.311" starttime="20210210 13:44:54.690"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:44:58.315" level="INFO">Running command 'ozone sh bucket getacl 53638-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:01.359" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:01.359" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210210 13:45:01.359" starttime="20210210 13:44:58.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:01.361" level="INFO">READ</msg>
<status status="PASS" endtime="20210210 13:45:01.367" starttime="20210210 13:45:01.359"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:01.369" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:01.369" starttime="20210210 13:45:01.367"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.369" starttime="20210210 13:44:58.312"></status>
</kw>
<msg timestamp="20210210 13:45:01.369" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:01.369" starttime="20210210 13:44:58.312"></status>
</kw>
<msg timestamp="20210210 13:45:01.369" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210210 13:45:01.369" starttime="20210210 13:44:58.311"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:01.370" starttime="20210210 13:45:01.370"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.370" starttime="20210210 13:44:58.311"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:01.370" critical="yes" starttime="20210210 13:44:42.112"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:01.383" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:01.386" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:01.386" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:01.386" starttime="20210210 13:45:01.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:01.387" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:01.387" starttime="20210210 13:45:01.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:01.387" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:01.388" starttime="20210210 13:45:01.387"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.389" starttime="20210210 13:45:01.376"></status>
</kw>
<msg timestamp="20210210 13:45:01.389" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:01.389" starttime="20210210 13:45:01.376"></status>
</kw>
<msg timestamp="20210210 13:45:01.389" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:01.390" starttime="20210210 13:45:01.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:01.390" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:01.390" starttime="20210210 13:45:01.390"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:01.409" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:01.459" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:01.459" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:01.459" starttime="20210210 13:45:01.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:01.460" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:01.460" starttime="20210210 13:45:01.460"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:01.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:01.461" starttime="20210210 13:45:01.461"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.461" starttime="20210210 13:45:01.393"></status>
</kw>
<msg timestamp="20210210 13:45:01.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:01.462" starttime="20210210 13:45:01.391"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.462" starttime="20210210 13:45:01.391"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.462" starttime="20210210 13:45:01.390"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.462" starttime="20210210 13:45:01.375"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:01.462" starttime="20210210 13:45:01.375"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:01.482" level="INFO">Running command 'ozone sh bucket link 53638-source/bucket2 53638-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:04.794" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:04.794" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:04.794" starttime="20210210 13:45:01.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:04.795" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:04.795" starttime="20210210 13:45:04.794"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:04.796" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:04.796" starttime="20210210 13:45:04.796"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:04.796" starttime="20210210 13:45:01.473"></status>
</kw>
<msg timestamp="20210210 13:45:04.796" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:04.796" starttime="20210210 13:45:01.473"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:04.797" starttime="20210210 13:45:01.462"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:04.799" level="INFO">Running command 'ozone sh bucket create 53638-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:07.690" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:45:07.690" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 13:45:07.690" starttime="20210210 13:45:04.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:07.691" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 13:45:07.691" starttime="20210210 13:45:07.690"></status>
</kw>
<msg timestamp="20210210 13:45:07.691" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 13:45:07.691" starttime="20210210 13:45:04.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:07.692" starttime="20210210 13:45:07.692"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:07.695" level="INFO">Running command 'ozone sh bucket create 53638-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:10.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:10.692" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:10.692" starttime="20210210 13:45:07.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:10.693" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:10.693" starttime="20210210 13:45:10.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:10.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:10.694" starttime="20210210 13:45:10.694"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:10.694" starttime="20210210 13:45:07.693"></status>
</kw>
<msg timestamp="20210210 13:45:10.695" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:10.695" starttime="20210210 13:45:07.693"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:10.695" starttime="20210210 13:45:07.692"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:10.697" level="INFO">Running command 'ozone sh bucket link 53638-source/bucket1 53638-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:14.044" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:45:14.044" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 13:45:14.044" starttime="20210210 13:45:10.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.045" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 13:45:14.046" starttime="20210210 13:45:14.045"></status>
</kw>
<msg timestamp="20210210 13:45:14.046" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 13:45:14.046" starttime="20210210 13:45:10.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:14.046" starttime="20210210 13:45:14.046"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:14.047" critical="yes" starttime="20210210 13:45:01.374"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:14.053" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:14.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:14.055" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:14.055" starttime="20210210 13:45:14.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.056" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:14.056" starttime="20210210 13:45:14.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.057" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:14.057" starttime="20210210 13:45:14.056"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.057" starttime="20210210 13:45:14.050"></status>
</kw>
<msg timestamp="20210210 13:45:14.057" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:14.057" starttime="20210210 13:45:14.050"></status>
</kw>
<msg timestamp="20210210 13:45:14.058" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:14.058" starttime="20210210 13:45:14.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:14.058" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:14.058" starttime="20210210 13:45:14.058"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:14.062" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:14.077" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:14.077" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:14.077" starttime="20210210 13:45:14.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.078" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:14.078" starttime="20210210 13:45:14.078"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.079" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:14.079" starttime="20210210 13:45:14.079"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.079" starttime="20210210 13:45:14.060"></status>
</kw>
<msg timestamp="20210210 13:45:14.079" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:14.079" starttime="20210210 13:45:14.060"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.080" starttime="20210210 13:45:14.059"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.080" starttime="20210210 13:45:14.058"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.080" starttime="20210210 13:45:14.049"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.080" starttime="20210210 13:45:14.049"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:14.084" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:14.088" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:14.088" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:14.088" starttime="20210210 13:45:14.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.089" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:14.089" starttime="20210210 13:45:14.088"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:14.090" starttime="20210210 13:45:14.089"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.090" starttime="20210210 13:45:14.082"></status>
</kw>
<msg timestamp="20210210 13:45:14.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:14.090" starttime="20210210 13:45:14.081"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.090" starttime="20210210 13:45:14.081"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:14.094" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:14.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:14.097" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:14.097" starttime="20210210 13:45:14.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.098" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:14.098" starttime="20210210 13:45:14.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:14.099" starttime="20210210 13:45:14.098"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.099" starttime="20210210 13:45:14.092"></status>
</kw>
<msg timestamp="20210210 13:45:14.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:14.099" starttime="20210210 13:45:14.091"></status>
</kw>
<msg timestamp="20210210 13:45:14.100" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:14.100" starttime="20210210 13:45:14.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:14.100" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:14.100" starttime="20210210 13:45:14.100"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:14.104" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:14.114" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:14.114" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:14.114" starttime="20210210 13:45:14.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.115" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:14.115" starttime="20210210 13:45:14.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:14.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:14.116" starttime="20210210 13:45:14.115"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.116" starttime="20210210 13:45:14.102"></status>
</kw>
<msg timestamp="20210210 13:45:14.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:14.116" starttime="20210210 13:45:14.101"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.116" starttime="20210210 13:45:14.101"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.116" starttime="20210210 13:45:14.100"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.117" starttime="20210210 13:45:14.091"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:14.117" starttime="20210210 13:45:14.090"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:14.119" level="INFO">Running command 'ozone sh key list 53638-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:17.424" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:17.424" level="INFO">${output} = {
  "volumeName" : "53638-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-10T13:43:10.023Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210210 13:45:17.424" starttime="20210210 13:45:14.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.425" level="INFO">{
  "volumeName" : "53638-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-10T13:43:10.023Z",
  "modificationTime" : "2021-02-10T13:43:14.300Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210210 13:45:17.425" starttime="20210210 13:45:17.424"></status>
</kw>
<msg timestamp="20210210 13:45:17.425" level="INFO">${result} = {
  "volumeName" : "53638-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-10T13:43:10.023Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210210 13:45:17.425" starttime="20210210 13:45:14.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:17.426" starttime="20210210 13:45:17.426"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.426" starttime="20210210 13:45:14.081"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.426" starttime="20210210 13:45:14.080"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:17.426" critical="yes" starttime="20210210 13:45:14.048"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:17.432" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:17.434" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:17.434" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:17.434" starttime="20210210 13:45:17.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.435" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:17.435" starttime="20210210 13:45:17.434"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.435" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:17.435" starttime="20210210 13:45:17.435"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.436" starttime="20210210 13:45:17.429"></status>
</kw>
<msg timestamp="20210210 13:45:17.436" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:17.436" starttime="20210210 13:45:17.429"></status>
</kw>
<msg timestamp="20210210 13:45:17.436" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:17.436" starttime="20210210 13:45:17.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:17.437" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:17.437" starttime="20210210 13:45:17.436"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:17.441" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:17.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:17.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:17.447" starttime="20210210 13:45:17.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.447" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:17.448" starttime="20210210 13:45:17.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:17.448" starttime="20210210 13:45:17.448"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.448" starttime="20210210 13:45:17.438"></status>
</kw>
<msg timestamp="20210210 13:45:17.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:17.449" starttime="20210210 13:45:17.438"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.449" starttime="20210210 13:45:17.437"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.449" starttime="20210210 13:45:17.437"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.449" starttime="20210210 13:45:17.428"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.449" starttime="20210210 13:45:17.428"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:17.452" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:17.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:17.455" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:17.455" starttime="20210210 13:45:17.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.456" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:17.456" starttime="20210210 13:45:17.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:17.457" starttime="20210210 13:45:17.456"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.457" starttime="20210210 13:45:17.450"></status>
</kw>
<msg timestamp="20210210 13:45:17.457" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:17.457" starttime="20210210 13:45:17.450"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.457" starttime="20210210 13:45:17.450"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:17.461" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:17.463" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:17.463" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:17.463" starttime="20210210 13:45:17.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.464" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:17.464" starttime="20210210 13:45:17.463"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.464" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:17.464" starttime="20210210 13:45:17.464"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.465" starttime="20210210 13:45:17.459"></status>
</kw>
<msg timestamp="20210210 13:45:17.465" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:17.465" starttime="20210210 13:45:17.459"></status>
</kw>
<msg timestamp="20210210 13:45:17.465" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:17.465" starttime="20210210 13:45:17.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:17.466" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:17.466" starttime="20210210 13:45:17.465"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:17.469" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:17.475" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:17.475" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:17.475" starttime="20210210 13:45:17.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.476" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:17.476" starttime="20210210 13:45:17.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:17.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:17.476" starttime="20210210 13:45:17.476"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.477" starttime="20210210 13:45:17.467"></status>
</kw>
<msg timestamp="20210210 13:45:17.477" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:17.477" starttime="20210210 13:45:17.467"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.477" starttime="20210210 13:45:17.466"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.477" starttime="20210210 13:45:17.466"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.477" starttime="20210210 13:45:17.458"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:17.477" starttime="20210210 13:45:17.458"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:17.479" level="INFO">Running command 'ozone sh key list 53638-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:20.415" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:45:20.416" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53638-target unreadable-link null</msg>
<status status="PASS" endtime="20210210 13:45:20.416" starttime="20210210 13:45:17.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.417" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53638-target unreadable-link null</msg>
<status status="PASS" endtime="20210210 13:45:20.417" starttime="20210210 13:45:20.416"></status>
</kw>
<msg timestamp="20210210 13:45:20.417" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 53638-target unreadable-link null</msg>
<status status="PASS" endtime="20210210 13:45:20.417" starttime="20210210 13:45:17.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:20.418" starttime="20210210 13:45:20.417"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.418" starttime="20210210 13:45:17.450"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.418" starttime="20210210 13:45:17.449"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:20.418" critical="yes" starttime="20210210 13:45:17.427"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:20.423" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:20.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:20.425" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:20.425" starttime="20210210 13:45:20.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.426" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:20.426" starttime="20210210 13:45:20.426"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.427" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:20.427" starttime="20210210 13:45:20.426"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.427" starttime="20210210 13:45:20.421"></status>
</kw>
<msg timestamp="20210210 13:45:20.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:20.427" starttime="20210210 13:45:20.420"></status>
</kw>
<msg timestamp="20210210 13:45:20.427" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:20.427" starttime="20210210 13:45:20.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:20.428" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:20.428" starttime="20210210 13:45:20.428"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:20.432" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:20.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:20.438" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:20.438" starttime="20210210 13:45:20.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.439" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:20.439" starttime="20210210 13:45:20.438"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.439" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.439"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.429"></status>
</kw>
<msg timestamp="20210210 13:45:20.440" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.429"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.429"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.428"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.420"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.440" starttime="20210210 13:45:20.419"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:20.444" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:20.447" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:20.447" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:20.447" starttime="20210210 13:45:20.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.448" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:20.448" starttime="20210210 13:45:20.447"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.448" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:20.448" starttime="20210210 13:45:20.448"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.449" starttime="20210210 13:45:20.442"></status>
</kw>
<msg timestamp="20210210 13:45:20.449" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:20.449" starttime="20210210 13:45:20.442"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.449" starttime="20210210 13:45:20.441"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:20.452" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:20.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:20.455" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:20.455" starttime="20210210 13:45:20.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.455" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:20.456" starttime="20210210 13:45:20.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.456" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:20.456" starttime="20210210 13:45:20.456"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.456" starttime="20210210 13:45:20.450"></status>
</kw>
<msg timestamp="20210210 13:45:20.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:20.456" starttime="20210210 13:45:20.450"></status>
</kw>
<msg timestamp="20210210 13:45:20.457" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:20.457" starttime="20210210 13:45:20.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:20.457" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:20.457" starttime="20210210 13:45:20.457"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:20.462" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:20.468" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:20.468" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:20.468" starttime="20210210 13:45:20.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.469" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:20.469" starttime="20210210 13:45:20.468"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:20.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:20.469" starttime="20210210 13:45:20.469"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.469" starttime="20210210 13:45:20.458"></status>
</kw>
<msg timestamp="20210210 13:45:20.470" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:20.470" starttime="20210210 13:45:20.458"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.470" starttime="20210210 13:45:20.458"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.470" starttime="20210210 13:45:20.457"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.470" starttime="20210210 13:45:20.449"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:20.470" starttime="20210210 13:45:20.449"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:20.473" level="INFO">Running command 'ozone sh bucket info 53638-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:23.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:23.630" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210210 13:45:23.630" starttime="20210210 13:45:20.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:23.631" level="INFO">{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:27.611Z",
  "modificationTime" : "2021-02-10T13:43:43.178Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:45:23.631" starttime="20210210 13:45:23.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:23.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:23.632" starttime="20210210 13:45:23.632"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:23.632" starttime="20210210 13:45:20.471"></status>
</kw>
<msg timestamp="20210210 13:45:23.632" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:23.632" starttime="20210210 13:45:20.471"></status>
</kw>
<msg timestamp="20210210 13:45:23.633" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210210 13:45:23.633" starttime="20210210 13:45:20.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:23.633" starttime="20210210 13:45:23.633"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:23.634" starttime="20210210 13:45:23.633"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:23.636" level="INFO">Running command 'ozone sh key list 53638-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:26.670" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:45:26.670" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53638-source unreadable-bucket </msg>
<status status="PASS" endtime="20210210 13:45:26.670" starttime="20210210 13:45:23.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:26.671" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53638-source unreadable-bucket </msg>
<status status="PASS" endtime="20210210 13:45:26.671" starttime="20210210 13:45:26.670"></status>
</kw>
<msg timestamp="20210210 13:45:26.672" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 53638-source unreadable-bucket </msg>
<status status="PASS" endtime="20210210 13:45:26.672" starttime="20210210 13:45:23.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:26.673" starttime="20210210 13:45:26.672"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.673" starttime="20210210 13:45:20.441"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.673" starttime="20210210 13:45:20.441"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:26.673" critical="yes" starttime="20210210 13:45:20.418"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:26.680" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:26.682" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:26.682" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:26.682" starttime="20210210 13:45:26.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:26.683" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:26.683" starttime="20210210 13:45:26.682"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:26.683" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:26.684" starttime="20210210 13:45:26.683"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.684" starttime="20210210 13:45:26.677"></status>
</kw>
<msg timestamp="20210210 13:45:26.684" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:26.684" starttime="20210210 13:45:26.676"></status>
</kw>
<msg timestamp="20210210 13:45:26.684" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:26.684" starttime="20210210 13:45:26.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:26.685" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:26.685" starttime="20210210 13:45:26.684"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:26.689" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:26.695" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:26.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:26.695" starttime="20210210 13:45:26.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:26.696" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:26.696" starttime="20210210 13:45:26.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:26.697" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:26.697" starttime="20210210 13:45:26.696"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.697" starttime="20210210 13:45:26.686"></status>
</kw>
<msg timestamp="20210210 13:45:26.697" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:26.697" starttime="20210210 13:45:26.686"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.697" starttime="20210210 13:45:26.685"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.697" starttime="20210210 13:45:26.685"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.697" starttime="20210210 13:45:26.675"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:26.698" starttime="20210210 13:45:26.675"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:26.701" level="INFO">Running command 'ozone sh bucket link 53638-target/loop1 53638-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:29.827" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:29.827" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:29.827" starttime="20210210 13:45:26.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:29.828" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:29.828" starttime="20210210 13:45:29.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:29.829" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:29.829" starttime="20210210 13:45:29.828"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:29.829" starttime="20210210 13:45:26.699"></status>
</kw>
<msg timestamp="20210210 13:45:29.829" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:29.829" starttime="20210210 13:45:26.698"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:29.829" starttime="20210210 13:45:26.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:29.833" level="INFO">Running command 'ozone sh bucket link 53638-target/loop2 53638-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:32.987" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:32.988" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:32.988" starttime="20210210 13:45:29.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:32.989" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:32.989" starttime="20210210 13:45:32.988"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:32.989" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:32.989" starttime="20210210 13:45:32.989"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:32.990" starttime="20210210 13:45:29.830"></status>
</kw>
<msg timestamp="20210210 13:45:32.990" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:32.990" starttime="20210210 13:45:29.830"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:32.990" starttime="20210210 13:45:29.829"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:32.993" level="INFO">Running command 'ozone sh bucket link 53638-target/loop3 53638-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:36.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:36.004" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:36.004" starttime="20210210 13:45:32.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:36.005" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:36.005" starttime="20210210 13:45:36.004"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:36.006" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:36.006" starttime="20210210 13:45:36.005"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:36.006" starttime="20210210 13:45:32.991"></status>
</kw>
<msg timestamp="20210210 13:45:36.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:36.006" starttime="20210210 13:45:32.991"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:36.007" starttime="20210210 13:45:32.990"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:36.010" level="INFO">Running command 'ozone sh key list 53638-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:38.895" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:45:38.895" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210210 13:45:38.895" starttime="20210210 13:45:36.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:38.897" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210210 13:45:38.897" starttime="20210210 13:45:38.895"></status>
</kw>
<msg timestamp="20210210 13:45:38.897" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210210 13:45:38.897" starttime="20210210 13:45:36.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:38.897" starttime="20210210 13:45:38.897"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:38.898" critical="yes" starttime="20210210 13:45:26.674"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:38.903" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:38.905" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:38.905" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:38.906" starttime="20210210 13:45:38.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:38.906" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:38.906" starttime="20210210 13:45:38.906"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:38.907" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:38.907" starttime="20210210 13:45:38.907"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:38.907" starttime="20210210 13:45:38.901"></status>
</kw>
<msg timestamp="20210210 13:45:38.907" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:38.907" starttime="20210210 13:45:38.900"></status>
</kw>
<msg timestamp="20210210 13:45:38.908" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:38.908" starttime="20210210 13:45:38.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:38.908" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:38.908" starttime="20210210 13:45:38.908"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:38.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:38.918" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:38.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:38.918" starttime="20210210 13:45:38.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:38.919" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:38.919" starttime="20210210 13:45:38.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:38.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:38.920" starttime="20210210 13:45:38.919"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:38.920" starttime="20210210 13:45:38.910"></status>
</kw>
<msg timestamp="20210210 13:45:38.920" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:38.920" starttime="20210210 13:45:38.909"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:38.920" starttime="20210210 13:45:38.909"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:38.920" starttime="20210210 13:45:38.909"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:38.921" starttime="20210210 13:45:38.900"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:38.921" starttime="20210210 13:45:38.899"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:38.924" level="INFO">Running command 'ozone sh bucket link 53638-source/bucket1 53638-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:41.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:41.960" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:41.960" starttime="20210210 13:45:38.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:41.961" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:41.962" starttime="20210210 13:45:41.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:41.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:41.963" starttime="20210210 13:45:41.962"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:41.963" starttime="20210210 13:45:38.922"></status>
</kw>
<msg timestamp="20210210 13:45:41.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:41.963" starttime="20210210 13:45:38.921"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:41.963" starttime="20210210 13:45:38.921"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:41.966" level="INFO">Running command 'ozone sh key put 53638-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:49.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:49.666" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:49.666" starttime="20210210 13:45:41.964"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:49.667" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:49.667" starttime="20210210 13:45:49.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:49.668" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:49.668" starttime="20210210 13:45:49.668"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:49.668" starttime="20210210 13:45:41.964"></status>
</kw>
<msg timestamp="20210210 13:45:49.668" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:49.669" starttime="20210210 13:45:41.964"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:49.669" starttime="20210210 13:45:41.963"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:45:49.670" level="INFO">${postfix} = 42325</msg>
<status status="PASS" endtime="20210210 13:45:49.670" starttime="20210210 13:45:49.670"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:45:49.671" level="INFO">${tmpfile} = /tmp/tempkey-42325</msg>
<status status="PASS" endtime="20210210 13:45:49.671" starttime="20210210 13:45:49.670"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:49.674" level="INFO">Running command 'ozone sh key get 53638-target/link1/key3 /tmp/tempkey-42325 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:54.152" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:54.152" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:54.152" starttime="20210210 13:45:49.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.153" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:54.153" starttime="20210210 13:45:54.152"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.154" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:54.154" starttime="20210210 13:45:54.153"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.154" starttime="20210210 13:45:49.672"></status>
</kw>
<msg timestamp="20210210 13:45:54.154" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:54.154" starttime="20210210 13:45:49.671"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.154" starttime="20210210 13:45:49.671"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:45:54.156" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-42325 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:54.159" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:45:54.159" starttime="20210210 13:45:54.154"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:54.162" level="INFO">Running command 'rm -f /tmp/tempkey-42325 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:54.165" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:54.165" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:54.165" starttime="20210210 13:45:54.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.166" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:54.166" starttime="20210210 13:45:54.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.167" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:54.167" starttime="20210210 13:45:54.166"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.167" starttime="20210210 13:45:54.160"></status>
</kw>
<msg timestamp="20210210 13:45:54.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:54.167" starttime="20210210 13:45:54.160"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.167" starttime="20210210 13:45:54.159"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:45:54.168" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:45:54.168" starttime="20210210 13:45:54.168"></status>
</kw>
<msg timestamp="20210210 13:45:54.168" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:45:54.168" starttime="20210210 13:45:49.669"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:45:54.169" starttime="20210210 13:45:54.168"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.169" starttime="20210210 13:45:49.669"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:45:54.169" critical="yes" starttime="20210210 13:45:38.898"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:54.174" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:54.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:54.176" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 13:45:54.176" starttime="20210210 13:45:54.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.177" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 13:45:54.177" starttime="20210210 13:45:54.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:54.178" starttime="20210210 13:45:54.177"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.178" starttime="20210210 13:45:54.172"></status>
</kw>
<msg timestamp="20210210 13:45:54.178" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:54.178" starttime="20210210 13:45:54.171"></status>
</kw>
<msg timestamp="20210210 13:45:54.181" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 13:45:54.181" starttime="20210210 13:45:54.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:45:54.181" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:45:54.181" starttime="20210210 13:45:54.181"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:54.189" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:54.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:54.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:54.201" starttime="20210210 13:45:54.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.202" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:54.202" starttime="20210210 13:45:54.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:54.203" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:54.203" starttime="20210210 13:45:54.202"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.203" starttime="20210210 13:45:54.182"></status>
</kw>
<msg timestamp="20210210 13:45:54.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:54.204" starttime="20210210 13:45:54.182"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.204" starttime="20210210 13:45:54.182"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.204" starttime="20210210 13:45:54.181"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.204" starttime="20210210 13:45:54.171"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:54.204" starttime="20210210 13:45:54.170"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:54.207" level="INFO">Running command 'ozone sh bucket delete 53638-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:45:57.709" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:45:57.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:45:57.709" starttime="20210210 13:45:54.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:45:57.710" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:45:57.710" starttime="20210210 13:45:57.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:45:57.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:45:57.711" starttime="20210210 13:45:57.710"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:57.711" starttime="20210210 13:45:54.205"></status>
</kw>
<msg timestamp="20210210 13:45:57.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:45:57.711" starttime="20210210 13:45:54.205"></status>
</kw>
<status status="PASS" endtime="20210210 13:45:57.712" starttime="20210210 13:45:54.204"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:45:57.715" level="INFO">Running command 'ozone sh bucket list 53638-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:46:00.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:46:00.825" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T...</msg>
<status status="PASS" endtime="20210210 13:46:00.825" starttime="20210210 13:45:57.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:46:00.826" level="INFO">{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:45:10.616Z",
  "modificationTime" : "2021-02-10T13:45:10.616Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:46.703Z",
  "modificationTime" : "2021-02-10T13:43:46.703Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:27.611Z",
  "modificationTime" : "2021-02-10T13:43:43.178Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:45:04.629Z",
  "modificationTime" : "2021-02-10T13:45:04.629Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:45:41.823Z",
  "modificationTime" : "2021-02-10T13:45:41.823Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:45:35.888Z",
  "modificationTime" : "2021-02-10T13:45:35.888Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:45:29.662Z",
  "modificationTime" : "2021-02-10T13:45:29.662Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:45:32.817Z",
  "modificationTime" : "2021-02-10T13:45:32.817Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:20.929Z",
  "modificationTime" : "2021-02-10T13:43:40.290Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:43:24.202Z",
  "modificationTime" : "2021-02-10T13:43:24.202Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "53638-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:46:00.827" starttime="20210210 13:46:00.826"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:46:00.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:46:00.827" starttime="20210210 13:46:00.827"></status>
</kw>
<status status="PASS" endtime="20210210 13:46:00.828" starttime="20210210 13:45:57.713"></status>
</kw>
<msg timestamp="20210210 13:46:00.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:46:00.828" starttime="20210210 13:45:57.712"></status>
</kw>
<msg timestamp="20210210 13:46:00.828" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "53638-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T...</msg>
<status status="PASS" endtime="20210210 13:46:00.828" starttime="20210210 13:45:57.712"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:46:00.828" starttime="20210210 13:46:00.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:46:00.832" level="INFO">Running command 'ozone sh key list 53638-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:46:03.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:46:03.890" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210210 13:46:03.890" starttime="20210210 13:46:00.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:46:03.891" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210210 13:46:03.891" starttime="20210210 13:46:03.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:46:03.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:46:03.892" starttime="20210210 13:46:03.891"></status>
</kw>
<status status="PASS" endtime="20210210 13:46:03.892" starttime="20210210 13:46:00.829"></status>
</kw>
<msg timestamp="20210210 13:46:03.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:46:03.892" starttime="20210210 13:46:00.829"></status>
</kw>
<msg timestamp="20210210 13:46:03.892" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210210 13:46:03.892" starttime="20210210 13:46:00.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:46:03.893" starttime="20210210 13:46:03.893"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:46:03.893" critical="yes" starttime="20210210 13:45:54.170"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210210 13:46:03.895" starttime="20210210 13:42:57.608"></status>
</suite>
<status status="PASS" elapsedtime="214366" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
