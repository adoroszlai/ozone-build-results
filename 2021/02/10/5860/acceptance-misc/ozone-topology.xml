<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:31:58.513" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-topology">
<suite source="/opt/hadoop/smoketest/basic/basic.robot" id="s1-s1" name="Basic">
<test id="s1-s1-t1" name="Check webui static resources">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit HTTP user</arg>
</arguments>
<status status="PASS" endtime="20210210 13:28:58.929" starttime="20210210 13:28:58.929"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:28:58.935" level="INFO">Running command 'curl --negotiate -u : -s -I http://scm:9876/static/bootstrap-3.4.1/js/bootstrap.min.js 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:28:59.089" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:28:59.089" level="INFO">${output} = HTTP/1.1 200 OK
Date: Wed, 10 Feb 2021 13:28:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 10 Feb 2021 12:53:36 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210210 13:28:59.089" starttime="20210210 13:28:58.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:28:59.091" level="INFO">HTTP/1.1 200 OK
Date: Wed, 10 Feb 2021 13:28:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 10 Feb 2021 12:53:36 GMT
Content-Type: application/javascript
Accept-Ranges: bytes
Content-Length: 39680
</msg>
<status status="PASS" endtime="20210210 13:28:59.091" starttime="20210210 13:28:59.090"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:28:59.091" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:28:59.091" starttime="20210210 13:28:59.091"></status>
</kw>
<status status="PASS" endtime="20210210 13:28:59.092" starttime="20210210 13:28:58.930"></status>
</kw>
<msg timestamp="20210210 13:28:59.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:28:59.092" starttime="20210210 13:28:58.930"></status>
</kw>
<msg timestamp="20210210 13:28:59.093" level="INFO">${result} = HTTP/1.1 200 OK
Date: Wed, 10 Feb 2021 13:28:59 GMT
X-Content-Type-Options: nosniff
X-FRAME-OPTIONS: SAMEORIGIN
X-XSS-Protection: 1; mode=block
Last-Modified: Wed, 10 Feb 2021 12:53:36 GMT
Content-Typ...</msg>
<status status="PASS" endtime="20210210 13:28:59.093" starttime="20210210 13:28:58.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20210210 13:28:59.093" starttime="20210210 13:28:59.093"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:28:59.094" critical="yes" starttime="20210210 13:28:58.928"></status>
</test>
<test id="s1-s1-t2" name="Start freon testing">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<status status="PASS" endtime="20210210 13:28:59.095" starttime="20210210 13:28:59.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:28:59.108" level="INFO">Running command 'ozone freon randomkeys --num-of-volumes 5 --num-of-buckets 5 --num-of-keys 5 --num-of-threads 1 --replication-type RATIS --factor THREE --validate-writes 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:29:58.497" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:29:58.497" level="INFO">${output} = 2021-02-10 13:29:00,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:29:01,039 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:29:58.497" starttime="20210210 13:28:59.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:29:58.498" level="INFO">2021-02-10 13:29:00,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:29:01,039 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:29:01,039 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:29:05,001 [main] INFO freon.RandomKeyGenerator: Number of Threads: 1
2021-02-10 13:29:05,016 [main] INFO freon.RandomKeyGenerator: Number of Volumes: 5.
2021-02-10 13:29:05,016 [main] INFO freon.RandomKeyGenerator: Number of Buckets per Volume: 5.
2021-02-10 13:29:05,016 [main] INFO freon.RandomKeyGenerator: Number of Keys per Bucket: 5.
2021-02-10 13:29:05,016 [main] INFO freon.RandomKeyGenerator: Key size: 10240 bytes
2021-02-10 13:29:05,016 [main] INFO freon.RandomKeyGenerator: Buffer size: 4096 bytes
2021-02-10 13:29:05,016 [main] INFO freon.RandomKeyGenerator: validateWrites : true
2021-02-10 13:29:05,031 [main] INFO freon.RandomKeyGenerator: Data validation is enabled.
2021-02-10 13:29:05,032 [main] INFO freon.RandomKeyGenerator: Starting progress bar Thread.
2021-02-10 13:29:05,039 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-02-10 13:29:05,101 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-0-77731, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:29:05,413 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-1-77267, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:29:05,428 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-2-85028, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:29:05,436 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-3-61956, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:29:05,447 [pool-2-thread-1] INFO rpc.RpcClient: Creating Volume: vol-4-17798, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:29:05,466 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77731/bucket-0-99392, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,561 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-77267/bucket-0-51778, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,583 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85028/bucket-0-26672, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,598 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-61956/bucket-0-76186, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,608 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17798/bucket-0-87800, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,618 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77731/bucket-1-05635, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,632 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-77267/bucket-1-43350, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,644 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85028/bucket-1-04292, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,655 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-61956/bucket-1-93809, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,662 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17798/bucket-1-79115, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,674 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77731/bucket-2-24063, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,681 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-77267/bucket-2-51428, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,687 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85028/bucket-2-13217, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,693 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-61956/bucket-2-26759, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,703 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17798/bucket-2-31935, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,712 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77731/bucket-3-28858, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,721 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-77267/bucket-3-76388, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,730 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85028/bucket-3-58752, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,738 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-61956/bucket-3-28945, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,745 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17798/bucket-3-21696, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,752 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-0-77731/bucket-4-51002, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,757 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-1-77267/bucket-4-89704, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,762 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-2-85028/bucket-4-88590, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,768 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-3-61956/bucket-4-00972, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:05,774 [pool-2-thread-1] INFO rpc.RpcClient: Creating Bucket: vol-4-17798/bucket-4-58548, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:29:06,040 [Thread-7] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 125)
2021-02-10 13:29:06,664 [pool-2-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:29:06,871 [pool-2-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:29:06,872 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3E203DB6233A-&gt;ac8f5405-236b-4315-bdeb-b9096ef863e4
2021-02-10 13:29:06,872 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:29:07,070 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-02-10 13:29:08,070 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-02-10 13:29:09,071 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-02-10 13:29:10,071 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-02-10 13:29:11,072 [Thread-7] INFO freon.ProgressBar: Progress: 0.80 % (1 out of 125)
2021-02-10 13:29:11,815 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-19E3C7D797FD-&gt;c10357d9-47dc-4d97-9b5e-c4d2d010e60e
2021-02-10 13:29:11,816 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:29:12,072 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-02-10 13:29:13,073 [Thread-7] INFO freon.ProgressBar: Progress: 1.60 % (2 out of 125)
2021-02-10 13:29:13,294 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-81A0AD60836B-&gt;55d9fe46-e734-4ee2-b444-81c7dcca7b14
2021-02-10 13:29:13,295 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:29:14,073 [Thread-7] INFO freon.ProgressBar: Progress: 3.20 % (4 out of 125)
2021-02-10 13:29:15,074 [Thread-7] INFO freon.ProgressBar: Progress: 5.60 % (7 out of 125)
2021-02-10 13:29:15,815 [pool-2-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-92DE3B469CCF-&gt;bfd826f9-b2fc-42ca-bd6e-c4858b2c83cc
2021-02-10 13:29:15,815 [pool-2-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:29:16,074 [Thread-7] INFO freon.ProgressBar: Progress: 11.20 % (14 out of 125)
2021-02-10 13:29:17,074 [Thread-7] INFO freon.ProgressBar: Progress: 18.40 % (23 out of 125)
2021-02-10 13:29:18,075 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-02-10 13:29:19,075 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-02-10 13:29:20,076 [Thread-7] INFO freon.ProgressBar: Progress: 22.40 % (28 out of 125)
2021-02-10 13:29:21,076 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2021-02-10 13:29:22,077 [Thread-7] INFO freon.ProgressBar: Progress: 23.20 % (29 out of 125)
2021-02-10 13:29:23,077 [Thread-7] INFO freon.ProgressBar: Progress: 27.20 % (34 out of 125)
2021-02-10 13:29:24,080 [Thread-7] INFO freon.ProgressBar: Progress: 36.00 % (45 out of 125)
2021-02-10 13:29:25,099 [Thread-7] INFO freon.ProgressBar: Progress: 44.00 % (55 out of 125)
2021-02-10 13:29:26,100 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-02-10 13:29:27,100 [Thread-7] INFO freon.ProgressBar: Progress: 48.00 % (60 out of 125)
2021-02-10 13:29:28,104 [Thread-7] INFO freon.ProgressBar: Progress: 49.60 % (62 out of 125)
2021-02-10 13:29:29,105 [Thread-7] INFO freon.ProgressBar: Progress: 55.20 % (69 out of 125)
2021-02-10 13:29:30,105 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-02-10 13:29:31,106 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-02-10 13:29:32,106 [Thread-7] INFO freon.ProgressBar: Progress: 62.40 % (78 out of 125)
2021-02-10 13:29:33,107 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-02-10 13:29:34,107 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-02-10 13:29:35,108 [Thread-7] INFO freon.ProgressBar: Progress: 68.80 % (86 out of 125)
2021-02-10 13:29:36,108 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-02-10 13:29:37,109 [Thread-7] INFO freon.ProgressBar: Progress: 70.40 % (88 out of 125)
2021-02-10 13:29:38,109 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2021-02-10 13:29:39,110 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2021-02-10 13:29:40,110 [Thread-7] INFO freon.ProgressBar: Progress: 72.00 % (90 out of 125)
2021-02-10 13:29:41,111 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2021-02-10 13:29:42,111 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2021-02-10 13:29:43,111 [Thread-7] INFO freon.ProgressBar: Progress: 76.80 % (96 out of 125)
2021-02-10 13:29:44,112 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2021-02-10 13:29:45,112 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2021-02-10 13:29:46,113 [Thread-7] INFO freon.ProgressBar: Progress: 78.40 % (98 out of 125)
2021-02-10 13:29:47,113 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-02-10 13:29:48,114 [Thread-7] INFO freon.ProgressBar: Progress: 80.00 % (100 out of 125)
2021-02-10 13:29:49,114 [Thread-7] INFO freon.ProgressBar: Progress: 83.20 % (104 out of 125)
2021-02-10 13:29:50,114 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2021-02-10 13:29:51,115 [Thread-7] INFO freon.ProgressBar: Progress: 84.80 % (106 out of 125)
2021-02-10 13:29:52,125 [Thread-7] INFO freon.ProgressBar: Progress: 89.60 % (112 out of 125)
2021-02-10 13:29:53,126 [Thread-7] INFO freon.ProgressBar: Progress: 100.00 % (125 out of 125)

***************************************************
Status: Success
Git Base Revision: 7a3bc90b05f257c8ace2f76d74264906f0f7a932
Number of Volumes created: 5
Number of Buckets created: 25
Number of Keys added: 125
Ratis replication factor: THREE
Ratis replication type: RATIS
Average Time spent in volume creation: 00:00:00,380
Average Time spent in bucket creation: 00:00:00,235
Average Time spent in key creation: 00:00:02,618
Average Time spent in key write: 00:00:01,007
Total bytes written: 1280000
Total number of writes validated: 125
Writes validated: 100.0 %
Successful validation: 125
Unsuccessful validation: 0
Total Execution time: 00:00:56,960
***************************************************</msg>
<status status="PASS" endtime="20210210 13:29:58.498" starttime="20210210 13:29:58.497"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:29:58.499" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:29:58.499" starttime="20210210 13:29:58.498"></status>
</kw>
<status status="PASS" endtime="20210210 13:29:58.499" starttime="20210210 13:28:59.097"></status>
</kw>
<msg timestamp="20210210 13:29:58.499" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:29:58.499" starttime="20210210 13:28:59.097"></status>
</kw>
<msg timestamp="20210210 13:29:58.500" level="INFO">${result} = 2021-02-10 13:29:00,860 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:29:01,039 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:29:58.500" starttime="20210210 13:28:59.097"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>3min</arg>
<arg>10sec</arg>
<arg>Should contain</arg>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Number of Keys added: 125</arg>
</arguments>
<status status="PASS" endtime="20210210 13:29:58.501" starttime="20210210 13:29:58.500"></status>
</kw>
<status status="PASS" endtime="20210210 13:29:58.501" starttime="20210210 13:29:58.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Status: Success</arg>
</arguments>
<status status="PASS" endtime="20210210 13:29:58.501" starttime="20210210 13:29:58.501"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:29:58.501" critical="yes" starttime="20210210 13:28:59.094"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210210 13:29:58.503" starttime="20210210 13:28:58.879"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/cli.robot" id="s1-s2" name="Cli">
<test id="s1-s2-t1" name="Run printTopology">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:30:02.394" level="INFO">Running command 'ozone admin printTopology 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:30:04.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:30:04.780" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" endtime="20210210 13:30:04.780" starttime="20210210 13:30:02.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:30:04.781" level="INFO">State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack2</msg>
<status status="PASS" endtime="20210210 13:30:04.781" starttime="20210210 13:30:04.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:30:04.781" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:30:04.781" starttime="20210210 13:30:04.781"></status>
</kw>
<status status="PASS" endtime="20210210 13:30:04.782" starttime="20210210 13:30:02.390"></status>
</kw>
<msg timestamp="20210210 13:30:04.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:30:04.782" starttime="20210210 13:30:02.390"></status>
</kw>
<msg timestamp="20210210 13:30:04.782" level="INFO">${output} = State = HEALTHY
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net):REPLICATION=9886,RATIS=9858,RATIS_ADMIN=9857,RATIS_SERVER=9856,STANDALONE=9859    IN_SERVICE    /rack1
 10.5.0.5(ozone-topolog...</msg>
<status status="PASS" endtime="20210210 13:30:04.782" starttime="20210210 13:30:02.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net)</arg>
<arg>IN_SERVICE</arg>
<arg>/rack2</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:04.783" starttime="20210210 13:30:04.782"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:30:04.783" critical="yes" starttime="20210210 13:30:02.388"></status>
</test>
<test id="s1-s2-t2" name="Run printTopology -o">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin printTopology -o</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:30:04.788" level="INFO">Running command 'ozone admin printTopology -o 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:30:07.215" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:30:07.215" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" endtime="20210210 13:30:07.215" starttime="20210210 13:30:04.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:30:07.216" level="INFO">State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_datanode_3_1.ozone-topology_net) IN_SERVICE
Location: /rack2
 10.5.0.8(ozone-topology_datanode_5_1.ozone-topology_net) IN_SERVICE
 10.5.0.9(ozone-topology_datanode_6_1.ozone-topology_net) IN_SERVICE
 10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</msg>
<status status="PASS" endtime="20210210 13:30:07.216" starttime="20210210 13:30:07.216"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:30:07.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:30:07.217" starttime="20210210 13:30:07.216"></status>
</kw>
<status status="PASS" endtime="20210210 13:30:07.217" starttime="20210210 13:30:04.785"></status>
</kw>
<msg timestamp="20210210 13:30:07.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:30:07.217" starttime="20210210 13:30:04.785"></status>
</kw>
<msg timestamp="20210210 13:30:07.218" level="INFO">${output} = State = HEALTHY
Location: /rack1
 10.5.0.4(ozone-topology_datanode_1_1.ozone-topology_net) IN_SERVICE
 10.5.0.5(ozone-topology_datanode_2_1.ozone-topology_net) IN_SERVICE
 10.5.0.6(ozone-topology_data...</msg>
<status status="PASS" endtime="20210210 13:30:07.218" starttime="20210210 13:30:04.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Location: /rack2</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:07.218" starttime="20210210 13:30:07.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>10.5.0.7(ozone-topology_datanode_4_1.ozone-topology_net) IN_SERVICE</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:07.219" starttime="20210210 13:30:07.218"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:30:07.219" critical="yes" starttime="20210210 13:30:04.784"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210210 13:30:07.220" starttime="20210210 13:30:02.345"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/loaddata.robot" id="s1-s3" name="Loaddata">
<test id="s1-s3-t1" name="Create a volume, bucket and key">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create topvol1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:30:11.140" level="INFO">Running command 'ozone sh volume create topvol1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:30:13.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:30:13.765" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:13.765" starttime="20210210 13:30:11.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:30:13.766" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:13.767" starttime="20210210 13:30:13.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:30:13.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:30:13.767" starttime="20210210 13:30:13.767"></status>
</kw>
<status status="PASS" endtime="20210210 13:30:13.767" starttime="20210210 13:30:11.135"></status>
</kw>
<msg timestamp="20210210 13:30:13.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:30:13.768" starttime="20210210 13:30:11.135"></status>
</kw>
<msg timestamp="20210210 13:30:13.768" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:13.768" starttime="20210210 13:30:11.135"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:13.768" starttime="20210210 13:30:13.768"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /topvol1/bucket1</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:30:13.772" level="INFO">Running command 'ozone sh bucket create /topvol1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:30:16.390" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:30:16.390" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:16.390" starttime="20210210 13:30:13.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:30:16.392" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:16.392" starttime="20210210 13:30:16.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:30:16.392" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:30:16.392" starttime="20210210 13:30:16.392"></status>
</kw>
<status status="PASS" endtime="20210210 13:30:16.392" starttime="20210210 13:30:13.769"></status>
</kw>
<msg timestamp="20210210 13:30:16.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:30:16.393" starttime="20210210 13:30:13.769"></status>
</kw>
<msg timestamp="20210210 13:30:16.393" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:16.393" starttime="20210210 13:30:13.768"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:16.393" starttime="20210210 13:30:16.393"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:30:16.398" level="INFO">Running command 'ozone sh key put /topvol1/bucket1/key1 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:30:21.169" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:30:21.169" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:21.169" starttime="20210210 13:30:16.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:30:21.171" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:21.171" starttime="20210210 13:30:21.170"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:30:21.171" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:30:21.171" starttime="20210210 13:30:21.171"></status>
</kw>
<status status="PASS" endtime="20210210 13:30:21.172" starttime="20210210 13:30:16.394"></status>
</kw>
<msg timestamp="20210210 13:30:21.172" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:30:21.172" starttime="20210210 13:30:16.394"></status>
</kw>
<msg timestamp="20210210 13:30:21.172" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:21.172" starttime="20210210 13:30:16.393"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:21.173" starttime="20210210 13:30:21.172"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:30:21.173" critical="yes" starttime="20210210 13:30:11.134"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210210 13:30:21.174" starttime="20210210 13:30:11.090"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s4" name="readdata-second-half">
<test id="s1-s4-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:31:00.027" level="INFO">${random} = 83635</msg>
<status status="PASS" endtime="20210210 13:31:00.027" starttime="20210210 13:31:00.026"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:31:00.032" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-83635 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:31:52.504" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:31:52.504" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:31:52.504" starttime="20210210 13:31:00.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:31:52.505" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:31:52.505" starttime="20210210 13:31:52.504"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:31:52.505" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:31:52.506" starttime="20210210 13:31:52.505"></status>
</kw>
<status status="PASS" endtime="20210210 13:31:52.506" starttime="20210210 13:31:00.028"></status>
</kw>
<msg timestamp="20210210 13:31:52.506" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:31:52.506" starttime="20210210 13:31:00.028"></status>
</kw>
<msg timestamp="20210210 13:31:52.506" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:31:52.506" starttime="20210210 13:31:00.027"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:31:52.507" starttime="20210210 13:31:52.506"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:31:52.507" critical="yes" starttime="20210210 13:31:00.026"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210210 13:31:52.508" starttime="20210210 13:30:59.981"></status>
</suite>
<suite source="/opt/hadoop/smoketest/topology/readdata.robot" id="s1-s5" name="readdata-first-half">
<test id="s1-s5-t1" name="Read data from previously created key">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:30:26.889" level="INFO">${random} = 98496</msg>
<status status="PASS" endtime="20210210 13:30:26.889" starttime="20210210 13:30:26.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get /topvol1/bucket1/key1 /tmp/key1-${random}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:30:26.894" level="INFO">Running command 'ozone sh key get /topvol1/bucket1/key1 /tmp/key1-98496 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:30:31.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:30:31.194" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:31.194" starttime="20210210 13:30:26.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:30:31.195" level="INFO">WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:31.195" starttime="20210210 13:30:31.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:30:31.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:30:31.196" starttime="20210210 13:30:31.196"></status>
</kw>
<status status="PASS" endtime="20210210 13:30:31.196" starttime="20210210 13:30:26.890"></status>
</kw>
<msg timestamp="20210210 13:30:31.196" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:30:31.197" starttime="20210210 13:30:26.890"></status>
</kw>
<msg timestamp="20210210 13:30:31.197" level="INFO">${output} = WARNING: HDFS_OM_SH_OPTS has been deprecated by OZONE_SH_OPTS.</msg>
<status status="PASS" endtime="20210210 13:30:31.197" starttime="20210210 13:30:26.889"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:30:31.197" starttime="20210210 13:30:31.197"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:30:31.197" critical="yes" starttime="20210210 13:30:26.888"></status>
</test>
<doc>Smoketest ozone cluster startup</doc>
<status status="PASS" endtime="20210210 13:30:31.198" starttime="20210210 13:30:26.845"></status>
</suite>
<status status="PASS" elapsedtime="131463" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-topology" pass="7">ozone-topology</stat>
<stat fail="0" id="s1-s1" name="Basic" pass="2">ozone-topology.Basic</stat>
<stat fail="0" id="s1-s2" name="Cli" pass="2">ozone-topology.Cli</stat>
<stat fail="0" id="s1-s3" name="Loaddata" pass="1">ozone-topology.Loaddata</stat>
<stat fail="0" id="s1-s4" name="readdata-second-half" pass="1">ozone-topology.readdata-second-half</stat>
<stat fail="0" id="s1-s5" name="readdata-first-half" pass="1">ozone-topology.readdata-first-half</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
