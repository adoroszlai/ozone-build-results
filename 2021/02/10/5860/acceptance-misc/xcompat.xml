<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 14:01:45.242" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="xcompat">
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s1" name="xcompat-cluster-1.1.0-client-1.1.0-read-0.5.0">
<test id="s1-s1-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:55:46.047" level="INFO">${postfix} = 87409</msg>
<status status="PASS" endtime="20210210 13:55:46.047" starttime="20210210 13:55:46.046"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:55:46.047" level="INFO">${tmpfile} = /tmp/tempkey-87409</msg>
<status status="PASS" endtime="20210210 13:55:46.047" starttime="20210210 13:55:46.047"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:46.060" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-87409 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:50.226" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:50.226" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:50.226" starttime="20210210 13:55:46.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:50.227" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:50.227" starttime="20210210 13:55:50.226"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:50.227" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:50.227" starttime="20210210 13:55:50.227"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:50.228" starttime="20210210 13:55:46.048"></status>
</kw>
<msg timestamp="20210210 13:55:50.228" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:50.228" starttime="20210210 13:55:46.048"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:50.228" starttime="20210210 13:55:46.047"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:55:50.230" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-87409 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:50.232" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:55:50.232" starttime="20210210 13:55:50.228"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:50.236" level="INFO">Running command 'rm -f /tmp/tempkey-87409 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:50.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:50.238" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:50.238" starttime="20210210 13:55:50.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:50.240" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:50.240" starttime="20210210 13:55:50.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:50.241" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:50.241" starttime="20210210 13:55:50.240"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:50.241" starttime="20210210 13:55:50.234"></status>
</kw>
<msg timestamp="20210210 13:55:50.241" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:50.241" starttime="20210210 13:55:50.233"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:50.241" starttime="20210210 13:55:50.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:55:50.242" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:55:50.242" starttime="20210210 13:55:50.241"></status>
</kw>
<msg timestamp="20210210 13:55:50.242" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:55:50.242" starttime="20210210 13:55:46.046"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:50.242" starttime="20210210 13:55:50.242"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:50.243" starttime="20210210 13:55:46.045"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:50.243" critical="yes" starttime="20210210 13:55:46.044"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:50.244" starttime="20210210 13:55:45.996"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s2" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.0.0">
<test id="s1-s2-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:56:16.630" level="INFO">${postfix} = 34081</msg>
<status status="PASS" endtime="20210210 13:56:16.630" starttime="20210210 13:56:16.629"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:56:16.630" level="INFO">${tmpfile} = /tmp/tempkey-34081</msg>
<status status="PASS" endtime="20210210 13:56:16.630" starttime="20210210 13:56:16.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:56:16.635" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-34081 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:20.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:56:20.808" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:56:20.809" starttime="20210210 13:56:16.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:56:20.810" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:56:20.810" starttime="20210210 13:56:20.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:56:20.810" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:56:20.810" starttime="20210210 13:56:20.810"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:20.810" starttime="20210210 13:56:16.631"></status>
</kw>
<msg timestamp="20210210 13:56:20.811" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:56:20.811" starttime="20210210 13:56:16.631"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:20.811" starttime="20210210 13:56:16.630"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:56:20.813" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-34081 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:20.815" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:56:20.815" starttime="20210210 13:56:20.811"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:56:20.819" level="INFO">Running command 'rm -f /tmp/tempkey-34081 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:20.821" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:56:20.821" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:56:20.821" starttime="20210210 13:56:20.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:56:20.823" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:56:20.823" starttime="20210210 13:56:20.821"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:56:20.824" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:56:20.824" starttime="20210210 13:56:20.823"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:20.824" starttime="20210210 13:56:20.816"></status>
</kw>
<msg timestamp="20210210 13:56:20.824" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:56:20.824" starttime="20210210 13:56:20.816"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:20.824" starttime="20210210 13:56:20.815"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:56:20.825" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:56:20.825" starttime="20210210 13:56:20.824"></status>
</kw>
<msg timestamp="20210210 13:56:20.825" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:56:20.825" starttime="20210210 13:56:16.629"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:56:20.825" starttime="20210210 13:56:20.825"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:20.826" starttime="20210210 13:56:16.628"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:56:20.826" critical="yes" starttime="20210210 13:56:16.628"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:56:20.827" starttime="20210210 13:56:16.585"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s3" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.1.0">
<test id="s1-s3-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:58:21.484" level="INFO">${postfix} = 75274</msg>
<status status="PASS" endtime="20210210 13:58:21.484" starttime="20210210 13:58:21.484"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:58:21.485" level="INFO">${tmpfile} = /tmp/tempkey-75274</msg>
<status status="PASS" endtime="20210210 13:58:21.485" starttime="20210210 13:58:21.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:21.489" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-75274 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:25.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:25.696" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:25.696" starttime="20210210 13:58:21.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:25.697" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:25.697" starttime="20210210 13:58:25.696"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:25.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:25.698" starttime="20210210 13:58:25.697"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:25.698" starttime="20210210 13:58:21.486"></status>
</kw>
<msg timestamp="20210210 13:58:25.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:25.698" starttime="20210210 13:58:21.485"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:25.698" starttime="20210210 13:58:21.485"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:58:25.700" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-75274 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:25.703" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:58:25.703" starttime="20210210 13:58:25.698"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:25.706" level="INFO">Running command 'rm -f /tmp/tempkey-75274 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:25.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:25.709" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:25.709" starttime="20210210 13:58:25.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:25.710" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:25.711" starttime="20210210 13:58:25.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:25.711" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:25.711" starttime="20210210 13:58:25.711"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:25.711" starttime="20210210 13:58:25.704"></status>
</kw>
<msg timestamp="20210210 13:58:25.711" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:25.712" starttime="20210210 13:58:25.704"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:25.712" starttime="20210210 13:58:25.703"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:58:25.712" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:58:25.712" starttime="20210210 13:58:25.712"></status>
</kw>
<msg timestamp="20210210 13:58:25.712" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:58:25.712" starttime="20210210 13:58:21.484"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:58:25.713" starttime="20210210 13:58:25.713"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:25.713" starttime="20210210 13:58:21.483"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:58:25.713" critical="yes" starttime="20210210 13:58:21.482"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:58:25.714" starttime="20210210 13:58:21.440"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s4" name="xcompat-cluster-1.0.0-client-1.1.0-read-0.5.0">
<test id="s1-s4-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:58:52.128" level="INFO">${postfix} = 02970</msg>
<status status="PASS" endtime="20210210 13:58:52.128" starttime="20210210 13:58:52.127"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:58:52.128" level="INFO">${tmpfile} = /tmp/tempkey-02970</msg>
<status status="PASS" endtime="20210210 13:58:52.128" starttime="20210210 13:58:52.128"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:52.133" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-02970 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:56.194" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:56.195" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:56.195" starttime="20210210 13:58:52.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:56.196" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:56.196" starttime="20210210 13:58:56.195"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:56.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:56.196" starttime="20210210 13:58:56.196"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:56.197" starttime="20210210 13:58:52.129"></status>
</kw>
<msg timestamp="20210210 13:58:56.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:56.197" starttime="20210210 13:58:52.129"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:56.197" starttime="20210210 13:58:52.128"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:58:56.199" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-02970 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:56.201" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:58:56.201" starttime="20210210 13:58:56.197"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:56.205" level="INFO">Running command 'rm -f /tmp/tempkey-02970 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:56.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:56.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:56.207" starttime="20210210 13:58:56.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:56.209" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:56.209" starttime="20210210 13:58:56.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:56.209" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:56.210" starttime="20210210 13:58:56.209"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:56.210" starttime="20210210 13:58:56.203"></status>
</kw>
<msg timestamp="20210210 13:58:56.210" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:56.210" starttime="20210210 13:58:56.202"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:56.210" starttime="20210210 13:58:56.202"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:58:56.211" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:58:56.211" starttime="20210210 13:58:56.210"></status>
</kw>
<msg timestamp="20210210 13:58:56.211" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:58:56.211" starttime="20210210 13:58:52.127"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:58:56.211" starttime="20210210 13:58:56.211"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:56.211" starttime="20210210 13:58:52.126"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:58:56.212" critical="yes" starttime="20210210 13:58:52.125"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:58:56.213" starttime="20210210 13:58:52.081"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s5" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.0.0">
<test id="s1-s5-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:59:22.185" level="INFO">${postfix} = 66640</msg>
<status status="PASS" endtime="20210210 13:59:22.185" starttime="20210210 13:59:22.185"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:59:22.186" level="INFO">${tmpfile} = /tmp/tempkey-66640</msg>
<status status="PASS" endtime="20210210 13:59:22.186" starttime="20210210 13:59:22.185"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:22.190" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-66640 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:26.270" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:26.270" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:59:26.270" starttime="20210210 13:59:22.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:26.272" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:59:26.272" starttime="20210210 13:59:26.271"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:26.272" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:26.272" starttime="20210210 13:59:26.272"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:26.273" starttime="20210210 13:59:22.186"></status>
</kw>
<msg timestamp="20210210 13:59:26.273" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:26.273" starttime="20210210 13:59:22.186"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:26.273" starttime="20210210 13:59:22.186"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:59:26.275" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-66640 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:26.277" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:59:26.277" starttime="20210210 13:59:26.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:26.281" level="INFO">Running command 'rm -f /tmp/tempkey-66640 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:26.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:26.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:26.283" starttime="20210210 13:59:26.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:26.285" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:59:26.285" starttime="20210210 13:59:26.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:26.286" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:26.286" starttime="20210210 13:59:26.285"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:26.286" starttime="20210210 13:59:26.279"></status>
</kw>
<msg timestamp="20210210 13:59:26.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:26.286" starttime="20210210 13:59:26.278"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:26.286" starttime="20210210 13:59:26.278"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:59:26.287" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:59:26.287" starttime="20210210 13:59:26.286"></status>
</kw>
<msg timestamp="20210210 13:59:26.287" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:59:26.287" starttime="20210210 13:59:22.184"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:59:26.287" starttime="20210210 13:59:26.287"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:26.288" starttime="20210210 13:59:22.184"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:59:26.288" critical="yes" starttime="20210210 13:59:22.183"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:59:26.289" starttime="20210210 13:59:22.140"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s6" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.1.0">
<test id="s1-s6-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:00:32.949" level="INFO">${postfix} = 56243</msg>
<status status="PASS" endtime="20210210 14:00:32.949" starttime="20210210 14:00:32.948"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:00:32.949" level="INFO">${tmpfile} = /tmp/tempkey-56243</msg>
<status status="PASS" endtime="20210210 14:00:32.949" starttime="20210210 14:00:32.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:32.954" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-56243 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:37.310" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:37.310" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:00:37.310" starttime="20210210 14:00:32.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:37.311" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:00:37.311" starttime="20210210 14:00:37.310"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:37.312" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:37.312" starttime="20210210 14:00:37.311"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:37.312" starttime="20210210 14:00:32.950"></status>
</kw>
<msg timestamp="20210210 14:00:37.312" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:37.312" starttime="20210210 14:00:32.950"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:37.312" starttime="20210210 14:00:32.949"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:00:37.315" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-56243 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:37.317" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:00:37.317" starttime="20210210 14:00:37.313"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:37.321" level="INFO">Running command 'rm -f /tmp/tempkey-56243 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:37.323" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:37.323" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:37.323" starttime="20210210 14:00:37.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:37.325" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:00:37.326" starttime="20210210 14:00:37.323"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:37.326" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:37.326" starttime="20210210 14:00:37.326"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:37.326" starttime="20210210 14:00:37.319"></status>
</kw>
<msg timestamp="20210210 14:00:37.326" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:37.326" starttime="20210210 14:00:37.318"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:37.327" starttime="20210210 14:00:37.318"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:00:37.327" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:00:37.327" starttime="20210210 14:00:37.327"></status>
</kw>
<msg timestamp="20210210 14:00:37.327" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:00:37.327" starttime="20210210 14:00:32.948"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:00:37.328" starttime="20210210 14:00:37.328"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:37.328" starttime="20210210 14:00:32.947"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:00:37.328" critical="yes" starttime="20210210 14:00:32.947"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:00:37.329" starttime="20210210 14:00:32.904"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s7" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.0.0">
<test id="s1-s7-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:01:03.368" level="INFO">${postfix} = 92567</msg>
<status status="PASS" endtime="20210210 14:01:03.368" starttime="20210210 14:01:03.368"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:01:03.369" level="INFO">${tmpfile} = /tmp/tempkey-92567</msg>
<status status="PASS" endtime="20210210 14:01:03.369" starttime="20210210 14:01:03.368"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:03.373" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-92567 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:07.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:07.703" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:01:07.703" starttime="20210210 14:01:03.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:07.704" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:01:07.704" starttime="20210210 14:01:07.703"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:07.704" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:07.705" starttime="20210210 14:01:07.704"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:07.705" starttime="20210210 14:01:03.370"></status>
</kw>
<msg timestamp="20210210 14:01:07.705" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:07.705" starttime="20210210 14:01:03.369"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:07.705" starttime="20210210 14:01:03.369"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:01:07.707" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-92567 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:07.709" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:01:07.710" starttime="20210210 14:01:07.705"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:07.713" level="INFO">Running command 'rm -f /tmp/tempkey-92567 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:07.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:07.716" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:07.716" starttime="20210210 14:01:07.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:07.718" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:07.718" starttime="20210210 14:01:07.716"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:07.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:07.718" starttime="20210210 14:01:07.718"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:07.718" starttime="20210210 14:01:07.711"></status>
</kw>
<msg timestamp="20210210 14:01:07.718" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:07.719" starttime="20210210 14:01:07.711"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:07.719" starttime="20210210 14:01:07.710"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:01:07.719" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:01:07.719" starttime="20210210 14:01:07.719"></status>
</kw>
<msg timestamp="20210210 14:01:07.719" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:01:07.719" starttime="20210210 14:01:03.367"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:01:07.720" starttime="20210210 14:01:07.720"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:07.720" starttime="20210210 14:01:03.367"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:01:07.720" critical="yes" starttime="20210210 14:01:03.366"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:01:07.721" starttime="20210210 14:01:03.320"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s8" name="xcompat-cluster-0.5.0-client-1.1.0-read-0.5.0">
<test id="s1-s8-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:01:34.347" level="INFO">${postfix} = 04019</msg>
<status status="PASS" endtime="20210210 14:01:34.347" starttime="20210210 14:01:34.346"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:01:34.347" level="INFO">${tmpfile} = /tmp/tempkey-04019</msg>
<status status="PASS" endtime="20210210 14:01:34.347" starttime="20210210 14:01:34.347"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:34.352" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-04019 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:38.426" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:38.426" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:01:38.426" starttime="20210210 14:01:34.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:38.428" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:01:38.428" starttime="20210210 14:01:38.427"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:38.428" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:38.428" starttime="20210210 14:01:38.428"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:38.428" starttime="20210210 14:01:34.348"></status>
</kw>
<msg timestamp="20210210 14:01:38.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:38.429" starttime="20210210 14:01:34.348"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:38.429" starttime="20210210 14:01:34.347"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:01:38.431" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-04019 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:38.433" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:01:38.433" starttime="20210210 14:01:38.429"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:38.437" level="INFO">Running command 'rm -f /tmp/tempkey-04019 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:38.439" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:38.439" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:38.439" starttime="20210210 14:01:38.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:38.441" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:38.441" starttime="20210210 14:01:38.440"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:38.442" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:38.442" starttime="20210210 14:01:38.442"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:38.442" starttime="20210210 14:01:38.435"></status>
</kw>
<msg timestamp="20210210 14:01:38.442" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:38.442" starttime="20210210 14:01:38.434"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:38.443" starttime="20210210 14:01:38.434"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:01:38.443" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:01:38.443" starttime="20210210 14:01:38.443"></status>
</kw>
<msg timestamp="20210210 14:01:38.443" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:01:38.443" starttime="20210210 14:01:34.346"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:01:38.444" starttime="20210210 14:01:38.443"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:38.444" starttime="20210210 14:01:34.345"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:01:38.444" critical="yes" starttime="20210210 14:01:34.344"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:01:38.445" starttime="20210210 14:01:34.302"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s9" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.1.0">
<test id="s1-s9-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:55:14.005" level="INFO">${postfix} = 75958</msg>
<status status="PASS" endtime="20210210 13:55:14.005" starttime="20210210 13:55:14.004"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:55:14.005" level="INFO">${tmpfile} = /tmp/tempkey-75958</msg>
<status status="PASS" endtime="20210210 13:55:14.005" starttime="20210210 13:55:14.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:14.009" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-75958 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:18.628" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:18.628" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:18.628" starttime="20210210 13:55:14.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:18.629" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:18.629" starttime="20210210 13:55:18.628"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:18.629" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:18.629" starttime="20210210 13:55:18.629"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:18.630" starttime="20210210 13:55:14.006"></status>
</kw>
<msg timestamp="20210210 13:55:18.630" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:18.630" starttime="20210210 13:55:14.006"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:18.630" starttime="20210210 13:55:14.005"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:55:18.632" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-75958 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:18.634" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:55:18.634" starttime="20210210 13:55:18.630"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:18.637" level="INFO">Running command 'rm -f /tmp/tempkey-75958 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:18.639" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:18.639" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:18.639" starttime="20210210 13:55:18.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:18.641" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:18.641" starttime="20210210 13:55:18.640"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:18.642" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:18.642" starttime="20210210 13:55:18.641"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:18.642" starttime="20210210 13:55:18.635"></status>
</kw>
<msg timestamp="20210210 13:55:18.642" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:18.642" starttime="20210210 13:55:18.635"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:18.642" starttime="20210210 13:55:18.634"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:55:18.643" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:55:18.643" starttime="20210210 13:55:18.642"></status>
</kw>
<msg timestamp="20210210 13:55:18.643" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:55:18.643" starttime="20210210 13:55:14.004"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:18.644" starttime="20210210 13:55:18.643"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:18.644" starttime="20210210 13:55:14.003"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:18.644" critical="yes" starttime="20210210 13:55:14.003"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:18.645" starttime="20210210 13:55:13.960"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s10" name="xcompat-cluster-1.1.0-client-0.5.0-read-1.1.0">
<test id="s1-s10-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:55:38.345" level="INFO">${postfix} = 85592</msg>
<status status="PASS" endtime="20210210 13:55:38.345" starttime="20210210 13:55:38.345"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:55:38.346" level="INFO">${tmpfile} = /tmp/tempkey-85592</msg>
<status status="PASS" endtime="20210210 13:55:38.346" starttime="20210210 13:55:38.346"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:38.348" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-85592 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:41.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:41.781" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:41.781" starttime="20210210 13:55:38.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:41.782" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:41.782" starttime="20210210 13:55:41.782"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:41.785" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:41.785" starttime="20210210 13:55:41.783"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:41.785" starttime="20210210 13:55:38.347"></status>
</kw>
<msg timestamp="20210210 13:55:41.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:41.785" starttime="20210210 13:55:38.346"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:41.785" starttime="20210210 13:55:38.346"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:55:41.787" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-85592 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:41.790" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:55:41.790" starttime="20210210 13:55:41.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:41.793" level="INFO">Running command 'rm -f /tmp/tempkey-85592 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:41.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:41.795" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:41.795" starttime="20210210 13:55:41.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:41.796" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:41.796" starttime="20210210 13:55:41.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:41.797" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:41.797" starttime="20210210 13:55:41.796"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:41.797" starttime="20210210 13:55:41.791"></status>
</kw>
<msg timestamp="20210210 13:55:41.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:41.797" starttime="20210210 13:55:41.791"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:41.797" starttime="20210210 13:55:41.790"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:55:41.798" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:55:41.798" starttime="20210210 13:55:41.797"></status>
</kw>
<msg timestamp="20210210 13:55:41.798" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:55:41.798" starttime="20210210 13:55:38.345"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:41.799" starttime="20210210 13:55:41.798"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:41.799" starttime="20210210 13:55:38.344"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:41.799" critical="yes" starttime="20210210 13:55:38.344"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:41.800" starttime="20210210 13:55:38.309"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s11" name="xcompat-cluster-1.0.0-client-0.5.0-read-0.5.0">
<test id="s1-s11-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:58:37.486" level="INFO">${postfix} = 46146</msg>
<status status="PASS" endtime="20210210 13:58:37.486" starttime="20210210 13:58:37.486"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:58:37.487" level="INFO">${tmpfile} = /tmp/tempkey-46146</msg>
<status status="PASS" endtime="20210210 13:58:37.487" starttime="20210210 13:58:37.486"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:37.489" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-46146 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:40.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:40.684" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:40.684" starttime="20210210 13:58:37.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:40.685" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:40.685" starttime="20210210 13:58:40.684"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:40.687" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:40.687" starttime="20210210 13:58:40.685"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:40.687" starttime="20210210 13:58:37.488"></status>
</kw>
<msg timestamp="20210210 13:58:40.687" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:40.688" starttime="20210210 13:58:37.487"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:40.688" starttime="20210210 13:58:37.487"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:58:40.689" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-46146 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:40.692" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:58:40.692" starttime="20210210 13:58:40.688"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:40.694" level="INFO">Running command 'rm -f /tmp/tempkey-46146 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:40.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:40.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:40.697" starttime="20210210 13:58:40.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:40.697" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:40.697" starttime="20210210 13:58:40.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:40.698" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:40.698" starttime="20210210 13:58:40.698"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:40.698" starttime="20210210 13:58:40.693"></status>
</kw>
<msg timestamp="20210210 13:58:40.698" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:40.698" starttime="20210210 13:58:40.692"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:40.698" starttime="20210210 13:58:40.692"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:58:40.699" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:58:40.699" starttime="20210210 13:58:40.699"></status>
</kw>
<msg timestamp="20210210 13:58:40.699" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:58:40.699" starttime="20210210 13:58:37.485"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:58:40.700" starttime="20210210 13:58:40.699"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:40.700" starttime="20210210 13:58:37.485"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:58:40.700" critical="yes" starttime="20210210 13:58:37.484"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:58:40.701" starttime="20210210 13:58:37.449"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s12" name="xcompat-cluster-1.0.0-client-0.5.0-read-1.1.0">
<test id="s1-s12-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:58:44.785" level="INFO">${postfix} = 11725</msg>
<status status="PASS" endtime="20210210 13:58:44.785" starttime="20210210 13:58:44.785"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:58:44.786" level="INFO">${tmpfile} = /tmp/tempkey-11725</msg>
<status status="PASS" endtime="20210210 13:58:44.786" starttime="20210210 13:58:44.785"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:44.788" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-11725 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:47.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:47.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:47.961" starttime="20210210 13:58:44.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:47.962" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:47.962" starttime="20210210 13:58:47.962"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:47.965" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:47.965" starttime="20210210 13:58:47.962"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:47.965" starttime="20210210 13:58:44.787"></status>
</kw>
<msg timestamp="20210210 13:58:47.965" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:47.965" starttime="20210210 13:58:44.786"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:47.965" starttime="20210210 13:58:44.786"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:58:47.967" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-11725 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:47.970" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:58:47.970" starttime="20210210 13:58:47.965"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:47.973" level="INFO">Running command 'rm -f /tmp/tempkey-11725 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:47.975" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:47.975" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:47.975" starttime="20210210 13:58:47.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:47.976" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:47.976" starttime="20210210 13:58:47.975"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:47.976" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:47.976" starttime="20210210 13:58:47.976"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:47.977" starttime="20210210 13:58:47.971"></status>
</kw>
<msg timestamp="20210210 13:58:47.977" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:47.977" starttime="20210210 13:58:47.971"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:47.977" starttime="20210210 13:58:47.970"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:58:47.977" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:58:47.977" starttime="20210210 13:58:47.977"></status>
</kw>
<msg timestamp="20210210 13:58:47.978" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:58:47.978" starttime="20210210 13:58:44.785"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:58:47.978" starttime="20210210 13:58:47.978"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:47.978" starttime="20210210 13:58:44.784"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:58:47.978" critical="yes" starttime="20210210 13:58:44.783"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:58:47.979" starttime="20210210 13:58:44.749"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s13" name="xcompat-cluster-0.5.0-client-0.5.0-read-0.5.0">
<test id="s1-s13-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:01:19.508" level="INFO">${postfix} = 42015</msg>
<status status="PASS" endtime="20210210 14:01:19.508" starttime="20210210 14:01:19.508"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:01:19.509" level="INFO">${tmpfile} = /tmp/tempkey-42015</msg>
<status status="PASS" endtime="20210210 14:01:19.509" starttime="20210210 14:01:19.508"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:19.511" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-42015 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:22.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:22.796" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:22.796" starttime="20210210 14:01:19.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:22.796" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:22.797" starttime="20210210 14:01:22.796"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:22.799" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:22.799" starttime="20210210 14:01:22.797"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:22.799" starttime="20210210 14:01:19.510"></status>
</kw>
<msg timestamp="20210210 14:01:22.799" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:22.799" starttime="20210210 14:01:19.509"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:22.800" starttime="20210210 14:01:19.509"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:01:22.801" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-42015 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:22.803" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:01:22.803" starttime="20210210 14:01:22.800"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:22.806" level="INFO">Running command 'rm -f /tmp/tempkey-42015 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:22.809" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:22.809" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:22.809" starttime="20210210 14:01:22.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:22.809" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:22.809" starttime="20210210 14:01:22.809"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:22.810" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:22.810" starttime="20210210 14:01:22.810"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:22.810" starttime="20210210 14:01:22.805"></status>
</kw>
<msg timestamp="20210210 14:01:22.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:22.810" starttime="20210210 14:01:22.804"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:22.811" starttime="20210210 14:01:22.804"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:01:22.811" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:01:22.811" starttime="20210210 14:01:22.811"></status>
</kw>
<msg timestamp="20210210 14:01:22.811" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:01:22.811" starttime="20210210 14:01:19.507"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:01:22.812" starttime="20210210 14:01:22.811"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:22.812" starttime="20210210 14:01:19.507"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:01:22.812" critical="yes" starttime="20210210 14:01:19.506"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:01:22.813" starttime="20210210 14:01:19.472"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s14" name="xcompat-cluster-0.5.0-client-0.5.0-read-1.1.0">
<test id="s1-s14-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:01:26.950" level="INFO">${postfix} = 97450</msg>
<status status="PASS" endtime="20210210 14:01:26.951" starttime="20210210 14:01:26.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:01:26.951" level="INFO">${tmpfile} = /tmp/tempkey-97450</msg>
<status status="PASS" endtime="20210210 14:01:26.951" starttime="20210210 14:01:26.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:26.953" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-97450 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:30.178" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:30.178" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:30.178" starttime="20210210 14:01:26.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:30.179" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:30.179" starttime="20210210 14:01:30.178"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:30.181" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:30.182" starttime="20210210 14:01:30.179"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:30.182" starttime="20210210 14:01:26.952"></status>
</kw>
<msg timestamp="20210210 14:01:30.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:30.182" starttime="20210210 14:01:26.952"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:30.182" starttime="20210210 14:01:26.951"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:01:30.184" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-97450 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:30.186" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:01:30.186" starttime="20210210 14:01:30.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:30.189" level="INFO">Running command 'rm -f /tmp/tempkey-97450 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:30.191" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:30.191" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:30.191" starttime="20210210 14:01:30.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:30.192" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:30.192" starttime="20210210 14:01:30.191"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:30.192" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:30.192" starttime="20210210 14:01:30.192"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:30.193" starttime="20210210 14:01:30.187"></status>
</kw>
<msg timestamp="20210210 14:01:30.193" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:30.193" starttime="20210210 14:01:30.187"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:30.193" starttime="20210210 14:01:30.186"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:01:30.193" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:01:30.194" starttime="20210210 14:01:30.193"></status>
</kw>
<msg timestamp="20210210 14:01:30.194" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:01:30.194" starttime="20210210 14:01:26.950"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:01:30.194" starttime="20210210 14:01:30.194"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:30.194" starttime="20210210 14:01:26.949"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:01:30.194" critical="yes" starttime="20210210 14:01:26.949"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:01:30.195" starttime="20210210 14:01:26.913"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s15" name="xcompat-cluster-1.1.0-client-0.5.0-read-0.5.0">
<test id="s1-s15-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:55:30.596" level="INFO">${postfix} = 03213</msg>
<status status="PASS" endtime="20210210 13:55:30.596" starttime="20210210 13:55:30.595"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:55:30.596" level="INFO">${tmpfile} = /tmp/tempkey-03213</msg>
<status status="PASS" endtime="20210210 13:55:30.596" starttime="20210210 13:55:30.596"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:30.598" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-03213 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:34.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:34.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:34.118" starttime="20210210 13:55:30.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:34.119" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:34.119" starttime="20210210 13:55:34.118"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:34.121" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:34.121" starttime="20210210 13:55:34.119"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:34.121" starttime="20210210 13:55:30.597"></status>
</kw>
<msg timestamp="20210210 13:55:34.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:34.121" starttime="20210210 13:55:30.597"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:34.122" starttime="20210210 13:55:30.596"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:55:34.123" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-03213 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:34.126" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:55:34.126" starttime="20210210 13:55:34.122"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:34.129" level="INFO">Running command 'rm -f /tmp/tempkey-03213 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:34.131" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:34.131" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:34.131" starttime="20210210 13:55:34.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:34.132" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:34.132" starttime="20210210 13:55:34.132"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:34.133" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:34.133" starttime="20210210 13:55:34.132"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:34.133" starttime="20210210 13:55:34.127"></status>
</kw>
<msg timestamp="20210210 13:55:34.133" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:34.133" starttime="20210210 13:55:34.127"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:34.133" starttime="20210210 13:55:34.126"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:55:34.134" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:55:34.134" starttime="20210210 13:55:34.133"></status>
</kw>
<msg timestamp="20210210 13:55:34.134" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:55:34.134" starttime="20210210 13:55:30.595"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:34.134" starttime="20210210 13:55:34.134"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:34.135" starttime="20210210 13:55:30.594"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:34.135" critical="yes" starttime="20210210 13:55:30.594"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:34.136" starttime="20210210 13:55:30.558"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s16" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.1.0">
<test id="s1-s16-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:56:09.238" level="INFO">${postfix} = 56907</msg>
<status status="PASS" endtime="20210210 13:56:09.239" starttime="20210210 13:56:09.238"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:56:09.239" level="INFO">${tmpfile} = /tmp/tempkey-56907</msg>
<status status="PASS" endtime="20210210 13:56:09.239" starttime="20210210 13:56:09.239"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:56:09.241" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-56907 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:12.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:56:12.406" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:56:12.406" starttime="20210210 13:56:09.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:56:12.407" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:56:12.407" starttime="20210210 13:56:12.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:56:12.410" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:56:12.410" starttime="20210210 13:56:12.408"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:12.410" starttime="20210210 13:56:09.240"></status>
</kw>
<msg timestamp="20210210 13:56:12.410" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:56:12.410" starttime="20210210 13:56:09.239"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:12.410" starttime="20210210 13:56:09.239"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:56:12.413" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-56907 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:12.416" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:56:12.416" starttime="20210210 13:56:12.411"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:56:12.424" level="INFO">Running command 'rm -f /tmp/tempkey-56907 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:12.427" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:56:12.427" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:56:12.427" starttime="20210210 13:56:12.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:56:12.428" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:56:12.428" starttime="20210210 13:56:12.428"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:56:12.429" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:56:12.429" starttime="20210210 13:56:12.429"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:12.429" starttime="20210210 13:56:12.422"></status>
</kw>
<msg timestamp="20210210 13:56:12.429" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:56:12.429" starttime="20210210 13:56:12.422"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:12.430" starttime="20210210 13:56:12.416"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:56:12.430" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:56:12.430" starttime="20210210 13:56:12.430"></status>
</kw>
<msg timestamp="20210210 13:56:12.430" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:56:12.430" starttime="20210210 13:56:09.238"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:56:12.431" starttime="20210210 13:56:12.430"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:12.431" starttime="20210210 13:56:09.237"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:56:12.431" critical="yes" starttime="20210210 13:56:09.237"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:56:12.432" starttime="20210210 13:56:09.197"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s17" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.0.0">
<test id="s1-s17-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:59:07.717" level="INFO">${postfix} = 61903</msg>
<status status="PASS" endtime="20210210 13:59:07.717" starttime="20210210 13:59:07.716"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:59:07.717" level="INFO">${tmpfile} = /tmp/tempkey-61903</msg>
<status status="PASS" endtime="20210210 13:59:07.717" starttime="20210210 13:59:07.717"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:07.720" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-61903 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:10.896" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:10.897" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:10.897" starttime="20210210 13:59:07.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:10.898" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:59:10.898" starttime="20210210 13:59:10.897"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:10.900" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:10.900" starttime="20210210 13:59:10.898"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:10.900" starttime="20210210 13:59:07.718"></status>
</kw>
<msg timestamp="20210210 13:59:10.900" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:10.900" starttime="20210210 13:59:07.718"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:10.901" starttime="20210210 13:59:07.717"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:59:10.902" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-61903 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:10.905" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:59:10.905" starttime="20210210 13:59:10.901"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:10.907" level="INFO">Running command 'rm -f /tmp/tempkey-61903 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:10.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:10.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:10.910" starttime="20210210 13:59:10.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:10.910" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:59:10.911" starttime="20210210 13:59:10.910"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:10.911" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:10.911" starttime="20210210 13:59:10.911"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:10.911" starttime="20210210 13:59:10.906"></status>
</kw>
<msg timestamp="20210210 13:59:10.911" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:10.911" starttime="20210210 13:59:10.906"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:10.912" starttime="20210210 13:59:10.905"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:59:10.912" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:59:10.912" starttime="20210210 13:59:10.912"></status>
</kw>
<msg timestamp="20210210 13:59:10.912" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:59:10.913" starttime="20210210 13:59:07.716"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:59:10.913" starttime="20210210 13:59:10.913"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:10.913" starttime="20210210 13:59:07.716"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:59:10.913" critical="yes" starttime="20210210 13:59:07.715"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:59:10.914" starttime="20210210 13:59:07.680"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s18" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.1.0">
<test id="s1-s18-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:59:15.023" level="INFO">${postfix} = 73496</msg>
<status status="PASS" endtime="20210210 13:59:15.023" starttime="20210210 13:59:15.023"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:59:15.023" level="INFO">${tmpfile} = /tmp/tempkey-73496</msg>
<status status="PASS" endtime="20210210 13:59:15.024" starttime="20210210 13:59:15.023"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:15.026" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-73496 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:17.992" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:17.992" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:17.992" starttime="20210210 13:59:15.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:17.993" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:59:17.993" starttime="20210210 13:59:17.992"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:17.995" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:17.995" starttime="20210210 13:59:17.993"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:17.995" starttime="20210210 13:59:15.024"></status>
</kw>
<msg timestamp="20210210 13:59:17.995" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:17.995" starttime="20210210 13:59:15.024"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:17.996" starttime="20210210 13:59:15.024"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:59:17.997" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-73496 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:17.999" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:59:18.000" starttime="20210210 13:59:17.996"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:18.002" level="INFO">Running command 'rm -f /tmp/tempkey-73496 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:18.004" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:18.005" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:18.005" starttime="20210210 13:59:18.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:18.005" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:59:18.005" starttime="20210210 13:59:18.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:18.006" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:18.006" starttime="20210210 13:59:18.006"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:18.006" starttime="20210210 13:59:18.001"></status>
</kw>
<msg timestamp="20210210 13:59:18.006" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:18.006" starttime="20210210 13:59:18.000"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:18.007" starttime="20210210 13:59:18.000"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:59:18.007" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:59:18.007" starttime="20210210 13:59:18.007"></status>
</kw>
<msg timestamp="20210210 13:59:18.007" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:59:18.007" starttime="20210210 13:59:15.022"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:59:18.008" starttime="20210210 13:59:18.007"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:18.008" starttime="20210210 13:59:15.022"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:59:18.008" critical="yes" starttime="20210210 13:59:15.021"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:59:18.009" starttime="20210210 13:59:14.986"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s19" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.0.0">
<test id="s1-s19-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:00:48.806" level="INFO">${postfix} = 48644</msg>
<status status="PASS" endtime="20210210 14:00:48.806" starttime="20210210 14:00:48.806"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:00:48.807" level="INFO">${tmpfile} = /tmp/tempkey-48644</msg>
<status status="PASS" endtime="20210210 14:00:48.807" starttime="20210210 14:00:48.806"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:48.809" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-48644 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:51.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:51.910" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:51.910" starttime="20210210 14:00:48.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:51.911" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:00:51.911" starttime="20210210 14:00:51.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:51.913" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:51.914" starttime="20210210 14:00:51.911"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:51.914" starttime="20210210 14:00:48.808"></status>
</kw>
<msg timestamp="20210210 14:00:51.914" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:51.914" starttime="20210210 14:00:48.807"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:51.914" starttime="20210210 14:00:48.807"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:00:51.916" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-48644 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:51.918" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:00:51.918" starttime="20210210 14:00:51.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:51.921" level="INFO">Running command 'rm -f /tmp/tempkey-48644 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:51.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:51.924" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:51.924" starttime="20210210 14:00:51.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:51.925" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:00:51.925" starttime="20210210 14:00:51.924"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:51.925" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:51.926" starttime="20210210 14:00:51.925"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:51.926" starttime="20210210 14:00:51.919"></status>
</kw>
<msg timestamp="20210210 14:00:51.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:51.926" starttime="20210210 14:00:51.919"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:51.926" starttime="20210210 14:00:51.918"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:00:51.927" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:00:51.927" starttime="20210210 14:00:51.926"></status>
</kw>
<msg timestamp="20210210 14:00:51.927" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:00:51.927" starttime="20210210 14:00:48.805"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:00:51.927" starttime="20210210 14:00:51.927"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:51.927" starttime="20210210 14:00:48.805"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:00:51.928" critical="yes" starttime="20210210 14:00:48.804"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:00:51.929" starttime="20210210 14:00:48.769"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s20" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.1.0">
<test id="s1-s20-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 14:00:56.031" level="INFO">${postfix} = 48413</msg>
<status status="PASS" endtime="20210210 14:00:56.031" starttime="20210210 14:00:56.030"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 14:00:56.031" level="INFO">${tmpfile} = /tmp/tempkey-48413</msg>
<status status="PASS" endtime="20210210 14:00:56.031" starttime="20210210 14:00:56.031"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:56.034" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-48413 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:59.090" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:59.090" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:59.090" starttime="20210210 14:00:56.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:59.091" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:00:59.091" starttime="20210210 14:00:59.091"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:59.094" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:59.094" starttime="20210210 14:00:59.092"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:59.094" starttime="20210210 14:00:56.032"></status>
</kw>
<msg timestamp="20210210 14:00:59.094" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:59.094" starttime="20210210 14:00:56.032"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:59.094" starttime="20210210 14:00:56.031"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 14:00:59.096" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-48413 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:59.098" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 14:00:59.098" starttime="20210210 14:00:59.095"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:59.101" level="INFO">Running command 'rm -f /tmp/tempkey-48413 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:59.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:59.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:59.103" starttime="20210210 14:00:59.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:59.104" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:00:59.104" starttime="20210210 14:00:59.104"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:59.105" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:59.105" starttime="20210210 14:00:59.104"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:59.105" starttime="20210210 14:00:59.100"></status>
</kw>
<msg timestamp="20210210 14:00:59.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:59.105" starttime="20210210 14:00:59.099"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:59.105" starttime="20210210 14:00:59.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 14:00:59.106" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 14:00:59.106" starttime="20210210 14:00:59.105"></status>
</kw>
<msg timestamp="20210210 14:00:59.106" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 14:00:59.106" starttime="20210210 14:00:56.030"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 14:00:59.106" starttime="20210210 14:00:59.106"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:59.106" starttime="20210210 14:00:56.029"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:00:59.107" critical="yes" starttime="20210210 14:00:56.029"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 14:00:59.107" starttime="20210210 14:00:55.994"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s21" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.0.0">
<test id="s1-s21-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 13:56:01.949" level="INFO">${postfix} = 57226</msg>
<status status="PASS" endtime="20210210 13:56:01.949" starttime="20210210 13:56:01.948"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 13:56:01.949" level="INFO">${tmpfile} = /tmp/tempkey-57226</msg>
<status status="PASS" endtime="20210210 13:56:01.949" starttime="20210210 13:56:01.949"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:56:01.952" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-57226 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:05.071" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:56:05.072" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:56:05.072" starttime="20210210 13:56:01.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:56:05.073" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:56:05.073" starttime="20210210 13:56:05.072"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:56:05.075" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:56:05.075" starttime="20210210 13:56:05.073"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:05.076" starttime="20210210 13:56:01.950"></status>
</kw>
<msg timestamp="20210210 13:56:05.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:56:05.076" starttime="20210210 13:56:01.950"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:05.076" starttime="20210210 13:56:01.949"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 13:56:05.077" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-57226 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:05.080" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 13:56:05.080" starttime="20210210 13:56:05.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:56:05.083" level="INFO">Running command 'rm -f /tmp/tempkey-57226 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:56:05.085" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:56:05.085" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:56:05.085" starttime="20210210 13:56:05.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:56:05.086" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:56:05.086" starttime="20210210 13:56:05.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:56:05.086" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:56:05.086" starttime="20210210 13:56:05.086"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:05.087" starttime="20210210 13:56:05.081"></status>
</kw>
<msg timestamp="20210210 13:56:05.087" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:56:05.087" starttime="20210210 13:56:05.081"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:05.087" starttime="20210210 13:56:05.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:56:05.088" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 13:56:05.088" starttime="20210210 13:56:05.087"></status>
</kw>
<msg timestamp="20210210 13:56:05.088" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 13:56:05.088" starttime="20210210 13:56:01.948"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:56:05.088" starttime="20210210 13:56:05.088"></status>
</kw>
<status status="PASS" endtime="20210210 13:56:05.088" starttime="20210210 13:56:01.948"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:56:05.088" critical="yes" starttime="20210210 13:56:01.947"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 13:56:05.089" starttime="20210210 13:56:01.912"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/write.robot" id="s1-s22" name="xcompat-cluster-1.0.0-client-1.1.0-write">
<test id="s1-s22-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:12.691" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:17.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:17.295" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:17.295" starttime="20210210 13:58:12.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:17.296" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:17.297" starttime="20210210 13:58:17.296"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:17.297" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:17.297" starttime="20210210 13:58:17.297"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:17.297" starttime="20210210 13:58:12.683"></status>
</kw>
<msg timestamp="20210210 13:58:17.297" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:17.298" starttime="20210210 13:58:12.683"></status>
</kw>
<msg timestamp="20210210 13:58:17.298" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:58:17.298" starttime="20210210 13:58:12.682"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:58:17.298" starttime="20210210 13:58:17.298"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 13:58:17.299" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 13:58:17.299" starttime="20210210 13:58:17.298"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:17.299" starttime="20210210 13:58:12.682"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:58:17.299" critical="yes" starttime="20210210 13:58:12.681"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 13:58:17.300" starttime="20210210 13:58:12.638"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/write.robot" id="s1-s23" name="xcompat-cluster-0.5.0-client-1.1.0-write">
<test id="s1-s23-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:24.008" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:28.722" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:28.722" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:00:28.722" starttime="20210210 14:00:24.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:28.723" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:00:28.723" starttime="20210210 14:00:28.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:28.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:28.724" starttime="20210210 14:00:28.723"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:28.724" starttime="20210210 14:00:24.004"></status>
</kw>
<msg timestamp="20210210 14:00:28.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:28.724" starttime="20210210 14:00:24.004"></status>
</kw>
<msg timestamp="20210210 14:00:28.724" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 14:00:28.724" starttime="20210210 14:00:24.003"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 14:00:28.725" starttime="20210210 14:00:28.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 14:00:28.725" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 14:00:28.725" starttime="20210210 14:00:28.725"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:28.725" starttime="20210210 14:00:24.003"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:00:28.726" critical="yes" starttime="20210210 14:00:24.002"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 14:00:28.727" starttime="20210210 14:00:23.958"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/write.robot" id="s1-s24" name="xcompat-cluster-1.1.0-client-1.1.0-write">
<test id="s1-s24-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:05.583" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:09.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:09.939" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:09.939" starttime="20210210 13:55:05.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:09.940" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:09.940" starttime="20210210 13:55:09.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:09.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:09.940" starttime="20210210 13:55:09.940"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:09.941" starttime="20210210 13:55:05.580"></status>
</kw>
<msg timestamp="20210210 13:55:09.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:09.941" starttime="20210210 13:55:05.580"></status>
</kw>
<msg timestamp="20210210 13:55:09.941" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 13:55:09.941" starttime="20210210 13:55:05.579"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:09.941" starttime="20210210 13:55:09.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 13:55:09.942" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 13:55:09.942" starttime="20210210 13:55:09.942"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:09.942" starttime="20210210 13:55:05.579"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:09.942" critical="yes" starttime="20210210 13:55:05.578"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:09.944" starttime="20210210 13:55:05.540"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s25" name="xcompat-cluster-1.0.0-client-0.5.0-write">
<test id="s1-s25-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:58:29.956" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:58:33.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:58:33.340" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:33.340" starttime="20210210 13:58:29.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:58:33.341" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:58:33.341" starttime="20210210 13:58:33.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:58:33.341" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:58:33.341" starttime="20210210 13:58:33.341"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:33.342" starttime="20210210 13:58:29.955"></status>
</kw>
<msg timestamp="20210210 13:58:33.342" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:58:33.342" starttime="20210210 13:58:29.954"></status>
</kw>
<msg timestamp="20210210 13:58:33.342" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:58:33.342" starttime="20210210 13:58:29.954"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:58:33.342" starttime="20210210 13:58:33.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 13:58:33.343" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 13:58:33.343" starttime="20210210 13:58:33.342"></status>
</kw>
<status status="PASS" endtime="20210210 13:58:33.343" starttime="20210210 13:58:29.953"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:58:33.343" critical="yes" starttime="20210210 13:58:29.953"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 13:58:33.344" starttime="20210210 13:58:29.910"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s26" name="xcompat-cluster-0.5.0-client-0.5.0-write">
<test id="s1-s26-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:01:11.859" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:01:15.361" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:01:15.361" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:15.361" starttime="20210210 14:01:11.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:01:15.362" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:01:15.362" starttime="20210210 14:01:15.361"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:01:15.362" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:01:15.362" starttime="20210210 14:01:15.362"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:15.363" starttime="20210210 14:01:11.857"></status>
</kw>
<msg timestamp="20210210 14:01:15.363" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:01:15.363" starttime="20210210 14:01:11.857"></status>
</kw>
<msg timestamp="20210210 14:01:15.363" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:01:15.363" starttime="20210210 14:01:11.856"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 14:01:15.363" starttime="20210210 14:01:15.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 14:01:15.364" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 14:01:15.364" starttime="20210210 14:01:15.363"></status>
</kw>
<status status="PASS" endtime="20210210 14:01:15.364" starttime="20210210 14:01:11.856"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:01:15.364" critical="yes" starttime="20210210 14:01:11.855"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 14:01:15.365" starttime="20210210 14:01:11.820"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s27" name="xcompat-cluster-1.1.0-client-0.5.0-write">
<test id="s1-s27-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:22.834" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:26.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:26.384" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:26.384" starttime="20210210 13:55:22.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:26.385" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:26.385" starttime="20210210 13:55:26.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:26.386" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:26.386" starttime="20210210 13:55:26.385"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:26.386" starttime="20210210 13:55:22.832"></status>
</kw>
<msg timestamp="20210210 13:55:26.386" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:26.386" starttime="20210210 13:55:22.832"></status>
</kw>
<msg timestamp="20210210 13:55:26.386" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:26.387" starttime="20210210 13:55:22.832"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:26.387" starttime="20210210 13:55:26.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 13:55:26.388" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 13:55:26.388" starttime="20210210 13:55:26.387"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:26.388" starttime="20210210 13:55:22.831"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:26.388" critical="yes" starttime="20210210 13:55:22.831"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:26.389" starttime="20210210 13:55:22.798"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s28" name="xcompat-cluster-1.0.0-client-1.0.0-write">
<test id="s1-s28-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:59:00.325" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:59:03.555" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:59:03.555" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:03.555" starttime="20210210 13:59:00.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:59:03.556" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:59:03.556" starttime="20210210 13:59:03.556"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:59:03.557" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:59:03.557" starttime="20210210 13:59:03.557"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:03.557" starttime="20210210 13:59:00.323"></status>
</kw>
<msg timestamp="20210210 13:59:03.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:59:03.557" starttime="20210210 13:59:00.323"></status>
</kw>
<msg timestamp="20210210 13:59:03.557" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:59:03.558" starttime="20210210 13:59:00.322"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:59:03.558" starttime="20210210 13:59:03.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 13:59:03.558" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 13:59:03.558" starttime="20210210 13:59:03.558"></status>
</kw>
<status status="PASS" endtime="20210210 13:59:03.559" starttime="20210210 13:59:00.322"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:59:03.559" critical="yes" starttime="20210210 13:59:00.321"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 13:59:03.560" starttime="20210210 13:59:00.286"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s29" name="xcompat-cluster-0.5.0-client-1.0.0-write">
<test id="s1-s29-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 14:00:41.558" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 14:00:44.694" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 14:00:44.695" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:44.695" starttime="20210210 14:00:41.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 14:00:44.696" level="INFO"></msg>
<status status="PASS" endtime="20210210 14:00:44.696" starttime="20210210 14:00:44.695"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 14:00:44.696" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 14:00:44.696" starttime="20210210 14:00:44.696"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:44.696" starttime="20210210 14:00:41.557"></status>
</kw>
<msg timestamp="20210210 14:00:44.696" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 14:00:44.697" starttime="20210210 14:00:41.556"></status>
</kw>
<msg timestamp="20210210 14:00:44.697" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 14:00:44.697" starttime="20210210 14:00:41.556"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 14:00:44.697" starttime="20210210 14:00:44.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 14:00:44.698" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 14:00:44.698" starttime="20210210 14:00:44.697"></status>
</kw>
<status status="PASS" endtime="20210210 14:00:44.698" starttime="20210210 14:00:41.556"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 14:00:44.698" critical="yes" starttime="20210210 14:00:41.555"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 14:00:44.699" starttime="20210210 14:00:41.518"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s30" name="xcompat-cluster-1.1.0-client-1.0.0-write">
<test id="s1-s30-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:55:54.407" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:55:57.789" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:55:57.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:57.790" starttime="20210210 13:55:54.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:55:57.791" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:55:57.791" starttime="20210210 13:55:57.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:55:57.791" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:55:57.791" starttime="20210210 13:55:57.791"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:57.792" starttime="20210210 13:55:54.406"></status>
</kw>
<msg timestamp="20210210 13:55:57.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:55:57.792" starttime="20210210 13:55:54.406"></status>
</kw>
<msg timestamp="20210210 13:55:57.792" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:55:57.792" starttime="20210210 13:55:54.405"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:55:57.792" starttime="20210210 13:55:57.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 13:55:57.793" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 13:55:57.793" starttime="20210210 13:55:57.793"></status>
</kw>
<status status="PASS" endtime="20210210 13:55:57.793" starttime="20210210 13:55:54.405"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:55:57.793" critical="yes" starttime="20210210 13:55:54.404"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 13:55:57.794" starttime="20210210 13:55:54.368"></status>
</suite>
<status status="PASS" elapsedtime="112101" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="30">Critical Tests</stat>
<stat fail="0" pass="30">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="xcompat" pass="30">xcompat</stat>
<stat fail="0" id="s1-s1" name="xcompat-cluster-1.1.0-client-1.1.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-read-0.5.0</stat>
<stat fail="0" id="s1-s2" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-read-1.0.0</stat>
<stat fail="0" id="s1-s3" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-read-1.1.0</stat>
<stat fail="0" id="s1-s4" name="xcompat-cluster-1.0.0-client-1.1.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-read-0.5.0</stat>
<stat fail="0" id="s1-s5" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-read-1.0.0</stat>
<stat fail="0" id="s1-s6" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-read-1.1.0</stat>
<stat fail="0" id="s1-s7" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-read-1.0.0</stat>
<stat fail="0" id="s1-s8" name="xcompat-cluster-0.5.0-client-1.1.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-read-0.5.0</stat>
<stat fail="0" id="s1-s9" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-read-1.1.0</stat>
<stat fail="0" id="s1-s10" name="xcompat-cluster-1.1.0-client-0.5.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-0.5.0-read-1.1.0</stat>
<stat fail="0" id="s1-s11" name="xcompat-cluster-1.0.0-client-0.5.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-0.5.0-read-0.5.0</stat>
<stat fail="0" id="s1-s12" name="xcompat-cluster-1.0.0-client-0.5.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-0.5.0-read-1.1.0</stat>
<stat fail="0" id="s1-s13" name="xcompat-cluster-0.5.0-client-0.5.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-0.5.0-read-0.5.0</stat>
<stat fail="0" id="s1-s14" name="xcompat-cluster-0.5.0-client-0.5.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-0.5.0-read-1.1.0</stat>
<stat fail="0" id="s1-s15" name="xcompat-cluster-1.1.0-client-0.5.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-0.5.0-read-0.5.0</stat>
<stat fail="0" id="s1-s16" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.0.0-read-1.1.0</stat>
<stat fail="0" id="s1-s17" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.0.0-read-1.0.0</stat>
<stat fail="0" id="s1-s18" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.0.0-read-1.1.0</stat>
<stat fail="0" id="s1-s19" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.0.0-read-1.0.0</stat>
<stat fail="0" id="s1-s20" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.0.0-read-1.1.0</stat>
<stat fail="0" id="s1-s21" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.0.0-read-1.0.0</stat>
<stat fail="0" id="s1-s22" name="xcompat-cluster-1.0.0-client-1.1.0-write" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-write</stat>
<stat fail="0" id="s1-s23" name="xcompat-cluster-0.5.0-client-1.1.0-write" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-write</stat>
<stat fail="0" id="s1-s24" name="xcompat-cluster-1.1.0-client-1.1.0-write" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-write</stat>
<stat fail="0" id="s1-s25" name="xcompat-cluster-1.0.0-client-0.5.0-write" pass="1">xcompat.xcompat-cluster-1.0.0-client-0.5.0-write</stat>
<stat fail="0" id="s1-s26" name="xcompat-cluster-0.5.0-client-0.5.0-write" pass="1">xcompat.xcompat-cluster-0.5.0-client-0.5.0-write</stat>
<stat fail="0" id="s1-s27" name="xcompat-cluster-1.1.0-client-0.5.0-write" pass="1">xcompat.xcompat-cluster-1.1.0-client-0.5.0-write</stat>
<stat fail="0" id="s1-s28" name="xcompat-cluster-1.0.0-client-1.0.0-write" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.0.0-write</stat>
<stat fail="0" id="s1-s29" name="xcompat-cluster-0.5.0-client-1.0.0-write" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.0.0-write</stat>
<stat fail="0" id="s1-s30" name="xcompat-cluster-1.1.0-client-1.0.0-write" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.0.0-write</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
