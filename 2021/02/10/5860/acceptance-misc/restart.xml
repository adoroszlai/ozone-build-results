<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:48:54.791" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="restart">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:48:20.955" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:48:34.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:48:34.668" level="INFO">${output} = 2021-02-10 13:48:22,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:22,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:34.668" starttime="20210210 13:48:20.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:48:34.669" level="INFO">2021-02-10 13:48:22,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:22,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:48:22,167 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:48:22,294 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-10 13:48:22,310 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:23,312 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:23,700 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:48:23,917 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:48:23,918 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A92CDDBB594A-&gt;4f0b38f7-c594-404e-821e-9a11eeb60da9
2021-02-10 13:48:23,918 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:48:24,313 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:25,313 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:26,314 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:27,314 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:28,315 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:29,315 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:30,316 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:30,499 [java.util.concurrent.ThreadPoolExecutor$Worker@2c3c99df[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A92CDDBB594A-&gt;13e2ce32-d600-4530-9082-17bcb7d1a633
2021-02-10 13:48:30,499 [java.util.concurrent.ThreadPoolExecutor$Worker@2c3c99df[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:48:31,316 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:32,317 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:33,317 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:34,318 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:48:34,343 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=10620.914164, max=10620.914164, mean=10620.914164, stddev=0.0, median=10620.914164, p75=10620.914164, p95=10620.914164, p98=10620.914164, p99=10620.914164, p999=10620.914164, mean_rate=0.08699503727892852, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:48:34,344 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2021-02-10 13:48:34,344 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:48:34,344 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:48:34.669" starttime="20210210 13:48:34.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:48:34.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:48:34.670" starttime="20210210 13:48:34.669"></status>
</kw>
<status status="PASS" endtime="20210210 13:48:34.670" starttime="20210210 13:48:20.952"></status>
</kw>
<msg timestamp="20210210 13:48:34.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:48:34.670" starttime="20210210 13:48:20.951"></status>
</kw>
<msg timestamp="20210210 13:48:34.670" level="INFO">${result} = 2021-02-10 13:48:22,044 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:22,166 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:34.671" starttime="20210210 13:48:20.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:48:34.671" starttime="20210210 13:48:34.671"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:48:34.671" critical="yes" starttime="20210210 13:48:20.950"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:48:34.676" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:48:37.508" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:48:37.508" level="INFO">${output} = 2021-02-10 13:48:35,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:35,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:37.508" starttime="20210210 13:48:34.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:48:37.509" level="INFO">2021-02-10 13:48:35,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:35,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:48:35,818 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:48:35,960 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-02-10 13:48:35,974 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:36,977 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:48:37,483 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=84.468236, max=84.468236, mean=84.468236, stddev=0.0, median=84.468236, p75=84.468236, p95=84.468236, p98=84.468236, p99=84.468236, p999=84.468236, mean_rate=0.9849892193619433, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:48:37,490 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 13:48:37,490 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:48:37,490 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:48:37.510" starttime="20210210 13:48:37.509"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:48:37.510" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:48:37.510" starttime="20210210 13:48:37.510"></status>
</kw>
<status status="PASS" endtime="20210210 13:48:37.510" starttime="20210210 13:48:34.673"></status>
</kw>
<msg timestamp="20210210 13:48:37.511" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:48:37.511" starttime="20210210 13:48:34.673"></status>
</kw>
<msg timestamp="20210210 13:48:37.511" level="INFO">${result} = 2021-02-10 13:48:35,653 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:35,815 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:37.511" starttime="20210210 13:48:34.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:48:37.511" starttime="20210210 13:48:37.511"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:48:37.512" critical="yes" starttime="20210210 13:48:34.672"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:48:37.516" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:48:40.257" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:48:40.258" level="INFO">${output} = 2021-02-10 13:48:38,495 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:38,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:40.258" starttime="20210210 13:48:37.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:48:40.259" level="INFO">2021-02-10 13:48:38,495 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:38,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:48:38,599 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:48:38,746 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-02-10 13:48:38,765 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:39,776 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:48:40,249 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=17.347389, max=17.347389, mean=17.347389, stddev=0.0, median=17.347389, p75=17.347389, p95=17.347389, p98=17.347389, p99=17.347389, p999=17.347389, mean_rate=0.9777132474867338, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:48:40,249 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 1
2021-02-10 13:48:40,249 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:48:40,249 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:48:40.259" starttime="20210210 13:48:40.258"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:48:40.260" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:48:40.260" starttime="20210210 13:48:40.259"></status>
</kw>
<status status="PASS" endtime="20210210 13:48:40.260" starttime="20210210 13:48:37.514"></status>
</kw>
<msg timestamp="20210210 13:48:40.260" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:48:40.260" starttime="20210210 13:48:37.514"></status>
</kw>
<msg timestamp="20210210 13:48:40.260" level="INFO">${result} = 2021-02-10 13:48:38,495 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:38,599 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:40.260" starttime="20210210 13:48:37.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:48:40.261" starttime="20210210 13:48:40.261"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:48:40.261" critical="yes" starttime="20210210 13:48:37.512"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210210 13:48:40.262" starttime="20210210 13:48:20.916"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s2" name="Generate">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:47:06.455" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:47:12.135" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:47:12.135" level="INFO">${output} = 2021-02-10 13:47:07,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:07,531 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:12.136" starttime="20210210 13:47:06.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:47:12.137" level="INFO">2021-02-10 13:47:07,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:07,531 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:47:07,531 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:47:07,674 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-10 13:47:07,684 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:08,492 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 13:47:08,706 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:08,725 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 13:47:09,676 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:47:09,706 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:09,888 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:47:09,888 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-FCD165D6D2D7-&gt;3ab3da6f-3144-4f0e-a18e-9b5eb8ec6e69
2021-02-10 13:47:09,889 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:47:10,706 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:11,707 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:47:11,811 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=2598.619898, max=2598.619898, mean=2598.619898, stddev=0.0, median=2598.619898, p75=2598.619898, p95=2598.619898, p98=2598.619898, p99=2598.619898, p999=2598.619898, mean_rate=0.3290965118208023, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:47:11,811 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-10 13:47:11,811 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:47:11,811 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:47:12.137" starttime="20210210 13:47:12.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:47:12.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:47:12.138" starttime="20210210 13:47:12.137"></status>
</kw>
<status status="PASS" endtime="20210210 13:47:12.138" starttime="20210210 13:47:06.451"></status>
</kw>
<msg timestamp="20210210 13:47:12.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:47:12.138" starttime="20210210 13:47:06.451"></status>
</kw>
<msg timestamp="20210210 13:47:12.138" level="INFO">${result} = 2021-02-10 13:47:07,437 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:07,531 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:12.138" starttime="20210210 13:47:06.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:47:12.139" starttime="20210210 13:47:12.138"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:47:12.139" critical="yes" starttime="20210210 13:47:06.449"></status>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:47:12.144" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:47:14.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:47:14.959" level="INFO">${output} = 2021-02-10 13:47:13,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:13,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:14.959" starttime="20210210 13:47:12.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:47:14.960" level="INFO">2021-02-10 13:47:13,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:13,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:47:13,324 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:47:13,438 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-02-10 13:47:13,450 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:14,459 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:47:14,949 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=67.287552, max=67.287552, mean=67.287552, stddev=0.0, median=67.287552, p75=67.287552, p95=67.287552, p98=67.287552, p99=67.287552, p999=67.287552, mean_rate=0.9856273794985395, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:47:14,950 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 13:47:14,950 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:47:14,950 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:47:14.960" starttime="20210210 13:47:14.959"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:47:14.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:47:14.961" starttime="20210210 13:47:14.960"></status>
</kw>
<status status="PASS" endtime="20210210 13:47:14.961" starttime="20210210 13:47:12.141"></status>
</kw>
<msg timestamp="20210210 13:47:14.961" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:47:14.961" starttime="20210210 13:47:12.141"></status>
</kw>
<msg timestamp="20210210 13:47:14.961" level="INFO">${result} = 2021-02-10 13:47:13,198 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:13,324 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:14.961" starttime="20210210 13:47:12.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:47:14.962" starttime="20210210 13:47:14.962"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:47:14.962" critical="yes" starttime="20210210 13:47:12.140"></status>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:47:14.967" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:47:17.767" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:47:17.767" level="INFO">${output} = 2021-02-10 13:47:16,004 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:16,094 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:17.767" starttime="20210210 13:47:14.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:47:17.768" level="INFO">2021-02-10 13:47:16,004 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:16,094 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:47:16,094 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:47:16,222 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-02-10 13:47:16,238 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:17,243 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:47:17,742 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=19.2165, max=19.2165, mean=19.2165, stddev=0.0, median=19.2165, p75=19.2165, p95=19.2165, p98=19.2165, p99=19.2165, p999=19.2165, mean_rate=0.9833552230664375, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:47:17,742 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 13:47:17,749 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:47:17,749 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:47:17.768" starttime="20210210 13:47:17.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:47:17.769" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:47:17.769" starttime="20210210 13:47:17.769"></status>
</kw>
<status status="PASS" endtime="20210210 13:47:17.769" starttime="20210210 13:47:14.964"></status>
</kw>
<msg timestamp="20210210 13:47:17.769" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:47:17.769" starttime="20210210 13:47:14.964"></status>
</kw>
<msg timestamp="20210210 13:47:17.770" level="INFO">${result} = 2021-02-10 13:47:16,004 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:16,094 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:17.770" starttime="20210210 13:47:14.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:47:17.770" starttime="20210210 13:47:17.770"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:47:17.771" critical="yes" starttime="20210210 13:47:14.963"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210210 13:47:17.772" starttime="20210210 13:47:06.415"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:48:11.990" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:48:16.971" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:48:16.971" level="INFO">${output} = 2021-02-10 13:48:13,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:13,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:16.971" starttime="20210210 13:48:11.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:48:16.972" level="INFO">2021-02-10 13:48:13,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:13,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:48:13,200 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:48:13,319 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-10 13:48:13,334 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:14,345 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:14,984 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:48:15,357 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:16,358 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:48:16,645 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=34.976181, max=34.976181, mean=34.976181, stddev=0.0, median=34.976181, p75=34.976181, p95=34.976181, p98=34.976181, p99=34.976181, p999=34.976181, mean_rate=0.9899518618879984, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:48:16,646 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 13:48:16,646 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:48:16,646 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:48:16.972" starttime="20210210 13:48:16.971"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:48:16.973" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:48:16.973" starttime="20210210 13:48:16.972"></status>
</kw>
<status status="PASS" endtime="20210210 13:48:16.973" starttime="20210210 13:48:11.986"></status>
</kw>
<msg timestamp="20210210 13:48:16.973" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:48:16.973" starttime="20210210 13:48:11.986"></status>
</kw>
<msg timestamp="20210210 13:48:16.974" level="INFO">${result} = 2021-02-10 13:48:13,071 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:13,200 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:16.974" starttime="20210210 13:48:11.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:48:16.974" starttime="20210210 13:48:16.974"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:48:16.974" critical="yes" starttime="20210210 13:48:11.984"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 13:48:16.976" starttime="20210210 13:48:11.949"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s4" name="Validate">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:48:44.115" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:48:48.406" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:48:48.406" level="INFO">${output} = 2021-02-10 13:48:45,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:45,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:48.406" starttime="20210210 13:48:44.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:48:48.407" level="INFO">2021-02-10 13:48:45,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:45,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:48:45,187 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:48:45,332 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-10 13:48:45,350 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:46,363 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:48:46,447 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:48:47,364 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:48:48,079 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=29.855253, max=29.855253, mean=29.855253, stddev=0.0, median=29.855253, p75=29.855253, p95=29.855253, p98=29.855253, p99=29.855253, p999=29.855253, mean_rate=0.9903972077137284, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:48:48,079 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 13:48:48,080 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:48:48,080 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:48:48.407" starttime="20210210 13:48:48.407"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:48:48.408" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:48:48.408" starttime="20210210 13:48:48.408"></status>
</kw>
<status status="PASS" endtime="20210210 13:48:48.408" starttime="20210210 13:48:44.111"></status>
</kw>
<msg timestamp="20210210 13:48:48.408" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:48:48.409" starttime="20210210 13:48:44.111"></status>
</kw>
<msg timestamp="20210210 13:48:48.409" level="INFO">${result} = 2021-02-10 13:48:45,096 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:48:45,187 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:48:48.409" starttime="20210210 13:48:44.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:48:48.409" starttime="20210210 13:48:48.409"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:48:48.409" critical="yes" starttime="20210210 13:48:44.109"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 13:48:48.410" starttime="20210210 13:48:44.075"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s5" name="Validate">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:47:21.557" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:47:26.179" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:47:26.179" level="INFO">${output} = 2021-02-10 13:47:22,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:22,682 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:26.179" starttime="20210210 13:47:21.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:47:26.181" level="INFO">2021-02-10 13:47:22,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:22,682 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:47:22,682 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 13:47:22,796 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-10 13:47:22,811 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:23,817 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:24,198 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 13:47:24,817 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 13:47:25,818 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 13:47:25,853 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=48.041851, max=48.041851, mean=48.041851, stddev=0.0, median=48.041851, p75=48.041851, p95=48.041851, p98=48.041851, p99=48.041851, p999=48.041851, mean_rate=0.9857607898808154, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 13:47:25,854 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 13:47:25,854 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 13:47:25,854 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 13:47:26.181" starttime="20210210 13:47:26.180"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:47:26.181" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:47:26.181" starttime="20210210 13:47:26.181"></status>
</kw>
<status status="PASS" endtime="20210210 13:47:26.182" starttime="20210210 13:47:21.553"></status>
</kw>
<msg timestamp="20210210 13:47:26.182" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:47:26.182" starttime="20210210 13:47:21.553"></status>
</kw>
<msg timestamp="20210210 13:47:26.182" level="INFO">${result} = 2021-02-10 13:47:22,562 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 13:47:22,682 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 13:47:26.182" starttime="20210210 13:47:21.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 13:47:26.183" starttime="20210210 13:47:26.182"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:47:26.183" critical="yes" starttime="20210210 13:47:21.551"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 13:47:26.184" starttime="20210210 13:47:21.517"></status>
</suite>
<status status="PASS" elapsedtime="44732" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="restart" pass="9">restart</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s2" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s4" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s5" name="Validate" pass="1">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
