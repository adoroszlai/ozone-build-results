<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:27:59.181" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:33.874" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:35.954" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:15:35.954" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:15:35.954" starttime="20210210 13:15:33.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:35.955" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:15:35.955" starttime="20210210 13:15:35.954"></status>
</kw>
<msg timestamp="20210210 13:15:35.955" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:15:35.955" starttime="20210210 13:15:33.871"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:35.960" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:38.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:38.281" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:38.281" starttime="20210210 13:15:35.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:38.282" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:38.282" starttime="20210210 13:15:38.281"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:38.283" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:38.283" starttime="20210210 13:15:38.282"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:38.283" starttime="20210210 13:15:35.957"></status>
</kw>
<msg timestamp="20210210 13:15:38.283" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:38.283" starttime="20210210 13:15:35.957"></status>
</kw>
<msg timestamp="20210210 13:15:38.284" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 13:15:38.284" starttime="20210210 13:15:35.956"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:15:38.284" starttime="20210210 13:15:38.284"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:38.284" starttime="20210210 13:15:35.956"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:38.284" starttime="20210210 13:15:35.956"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:38.292" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:40.181" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:40.181" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:40.181" starttime="20210210 13:15:38.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:40.182" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:40.183" starttime="20210210 13:15:40.182"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:40.183" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:40.183" starttime="20210210 13:15:40.183"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:40.183" starttime="20210210 13:15:38.286"></status>
</kw>
<msg timestamp="20210210 13:15:40.183" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:40.184" starttime="20210210 13:15:38.286"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:40.184" starttime="20210210 13:15:38.285"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:40.184" starttime="20210210 13:15:38.285"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:40.184" starttime="20210210 13:15:38.284"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 13:15:40.184" starttime="20210210 13:15:40.184"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:40.188" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:42.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:42.173" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:15...</msg>
<status status="PASS" endtime="20210210 13:15:42.173" starttime="20210210 13:15:40.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:42.174" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:15:40.139Z",
  "modificationTime" : "2021-02-10T13:15:40.139Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:15:42.174" starttime="20210210 13:15:42.174"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:42.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:42.175" starttime="20210210 13:15:42.175"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:42.175" starttime="20210210 13:15:40.185"></status>
</kw>
<msg timestamp="20210210 13:15:42.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:42.176" starttime="20210210 13:15:40.185"></status>
</kw>
<msg timestamp="20210210 13:15:42.176" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:15...</msg>
<status status="PASS" endtime="20210210 13:15:42.176" starttime="20210210 13:15:40.185"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 13:15:42.176" starttime="20210210 13:15:42.176"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:15:42.180" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:15:42.180" starttime="20210210 13:15:42.179"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:15:42.180" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:15:42.180" starttime="20210210 13:15:42.180"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:42.180" starttime="20210210 13:15:42.179"></status>
</kw>
<msg timestamp="20210210 13:15:42.181" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:15:42.181" starttime="20210210 13:15:42.179"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:42.181" starttime="20210210 13:15:42.178"></status>
</kw>
<msg timestamp="20210210 13:15:42.181" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:15:42.181" starttime="20210210 13:15:42.177"></status>
</kw>
<msg timestamp="20210210 13:15:42.181" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:15:42.181" starttime="20210210 13:15:42.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:42.184" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:44.097" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:44.097" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:44.097" starttime="20210210 13:15:42.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:44.098" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:44.098" starttime="20210210 13:15:44.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:44.099" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:44.099" starttime="20210210 13:15:44.099"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:44.099" starttime="20210210 13:15:42.182"></status>
</kw>
<msg timestamp="20210210 13:15:44.099" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:44.099" starttime="20210210 13:15:42.182"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:44.100" starttime="20210210 13:15:42.181"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:44.103" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:49.871" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:49.871" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:49.871" starttime="20210210 13:15:44.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:49.872" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:49.872" starttime="20210210 13:15:49.872"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:49.873" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:49.873" starttime="20210210 13:15:49.873"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:49.873" starttime="20210210 13:15:44.101"></status>
</kw>
<msg timestamp="20210210 13:15:49.873" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:49.873" starttime="20210210 13:15:44.100"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:49.874" starttime="20210210 13:15:44.100"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:49.877" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:53.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:53.397" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:53.397" starttime="20210210 13:15:49.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:53.398" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:53.398" starttime="20210210 13:15:53.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:53.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:53.399" starttime="20210210 13:15:53.398"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:53.399" starttime="20210210 13:15:49.874"></status>
</kw>
<msg timestamp="20210210 13:15:53.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:53.399" starttime="20210210 13:15:49.874"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:53.400" starttime="20210210 13:15:49.874"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:53.403" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:56.887" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:56.887" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:56.887" starttime="20210210 13:15:53.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:56.888" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:56.888" starttime="20210210 13:15:56.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:56.889" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:56.889" starttime="20210210 13:15:56.889"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:56.889" starttime="20210210 13:15:53.400"></status>
</kw>
<msg timestamp="20210210 13:15:56.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:56.889" starttime="20210210 13:15:53.400"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:56.890" starttime="20210210 13:15:53.400"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:15:56.890" critical="yes" starttime="20210210 13:15:33.870"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:15:56.894" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:15:56.894" starttime="20210210 13:15:56.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:15:56.895" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:15:56.895" starttime="20210210 13:15:56.894"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:56.895" starttime="20210210 13:15:56.893"></status>
</kw>
<msg timestamp="20210210 13:15:56.895" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:15:56.895" starttime="20210210 13:15:56.893"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:56.895" starttime="20210210 13:15:56.892"></status>
</kw>
<msg timestamp="20210210 13:15:56.895" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:15:56.895" starttime="20210210 13:15:56.892"></status>
</kw>
<msg timestamp="20210210 13:15:56.896" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:15:56.896" starttime="20210210 13:15:56.891"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:56.899" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:15:58.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:15:58.819" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:15:58.819" starttime="20210210 13:15:56.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:15:58.820" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:15:58.820" starttime="20210210 13:15:58.819"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:15:58.820" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:15:58.820" starttime="20210210 13:15:58.820"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:58.821" starttime="20210210 13:15:56.896"></status>
</kw>
<msg timestamp="20210210 13:15:58.821" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:15:58.821" starttime="20210210 13:15:56.896"></status>
</kw>
<status status="PASS" endtime="20210210 13:15:58.821" starttime="20210210 13:15:56.896"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:15:58.824" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:16:00.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:16:00.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:16:00.771" starttime="20210210 13:15:58.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:16:00.772" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:16:00.772" starttime="20210210 13:16:00.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:16:00.773" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:16:00.773" starttime="20210210 13:16:00.772"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:00.773" starttime="20210210 13:15:58.822"></status>
</kw>
<msg timestamp="20210210 13:16:00.773" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:16:00.773" starttime="20210210 13:15:58.822"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:00.774" starttime="20210210 13:15:58.821"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:16:00.774" critical="yes" starttime="20210210 13:15:56.890"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 13:16:00.775" starttime="20210210 13:15:33.822"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:17:24.973" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:17:24.973" starttime="20210210 13:17:24.973"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:17:24.973" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:17:24.973" starttime="20210210 13:17:24.973"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:24.974" starttime="20210210 13:17:24.972"></status>
</kw>
<msg timestamp="20210210 13:17:24.974" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:17:24.974" starttime="20210210 13:17:24.972"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:17:24.975" starttime="20210210 13:17:24.974"></status>
</kw>
<msg timestamp="20210210 13:17:24.975" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:17:24.975" starttime="20210210 13:17:24.974"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:24.975" starttime="20210210 13:17:24.971"></status>
</kw>
<msg timestamp="20210210 13:17:24.975" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:17:24.975" starttime="20210210 13:17:24.971"></status>
</kw>
<msg timestamp="20210210 13:17:24.975" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:17:24.975" starttime="20210210 13:17:24.970"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:17:24.976" level="INFO">${random} = 00680</msg>
<status status="PASS" endtime="20210210 13:17:24.976" starttime="20210210 13:17:24.975"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:17:24.981" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-00680 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:17:27.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:17:27.969" level="INFO">${output} = 2021-02-10 13:17:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:17:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 13:17:27.969" starttime="20210210 13:17:24.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:17:27.970" level="INFO">2021-02-10 13:17:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:17:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 13:17:26 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 13:17:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:17:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5700B029AC02-&gt;812f1498-6fd1-43b3-94e7-a21f497b2963
2021-02-10 13:17:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 13:17:27.970" starttime="20210210 13:17:27.969"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:17:27.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:17:27.970" starttime="20210210 13:17:27.970"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:27.971" starttime="20210210 13:17:24.976"></status>
</kw>
<msg timestamp="20210210 13:17:27.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:17:27.971" starttime="20210210 13:17:24.976"></status>
</kw>
<msg timestamp="20210210 13:17:27.971" level="INFO">${result} = 2021-02-10 13:17:26 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:17:26 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 13:17:27.971" starttime="20210210 13:17:24.976"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:17:27.975" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:17:29.526" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:17:29.526" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:17 ofs://om/volume1/bucket1/ozone-00680
-rw-...</msg>
<status status="PASS" endtime="20210210 13:17:29.526" starttime="20210210 13:17:27.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:17:29.527" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:17 ofs://om/volume1/bucket1/ozone-00680
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:16 ofs://om/volume1/bucket1/ozone-86073
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:16 ofs://om/volume1/bucket1/wordcount-unSTt2Xx.txt</msg>
<status status="PASS" endtime="20210210 13:17:29.528" starttime="20210210 13:17:29.527"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:17:29.528" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:17:29.528" starttime="20210210 13:17:29.528"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:29.528" starttime="20210210 13:17:27.972"></status>
</kw>
<msg timestamp="20210210 13:17:29.529" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:17:29.529" starttime="20210210 13:17:27.972"></status>
</kw>
<msg timestamp="20210210 13:17:29.529" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:17 ofs://om/volume1/bucket1/ozone-00680
-rw-...</msg>
<status status="PASS" endtime="20210210 13:17:29.529" starttime="20210210 13:17:27.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:17:29.529" starttime="20210210 13:17:29.529"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:17:29.530" critical="yes" starttime="20210210 13:17:24.969"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:17:29.531" starttime="20210210 13:17:24.923"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:16:04.771" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:16:04.771" starttime="20210210 13:16:04.771"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:16:04.772" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:16:04.772" starttime="20210210 13:16:04.771"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:04.772" starttime="20210210 13:16:04.770"></status>
</kw>
<msg timestamp="20210210 13:16:04.772" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:16:04.772" starttime="20210210 13:16:04.770"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:04.772" starttime="20210210 13:16:04.769"></status>
</kw>
<msg timestamp="20210210 13:16:04.772" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:16:04.772" starttime="20210210 13:16:04.769"></status>
</kw>
<msg timestamp="20210210 13:16:04.772" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:16:04.772" starttime="20210210 13:16:04.768"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:16:04.773" level="INFO">${random} = 86073</msg>
<status status="PASS" endtime="20210210 13:16:04.773" starttime="20210210 13:16:04.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:16:04.777" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-86073 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:16:07.906" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:16:07.906" level="INFO">${output} = 2021-02-10 13:16:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 13:16:07.906" starttime="20210210 13:16:04.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:16:07.909" level="INFO">2021-02-10 13:16:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 13:16:06 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 13:16:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:16:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AFB70742E7C9-&gt;812f1498-6fd1-43b3-94e7-a21f497b2963
2021-02-10 13:16:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 13:16:07.909" starttime="20210210 13:16:07.907"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:16:07.909" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:16:07.909" starttime="20210210 13:16:07.909"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:07.910" starttime="20210210 13:16:04.774"></status>
</kw>
<msg timestamp="20210210 13:16:07.910" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:16:07.910" starttime="20210210 13:16:04.774"></status>
</kw>
<msg timestamp="20210210 13:16:07.910" level="INFO">${result} = 2021-02-10 13:16:06 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:06 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 13:16:07.910" starttime="20210210 13:16:04.773"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:16:07.913" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:16:09.450" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:16:09.451" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:16 o3fs://bucket1.volume1.om/ozone-86073
dr...</msg>
<status status="PASS" endtime="20210210 13:16:09.451" starttime="20210210 13:16:07.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:16:09.452" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:16 o3fs://bucket1.volume1.om/ozone-86073
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:16:09.452" starttime="20210210 13:16:09.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:16:09.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:16:09.453" starttime="20210210 13:16:09.452"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:09.453" starttime="20210210 13:16:07.911"></status>
</kw>
<msg timestamp="20210210 13:16:09.453" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:16:09.453" starttime="20210210 13:16:07.911"></status>
</kw>
<msg timestamp="20210210 13:16:09.453" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:15 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 13:16 o3fs://bucket1.volume1.om/ozone-86073
dr...</msg>
<status status="PASS" endtime="20210210 13:16:09.453" starttime="20210210 13:16:07.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:16:09.454" starttime="20210210 13:16:09.453"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:16:09.454" critical="yes" starttime="20210210 13:16:04.767"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:16:09.455" starttime="20210210 13:16:04.721"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:17:33.528" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:17:33.533" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:17:33.533" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:17:33.533" starttime="20210210 13:17:33.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:17:33.534" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:17:33.534" starttime="20210210 13:17:33.534"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:17:33.535" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:17:33.535" starttime="20210210 13:17:33.535"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:33.535" starttime="20210210 13:17:33.524"></status>
</kw>
<msg timestamp="20210210 13:17:33.535" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:17:33.535" starttime="20210210 13:17:33.524"></status>
</kw>
<msg timestamp="20210210 13:17:33.536" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:17:33.536" starttime="20210210 13:17:33.523"></status>
</kw>
<msg timestamp="20210210 13:17:33.536" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:17:33.536" starttime="20210210 13:17:33.523"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:17:33.540" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:17:33.540" starttime="20210210 13:17:33.540"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:17:33.541" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:17:33.541" starttime="20210210 13:17:33.540"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:33.541" starttime="20210210 13:17:33.539"></status>
</kw>
<msg timestamp="20210210 13:17:33.541" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:17:33.541" starttime="20210210 13:17:33.539"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:17:33.542" starttime="20210210 13:17:33.541"></status>
</kw>
<msg timestamp="20210210 13:17:33.542" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:17:33.542" starttime="20210210 13:17:33.541"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:33.542" starttime="20210210 13:17:33.538"></status>
</kw>
<msg timestamp="20210210 13:17:33.542" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:17:33.542" starttime="20210210 13:17:33.537"></status>
</kw>
<msg timestamp="20210210 13:17:33.542" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:17:33.542" starttime="20210210 13:17:33.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:17:33.545" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:18:10.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:18:10.585" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:17:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:17:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 13:18:10.586" starttime="20210210 13:17:33.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:18:10.587" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:17:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:17:35 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 13:17:35 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 13:17:35 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:17:35 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C32AB70B2CBB-&gt;7876cb13-efd0-4684-9088-504c2b6f4a4b
2021-02-10 13:17:35 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 13:17:36 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:17:36 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:17:36 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 13:17:39 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 13:17:39 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D6FBA275F691-&gt;812f1498-6fd1-43b3-94e7-a21f497b2963
2021-02-10 13:17:39 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:17:39 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612962901927_0003
2021-02-10 13:17:39 INFO  YarnClientImpl:273 - Submitted application application_1612962901927_0003
2021-02-10 13:17:39 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612962901927_0003/
2021-02-10 13:17:39 INFO  Job:1339 - Running job: job_1612962901927_0003
2021-02-10 13:17:45 INFO  Job:1360 - Job job_1612962901927_0003 running in uber mode : false
2021-02-10 13:17:45 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 13:17:51 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 13:17:56 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 13:18:01 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 13:18:05 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 13:18:09 INFO  Job:1378 - Job job_1612962901927_0003 completed successfully
2021-02-10 13:18:10 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=611865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35620
		Total time spent by all reduces in occupied slots (ms)=12724
		Total time spent by all map tasks (ms)=8905
		Total time spent by all reduce tasks (ms)=3181
		Total vcore-milliseconds taken by all map tasks=8905
		Total vcore-milliseconds taken by all reduce tasks=3181
		Total megabyte-milliseconds taken by all map tasks=36474880
		Total megabyte-milliseconds taken by all reduce tasks=13029376
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=598
		CPU time spent (ms)=6170
		Physical memory (bytes) snapshot=1169051648
		Virtual memory (bytes) snapshot=15770025984
		Total committed heap usage (bytes)=1064304640
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.822 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 13:18:10.587" starttime="20210210 13:18:10.586"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:18:10.587" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:18:10.587" starttime="20210210 13:18:10.587"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.588" starttime="20210210 13:17:33.543"></status>
</kw>
<msg timestamp="20210210 13:18:10.588" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:18:10.588" starttime="20210210 13:17:33.543"></status>
</kw>
<msg timestamp="20210210 13:18:10.588" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:17:35 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:17:35 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 13:18:10.588" starttime="20210210 13:17:33.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:18:10.589" starttime="20210210 13:18:10.588"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:18:10.589" critical="yes" starttime="20210210 13:17:33.522"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:18:10.594" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:18:10.599" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:18:10.599" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:18:10.599" starttime="20210210 13:18:10.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:18:10.600" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:18:10.600" starttime="20210210 13:18:10.599"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:18:10.600" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:18:10.600" starttime="20210210 13:18:10.600"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.601" starttime="20210210 13:18:10.591"></status>
</kw>
<msg timestamp="20210210 13:18:10.601" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:18:10.601" starttime="20210210 13:18:10.591"></status>
</kw>
<msg timestamp="20210210 13:18:10.601" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:18:10.601" starttime="20210210 13:18:10.591"></status>
</kw>
<msg timestamp="20210210 13:18:10.601" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:18:10.601" starttime="20210210 13:18:10.590"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:18:10.602" level="INFO">${random} = PrO7GN3c</msg>
<status status="PASS" endtime="20210210 13:18:10.602" starttime="20210210 13:18:10.601"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:18:10.605" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:18:10.605" starttime="20210210 13:18:10.605"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:18:10.606" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:18:10.606" starttime="20210210 13:18:10.605"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.606" starttime="20210210 13:18:10.604"></status>
</kw>
<msg timestamp="20210210 13:18:10.606" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:18:10.606" starttime="20210210 13:18:10.604"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:18:10.607" starttime="20210210 13:18:10.607"></status>
</kw>
<msg timestamp="20210210 13:18:10.607" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:18:10.607" starttime="20210210 13:18:10.606"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.607" starttime="20210210 13:18:10.603"></status>
</kw>
<msg timestamp="20210210 13:18:10.607" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:18:10.607" starttime="20210210 13:18:10.602"></status>
</kw>
<msg timestamp="20210210 13:18:10.608" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:18:10.608" starttime="20210210 13:18:10.602"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:18:10.610" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:18:10.610" starttime="20210210 13:18:10.610"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:18:10.611" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:18:10.611" starttime="20210210 13:18:10.610"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.611" starttime="20210210 13:18:10.610"></status>
</kw>
<msg timestamp="20210210 13:18:10.611" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:18:10.611" starttime="20210210 13:18:10.609"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:18:10.613" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 13:18:10.613" starttime="20210210 13:18:10.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:18:10.613" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 13:18:10.613" starttime="20210210 13:18:10.613"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.613" starttime="20210210 13:18:10.612"></status>
</kw>
<msg timestamp="20210210 13:18:10.613" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 13:18:10.613" starttime="20210210 13:18:10.611"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.614" starttime="20210210 13:18:10.609"></status>
</kw>
<msg timestamp="20210210 13:18:10.614" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 13:18:10.614" starttime="20210210 13:18:10.608"></status>
</kw>
<msg timestamp="20210210 13:18:10.614" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 13:18:10.614" starttime="20210210 13:18:10.608"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:18:10.617" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:18:10.617" starttime="20210210 13:18:10.617"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:18:10.617" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:18:10.618" starttime="20210210 13:18:10.617"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.618" starttime="20210210 13:18:10.616"></status>
</kw>
<msg timestamp="20210210 13:18:10.618" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:18:10.618" starttime="20210210 13:18:10.616"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:18:10.619" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 13:18:10.619" starttime="20210210 13:18:10.619"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:18:10.620" level="INFO">${result} = /wordcount-PrO7GN3c.txt</msg>
<status status="PASS" endtime="20210210 13:18:10.620" starttime="20210210 13:18:10.619"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.620" starttime="20210210 13:18:10.618"></status>
</kw>
<msg timestamp="20210210 13:18:10.620" level="INFO">${path_with_leading} = /wordcount-PrO7GN3c.txt</msg>
<status status="PASS" endtime="20210210 13:18:10.620" starttime="20210210 13:18:10.618"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:10.620" starttime="20210210 13:18:10.615"></status>
</kw>
<msg timestamp="20210210 13:18:10.620" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-PrO7GN3c.txt</msg>
<status status="PASS" endtime="20210210 13:18:10.620" starttime="20210210 13:18:10.615"></status>
</kw>
<msg timestamp="20210210 13:18:10.620" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-PrO7GN3c.txt</msg>
<status status="PASS" endtime="20210210 13:18:10.620" starttime="20210210 13:18:10.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:18:10.624" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-PrO7GN3c.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:18:42.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:18:42.303" level="INFO">${output} = 2021-02-10 13:18:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:18:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 13:18:42.303" starttime="20210210 13:18:10.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:18:42.304" level="INFO">2021-02-10 13:18:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:18:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:18:12 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:18:12 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 13:18:12 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 13:18:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:18:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1B0A72175E96-&gt;7876cb13-efd0-4684-9088-504c2b6f4a4b
2021-02-10 13:18:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:18:16 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 13:18:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-08E079AA819E-&gt;812f1498-6fd1-43b3-94e7-a21f497b2963
2021-02-10 13:18:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:18:16 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 13:18:16 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612962901927_0004
2021-02-10 13:18:16 INFO  YarnClientImpl:273 - Submitted application application_1612962901927_0004
2021-02-10 13:18:16 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612962901927_0004/
2021-02-10 13:18:16 INFO  Job:1339 - Running job: job_1612962901927_0004
2021-02-10 13:18:22 INFO  Job:1360 - Job job_1612962901927_0004 running in uber mode : false
2021-02-10 13:18:22 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 13:18:28 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 13:18:33 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 13:18:37 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 13:18:40 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 13:18:41 INFO  Job:1378 - Job job_1612962901927_0004 completed successfully
2021-02-10 13:18:41 INFO  Job:1385 - Counters: 50
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674635
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34804
		Total time spent by all reduces in occupied slots (ms)=12632
		Total time spent by all map tasks (ms)=8701
		Total time spent by all reduce tasks (ms)=3158
		Total vcore-milliseconds taken by all map tasks=8701
		Total vcore-milliseconds taken by all reduce tasks=3158
		Total megabyte-milliseconds taken by all map tasks=35639296
		Total megabyte-milliseconds taken by all reduce tasks=12935168
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=554
		CPU time spent (ms)=6010
		Physical memory (bytes) snapshot=1153118208
		Virtual memory (bytes) snapshot=15763398656
		Total committed heap usage (bytes)=1059061760
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 13:18:42.304" starttime="20210210 13:18:42.303"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:18:42.305" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:18:42.305" starttime="20210210 13:18:42.305"></status>
</kw>
<status status="PASS" endtime="20210210 13:18:42.305" starttime="20210210 13:18:10.621"></status>
</kw>
<msg timestamp="20210210 13:18:42.305" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:18:42.305" starttime="20210210 13:18:10.621"></status>
</kw>
<msg timestamp="20210210 13:18:42.306" level="INFO">${output} = 2021-02-10 13:18:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:18:12 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 13:18:42.306" starttime="20210210 13:18:10.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 13:18:42.306" starttime="20210210 13:18:42.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:18:42.307" starttime="20210210 13:18:42.306"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:18:42.307" critical="yes" starttime="20210210 13:18:10.590"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 13:18:42.308" starttime="20210210 13:17:33.477"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:16:13.468" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:16:13.474" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:16:13.474" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:13.474" starttime="20210210 13:16:13.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:16:13.475" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:13.475" starttime="20210210 13:16:13.475"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:16:13.476" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:16:13.476" starttime="20210210 13:16:13.475"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:13.476" starttime="20210210 13:16:13.465"></status>
</kw>
<msg timestamp="20210210 13:16:13.476" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:16:13.476" starttime="20210210 13:16:13.465"></status>
</kw>
<msg timestamp="20210210 13:16:13.477" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:13.477" starttime="20210210 13:16:13.464"></status>
</kw>
<msg timestamp="20210210 13:16:13.477" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:13.477" starttime="20210210 13:16:13.464"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:16:13.481" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:16:13.481" starttime="20210210 13:16:13.481"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:16:13.481" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:16:13.481" starttime="20210210 13:16:13.481"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:13.482" starttime="20210210 13:16:13.480"></status>
</kw>
<msg timestamp="20210210 13:16:13.482" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:16:13.482" starttime="20210210 13:16:13.480"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:13.482" starttime="20210210 13:16:13.479"></status>
</kw>
<msg timestamp="20210210 13:16:13.482" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:16:13.482" starttime="20210210 13:16:13.478"></status>
</kw>
<msg timestamp="20210210 13:16:13.482" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:16:13.482" starttime="20210210 13:16:13.477"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:16:13.486" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:16:49.176" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:16:49.176" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:16:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:15 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 13:16:49.176" starttime="20210210 13:16:13.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:16:49.177" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:16:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:15 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 13:16:15 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 13:16:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:16:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EAC1A92E135F-&gt;812f1498-6fd1-43b3-94e7-a21f497b2963
2021-02-10 13:16:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 13:16:18 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:16:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5E989CC52421-&gt;7876cb13-efd0-4684-9088-504c2b6f4a4b
2021-02-10 13:16:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:16:19 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 13:16:19 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 13:16:19 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612962901927_0001
2021-02-10 13:16:20 INFO  YarnClientImpl:273 - Submitted application application_1612962901927_0001
2021-02-10 13:16:20 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612962901927_0001/
2021-02-10 13:16:20 INFO  Job:1339 - Running job: job_1612962901927_0001
2021-02-10 13:16:29 INFO  Job:1360 - Job job_1612962901927_0001 running in uber mode : false
2021-02-10 13:16:29 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 13:16:35 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 13:16:39 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 13:16:43 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 13:16:47 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 13:16:48 INFO  Job:1378 - Job job_1612962901927_0001 completed successfully
2021-02-10 13:16:48 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612085
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=34628
		Total time spent by all reduces in occupied slots (ms)=14692
		Total time spent by all map tasks (ms)=8657
		Total time spent by all reduce tasks (ms)=3673
		Total vcore-milliseconds taken by all map tasks=8657
		Total vcore-milliseconds taken by all reduce tasks=3673
		Total megabyte-milliseconds taken by all map tasks=35459072
		Total megabyte-milliseconds taken by all reduce tasks=15044608
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=552
		CPU time spent (ms)=5700
		Physical memory (bytes) snapshot=1155383296
		Virtual memory (bytes) snapshot=15761047552
		Total committed heap usage (bytes)=1055916032
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 29.85 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 13:16:49.178" starttime="20210210 13:16:49.177"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:16:49.178" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:16:49.178" starttime="20210210 13:16:49.178"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.179" starttime="20210210 13:16:13.483"></status>
</kw>
<msg timestamp="20210210 13:16:49.179" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:16:49.179" starttime="20210210 13:16:13.483"></status>
</kw>
<msg timestamp="20210210 13:16:49.179" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:16:15 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:15 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 13:16:49.179" starttime="20210210 13:16:13.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:16:49.180" starttime="20210210 13:16:49.179"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:16:49.180" critical="yes" starttime="20210210 13:16:13.463"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:16:49.184" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:16:49.199" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:16:49.199" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:49.199" starttime="20210210 13:16:49.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:16:49.201" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:49.201" starttime="20210210 13:16:49.200"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:16:49.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:16:49.202" starttime="20210210 13:16:49.201"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.202" starttime="20210210 13:16:49.182"></status>
</kw>
<msg timestamp="20210210 13:16:49.202" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:16:49.202" starttime="20210210 13:16:49.182"></status>
</kw>
<msg timestamp="20210210 13:16:49.202" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:49.202" starttime="20210210 13:16:49.182"></status>
</kw>
<msg timestamp="20210210 13:16:49.202" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 13:16:49.202" starttime="20210210 13:16:49.181"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:16:49.203" level="INFO">${random} = unSTt2Xx</msg>
<status status="PASS" endtime="20210210 13:16:49.203" starttime="20210210 13:16:49.203"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:16:49.206" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:16:49.206" starttime="20210210 13:16:49.206"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:16:49.207" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:16:49.207" starttime="20210210 13:16:49.207"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.207" starttime="20210210 13:16:49.205"></status>
</kw>
<msg timestamp="20210210 13:16:49.207" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:16:49.207" starttime="20210210 13:16:49.205"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.208" starttime="20210210 13:16:49.204"></status>
</kw>
<msg timestamp="20210210 13:16:49.208" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:16:49.208" starttime="20210210 13:16:49.204"></status>
</kw>
<msg timestamp="20210210 13:16:49.208" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:16:49.208" starttime="20210210 13:16:49.203"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:16:49.211" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:16:49.211" starttime="20210210 13:16:49.211"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:16:49.212" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:16:49.212" starttime="20210210 13:16:49.211"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.212" starttime="20210210 13:16:49.210"></status>
</kw>
<msg timestamp="20210210 13:16:49.212" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:16:49.212" starttime="20210210 13:16:49.210"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.212" starttime="20210210 13:16:49.209"></status>
</kw>
<msg timestamp="20210210 13:16:49.212" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:16:49.212" starttime="20210210 13:16:49.209"></status>
</kw>
<msg timestamp="20210210 13:16:49.212" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:16:49.212" starttime="20210210 13:16:49.208"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:16:49.215" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:16:49.215" starttime="20210210 13:16:49.215"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:16:49.216" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:16:49.216" starttime="20210210 13:16:49.215"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.216" starttime="20210210 13:16:49.214"></status>
</kw>
<msg timestamp="20210210 13:16:49.216" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:16:49.216" starttime="20210210 13:16:49.214"></status>
</kw>
<status status="PASS" endtime="20210210 13:16:49.216" starttime="20210210 13:16:49.214"></status>
</kw>
<msg timestamp="20210210 13:16:49.216" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-unSTt2Xx.txt</msg>
<status status="PASS" endtime="20210210 13:16:49.217" starttime="20210210 13:16:49.213"></status>
</kw>
<msg timestamp="20210210 13:16:49.217" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-unSTt2Xx.txt</msg>
<status status="PASS" endtime="20210210 13:16:49.217" starttime="20210210 13:16:49.213"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:16:49.220" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-unSTt2Xx.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:17:20.573" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:17:20.573" level="INFO">${output} = 2021-02-10 13:16:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:16:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 13:17:20.573" starttime="20210210 13:16:49.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:17:20.574" level="INFO">2021-02-10 13:16:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:16:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:16:51 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:16:51 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 13:16:51 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 13:16:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:16:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-740AD1899E7C-&gt;812f1498-6fd1-43b3-94e7-a21f497b2963
2021-02-10 13:16:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:16:52 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 13:16:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A5F7D0A67070-&gt;7876cb13-efd0-4684-9088-504c2b6f4a4b
2021-02-10 13:16:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:16:52 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 13:16:52 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612962901927_0002
2021-02-10 13:16:52 INFO  YarnClientImpl:273 - Submitted application application_1612962901927_0002
2021-02-10 13:16:52 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612962901927_0002/
2021-02-10 13:16:52 INFO  Job:1339 - Running job: job_1612962901927_0002
2021-02-10 13:17:00 INFO  Job:1360 - Job job_1612962901927_0002 running in uber mode : false
2021-02-10 13:17:00 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 13:17:07 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 13:17:12 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 13:17:16 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 13:17:19 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 13:17:20 INFO  Job:1378 - Job job_1612962901927_0002 completed successfully
2021-02-10 13:17:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35984
		Total time spent by all reduces in occupied slots (ms)=13248
		Total time spent by all map tasks (ms)=8996
		Total time spent by all reduce tasks (ms)=3312
		Total vcore-milliseconds taken by all map tasks=8996
		Total vcore-milliseconds taken by all reduce tasks=3312
		Total megabyte-milliseconds taken by all map tasks=36847616
		Total megabyte-milliseconds taken by all reduce tasks=13565952
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=595
		CPU time spent (ms)=6740
		Physical memory (bytes) snapshot=1209602048
		Virtual memory (bytes) snapshot=15807156224
		Total committed heap usage (bytes)=1050673152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 13:17:20.574" starttime="20210210 13:17:20.573"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:17:20.575" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:17:20.575" starttime="20210210 13:17:20.574"></status>
</kw>
<status status="PASS" endtime="20210210 13:17:20.575" starttime="20210210 13:16:49.218"></status>
</kw>
<msg timestamp="20210210 13:17:20.575" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:17:20.575" starttime="20210210 13:16:49.217"></status>
</kw>
<msg timestamp="20210210 13:17:20.575" level="INFO">${output} = 2021-02-10 13:16:50 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.7:8032
2021-02-10 13:16:51 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 13:17:20.575" starttime="20210210 13:16:49.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 13:17:20.576" starttime="20210210 13:17:20.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:17:20.576" starttime="20210210 13:17:20.576"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:17:20.577" critical="yes" starttime="20210210 13:16:49.180"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 13:17:20.578" starttime="20210210 13:16:13.417"></status>
</suite>
<status status="PASS" elapsedtime="172287" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:44.883" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:19:47.270" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:19:47.270" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:19:47.270" starttime="20210210 13:19:44.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:19:47.271" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:19:47.271" starttime="20210210 13:19:47.270"></status>
</kw>
<msg timestamp="20210210 13:19:47.271" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:19:47.271" starttime="20210210 13:19:44.878"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:47.283" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:19:49.422" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:19:49.422" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:19:49.422" starttime="20210210 13:19:47.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:19:49.423" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:19:49.423" starttime="20210210 13:19:49.423"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:19:49.424" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:19:49.424" starttime="20210210 13:19:49.424"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:49.424" starttime="20210210 13:19:47.276"></status>
</kw>
<msg timestamp="20210210 13:19:49.424" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:19:49.425" starttime="20210210 13:19:47.275"></status>
</kw>
<msg timestamp="20210210 13:19:49.425" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 13:19:49.425" starttime="20210210 13:19:47.275"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:19:49.425" starttime="20210210 13:19:49.425"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:49.425" starttime="20210210 13:19:47.274"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:49.425" starttime="20210210 13:19:47.271"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:49.433" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:19:51.241" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:19:51.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:19:51.242" starttime="20210210 13:19:49.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:19:51.243" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:19:51.243" starttime="20210210 13:19:51.242"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:19:51.244" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:19:51.244" starttime="20210210 13:19:51.243"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:51.244" starttime="20210210 13:19:49.429"></status>
</kw>
<msg timestamp="20210210 13:19:51.244" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:19:51.244" starttime="20210210 13:19:49.429"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:51.244" starttime="20210210 13:19:49.428"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:51.244" starttime="20210210 13:19:49.428"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:51.244" starttime="20210210 13:19:49.426"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 13:19:51.245" starttime="20210210 13:19:51.245"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:51.248" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:19:53.332" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:19:53.332" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:19...</msg>
<status status="PASS" endtime="20210210 13:19:53.332" starttime="20210210 13:19:51.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:19:53.333" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:19:51.207Z",
  "modificationTime" : "2021-02-10T13:19:51.207Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:19:53.333" starttime="20210210 13:19:53.332"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:19:53.334" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:19:53.334" starttime="20210210 13:19:53.333"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:53.334" starttime="20210210 13:19:51.246"></status>
</kw>
<msg timestamp="20210210 13:19:53.334" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:19:53.334" starttime="20210210 13:19:51.246"></status>
</kw>
<msg timestamp="20210210 13:19:53.335" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:19...</msg>
<status status="PASS" endtime="20210210 13:19:53.335" starttime="20210210 13:19:51.245"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 13:19:53.335" starttime="20210210 13:19:53.335"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:19:53.339" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:19:53.339" starttime="20210210 13:19:53.338"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:19:53.339" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:19:53.339" starttime="20210210 13:19:53.339"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:53.339" starttime="20210210 13:19:53.338"></status>
</kw>
<msg timestamp="20210210 13:19:53.340" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:19:53.340" starttime="20210210 13:19:53.337"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:53.340" starttime="20210210 13:19:53.337"></status>
</kw>
<msg timestamp="20210210 13:19:53.340" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:19:53.340" starttime="20210210 13:19:53.336"></status>
</kw>
<msg timestamp="20210210 13:19:53.340" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:19:53.340" starttime="20210210 13:19:53.335"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:53.343" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:19:55.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:19:55.232" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:19:55.233" starttime="20210210 13:19:53.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:19:55.234" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:19:55.234" starttime="20210210 13:19:55.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:19:55.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:19:55.234" starttime="20210210 13:19:55.234"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:55.235" starttime="20210210 13:19:53.341"></status>
</kw>
<msg timestamp="20210210 13:19:55.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:19:55.235" starttime="20210210 13:19:53.341"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:55.235" starttime="20210210 13:19:53.340"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:55.238" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:19:59.739" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:19:59.739" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:19:59.739" starttime="20210210 13:19:55.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:19:59.740" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:19:59.740" starttime="20210210 13:19:59.739"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:19:59.740" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:19:59.741" starttime="20210210 13:19:59.740"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:59.741" starttime="20210210 13:19:55.236"></status>
</kw>
<msg timestamp="20210210 13:19:59.741" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:19:59.741" starttime="20210210 13:19:55.236"></status>
</kw>
<status status="PASS" endtime="20210210 13:19:59.741" starttime="20210210 13:19:55.235"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:19:59.744" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:03.421" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:03.421" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:20:03.421" starttime="20210210 13:19:59.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:03.422" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:20:03.422" starttime="20210210 13:20:03.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:03.423" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:03.423" starttime="20210210 13:20:03.422"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:03.423" starttime="20210210 13:19:59.742"></status>
</kw>
<msg timestamp="20210210 13:20:03.423" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:03.423" starttime="20210210 13:19:59.742"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:03.423" starttime="20210210 13:19:59.741"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:03.427" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:06.585" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:06.585" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:20:06.585" starttime="20210210 13:20:03.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:06.586" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:20:06.586" starttime="20210210 13:20:06.585"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:06.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:06.587" starttime="20210210 13:20:06.586"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:06.587" starttime="20210210 13:20:03.424"></status>
</kw>
<msg timestamp="20210210 13:20:06.587" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:06.587" starttime="20210210 13:20:03.424"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:06.587" starttime="20210210 13:20:03.424"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:20:06.587" critical="yes" starttime="20210210 13:19:44.878"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:20:06.593" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:20:06.593" starttime="20210210 13:20:06.593"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:20:06.594" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:20:06.594" starttime="20210210 13:20:06.593"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:06.594" starttime="20210210 13:20:06.592"></status>
</kw>
<msg timestamp="20210210 13:20:06.594" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:20:06.594" starttime="20210210 13:20:06.592"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:06.594" starttime="20210210 13:20:06.591"></status>
</kw>
<msg timestamp="20210210 13:20:06.594" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:20:06.594" starttime="20210210 13:20:06.590"></status>
</kw>
<msg timestamp="20210210 13:20:06.595" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:20:06.595" starttime="20210210 13:20:06.590"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:06.598" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:08.418" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:08.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:20:08.418" starttime="20210210 13:20:06.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:08.419" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:20:08.420" starttime="20210210 13:20:08.419"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:08.420" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:08.420" starttime="20210210 13:20:08.420"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:08.421" starttime="20210210 13:20:06.595"></status>
</kw>
<msg timestamp="20210210 13:20:08.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:08.421" starttime="20210210 13:20:06.595"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:08.421" starttime="20210210 13:20:06.595"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:08.424" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:10.391" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:10.391" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:20:10.391" starttime="20210210 13:20:08.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:10.392" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:20:10.392" starttime="20210210 13:20:10.391"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:10.393" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:10.393" starttime="20210210 13:20:10.392"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:10.393" starttime="20210210 13:20:08.422"></status>
</kw>
<msg timestamp="20210210 13:20:10.393" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:10.393" starttime="20210210 13:20:08.422"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:10.393" starttime="20210210 13:20:08.421"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:20:10.394" critical="yes" starttime="20210210 13:20:06.589"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 13:20:10.395" starttime="20210210 13:19:44.830"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:21:38.011" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:21:38.011" starttime="20210210 13:21:38.011"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:21:38.012" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:21:38.012" starttime="20210210 13:21:38.011"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:38.012" starttime="20210210 13:21:38.010"></status>
</kw>
<msg timestamp="20210210 13:21:38.012" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:21:38.012" starttime="20210210 13:21:38.010"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:21:38.013" starttime="20210210 13:21:38.012"></status>
</kw>
<msg timestamp="20210210 13:21:38.013" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:21:38.013" starttime="20210210 13:21:38.012"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:38.013" starttime="20210210 13:21:38.009"></status>
</kw>
<msg timestamp="20210210 13:21:38.013" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:21:38.013" starttime="20210210 13:21:38.009"></status>
</kw>
<msg timestamp="20210210 13:21:38.013" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:21:38.013" starttime="20210210 13:21:38.008"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:21:38.014" level="INFO">${random} = 76155</msg>
<status status="PASS" endtime="20210210 13:21:38.014" starttime="20210210 13:21:38.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:21:38.019" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-76155 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:21:43.714" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:21:43.714" level="INFO">${output} = 2021-02-10 13:21:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:21:43.714" starttime="20210210 13:21:38.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:21:43.716" level="INFO">2021-02-10 13:21:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:39 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 13:21:39 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:21:39 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:21:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:21:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:21:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8D6125A0EEDE-&gt;3645d0c0-a0a1-48a6-a816-b03559603fa4
2021-02-10 13:21:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:21:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:21:43.716" starttime="20210210 13:21:43.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:21:43.716" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:21:43.716" starttime="20210210 13:21:43.716"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:43.716" starttime="20210210 13:21:38.015"></status>
</kw>
<msg timestamp="20210210 13:21:43.717" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:21:43.717" starttime="20210210 13:21:38.015"></status>
</kw>
<msg timestamp="20210210 13:21:43.717" level="INFO">${result} = 2021-02-10 13:21:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:38 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:21:43.717" starttime="20210210 13:21:38.014"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:21:43.720" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:21:45.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:21:45.488" level="INFO">${output} = 2021-02-10 13:21:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:21:45.488" starttime="20210210 13:21:43.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:21:45.489" level="INFO">2021-02-10 13:21:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:45 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:19 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-10 13:21 ofs://om/volume1/bucket1/ozone-76155
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-10 13:20 ofs://om/volume1/bucket1/ozone-79635
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:20 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:21 ofs://om/volume1/bucket1/wordcount-uUeRNx2v.txt
2021-02-10 13:21:45 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:21:45.489" starttime="20210210 13:21:45.488"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:21:45.490" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:21:45.490" starttime="20210210 13:21:45.489"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:45.490" starttime="20210210 13:21:43.718"></status>
</kw>
<msg timestamp="20210210 13:21:45.490" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:21:45.490" starttime="20210210 13:21:43.718"></status>
</kw>
<msg timestamp="20210210 13:21:45.490" level="INFO">${result} = 2021-02-10 13:21:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:44 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:21:45.490" starttime="20210210 13:21:43.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:21:45.491" starttime="20210210 13:21:45.490"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:21:45.491" critical="yes" starttime="20210210 13:21:38.007"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:21:45.492" starttime="20210210 13:21:37.961"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:20:14.396" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:20:14.396" starttime="20210210 13:20:14.395"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:20:14.396" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:20:14.396" starttime="20210210 13:20:14.396"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:14.396" starttime="20210210 13:20:14.395"></status>
</kw>
<msg timestamp="20210210 13:20:14.396" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:20:14.396" starttime="20210210 13:20:14.394"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:14.397" starttime="20210210 13:20:14.394"></status>
</kw>
<msg timestamp="20210210 13:20:14.397" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:20:14.397" starttime="20210210 13:20:14.393"></status>
</kw>
<msg timestamp="20210210 13:20:14.397" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:20:14.397" starttime="20210210 13:20:14.392"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:20:14.397" level="INFO">${random} = 79635</msg>
<status status="PASS" endtime="20210210 13:20:14.397" starttime="20210210 13:20:14.397"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:14.402" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-79635 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:17.819" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:17.820" level="INFO">${output} = 2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:20:17.820" starttime="20210210 13:20:14.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:17.822" level="INFO">2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:16 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 13:20:16 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:20:16 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:20:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:20:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:20:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CE08E91EEA72-&gt;3645d0c0-a0a1-48a6-a816-b03559603fa4
2021-02-10 13:20:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:20:17 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:20:17.822" starttime="20210210 13:20:17.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:17.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:17.823" starttime="20210210 13:20:17.822"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:17.823" starttime="20210210 13:20:14.398"></status>
</kw>
<msg timestamp="20210210 13:20:17.823" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:17.823" starttime="20210210 13:20:14.398"></status>
</kw>
<msg timestamp="20210210 13:20:17.823" level="INFO">${result} = 2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:15 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:20:17.823" starttime="20210210 13:20:14.398"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:17.826" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:19.411" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:19.411" level="INFO">${output} = 2021-02-10 13:20:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:20:19.411" starttime="20210210 13:20:17.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:19.413" level="INFO">2021-02-10 13:20:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:19 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:19 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-10 13:20 o3fs://bucket1.volume1.om/ozone-79635
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:20 o3fs://bucket1.volume1.om/user
2021-02-10 13:20:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:20:19.413" starttime="20210210 13:20:19.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:19.413" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:19.413" starttime="20210210 13:20:19.413"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:19.414" starttime="20210210 13:20:17.824"></status>
</kw>
<msg timestamp="20210210 13:20:19.414" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:19.414" starttime="20210210 13:20:17.824"></status>
</kw>
<msg timestamp="20210210 13:20:19.414" level="INFO">${result} = 2021-02-10 13:20:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:18 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:19 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:20:19.414" starttime="20210210 13:20:17.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:20:19.415" starttime="20210210 13:20:19.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:20:19.415" critical="yes" starttime="20210210 13:20:14.391"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:20:19.416" starttime="20210210 13:20:14.344"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:21:49.533" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:21:49.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:21:49.539" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:49.540" starttime="20210210 13:21:49.530"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:21:49.540" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:49.541" starttime="20210210 13:21:49.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:21:49.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:21:49.541" starttime="20210210 13:21:49.541"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:49.541" starttime="20210210 13:21:49.530"></status>
</kw>
<msg timestamp="20210210 13:21:49.541" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:21:49.541" starttime="20210210 13:21:49.529"></status>
</kw>
<msg timestamp="20210210 13:21:49.542" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:49.542" starttime="20210210 13:21:49.529"></status>
</kw>
<msg timestamp="20210210 13:21:49.542" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:49.542" starttime="20210210 13:21:49.529"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:21:49.546" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:21:49.546" starttime="20210210 13:21:49.546"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:21:49.547" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:21:49.547" starttime="20210210 13:21:49.546"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:49.547" starttime="20210210 13:21:49.545"></status>
</kw>
<msg timestamp="20210210 13:21:49.547" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:21:49.547" starttime="20210210 13:21:49.545"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:21:49.548" starttime="20210210 13:21:49.547"></status>
</kw>
<msg timestamp="20210210 13:21:49.548" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:21:49.548" starttime="20210210 13:21:49.547"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:49.548" starttime="20210210 13:21:49.544"></status>
</kw>
<msg timestamp="20210210 13:21:49.548" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:21:49.548" starttime="20210210 13:21:49.543"></status>
</kw>
<msg timestamp="20210210 13:21:49.548" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:21:49.548" starttime="20210210 13:21:49.542"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:21:49.551" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:22:30.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:22:30.068" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:21:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21...</msg>
<status status="PASS" endtime="20210210 13:22:30.069" starttime="20210210 13:21:49.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:22:30.070" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:21:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:51 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 13:21:51 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:21:51 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:21:51 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:21:51 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:21:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E517509A8695-&gt;1f57bd05-d239-48cc-a6f9-70d57777de4c
2021-02-10 13:21:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-10 13:21:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EF552509F254-&gt;3645d0c0-a0a1-48a6-a816-b03559603fa4
2021-02-10 13:21:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-10 13:21:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-10 13:21:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:21:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:55 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:21:55 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:21:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963163058_0003
2021-02-10 13:21:55 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:21:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:55 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 13:21:55 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 13:21:56 INFO  YarnClientImpl:324 - Submitted application application_1612963163058_0003
2021-02-10 13:21:56 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612963163058_0003/
2021-02-10 13:21:56 INFO  Job:1619 - Running job: job_1612963163058_0003
2021-02-10 13:22:03 INFO  Job:1640 - Job job_1612963163058_0003 running in uber mode : false
2021-02-10 13:22:03 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 13:22:09 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 13:22:14 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 13:22:19 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 13:22:26 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 13:22:29 INFO  Job:1658 - Job job_1612963163058_0003 completed successfully
2021-02-10 13:22:29 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:29 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017465
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35624
		Total time spent by all reduces in occupied slots (ms)=23412
		Total time spent by all map tasks (ms)=8906
		Total time spent by all reduce tasks (ms)=5853
		Total vcore-milliseconds taken by all map tasks=8906
		Total vcore-milliseconds taken by all reduce tasks=5853
		Total megabyte-milliseconds taken by all map tasks=36478976
		Total megabyte-milliseconds taken by all reduce tasks=23973888
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=579
		CPU time spent (ms)=5740
		Physical memory (bytes) snapshot=1240231936
		Virtual memory (bytes) snapshot=15789961216
		Total committed heap usage (bytes)=1079508992
		Peak Map Physical memory (bytes)=320217088
		Peak Map Virtual memory (bytes)=3948994560
		Peak Reduce Physical memory (bytes)=308633600
		Peak Reduce Virtual memory (bytes)=3966685184
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.6 seconds
2021-02-10 13:22:29 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-10 13:22:29 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:22:30.070" starttime="20210210 13:22:30.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:22:30.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:22:30.070" starttime="20210210 13:22:30.070"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.071" starttime="20210210 13:21:49.549"></status>
</kw>
<msg timestamp="20210210 13:22:30.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:22:30.071" starttime="20210210 13:21:49.549"></status>
</kw>
<msg timestamp="20210210 13:22:30.071" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:21:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:50 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21...</msg>
<status status="PASS" endtime="20210210 13:22:30.071" starttime="20210210 13:21:49.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:22:30.072" starttime="20210210 13:22:30.072"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:22:30.072" critical="yes" starttime="20210210 13:21:49.528"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:22:30.077" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:22:30.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:22:30.082" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:22:30.082" starttime="20210210 13:22:30.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:22:30.083" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:22:30.083" starttime="20210210 13:22:30.082"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:22:30.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:22:30.083" starttime="20210210 13:22:30.083"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.084" starttime="20210210 13:22:30.075"></status>
</kw>
<msg timestamp="20210210 13:22:30.084" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:22:30.084" starttime="20210210 13:22:30.074"></status>
</kw>
<msg timestamp="20210210 13:22:30.084" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:22:30.084" starttime="20210210 13:22:30.074"></status>
</kw>
<msg timestamp="20210210 13:22:30.084" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:22:30.084" starttime="20210210 13:22:30.074"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:22:30.085" level="INFO">${random} = Qai4FDI0</msg>
<status status="PASS" endtime="20210210 13:22:30.085" starttime="20210210 13:22:30.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:22:30.088" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:22:30.088" starttime="20210210 13:22:30.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:22:30.088" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:22:30.089" starttime="20210210 13:22:30.088"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.089" starttime="20210210 13:22:30.087"></status>
</kw>
<msg timestamp="20210210 13:22:30.089" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:22:30.089" starttime="20210210 13:22:30.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:22:30.090" starttime="20210210 13:22:30.089"></status>
</kw>
<msg timestamp="20210210 13:22:30.090" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:22:30.090" starttime="20210210 13:22:30.089"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.090" starttime="20210210 13:22:30.086"></status>
</kw>
<msg timestamp="20210210 13:22:30.090" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:22:30.090" starttime="20210210 13:22:30.086"></status>
</kw>
<msg timestamp="20210210 13:22:30.090" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:22:30.090" starttime="20210210 13:22:30.085"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:22:30.093" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:22:30.093" starttime="20210210 13:22:30.093"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:22:30.094" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:22:30.094" starttime="20210210 13:22:30.093"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.094" starttime="20210210 13:22:30.093"></status>
</kw>
<msg timestamp="20210210 13:22:30.094" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:22:30.094" starttime="20210210 13:22:30.092"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:22:30.095" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 13:22:30.095" starttime="20210210 13:22:30.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:22:30.096" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 13:22:30.096" starttime="20210210 13:22:30.096"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.096" starttime="20210210 13:22:30.095"></status>
</kw>
<msg timestamp="20210210 13:22:30.096" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 13:22:30.096" starttime="20210210 13:22:30.094"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.097" starttime="20210210 13:22:30.091"></status>
</kw>
<msg timestamp="20210210 13:22:30.097" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 13:22:30.097" starttime="20210210 13:22:30.091"></status>
</kw>
<msg timestamp="20210210 13:22:30.097" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 13:22:30.097" starttime="20210210 13:22:30.090"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:22:30.100" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:22:30.100" starttime="20210210 13:22:30.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:22:30.100" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:22:30.100" starttime="20210210 13:22:30.100"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.100" starttime="20210210 13:22:30.099"></status>
</kw>
<msg timestamp="20210210 13:22:30.100" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:22:30.100" starttime="20210210 13:22:30.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:22:30.102" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 13:22:30.102" starttime="20210210 13:22:30.101"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:22:30.102" level="INFO">${result} = /wordcount-Qai4FDI0.txt</msg>
<status status="PASS" endtime="20210210 13:22:30.102" starttime="20210210 13:22:30.102"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.102" starttime="20210210 13:22:30.101"></status>
</kw>
<msg timestamp="20210210 13:22:30.103" level="INFO">${path_with_leading} = /wordcount-Qai4FDI0.txt</msg>
<status status="PASS" endtime="20210210 13:22:30.103" starttime="20210210 13:22:30.101"></status>
</kw>
<status status="PASS" endtime="20210210 13:22:30.103" starttime="20210210 13:22:30.098"></status>
</kw>
<msg timestamp="20210210 13:22:30.103" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-Qai4FDI0.txt</msg>
<status status="PASS" endtime="20210210 13:22:30.103" starttime="20210210 13:22:30.098"></status>
</kw>
<msg timestamp="20210210 13:22:30.103" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-Qai4FDI0.txt</msg>
<status status="PASS" endtime="20210210 13:22:30.103" starttime="20210210 13:22:30.097"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:22:30.106" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-Qai4FDI0.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:23:03.708" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:23:03.708" level="INFO">${output} = 2021-02-10 13:22:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:23:03.708" starttime="20210210 13:22:30.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:23:03.709" level="INFO">2021-02-10 13:22:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:32 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 13:22:32 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:22:32 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:22:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:22:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:22:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BF89FA96C17A-&gt;3645d0c0-a0a1-48a6-a816-b03559603fa4
2021-02-10 13:22:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:22:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:22:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-09D5508E1B92-&gt;1f57bd05-d239-48cc-a6f9-70d57777de4c
2021-02-10 13:22:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:22:33 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:22:33 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963163058_0004
2021-02-10 13:22:33 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:22:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:33 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 13:22:33 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 13:22:33 INFO  YarnClientImpl:324 - Submitted application application_1612963163058_0004
2021-02-10 13:22:33 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612963163058_0004/
2021-02-10 13:22:33 INFO  Job:1619 - Running job: job_1612963163058_0004
2021-02-10 13:22:42 INFO  Job:1640 - Job job_1612963163058_0004 running in uber mode : false
2021-02-10 13:22:42 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 13:22:48 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 13:22:53 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 13:22:57 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 13:23:02 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 13:23:03 INFO  Job:1658 - Job job_1612963163058_0004 completed successfully
2021-02-10 13:23:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:23:03 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080147
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36256
		Total time spent by all reduces in occupied slots (ms)=13592
		Total time spent by all map tasks (ms)=9064
		Total time spent by all reduce tasks (ms)=3398
		Total vcore-milliseconds taken by all map tasks=9064
		Total vcore-milliseconds taken by all reduce tasks=3398
		Total megabyte-milliseconds taken by all map tasks=37126144
		Total megabyte-milliseconds taken by all reduce tasks=13918208
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=552
		CPU time spent (ms)=6360
		Physical memory (bytes) snapshot=1269043200
		Virtual memory (bytes) snapshot=15808684032
		Total committed heap usage (bytes)=1070071808
		Peak Map Physical memory (bytes)=325271552
		Peak Map Virtual memory (bytes)=3945594880
		Peak Reduce Physical memory (bytes)=307019776
		Peak Reduce Virtual memory (bytes)=3972984832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-10 13:23:03 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:23:03.709" starttime="20210210 13:23:03.709"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:23:03.710" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:23:03.710" starttime="20210210 13:23:03.710"></status>
</kw>
<status status="PASS" endtime="20210210 13:23:03.710" starttime="20210210 13:22:30.104"></status>
</kw>
<msg timestamp="20210210 13:23:03.710" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:23:03.711" starttime="20210210 13:22:30.104"></status>
</kw>
<msg timestamp="20210210 13:23:03.711" level="INFO">${output} = 2021-02-10 13:22:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:22:31 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:23:03.711" starttime="20210210 13:22:30.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 13:23:03.712" starttime="20210210 13:23:03.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:23:03.712" starttime="20210210 13:23:03.712"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:23:03.712" critical="yes" starttime="20210210 13:22:30.073"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 13:23:03.713" starttime="20210210 13:21:49.482"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:23.414" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:20:23.420" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:20:23.420" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:20:23.420" starttime="20210210 13:20:23.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:20:23.421" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:20:23.421" starttime="20210210 13:20:23.421"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:20:23.422" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:20:23.422" starttime="20210210 13:20:23.421"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:23.422" starttime="20210210 13:20:23.411"></status>
</kw>
<msg timestamp="20210210 13:20:23.422" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:20:23.422" starttime="20210210 13:20:23.410"></status>
</kw>
<msg timestamp="20210210 13:20:23.422" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:20:23.423" starttime="20210210 13:20:23.410"></status>
</kw>
<msg timestamp="20210210 13:20:23.423" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:20:23.423" starttime="20210210 13:20:23.410"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:20:23.427" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:20:23.427" starttime="20210210 13:20:23.427"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:20:23.428" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:20:23.428" starttime="20210210 13:20:23.428"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:23.428" starttime="20210210 13:20:23.427"></status>
</kw>
<msg timestamp="20210210 13:20:23.428" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:20:23.428" starttime="20210210 13:20:23.426"></status>
</kw>
<status status="PASS" endtime="20210210 13:20:23.428" starttime="20210210 13:20:23.426"></status>
</kw>
<msg timestamp="20210210 13:20:23.429" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:20:23.429" starttime="20210210 13:20:23.424"></status>
</kw>
<msg timestamp="20210210 13:20:23.429" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:20:23.429" starttime="20210210 13:20:23.423"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:20:23.432" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:21:00.060" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:21:00.060" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20...</msg>
<status status="PASS" endtime="20210210 13:21:00.060" starttime="20210210 13:20:23.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:21:00.061" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:25 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 13:20:25 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:20:25 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:20:25 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:20:25 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:20:25 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7BAA721CB2C7-&gt;1f57bd05-d239-48cc-a6f9-70d57777de4c
2021-02-10 13:20:25 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 13:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:26 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-10 13:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:27 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:20:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C4329F1C9445-&gt;3645d0c0-a0a1-48a6-a816-b03559603fa4
2021-02-10 13:20:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:20:27 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:20:27 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963163058_0001
2021-02-10 13:20:27 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:20:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:27 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:27 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 13:20:27 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 13:20:27 INFO  YarnClientImpl:324 - Submitted application application_1612963163058_0001
2021-02-10 13:20:28 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612963163058_0001/
2021-02-10 13:20:28 INFO  Job:1619 - Running job: job_1612963163058_0001
2021-02-10 13:20:38 INFO  Job:1640 - Job job_1612963163058_0001 running in uber mode : false
2021-02-10 13:20:38 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 13:20:44 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 13:20:49 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 13:20:54 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 13:20:58 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 13:20:59 INFO  Job:1658 - Job job_1612963163058_0001 completed successfully
2021-02-10 13:20:59 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:59 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017677
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36328
		Total time spent by all reduces in occupied slots (ms)=14252
		Total time spent by all map tasks (ms)=9082
		Total time spent by all reduce tasks (ms)=3563
		Total vcore-milliseconds taken by all map tasks=9082
		Total vcore-milliseconds taken by all reduce tasks=3563
		Total megabyte-milliseconds taken by all map tasks=37199872
		Total megabyte-milliseconds taken by all reduce tasks=14594048
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=573
		CPU time spent (ms)=6070
		Physical memory (bytes) snapshot=1278496768
		Virtual memory (bytes) snapshot=15814668288
		Total committed heap usage (bytes)=1084751872
		Peak Map Physical memory (bytes)=325001216
		Peak Map Virtual memory (bytes)=3954671616
		Peak Reduce Physical memory (bytes)=312922112
		Peak Reduce Virtual memory (bytes)=3968548864
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.041 seconds
2021-02-10 13:20:59 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-10 13:20:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:21:00.061" starttime="20210210 13:21:00.060"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:21:00.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:21:00.062" starttime="20210210 13:21:00.061"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.062" starttime="20210210 13:20:23.430"></status>
</kw>
<msg timestamp="20210210 13:21:00.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:21:00.062" starttime="20210210 13:20:23.429"></status>
</kw>
<msg timestamp="20210210 13:21:00.063" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:20...</msg>
<status status="PASS" endtime="20210210 13:21:00.063" starttime="20210210 13:20:23.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:21:00.063" starttime="20210210 13:21:00.063"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:21:00.063" critical="yes" starttime="20210210 13:20:23.409"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:21:00.068" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:21:00.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:21:00.074" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:00.074" starttime="20210210 13:21:00.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:21:00.074" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:00.075" starttime="20210210 13:21:00.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:21:00.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:21:00.075" starttime="20210210 13:21:00.075"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.075" starttime="20210210 13:21:00.066"></status>
</kw>
<msg timestamp="20210210 13:21:00.075" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:21:00.076" starttime="20210210 13:21:00.066"></status>
</kw>
<msg timestamp="20210210 13:21:00.076" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:00.076" starttime="20210210 13:21:00.066"></status>
</kw>
<msg timestamp="20210210 13:21:00.076" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 13:21:00.076" starttime="20210210 13:21:00.065"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:21:00.076" level="INFO">${random} = uUeRNx2v</msg>
<status status="PASS" endtime="20210210 13:21:00.076" starttime="20210210 13:21:00.076"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:21:00.080" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:21:00.080" starttime="20210210 13:21:00.080"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:21:00.081" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:21:00.081" starttime="20210210 13:21:00.080"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.081" starttime="20210210 13:21:00.079"></status>
</kw>
<msg timestamp="20210210 13:21:00.081" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:21:00.081" starttime="20210210 13:21:00.079"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.081" starttime="20210210 13:21:00.078"></status>
</kw>
<msg timestamp="20210210 13:21:00.081" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:21:00.081" starttime="20210210 13:21:00.077"></status>
</kw>
<msg timestamp="20210210 13:21:00.081" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:21:00.081" starttime="20210210 13:21:00.077"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:21:00.084" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:21:00.084" starttime="20210210 13:21:00.084"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:21:00.085" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:21:00.085" starttime="20210210 13:21:00.085"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.085" starttime="20210210 13:21:00.084"></status>
</kw>
<msg timestamp="20210210 13:21:00.085" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:21:00.085" starttime="20210210 13:21:00.083"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.085" starttime="20210210 13:21:00.083"></status>
</kw>
<msg timestamp="20210210 13:21:00.086" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:21:00.086" starttime="20210210 13:21:00.082"></status>
</kw>
<msg timestamp="20210210 13:21:00.086" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:21:00.086" starttime="20210210 13:21:00.082"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:21:00.088" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:21:00.089" starttime="20210210 13:21:00.088"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:21:00.089" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:21:00.089" starttime="20210210 13:21:00.089"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.089" starttime="20210210 13:21:00.088"></status>
</kw>
<msg timestamp="20210210 13:21:00.089" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:21:00.089" starttime="20210210 13:21:00.087"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:00.090" starttime="20210210 13:21:00.087"></status>
</kw>
<msg timestamp="20210210 13:21:00.090" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-uUeRNx2v.txt</msg>
<status status="PASS" endtime="20210210 13:21:00.090" starttime="20210210 13:21:00.086"></status>
</kw>
<msg timestamp="20210210 13:21:00.090" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-uUeRNx2v.txt</msg>
<status status="PASS" endtime="20210210 13:21:00.090" starttime="20210210 13:21:00.086"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:21:00.093" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-uUeRNx2v.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:21:33.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:21:33.901" level="INFO">${output} = 2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:21:33.901" starttime="20210210 13:21:00.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:21:33.902" level="INFO">2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.9:8032
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:02 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:02 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 13:21:02 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 13:21:02 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:21:02 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:21:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:21:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-435D880120DA-&gt;3645d0c0-a0a1-48a6-a816-b03559603fa4
2021-02-10 13:21:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:21:03 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:21:03 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-ECBEB8816F01-&gt;1f57bd05-d239-48cc-a6f9-70d57777de4c
2021-02-10 13:21:03 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:21:03 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:21:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963163058_0002
2021-02-10 13:21:03 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:21:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:03 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:03 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 13:21:03 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 13:21:04 INFO  YarnClientImpl:324 - Submitted application application_1612963163058_0002
2021-02-10 13:21:04 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612963163058_0002/
2021-02-10 13:21:04 INFO  Job:1619 - Running job: job_1612963163058_0002
2021-02-10 13:21:12 INFO  Job:1640 - Job job_1612963163058_0002 running in uber mode : false
2021-02-10 13:21:12 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 13:21:18 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 13:21:23 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 13:21:28 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 13:21:32 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 13:21:33 INFO  Job:1658 - Job job_1612963163058_0002 completed successfully
2021-02-10 13:21:33 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:33 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36264
		Total time spent by all reduces in occupied slots (ms)=13172
		Total time spent by all map tasks (ms)=9066
		Total time spent by all reduce tasks (ms)=3293
		Total vcore-milliseconds taken by all map tasks=9066
		Total vcore-milliseconds taken by all reduce tasks=3293
		Total megabyte-milliseconds taken by all map tasks=37134336
		Total megabyte-milliseconds taken by all reduce tasks=13488128
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=533
		CPU time spent (ms)=5890
		Physical memory (bytes) snapshot=1287512064
		Virtual memory (bytes) snapshot=15808266240
		Total committed heap usage (bytes)=1069547520
		Peak Map Physical memory (bytes)=328871936
		Peak Map Virtual memory (bytes)=3949662208
		Peak Reduce Physical memory (bytes)=310603776
		Peak Reduce Virtual memory (bytes)=3966214144
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-10 13:21:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 13:21:33.902" starttime="20210210 13:21:33.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:21:33.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:21:33.903" starttime="20210210 13:21:33.902"></status>
</kw>
<status status="PASS" endtime="20210210 13:21:33.903" starttime="20210210 13:21:00.091"></status>
</kw>
<msg timestamp="20210210 13:21:33.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:21:33.903" starttime="20210210 13:21:00.091"></status>
</kw>
<msg timestamp="20210210 13:21:33.904" level="INFO">${output} = 2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 13:21:01 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 13:21:33.904" starttime="20210210 13:21:00.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 13:21:33.904" starttime="20210210 13:21:33.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:21:33.905" starttime="20210210 13:21:33.904"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:21:33.905" critical="yes" starttime="20210210 13:21:00.064"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 13:21:33.906" starttime="20210210 13:20:23.362"></status>
</suite>
<status status="PASS" elapsedtime="182943" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:09.118" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:19.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:24:19.180" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:24:19.180" starttime="20210210 13:24:09.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:19.181" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:24:19.181" starttime="20210210 13:24:19.180"></status>
</kw>
<msg timestamp="20210210 13:24:19.181" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:24:19.181" starttime="20210210 13:24:09.113"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:19.186" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:22.159" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:22.159" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:22.159" starttime="20210210 13:24:19.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:22.161" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:22.161" starttime="20210210 13:24:22.160"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:22.161" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:22.161" starttime="20210210 13:24:22.161"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:22.162" starttime="20210210 13:24:19.183"></status>
</kw>
<msg timestamp="20210210 13:24:22.162" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:22.162" starttime="20210210 13:24:19.183"></status>
</kw>
<msg timestamp="20210210 13:24:22.162" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 13:24:22.162" starttime="20210210 13:24:19.182"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:24:22.163" starttime="20210210 13:24:22.162"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:22.163" starttime="20210210 13:24:19.182"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:22.163" starttime="20210210 13:24:19.181"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:22.167" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:24.857" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:24.857" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:24.857" starttime="20210210 13:24:22.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:24.858" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:24.858" starttime="20210210 13:24:24.857"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:24.859" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:24.859" starttime="20210210 13:24:24.858"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:24.859" starttime="20210210 13:24:22.164"></status>
</kw>
<msg timestamp="20210210 13:24:24.859" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:24.859" starttime="20210210 13:24:22.164"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:24.860" starttime="20210210 13:24:22.164"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:24.860" starttime="20210210 13:24:22.163"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:24.860" starttime="20210210 13:24:22.163"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 13:24:24.860" starttime="20210210 13:24:24.860"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:24.864" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:27.703" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:27.703" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:24...</msg>
<status status="PASS" endtime="20210210 13:24:27.704" starttime="20210210 13:24:24.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:27.705" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:24:24.581Z",
  "modificationTime" : "2021-02-10T13:24:24.581Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:24:27.705" starttime="20210210 13:24:27.704"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:27.705" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:27.705" starttime="20210210 13:24:27.705"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:27.706" starttime="20210210 13:24:24.862"></status>
</kw>
<msg timestamp="20210210 13:24:27.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:27.706" starttime="20210210 13:24:24.861"></status>
</kw>
<msg timestamp="20210210 13:24:27.706" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:24...</msg>
<status status="PASS" endtime="20210210 13:24:27.706" starttime="20210210 13:24:24.861"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 13:24:27.707" starttime="20210210 13:24:27.706"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:24:27.710" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:24:27.710" starttime="20210210 13:24:27.710"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:24:27.711" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:24:27.711" starttime="20210210 13:24:27.710"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:27.711" starttime="20210210 13:24:27.709"></status>
</kw>
<msg timestamp="20210210 13:24:27.711" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:24:27.711" starttime="20210210 13:24:27.709"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:27.711" starttime="20210210 13:24:27.708"></status>
</kw>
<msg timestamp="20210210 13:24:27.711" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:24:27.711" starttime="20210210 13:24:27.707"></status>
</kw>
<msg timestamp="20210210 13:24:27.711" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:24:27.711" starttime="20210210 13:24:27.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:27.714" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:30.658" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:30.658" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:30.658" starttime="20210210 13:24:27.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:30.660" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:30.660" starttime="20210210 13:24:30.659"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:30.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:30.660" starttime="20210210 13:24:30.660"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:30.660" starttime="20210210 13:24:27.712"></status>
</kw>
<msg timestamp="20210210 13:24:30.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:30.661" starttime="20210210 13:24:27.712"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:30.661" starttime="20210210 13:24:27.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:30.665" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:39.696" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:39.696" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:39.697" starttime="20210210 13:24:30.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:39.698" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:39.698" starttime="20210210 13:24:39.697"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:39.698" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:39.698" starttime="20210210 13:24:39.698"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:39.699" starttime="20210210 13:24:30.662"></status>
</kw>
<msg timestamp="20210210 13:24:39.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:39.699" starttime="20210210 13:24:30.662"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:39.699" starttime="20210210 13:24:30.661"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:39.702" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:44.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:44.096" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:44.096" starttime="20210210 13:24:39.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:44.097" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:44.097" starttime="20210210 13:24:44.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:44.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:44.098" starttime="20210210 13:24:44.098"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:44.098" starttime="20210210 13:24:39.700"></status>
</kw>
<msg timestamp="20210210 13:24:44.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:44.099" starttime="20210210 13:24:39.700"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:44.099" starttime="20210210 13:24:39.699"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:44.102" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:48.667" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:48.668" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:48.668" starttime="20210210 13:24:44.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:48.669" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:48.669" starttime="20210210 13:24:48.668"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:48.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:48.669" starttime="20210210 13:24:48.669"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:48.670" starttime="20210210 13:24:44.100"></status>
</kw>
<msg timestamp="20210210 13:24:48.670" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:48.670" starttime="20210210 13:24:44.099"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:48.670" starttime="20210210 13:24:44.099"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:24:48.670" critical="yes" starttime="20210210 13:24:09.113"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:24:48.675" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:24:48.675" starttime="20210210 13:24:48.674"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:24:48.675" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:24:48.675" starttime="20210210 13:24:48.675"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:48.676" starttime="20210210 13:24:48.674"></status>
</kw>
<msg timestamp="20210210 13:24:48.676" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:24:48.676" starttime="20210210 13:24:48.673"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:48.676" starttime="20210210 13:24:48.673"></status>
</kw>
<msg timestamp="20210210 13:24:48.676" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:24:48.676" starttime="20210210 13:24:48.672"></status>
</kw>
<msg timestamp="20210210 13:24:48.676" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:24:48.676" starttime="20210210 13:24:48.672"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:48.679" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:51.423" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:51.423" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:51.423" starttime="20210210 13:24:48.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:51.424" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:51.425" starttime="20210210 13:24:51.424"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:51.425" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:51.425" starttime="20210210 13:24:51.425"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:51.425" starttime="20210210 13:24:48.677"></status>
</kw>
<msg timestamp="20210210 13:24:51.425" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:51.426" starttime="20210210 13:24:48.677"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:51.426" starttime="20210210 13:24:48.676"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:51.429" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:24:54.112" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:24:54.112" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:24:54.113" starttime="20210210 13:24:51.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:24:54.114" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:24:54.114" starttime="20210210 13:24:54.113"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:24:54.114" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:24:54.114" starttime="20210210 13:24:54.114"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:54.114" starttime="20210210 13:24:51.427"></status>
</kw>
<msg timestamp="20210210 13:24:54.115" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:24:54.115" starttime="20210210 13:24:51.426"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:54.115" starttime="20210210 13:24:51.426"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:24:54.115" critical="yes" starttime="20210210 13:24:48.671"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 13:24:54.116" starttime="20210210 13:24:09.063"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:26:29.228" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:26:29.228" starttime="20210210 13:26:29.227"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:26:29.228" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:26:29.228" starttime="20210210 13:26:29.228"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:29.228" starttime="20210210 13:26:29.227"></status>
</kw>
<msg timestamp="20210210 13:26:29.228" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:26:29.229" starttime="20210210 13:26:29.227"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:26:29.229" starttime="20210210 13:26:29.229"></status>
</kw>
<msg timestamp="20210210 13:26:29.229" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:26:29.229" starttime="20210210 13:26:29.229"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:29.230" starttime="20210210 13:26:29.226"></status>
</kw>
<msg timestamp="20210210 13:26:29.230" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:26:29.230" starttime="20210210 13:26:29.225"></status>
</kw>
<msg timestamp="20210210 13:26:29.230" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:26:29.230" starttime="20210210 13:26:29.225"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:26:29.230" level="INFO">${random} = 58027</msg>
<status status="PASS" endtime="20210210 13:26:29.230" starttime="20210210 13:26:29.230"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:26:29.235" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-58027 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:26:32.380" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:26:32.381" level="INFO">${output} = 2021-02-10 13:26:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:26:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 13:26:32.381" starttime="20210210 13:26:29.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:26:32.382" level="INFO">2021-02-10 13:26:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:26:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:26:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:26:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:26:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-07CD57160AB1-&gt;76b69f04-8179-4d7c-ad55-4c1b78f515b4
2021-02-10 13:26:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 13:26:32.382" starttime="20210210 13:26:32.381"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:26:32.382" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:26:32.382" starttime="20210210 13:26:32.382"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:32.383" starttime="20210210 13:26:29.231"></status>
</kw>
<msg timestamp="20210210 13:26:32.383" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:26:32.383" starttime="20210210 13:26:29.231"></status>
</kw>
<msg timestamp="20210210 13:26:32.383" level="INFO">${result} = 2021-02-10 13:26:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:26:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 13:26:32.383" starttime="20210210 13:26:29.231"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:26:32.386" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:26:34.066" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:26:34.066" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:25 ofs://om/volume1/bucket1/ozone-29107
-rw-...</msg>
<status status="PASS" endtime="20210210 13:26:34.066" starttime="20210210 13:26:32.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:26:34.068" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:25 ofs://om/volume1/bucket1/ozone-29107
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:26 ofs://om/volume1/bucket1/ozone-58027
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:25 ofs://om/volume1/bucket1/wordcount-v7wwwGgJ.txt</msg>
<status status="PASS" endtime="20210210 13:26:34.068" starttime="20210210 13:26:34.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:26:34.068" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:26:34.068" starttime="20210210 13:26:34.068"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:34.068" starttime="20210210 13:26:32.384"></status>
</kw>
<msg timestamp="20210210 13:26:34.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:26:34.069" starttime="20210210 13:26:32.384"></status>
</kw>
<msg timestamp="20210210 13:26:34.069" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:25 ofs://om/volume1/bucket1/ozone-29107
-rw-...</msg>
<status status="PASS" endtime="20210210 13:26:34.069" starttime="20210210 13:26:32.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:26:34.069" starttime="20210210 13:26:34.069"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:26:34.070" critical="yes" starttime="20210210 13:26:29.224"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:26:34.071" starttime="20210210 13:26:29.179"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:24:58.123" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:24:58.123" starttime="20210210 13:24:58.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:24:58.124" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:24:58.124" starttime="20210210 13:24:58.123"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:58.124" starttime="20210210 13:24:58.122"></status>
</kw>
<msg timestamp="20210210 13:24:58.124" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:24:58.124" starttime="20210210 13:24:58.122"></status>
</kw>
<status status="PASS" endtime="20210210 13:24:58.124" starttime="20210210 13:24:58.121"></status>
</kw>
<msg timestamp="20210210 13:24:58.124" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:24:58.124" starttime="20210210 13:24:58.121"></status>
</kw>
<msg timestamp="20210210 13:24:58.125" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:24:58.125" starttime="20210210 13:24:58.120"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:24:58.125" level="INFO">${random} = 29107</msg>
<status status="PASS" endtime="20210210 13:24:58.125" starttime="20210210 13:24:58.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:24:58.130" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-29107 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:25:01.575" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:25:01.575" level="INFO">${output} = 2021-02-10 13:24:59 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:24:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 13:25:01.575" starttime="20210210 13:24:58.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:25:01.578" level="INFO">2021-02-10 13:24:59 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:24:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:24:59 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:25:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:25:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8984C178EC46-&gt;76b69f04-8179-4d7c-ad55-4c1b78f515b4
2021-02-10 13:25:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 13:25:01.578" starttime="20210210 13:25:01.576"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:25:01.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:25:01.578" starttime="20210210 13:25:01.578"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:01.579" starttime="20210210 13:24:58.126"></status>
</kw>
<msg timestamp="20210210 13:25:01.579" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:25:01.579" starttime="20210210 13:24:58.126"></status>
</kw>
<msg timestamp="20210210 13:25:01.579" level="INFO">${result} = 2021-02-10 13:24:59 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:24:59 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 13:25:01.579" starttime="20210210 13:24:58.125"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:25:01.582" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:25:03.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:25:03.044" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:25 o3fs://bucket1.volume1.om/ozone-29107
dr...</msg>
<status status="PASS" endtime="20210210 13:25:03.044" starttime="20210210 13:25:01.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:25:03.045" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:25 o3fs://bucket1.volume1.om/ozone-29107
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:25:03.045" starttime="20210210 13:25:03.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:25:03.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:25:03.046" starttime="20210210 13:25:03.045"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:03.046" starttime="20210210 13:25:01.580"></status>
</kw>
<msg timestamp="20210210 13:25:03.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:25:03.046" starttime="20210210 13:25:01.580"></status>
</kw>
<msg timestamp="20210210 13:25:03.046" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:24 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:25 o3fs://bucket1.volume1.om/ozone-29107
dr...</msg>
<status status="PASS" endtime="20210210 13:25:03.046" starttime="20210210 13:25:01.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:25:03.047" starttime="20210210 13:25:03.046"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:25:03.047" critical="yes" starttime="20210210 13:24:58.119"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:25:03.048" starttime="20210210 13:24:58.067"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:26:38.026" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:26:38.032" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:26:38.032" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:26:38.032" starttime="20210210 13:26:38.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:26:38.033" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:26:38.033" starttime="20210210 13:26:38.032"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:26:38.033" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:26:38.033" starttime="20210210 13:26:38.033"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:38.033" starttime="20210210 13:26:38.022"></status>
</kw>
<msg timestamp="20210210 13:26:38.034" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:26:38.034" starttime="20210210 13:26:38.022"></status>
</kw>
<msg timestamp="20210210 13:26:38.034" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:26:38.034" starttime="20210210 13:26:38.021"></status>
</kw>
<msg timestamp="20210210 13:26:38.034" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:26:38.034" starttime="20210210 13:26:38.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:26:38.038" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:26:38.038" starttime="20210210 13:26:38.038"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:26:38.039" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:26:38.039" starttime="20210210 13:26:38.038"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:38.039" starttime="20210210 13:26:38.037"></status>
</kw>
<msg timestamp="20210210 13:26:38.039" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:26:38.039" starttime="20210210 13:26:38.037"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:26:38.040" starttime="20210210 13:26:38.039"></status>
</kw>
<msg timestamp="20210210 13:26:38.040" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:26:38.040" starttime="20210210 13:26:38.039"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:38.040" starttime="20210210 13:26:38.036"></status>
</kw>
<msg timestamp="20210210 13:26:38.040" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:26:38.040" starttime="20210210 13:26:38.035"></status>
</kw>
<msg timestamp="20210210 13:26:38.040" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:26:38.040" starttime="20210210 13:26:38.034"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:26:38.044" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:27:18.006" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:27:18.006" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:26:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:26:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 13:27:18.008" starttime="20210210 13:26:38.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:27:18.010" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:26:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:26:39 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:26:39 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:26:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:26:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-14E8E670E7A1-&gt;600855a6-b4e4-4190-8023-0cb067f9eb11
2021-02-10 13:26:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-10 13:26:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-91984B4E85BC-&gt;76b69f04-8179-4d7c-ad55-4c1b78f515b4
2021-02-10 13:26:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-10 13:26:40 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:26:41 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:26:41 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:26:41 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:26:41 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963425613_0003
2021-02-10 13:26:41 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:26:41 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 13:26:41 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 13:26:41 INFO  YarnClientImpl:329 - Submitted application application_1612963425613_0003
2021-02-10 13:26:41 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612963425613_0003/
2021-02-10 13:26:41 INFO  Job:1614 - Running job: job_1612963425613_0003
2021-02-10 13:26:49 INFO  Job:1635 - Job job_1612963425613_0003 running in uber mode : false
2021-02-10 13:26:49 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 13:26:55 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 13:27:00 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 13:27:05 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 13:27:14 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 13:27:17 INFO  Job:1653 - Job job_1612963425613_0003 completed successfully
2021-02-10 13:27:17 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1092857
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36196
		Total time spent by all reduces in occupied slots (ms)=33148
		Total time spent by all map tasks (ms)=9049
		Total time spent by all reduce tasks (ms)=8287
		Total vcore-milliseconds taken by all map tasks=9049
		Total vcore-milliseconds taken by all reduce tasks=8287
		Total megabyte-milliseconds taken by all map tasks=37064704
		Total megabyte-milliseconds taken by all reduce tasks=33943552
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=606
		CPU time spent (ms)=6440
		Physical memory (bytes) snapshot=1434730496
		Virtual memory (bytes) snapshot=15803322368
		Total committed heap usage (bytes)=1627914240
		Peak Map Physical memory (bytes)=377884672
		Peak Map Virtual memory (bytes)=3955171328
		Peak Reduce Physical memory (bytes)=381460480
		Peak Reduce Virtual memory (bytes)=3959828480
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.646 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 13:27:18.010" starttime="20210210 13:27:18.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:27:18.011" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:27:18.011" starttime="20210210 13:27:18.010"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.014" starttime="20210210 13:26:38.041"></status>
</kw>
<msg timestamp="20210210 13:27:18.015" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:27:18.015" starttime="20210210 13:26:38.041"></status>
</kw>
<msg timestamp="20210210 13:27:18.015" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:26:39 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:26:39 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 13:27:18.015" starttime="20210210 13:26:38.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:27:18.016" starttime="20210210 13:27:18.015"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:27:18.016" critical="yes" starttime="20210210 13:26:38.020"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:27:18.021" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:27:18.025" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:27:18.026" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:27:18.026" starttime="20210210 13:27:18.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:27:18.026" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:27:18.027" starttime="20210210 13:27:18.026"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:27:18.027" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:27:18.027" starttime="20210210 13:27:18.027"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.027" starttime="20210210 13:27:18.019"></status>
</kw>
<msg timestamp="20210210 13:27:18.027" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:27:18.028" starttime="20210210 13:27:18.019"></status>
</kw>
<msg timestamp="20210210 13:27:18.028" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:27:18.028" starttime="20210210 13:27:18.018"></status>
</kw>
<msg timestamp="20210210 13:27:18.028" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:27:18.028" starttime="20210210 13:27:18.018"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:27:18.028" level="INFO">${random} = OJv8VNnc</msg>
<status status="PASS" endtime="20210210 13:27:18.028" starttime="20210210 13:27:18.028"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:27:18.032" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:27:18.032" starttime="20210210 13:27:18.032"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:27:18.033" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:27:18.033" starttime="20210210 13:27:18.032"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.033" starttime="20210210 13:27:18.031"></status>
</kw>
<msg timestamp="20210210 13:27:18.033" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:27:18.033" starttime="20210210 13:27:18.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:27:18.034" starttime="20210210 13:27:18.033"></status>
</kw>
<msg timestamp="20210210 13:27:18.034" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 13:27:18.034" starttime="20210210 13:27:18.033"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.034" starttime="20210210 13:27:18.030"></status>
</kw>
<msg timestamp="20210210 13:27:18.034" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:27:18.034" starttime="20210210 13:27:18.029"></status>
</kw>
<msg timestamp="20210210 13:27:18.034" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 13:27:18.034" starttime="20210210 13:27:18.029"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:27:18.037" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:27:18.037" starttime="20210210 13:27:18.037"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:27:18.038" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:27:18.038" starttime="20210210 13:27:18.037"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.038" starttime="20210210 13:27:18.036"></status>
</kw>
<msg timestamp="20210210 13:27:18.038" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:27:18.038" starttime="20210210 13:27:18.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:27:18.039" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 13:27:18.039" starttime="20210210 13:27:18.039"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:27:18.040" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 13:27:18.040" starttime="20210210 13:27:18.039"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.040" starttime="20210210 13:27:18.039"></status>
</kw>
<msg timestamp="20210210 13:27:18.040" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 13:27:18.040" starttime="20210210 13:27:18.038"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.040" starttime="20210210 13:27:18.035"></status>
</kw>
<msg timestamp="20210210 13:27:18.040" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 13:27:18.041" starttime="20210210 13:27:18.035"></status>
</kw>
<msg timestamp="20210210 13:27:18.041" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 13:27:18.041" starttime="20210210 13:27:18.034"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 13:27:18.044" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 13:27:18.044" starttime="20210210 13:27:18.043"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:27:18.044" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 13:27:18.044" starttime="20210210 13:27:18.044"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.044" starttime="20210210 13:27:18.043"></status>
</kw>
<msg timestamp="20210210 13:27:18.044" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 13:27:18.044" starttime="20210210 13:27:18.042"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:27:18.046" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 13:27:18.046" starttime="20210210 13:27:18.045"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:27:18.046" level="INFO">${result} = /wordcount-OJv8VNnc.txt</msg>
<status status="PASS" endtime="20210210 13:27:18.046" starttime="20210210 13:27:18.046"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.046" starttime="20210210 13:27:18.045"></status>
</kw>
<msg timestamp="20210210 13:27:18.046" level="INFO">${path_with_leading} = /wordcount-OJv8VNnc.txt</msg>
<status status="PASS" endtime="20210210 13:27:18.046" starttime="20210210 13:27:18.045"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:18.047" starttime="20210210 13:27:18.042"></status>
</kw>
<msg timestamp="20210210 13:27:18.047" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-OJv8VNnc.txt</msg>
<status status="PASS" endtime="20210210 13:27:18.047" starttime="20210210 13:27:18.041"></status>
</kw>
<msg timestamp="20210210 13:27:18.047" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-OJv8VNnc.txt</msg>
<status status="PASS" endtime="20210210 13:27:18.047" starttime="20210210 13:27:18.041"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:27:18.050" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-OJv8VNnc.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:27:53.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:27:53.045" level="INFO">${output} = 2021-02-10 13:27:19 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:27:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 13:27:53.045" starttime="20210210 13:27:18.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:27:53.046" level="INFO">2021-02-10 13:27:19 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:27:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:27:20 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:27:20 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:27:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:27:20 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:27:20 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-901B9F589987-&gt;76b69f04-8179-4d7c-ad55-4c1b78f515b4
2021-02-10 13:27:20 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:27:23 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:27:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-3A689461668A-&gt;600855a6-b4e4-4190-8023-0cb067f9eb11
2021-02-10 13:27:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:27:23 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:27:23 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963425613_0004
2021-02-10 13:27:23 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:27:24 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 13:27:24 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 13:27:24 INFO  YarnClientImpl:329 - Submitted application application_1612963425613_0004
2021-02-10 13:27:24 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612963425613_0004/
2021-02-10 13:27:24 INFO  Job:1614 - Running job: job_1612963425613_0004
2021-02-10 13:27:31 INFO  Job:1635 - Job job_1612963425613_0004 running in uber mode : false
2021-02-10 13:27:31 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 13:27:37 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 13:27:42 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 13:27:47 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 13:27:51 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 13:27:52 INFO  Job:1653 - Job job_1612963425613_0004 completed successfully
2021-02-10 13:27:52 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155531
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=35712
		Total time spent by all reduces in occupied slots (ms)=14288
		Total time spent by all map tasks (ms)=8928
		Total time spent by all reduce tasks (ms)=3572
		Total vcore-milliseconds taken by all map tasks=8928
		Total vcore-milliseconds taken by all reduce tasks=3572
		Total megabyte-milliseconds taken by all map tasks=36569088
		Total megabyte-milliseconds taken by all reduce tasks=14630912
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=571
		CPU time spent (ms)=6620
		Physical memory (bytes) snapshot=1369423872
		Virtual memory (bytes) snapshot=15813742592
		Total committed heap usage (bytes)=1429733376
		Peak Map Physical memory (bytes)=372617216
		Peak Map Virtual memory (bytes)=3948167168
		Peak Reduce Physical memory (bytes)=386359296
		Peak Reduce Virtual memory (bytes)=3973697536
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 13:27:53.046" starttime="20210210 13:27:53.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:27:53.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:27:53.047" starttime="20210210 13:27:53.047"></status>
</kw>
<status status="PASS" endtime="20210210 13:27:53.047" starttime="20210210 13:27:18.048"></status>
</kw>
<msg timestamp="20210210 13:27:53.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:27:53.047" starttime="20210210 13:27:18.048"></status>
</kw>
<msg timestamp="20210210 13:27:53.048" level="INFO">${output} = 2021-02-10 13:27:19 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:27:19 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 13:27:53.048" starttime="20210210 13:27:18.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 13:27:53.048" starttime="20210210 13:27:53.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:27:53.049" starttime="20210210 13:27:53.048"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:27:53.049" critical="yes" starttime="20210210 13:27:18.017"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 13:27:53.050" starttime="20210210 13:26:37.975"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:25:07.002" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:25:07.009" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:25:07.009" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:07.009" starttime="20210210 13:25:06.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:25:07.010" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:07.010" starttime="20210210 13:25:07.009"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:25:07.010" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:25:07.010" starttime="20210210 13:25:07.010"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:07.010" starttime="20210210 13:25:06.999"></status>
</kw>
<msg timestamp="20210210 13:25:07.010" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:25:07.011" starttime="20210210 13:25:06.998"></status>
</kw>
<msg timestamp="20210210 13:25:07.011" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:07.011" starttime="20210210 13:25:06.998"></status>
</kw>
<msg timestamp="20210210 13:25:07.011" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:07.011" starttime="20210210 13:25:06.998"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:25:07.015" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:25:07.015" starttime="20210210 13:25:07.015"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:25:07.016" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:25:07.016" starttime="20210210 13:25:07.015"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:07.016" starttime="20210210 13:25:07.014"></status>
</kw>
<msg timestamp="20210210 13:25:07.016" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:25:07.016" starttime="20210210 13:25:07.014"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:07.016" starttime="20210210 13:25:07.013"></status>
</kw>
<msg timestamp="20210210 13:25:07.016" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:25:07.016" starttime="20210210 13:25:07.012"></status>
</kw>
<msg timestamp="20210210 13:25:07.017" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:25:07.017" starttime="20210210 13:25:07.011"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:25:07.020" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:25:47.952" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:25:47.952" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:25:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:25:08 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 13:25:47.952" starttime="20210210 13:25:07.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:25:47.954" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:25:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:25:08 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:25:08 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:25:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:25:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-593E51ABFB7D-&gt;76b69f04-8179-4d7c-ad55-4c1b78f515b4
2021-02-10 13:25:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 13:25:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AF554A770248-&gt;600855a6-b4e4-4190-8023-0cb067f9eb11
2021-02-10 13:25:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 13:25:10 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:25:10 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:25:10 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:25:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963425613_0001
2021-02-10 13:25:13 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:25:13 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 13:25:13 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 13:25:13 INFO  YarnClientImpl:329 - Submitted application application_1612963425613_0001
2021-02-10 13:25:13 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612963425613_0001/
2021-02-10 13:25:13 INFO  Job:1614 - Running job: job_1612963425613_0001
2021-02-10 13:25:23 INFO  Job:1635 - Job job_1612963425613_0001 running in uber mode : false
2021-02-10 13:25:23 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 13:25:29 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 13:25:34 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 13:25:39 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 13:25:44 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 13:25:47 INFO  Job:1653 - Job job_1612963425613_0001 completed successfully
2021-02-10 13:25:47 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093077
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36004
		Total time spent by all reduces in occupied slots (ms)=14796
		Total time spent by all map tasks (ms)=9001
		Total time spent by all reduce tasks (ms)=3699
		Total vcore-milliseconds taken by all map tasks=9001
		Total vcore-milliseconds taken by all reduce tasks=3699
		Total megabyte-milliseconds taken by all map tasks=36868096
		Total megabyte-milliseconds taken by all reduce tasks=15151104
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=593
		CPU time spent (ms)=6720
		Physical memory (bytes) snapshot=1393303552
		Virtual memory (bytes) snapshot=15819755520
		Total committed heap usage (bytes)=1449132032
		Peak Map Physical memory (bytes)=375910400
		Peak Map Virtual memory (bytes)=3951181824
		Peak Reduce Physical memory (bytes)=401580032
		Peak Reduce Virtual memory (bytes)=3972165632
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 37.501 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 13:25:47.954" starttime="20210210 13:25:47.953"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:25:47.955" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:25:47.955" starttime="20210210 13:25:47.954"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.955" starttime="20210210 13:25:07.018"></status>
</kw>
<msg timestamp="20210210 13:25:47.955" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:25:47.955" starttime="20210210 13:25:07.017"></status>
</kw>
<msg timestamp="20210210 13:25:47.955" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:25:08 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:25:08 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 13:25:47.956" starttime="20210210 13:25:07.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:25:47.956" starttime="20210210 13:25:47.956"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:25:47.956" critical="yes" starttime="20210210 13:25:06.997"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:25:47.962" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:25:47.966" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:25:47.966" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:47.966" starttime="20210210 13:25:47.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:25:47.967" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:47.967" starttime="20210210 13:25:47.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:25:47.968" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:25:47.968" starttime="20210210 13:25:47.967"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.968" starttime="20210210 13:25:47.959"></status>
</kw>
<msg timestamp="20210210 13:25:47.968" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:25:47.968" starttime="20210210 13:25:47.958"></status>
</kw>
<msg timestamp="20210210 13:25:47.968" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:47.968" starttime="20210210 13:25:47.958"></status>
</kw>
<msg timestamp="20210210 13:25:47.969" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:25:47.969" starttime="20210210 13:25:47.958"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:25:47.969" level="INFO">${random} = v7wwwGgJ</msg>
<status status="PASS" endtime="20210210 13:25:47.969" starttime="20210210 13:25:47.969"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:25:47.972" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:25:47.972" starttime="20210210 13:25:47.972"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:25:47.973" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:25:47.973" starttime="20210210 13:25:47.973"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.973" starttime="20210210 13:25:47.972"></status>
</kw>
<msg timestamp="20210210 13:25:47.973" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:25:47.973" starttime="20210210 13:25:47.971"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.974" starttime="20210210 13:25:47.970"></status>
</kw>
<msg timestamp="20210210 13:25:47.974" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:25:47.974" starttime="20210210 13:25:47.970"></status>
</kw>
<msg timestamp="20210210 13:25:47.974" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:25:47.974" starttime="20210210 13:25:47.969"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:25:47.977" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:25:47.977" starttime="20210210 13:25:47.976"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:25:47.977" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:25:47.977" starttime="20210210 13:25:47.977"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.978" starttime="20210210 13:25:47.976"></status>
</kw>
<msg timestamp="20210210 13:25:47.978" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:25:47.978" starttime="20210210 13:25:47.976"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.978" starttime="20210210 13:25:47.975"></status>
</kw>
<msg timestamp="20210210 13:25:47.978" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:25:47.978" starttime="20210210 13:25:47.975"></status>
</kw>
<msg timestamp="20210210 13:25:47.978" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:25:47.978" starttime="20210210 13:25:47.974"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:25:47.981" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:25:47.981" starttime="20210210 13:25:47.981"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:25:47.982" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:25:47.982" starttime="20210210 13:25:47.981"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.982" starttime="20210210 13:25:47.980"></status>
</kw>
<msg timestamp="20210210 13:25:47.982" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:25:47.982" starttime="20210210 13:25:47.980"></status>
</kw>
<status status="PASS" endtime="20210210 13:25:47.982" starttime="20210210 13:25:47.979"></status>
</kw>
<msg timestamp="20210210 13:25:47.982" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-v7wwwGgJ.txt</msg>
<status status="PASS" endtime="20210210 13:25:47.982" starttime="20210210 13:25:47.979"></status>
</kw>
<msg timestamp="20210210 13:25:47.982" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-v7wwwGgJ.txt</msg>
<status status="PASS" endtime="20210210 13:25:47.982" starttime="20210210 13:25:47.978"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:25:47.986" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-v7wwwGgJ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:26:25.277" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:26:25.277" level="INFO">${output} = 2021-02-10 13:25:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:25:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 13:26:25.277" starttime="20210210 13:25:47.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:26:25.278" level="INFO">2021-02-10 13:25:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:25:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 13:25:50 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:25:50 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:25:50 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:25:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:25:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-41B653EA9DF9-&gt;600855a6-b4e4-4190-8023-0cb067f9eb11
2021-02-10 13:25:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:25:51 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 13:25:51 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 13:25:51 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AAFDACF4820A-&gt;76b69f04-8179-4d7c-ad55-4c1b78f515b4
2021-02-10 13:25:51 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 13:25:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612963425613_0002
2021-02-10 13:25:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 13:25:54 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 13:25:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 13:25:54 INFO  YarnClientImpl:329 - Submitted application application_1612963425613_0002
2021-02-10 13:25:54 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612963425613_0002/
2021-02-10 13:25:54 INFO  Job:1614 - Running job: job_1612963425613_0002
2021-02-10 13:26:00 INFO  Job:1635 - Job job_1612963425613_0002 running in uber mode : false
2021-02-10 13:26:00 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 13:26:07 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 13:26:12 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 13:26:16 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 13:26:21 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 13:26:24 INFO  Job:1653 - Job job_1612963425613_0002 completed successfully
2021-02-10 13:26:24 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155615
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=36288
		Total time spent by all reduces in occupied slots (ms)=13400
		Total time spent by all map tasks (ms)=9072
		Total time spent by all reduce tasks (ms)=3350
		Total vcore-milliseconds taken by all map tasks=9072
		Total vcore-milliseconds taken by all reduce tasks=3350
		Total megabyte-milliseconds taken by all map tasks=37158912
		Total megabyte-milliseconds taken by all reduce tasks=13721600
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=6060
		Physical memory (bytes) snapshot=1303097344
		Virtual memory (bytes) snapshot=15796469760
		Total committed heap usage (bytes)=1250951168
		Peak Map Physical memory (bytes)=309714944
		Peak Map Virtual memory (bytes)=3946688512
		Peak Reduce Physical memory (bytes)=389443584
		Peak Reduce Virtual memory (bytes)=3965317120
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 13:26:25.278" starttime="20210210 13:26:25.277"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:26:25.279" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:26:25.279" starttime="20210210 13:26:25.279"></status>
</kw>
<status status="PASS" endtime="20210210 13:26:25.279" starttime="20210210 13:25:47.984"></status>
</kw>
<msg timestamp="20210210 13:26:25.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:26:25.280" starttime="20210210 13:25:47.983"></status>
</kw>
<msg timestamp="20210210 13:26:25.280" level="INFO">${output} = 2021-02-10 13:25:49 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.5:8032
2021-02-10 13:25:49 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 13:26:25.280" starttime="20210210 13:25:47.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 13:26:25.280" starttime="20210210 13:26:25.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 13:26:25.281" starttime="20210210 13:26:25.281"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 13:26:25.281" critical="yes" starttime="20210210 13:25:47.957"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 13:26:25.283" starttime="20210210 13:25:06.952"></status>
</suite>
<status status="PASS" elapsedtime="208332" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="563562" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
