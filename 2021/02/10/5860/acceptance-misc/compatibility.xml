<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:06:37.250" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="compatibility">
<suite source="/opt/hadoop/smoketest/compatibility/dn.robot" id="s1-s1" name="Dn">
<test id="s1-s1-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HDDS_DN_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:21.036" starttime="20210210 13:06:21.036"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:06:21.041" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:06:21.045" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:06:21.045" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoo...</msg>
<status status="PASS" endtime="20210210 13:06:21.045" starttime="20210210 13:06:21.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:06:21.046" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoop       6 28.2  3.6 3711112 256736 ?      Ssl  13:05   0:07 /usr/lib/jvm/jre//bin/java -Dproc_datanode -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dlog4j.configurationFile=/etc/hadoop/dn-audit-log4j2.properties -Dorg.apache.ratis.thirdparty.io.netty.leakDetection.level=disabled -Dorg.apache.ratis.thirdparty.io.netty.allocator.useCacheForAllThreads=false -Dhdds.dn.opts=test -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.ozone.HddsDatanodeService
hadoop     126  0.0  0.3 127712 25752 ?        Ss   13:06   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-dn-datanode.xml /opt/hadoop/smoketest/compatibility/dn.robot
hadoop     136  0.0  0.0  11692  2564 ?        S    13:06   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     137  0.0  0.0  51748  3536 ?        R    13:06   0:00 ps aux</msg>
<status status="PASS" endtime="20210210 13:06:21.046" starttime="20210210 13:06:21.046"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:06:21.047" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:06:21.047" starttime="20210210 13:06:21.047"></status>
</kw>
<status status="PASS" endtime="20210210 13:06:21.047" starttime="20210210 13:06:21.037"></status>
</kw>
<msg timestamp="20210210 13:06:21.047" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:06:21.047" starttime="20210210 13:06:21.037"></status>
</kw>
<msg timestamp="20210210 13:06:21.048" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoo...</msg>
<status status="PASS" endtime="20210210 13:06:21.048" starttime="20210210 13:06:21.037"></status>
</kw>
<msg timestamp="20210210 13:06:21.048" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone datanode
hadoo...</msg>
<status status="PASS" endtime="20210210 13:06:21.048" starttime="20210210 13:06:21.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HDDS_DN_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:21.049" starttime="20210210 13:06:21.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:21.049" starttime="20210210 13:06:21.049"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:06:21.050" critical="yes" starttime="20210210 13:06:21.035"></status>
</test>
<doc>Test datanode compatibility</doc>
<status status="PASS" endtime="20210210 13:06:21.051" starttime="20210210 13:06:20.996"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/om.robot" id="s1-s2" name="Om">
<test id="s1-s2-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HDFS_OM_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:24.951" starttime="20210210 13:06:24.951"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:06:24.956" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:06:24.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:06:24.960" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop     ...</msg>
<status status="PASS" endtime="20210210 13:06:24.960" starttime="20210210 13:06:24.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:06:24.961" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop       7 22.2  3.9 3896572 277880 ?      Ssl  13:05   0:07 /usr/lib/jvm/jre//bin/java -Dproc_om -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dorg.apache.ratis.thirdparty.io.netty.leakDetection.level=disabled -Dorg.apache.ratis.thirdparty.io.netty.allocator.useCacheForAllThreads=false -Dhdfs.om.opts=test -Dlog4j.configurationFile=/etc/hadoop/om-audit-log4j2.properties -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.ozone.om.OzoneManagerStarter
hadoop     313  0.0  0.3 127712 25832 ?        Ss   13:06   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-om-om.xml /opt/hadoop/smoketest/compatibility/om.robot
hadoop     320  0.0  0.0  11692  2616 ?        S    13:06   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     321  0.0  0.0  51748  3480 ?        R    13:06   0:00 ps aux</msg>
<status status="PASS" endtime="20210210 13:06:24.961" starttime="20210210 13:06:24.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:06:24.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:06:24.961" starttime="20210210 13:06:24.961"></status>
</kw>
<status status="PASS" endtime="20210210 13:06:24.962" starttime="20210210 13:06:24.952"></status>
</kw>
<msg timestamp="20210210 13:06:24.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:06:24.962" starttime="20210210 13:06:24.952"></status>
</kw>
<msg timestamp="20210210 13:06:24.962" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop     ...</msg>
<status status="PASS" endtime="20210210 13:06:24.962" starttime="20210210 13:06:24.952"></status>
</kw>
<msg timestamp="20210210 13:06:24.963" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone om
hadoop     ...</msg>
<status status="PASS" endtime="20210210 13:06:24.963" starttime="20210210 13:06:24.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HDFS_OM_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:24.963" starttime="20210210 13:06:24.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:24.964" starttime="20210210 13:06:24.963"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:06:24.964" critical="yes" starttime="20210210 13:06:24.950"></status>
</test>
<doc>Test om compatibility</doc>
<status status="PASS" endtime="20210210 13:06:24.965" starttime="20210210 13:06:24.916"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/recon.robot" id="s1-s3" name="Recon">
<test id="s1-s3-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HADOOP_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:28.484" starttime="20210210 13:06:28.483"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:06:28.488" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:06:28.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:06:28.492" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop  ...</msg>
<status status="PASS" endtime="20210210 13:06:28.492" starttime="20210210 13:06:28.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:06:28.493" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop       7 32.1  3.8 3941564 274780 ?      Ssl  13:05   0:11 /usr/lib/jvm/jre//bin/java -Dproc_recon -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.ozone.recon.ReconServer
hadoop     268 22.0  0.3 127712 25868 ?        Ss   13:06   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-recon-recon.xml /opt/hadoop/smoketest/compatibility/recon.robot
hadoop     276  0.0  0.0  11692  2580 ?        S    13:06   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     277  0.0  0.0  51748  3516 ?        R    13:06   0:00 ps aux</msg>
<status status="PASS" endtime="20210210 13:06:28.493" starttime="20210210 13:06:28.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:06:28.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:06:28.494" starttime="20210210 13:06:28.494"></status>
</kw>
<status status="PASS" endtime="20210210 13:06:28.494" starttime="20210210 13:06:28.485"></status>
</kw>
<msg timestamp="20210210 13:06:28.494" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:06:28.494" starttime="20210210 13:06:28.484"></status>
</kw>
<msg timestamp="20210210 13:06:28.495" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop  ...</msg>
<status status="PASS" endtime="20210210 13:06:28.495" starttime="20210210 13:06:28.484"></status>
</kw>
<msg timestamp="20210210 13:06:28.495" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone recon
hadoop  ...</msg>
<status status="PASS" endtime="20210210 13:06:28.495" starttime="20210210 13:06:28.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:28.496" starttime="20210210 13:06:28.495"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:06:28.496" critical="yes" starttime="20210210 13:06:28.482"></status>
</test>
<doc>Test recon compatibility</doc>
<status status="PASS" endtime="20210210 13:06:28.496" starttime="20210210 13:06:28.448"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/scm.robot" id="s1-s4" name="Scm">
<test id="s1-s4-t1" name="Picks up command line options">
<kw name="Pass Execution If" library="BuiltIn">
<doc>Conditionally skips rest of the current test, setup, or teardown with PASS status.</doc>
<arguments>
<arg>'%{HDFS_STORAGECONTAINERMANAGER_OPTS}' == ''</arg>
<arg>Command-line option required for process check</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:31.996" starttime="20210210 13:06:31.995"></status>
</kw>
<kw name="List All Processes" library="os">
<assign>
<var>${processes}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>ps aux</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:06:32.000" level="INFO">Running command 'ps aux 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:06:32.005" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:06:32.005" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop    ...</msg>
<status status="PASS" endtime="20210210 13:06:32.005" starttime="20210210 13:06:31.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:06:32.006" level="INFO">USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop       7 18.0  3.7 4110128 268488 ?      Ssl  13:05   0:07 /usr/lib/jvm/jre//bin/java -Dproc_scm -Dhadoop.opts=test -XX:ParallelGCThreads=8 -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -XX:+CMSParallelRemarkEnabled -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector -Dorg.apache.ratis.thirdparty.io.netty.leakDetection.level=disabled -Dorg.apache.ratis.thirdparty.io.netty.allocator.useCacheForAllThreads=false -Dhdfs.scm.opts=test -Dlog4j.configurationFile=/etc/hadoop/scm-audit-log4j2.properties -Dhadoop.log.dir=/var/log/hadoop -Dhadoop.log.file=ozone.log -Dhadoop.home.dir=/opt/hadoop -Dhadoop.id.str=hadoop -Dhadoop.root.logger=INFO,console -Dhadoop.policy.file=hadoop-policy.xml -Dhadoop.security.logger=INFO,NullAppender org.apache.hadoop.hdds.scm.server.StorageContainerManagerStarter
hadoop     637  0.0  0.3 127712 25664 ?        Ss   13:06   0:00 /usr/bin/python3 /usr/local/bin/robot -v KEY_NAME: -v OM_HA_PARAM: -v OM_SERVICE_ID:om -v OZONE_DIR: -v SECURITY_ENABLED:false --log NONE --report NONE --output /tmp/smoketest/compatibility/result/robot-compatibility-compatibility-scm-scm.xml /opt/hadoop/smoketest/compatibility/scm.robot
hadoop     644  0.0  0.0  11692  2596 ?        S    13:06   0:00 /bin/sh -c ps aux 2&gt;&amp;1
hadoop     645  0.0  0.0  51748  3552 ?        R    13:06   0:00 ps aux</msg>
<status status="PASS" endtime="20210210 13:06:32.006" starttime="20210210 13:06:32.005"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:06:32.007" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:06:32.007" starttime="20210210 13:06:32.006"></status>
</kw>
<status status="PASS" endtime="20210210 13:06:32.007" starttime="20210210 13:06:31.997"></status>
</kw>
<msg timestamp="20210210 13:06:32.007" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:06:32.007" starttime="20210210 13:06:31.997"></status>
</kw>
<msg timestamp="20210210 13:06:32.008" level="INFO">${output} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop    ...</msg>
<status status="PASS" endtime="20210210 13:06:32.008" starttime="20210210 13:06:31.997"></status>
</kw>
<msg timestamp="20210210 13:06:32.008" level="INFO">${processes} = USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
hadoop       1  0.0  0.0    196     4 ?        Ss   13:05   0:00 /usr/local/bin/dumb-init -- entrypoint.sh ozone scm
hadoop    ...</msg>
<status status="PASS" endtime="20210210 13:06:32.008" starttime="20210210 13:06:31.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HDFS_STORAGECONTAINERMANAGER_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:32.008" starttime="20210210 13:06:32.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${processes}</arg>
<arg>%{HADOOP_OPTS}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:06:32.009" starttime="20210210 13:06:32.008"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:06:32.009" critical="yes" starttime="20210210 13:06:31.995"></status>
</test>
<doc>Test scm compatibility</doc>
<status status="PASS" endtime="20210210 13:06:32.010" starttime="20210210 13:06:31.959"></status>
</suite>
<status status="PASS" elapsedtime="203" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="4">Critical Tests</stat>
<stat fail="0" pass="4">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="compatibility" pass="4">compatibility</stat>
<stat fail="0" id="s1-s1" name="Dn" pass="1">compatibility.Dn</stat>
<stat fail="0" id="s1-s2" name="Om" pass="1">compatibility.Om</stat>
<stat fail="0" id="s1-s3" name="Recon" pass="1">compatibility.Recon</stat>
<stat fail="0" id="s1-s4" name="Scm" pass="1">compatibility.Scm</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
