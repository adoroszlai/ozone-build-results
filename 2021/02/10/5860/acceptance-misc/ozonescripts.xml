<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:36:05.675" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/admincli/pipeline.robot" id="s1" name="ozonescripts">
<test id="s1-t1" name="Create pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline create</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:28.259" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:30.034" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:30.034" level="INFO">${output} = PipelineID=d1e177b6-250c-4eed-9367-c2f5bb0310e6 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210210 13:35:30.034" starttime="20210210 13:35:28.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:30.035" level="INFO">PipelineID=d1e177b6-250c-4eed-9367-c2f5bb0310e6 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210210 13:35:30.035" starttime="20210210 13:35:30.034"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:30.036" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:30.036" starttime="20210210 13:35:30.035"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:30.036" starttime="20210210 13:35:28.255"></status>
</kw>
<msg timestamp="20210210 13:35:30.036" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:30.036" starttime="20210210 13:35:28.255"></status>
</kw>
<msg timestamp="20210210 13:35:30.036" level="INFO">${output} = PipelineID=d1e177b6-250c-4eed-9367-c2f5bb0310e6 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210210 13:35:30.036" starttime="20210210 13:35:28.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is created. Factor: ONE, Type: STAND_ALONE</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:30.037" starttime="20210210 13:35:30.036"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
</arguments>
<assign>
<var>${pipeline}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:30.041" level="INFO">Running command 'echo "PipelineID=d1e177b6-250c-4eed-9367-c2f5bb0310e6 is created. Factor: ONE, Type: STAND_ALONE" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:30.044" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:30.044" level="INFO">${output} = d1e177b6-250c-4eed-9367-c2f5bb0310e6</msg>
<status status="PASS" endtime="20210210 13:35:30.044" starttime="20210210 13:35:30.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:30.045" level="INFO">d1e177b6-250c-4eed-9367-c2f5bb0310e6</msg>
<status status="PASS" endtime="20210210 13:35:30.045" starttime="20210210 13:35:30.045"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:30.046" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:30.046" starttime="20210210 13:35:30.045"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:30.046" starttime="20210210 13:35:30.038"></status>
</kw>
<msg timestamp="20210210 13:35:30.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:30.046" starttime="20210210 13:35:30.038"></status>
</kw>
<msg timestamp="20210210 13:35:30.046" level="INFO">${pipeline} = d1e177b6-250c-4eed-9367-c2f5bb0310e6</msg>
<status status="PASS" endtime="20210210 13:35:30.046" starttime="20210210 13:35:30.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
</arguments>
<msg timestamp="20210210 13:35:30.047" level="INFO">${PIPELINE} = d1e177b6-250c-4eed-9367-c2f5bb0310e6</msg>
<status status="PASS" endtime="20210210 13:35:30.047" starttime="20210210 13:35:30.047"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:30.047" critical="yes" starttime="20210210 13:35:28.253"></status>
</test>
<test id="s1-t2" name="List pipelines">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:30.051" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:31.692" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:31.692" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:31.692" starttime="20210210 13:35:30.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:31.693" level="INFO">Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-10T13:35:29.949Z]
Pipeline[ Id: 81bc6611-23ab-4cd1-b2bc-fc8c63730a22, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:be8c04ad-8435-475c-a027-26fa102be6ef, CreationTimestamp2021-02-10T13:35:07.399Z]</msg>
<status status="PASS" endtime="20210210 13:35:31.693" starttime="20210210 13:35:31.693"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:31.694" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:31.694" starttime="20210210 13:35:31.694"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:31.694" starttime="20210210 13:35:30.049"></status>
</kw>
<msg timestamp="20210210 13:35:31.694" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:31.695" starttime="20210210 13:35:30.049"></status>
</kw>
<msg timestamp="20210210 13:35:31.695" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:31.695" starttime="20210210 13:35:30.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:31.695" starttime="20210210 13:35:31.695"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:31.695" critical="yes" starttime="20210210 13:35:30.048"></status>
</test>
<test id="s1-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list --scm scm</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:31.700" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:33.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:33.362" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:33.362" starttime="20210210 13:35:31.698"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:33.363" level="INFO">Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-10T13:35:29.949Z]
Pipeline[ Id: 81bc6611-23ab-4cd1-b2bc-fc8c63730a22, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:be8c04ad-8435-475c-a027-26fa102be6ef, CreationTimestamp2021-02-10T13:35:07.399Z]</msg>
<status status="PASS" endtime="20210210 13:35:33.363" starttime="20210210 13:35:33.362"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:33.363" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:33.364" starttime="20210210 13:35:33.363"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:33.364" starttime="20210210 13:35:31.697"></status>
</kw>
<msg timestamp="20210210 13:35:33.364" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:33.364" starttime="20210210 13:35:31.697"></status>
</kw>
<msg timestamp="20210210 13:35:33.364" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:33.364" starttime="20210210 13:35:31.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:33.365" starttime="20210210 13:35:33.364"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:33.365" critical="yes" starttime="20210210 13:35:31.696"></status>
</test>
<test id="s1-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:33.370" level="INFO">Running command 'ozone admin pipeline deactivate "d1e177b6-250c-4eed-9367-c2f5bb0310e6" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:34.904" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:34.904" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:35:34.904" starttime="20210210 13:35:33.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:34.905" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:35:34.905" starttime="20210210 13:35:34.905"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:34.906" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:34.906" starttime="20210210 13:35:34.906"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:34.906" starttime="20210210 13:35:33.367"></status>
</kw>
<msg timestamp="20210210 13:35:34.906" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:34.907" starttime="20210210 13:35:33.367"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:34.907" starttime="20210210 13:35:33.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:34.910" level="INFO">Running command 'ozone admin pipeline list | grep "d1e177b6-250c-4eed-9367-c2f5bb0310e6" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:36.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:36.499" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:36.499" starttime="20210210 13:35:34.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:36.500" level="INFO">Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:DORMANT, leaderId:, CreationTimestamp2021-02-10T13:35:29.949Z]</msg>
<status status="PASS" endtime="20210210 13:35:36.500" starttime="20210210 13:35:36.499"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:36.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:36.501" starttime="20210210 13:35:36.500"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:36.501" starttime="20210210 13:35:34.908"></status>
</kw>
<msg timestamp="20210210 13:35:36.501" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:36.501" starttime="20210210 13:35:34.907"></status>
</kw>
<msg timestamp="20210210 13:35:36.502" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:36.502" starttime="20210210 13:35:34.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>DORMANT</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:36.502" starttime="20210210 13:35:36.502"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:36.502" critical="yes" starttime="20210210 13:35:33.365"></status>
</test>
<test id="s1-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:36.507" level="INFO">Running command 'ozone admin pipeline activate "d1e177b6-250c-4eed-9367-c2f5bb0310e6" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:38.136" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:38.136" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:35:38.136" starttime="20210210 13:35:36.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:38.137" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:35:38.137" starttime="20210210 13:35:38.136"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:38.137" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:38.137" starttime="20210210 13:35:38.137"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:38.138" starttime="20210210 13:35:36.504"></status>
</kw>
<msg timestamp="20210210 13:35:38.138" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:38.138" starttime="20210210 13:35:36.504"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:38.138" starttime="20210210 13:35:36.504"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:38.141" level="INFO">Running command 'ozone admin pipeline list | grep "d1e177b6-250c-4eed-9367-c2f5bb0310e6" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:39.716" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:39.717" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:39.717" starttime="20210210 13:35:38.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:39.718" level="INFO">Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-10T13:35:29.949Z]</msg>
<status status="PASS" endtime="20210210 13:35:39.718" starttime="20210210 13:35:39.717"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:39.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:39.718" starttime="20210210 13:35:39.718"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:39.719" starttime="20210210 13:35:38.139"></status>
</kw>
<msg timestamp="20210210 13:35:39.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:39.719" starttime="20210210 13:35:38.139"></status>
</kw>
<msg timestamp="20210210 13:35:39.719" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:39.719" starttime="20210210 13:35:38.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:39.720" starttime="20210210 13:35:39.719"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:39.720" critical="yes" starttime="20210210 13:35:36.503"></status>
</test>
<test id="s1-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:39.724" level="INFO">Running command 'ozone admin pipeline close "d1e177b6-250c-4eed-9367-c2f5bb0310e6" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:41.321" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:41.321" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:35:41.321" starttime="20210210 13:35:39.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:41.322" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:35:41.322" starttime="20210210 13:35:41.322"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:41.323" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:41.323" starttime="20210210 13:35:41.323"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:41.323" starttime="20210210 13:35:39.722"></status>
</kw>
<msg timestamp="20210210 13:35:41.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:41.323" starttime="20210210 13:35:39.722"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:41.324" starttime="20210210 13:35:39.721"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:41.327" level="INFO">Running command 'ozone admin pipeline list | grep "d1e177b6-250c-4eed-9367-c2f5bb0310e6" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:42.960" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:35:42.960" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:42.960" starttime="20210210 13:35:41.325"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:42.961" level="INFO">Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:CLOSED, leaderId:, CreationTimestamp2021-02-10T13:35:29.949Z]</msg>
<status status="PASS" endtime="20210210 13:35:42.961" starttime="20210210 13:35:42.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:35:42.962" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:35:42.962" starttime="20210210 13:35:42.962"></status>
</kw>
<status status="PASS" endtime="20210210 13:35:42.962" starttime="20210210 13:35:41.325"></status>
</kw>
<msg timestamp="20210210 13:35:42.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:35:42.962" starttime="20210210 13:35:41.324"></status>
</kw>
<msg timestamp="20210210 13:35:42.963" level="INFO">${output} = Pipeline[ Id: d1e177b6-250c-4eed-9367-c2f5bb0310e6, Nodes: be8c04ad-8435-475c-a027-26fa102be6ef{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 13:35:42.963" starttime="20210210 13:35:41.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>CLOSED</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:42.963" starttime="20210210 13:35:42.963"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:42.963" critical="yes" starttime="20210210 13:35:39.721"></status>
</test>
<test id="s1-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin pipeline</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:42.967" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:44.029" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:35:44.030" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210210 13:35:44.030" starttime="20210210 13:35:42.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:44.031" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" endtime="20210210 13:35:44.031" starttime="20210210 13:35:44.030"></status>
</kw>
<msg timestamp="20210210 13:35:44.031" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210210 13:35:44.031" starttime="20210210 13:35:42.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Incomplete command</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:44.032" starttime="20210210 13:35:44.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>close</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:44.032" starttime="20210210 13:35:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>create</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:44.032" starttime="20210210 13:35:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>deactivate</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:44.033" starttime="20210210 13:35:44.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>list</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:44.033" starttime="20210210 13:35:44.033"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:44.034" critical="yes" starttime="20210210 13:35:42.964"></status>
</test>
<test id="s1-t8" name="List pipelines on unknown host">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin --verbose pipeline list --scm unknown-host</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:35:44.038" level="INFO">Running command 'ozone admin --verbose pipeline list --scm unknown-host 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:35:45.467" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:35:45.467" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210210 13:35:45.467" starttime="20210210 13:35:44.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:35:45.468" level="INFO">java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy16.submitRequest(Unknown Source)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:136)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.listPipelines(StorageContainerLocationProtocolClientSideTranslatorPB.java:444)
	at org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.listPipelines(ContainerOperationClient.java:312)
	at org.apache.hadoop.hdds.scm.cli.pipeline.ListPipelinesSubcommand.execute(ListPipelinesSubcommand.java:53)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:39)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:29)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.hdds.cli.OzoneAdmin.main(OzoneAdmin.java:65)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 23 more</msg>
<status status="PASS" endtime="20210210 13:35:45.468" starttime="20210210 13:35:45.467"></status>
</kw>
<msg timestamp="20210210 13:35:45.469" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210210 13:35:45.469" starttime="20210210 13:35:44.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Invalid host name</arg>
</arguments>
<status status="PASS" endtime="20210210 13:35:45.469" starttime="20210210 13:35:45.469"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:35:45.469" critical="yes" starttime="20210210 13:35:44.034"></status>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" endtime="20210210 13:35:45.471" starttime="20210210 13:35:28.210"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonescripts" pass="8">ozonescripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
