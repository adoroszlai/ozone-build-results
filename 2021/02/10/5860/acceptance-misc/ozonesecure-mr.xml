<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 13:39:48.327" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:23.413" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:27.146" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:38:27.146" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:38:27.146" starttime="20210210 13:38:23.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:27.147" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:38:27.147" starttime="20210210 13:38:27.147"></status>
</kw>
<msg timestamp="20210210 13:38:27.148" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 13:38:27.148" starttime="20210210 13:38:23.409"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:27.153" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:30.369" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:30.369" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:30.369" starttime="20210210 13:38:27.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:30.370" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:30.370" starttime="20210210 13:38:30.370"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:30.371" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:30.371" starttime="20210210 13:38:30.371"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:30.371" starttime="20210210 13:38:27.150"></status>
</kw>
<msg timestamp="20210210 13:38:30.371" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:30.371" starttime="20210210 13:38:27.149"></status>
</kw>
<msg timestamp="20210210 13:38:30.372" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 13:38:30.372" starttime="20210210 13:38:27.149"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 13:38:30.372" starttime="20210210 13:38:30.372"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:30.372" starttime="20210210 13:38:27.149"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:30.372" starttime="20210210 13:38:27.148"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:30.376" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:33.354" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:33.354" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:33.354" starttime="20210210 13:38:30.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:33.355" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:33.355" starttime="20210210 13:38:33.355"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:33.356" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:33.356" starttime="20210210 13:38:33.356"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:33.356" starttime="20210210 13:38:30.374"></status>
</kw>
<msg timestamp="20210210 13:38:33.357" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:33.357" starttime="20210210 13:38:30.374"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:33.357" starttime="20210210 13:38:30.373"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:33.357" starttime="20210210 13:38:30.373"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:33.357" starttime="20210210 13:38:30.372"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 13:38:33.357" starttime="20210210 13:38:33.357"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:33.365" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:36.704" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:36.704" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:38...</msg>
<status status="PASS" endtime="20210210 13:38:36.704" starttime="20210210 13:38:33.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:36.705" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:38:33.270Z",
  "modificationTime" : "2021-02-10T13:38:33.270Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 13:38:36.705" starttime="20210210 13:38:36.705"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:36.706" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:36.706" starttime="20210210 13:38:36.705"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:36.706" starttime="20210210 13:38:33.359"></status>
</kw>
<msg timestamp="20210210 13:38:36.706" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:36.706" starttime="20210210 13:38:33.358"></status>
</kw>
<msg timestamp="20210210 13:38:36.706" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T13:38...</msg>
<status status="PASS" endtime="20210210 13:38:36.706" starttime="20210210 13:38:33.358"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 13:38:36.707" starttime="20210210 13:38:36.707"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:38:36.710" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:38:36.710" starttime="20210210 13:38:36.710"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:38:36.711" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:38:36.711" starttime="20210210 13:38:36.711"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:36.711" starttime="20210210 13:38:36.709"></status>
</kw>
<msg timestamp="20210210 13:38:36.712" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:38:36.712" starttime="20210210 13:38:36.709"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:36.712" starttime="20210210 13:38:36.708"></status>
</kw>
<msg timestamp="20210210 13:38:36.712" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:38:36.712" starttime="20210210 13:38:36.708"></status>
</kw>
<msg timestamp="20210210 13:38:36.712" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 13:38:36.712" starttime="20210210 13:38:36.707"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:36.715" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:40.068" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:40.068" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:40.068" starttime="20210210 13:38:36.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:40.069" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:40.069" starttime="20210210 13:38:40.069"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:40.070" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:40.070" starttime="20210210 13:38:40.070"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:40.070" starttime="20210210 13:38:36.713"></status>
</kw>
<msg timestamp="20210210 13:38:40.070" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:40.071" starttime="20210210 13:38:36.713"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:40.071" starttime="20210210 13:38:36.712"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:40.074" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:47.219" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:47.219" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:47.219" starttime="20210210 13:38:40.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:47.220" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:47.220" starttime="20210210 13:38:47.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:47.221" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:47.221" starttime="20210210 13:38:47.220"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:47.221" starttime="20210210 13:38:40.072"></status>
</kw>
<msg timestamp="20210210 13:38:47.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:47.221" starttime="20210210 13:38:40.072"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:47.222" starttime="20210210 13:38:40.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:47.225" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:52.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:52.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:52.251" starttime="20210210 13:38:47.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:52.252" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:52.252" starttime="20210210 13:38:52.252"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:52.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:52.253" starttime="20210210 13:38:52.253"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:52.253" starttime="20210210 13:38:47.222"></status>
</kw>
<msg timestamp="20210210 13:38:52.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:52.253" starttime="20210210 13:38:47.222"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:52.254" starttime="20210210 13:38:47.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:52.259" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:57.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:57.070" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:57.070" starttime="20210210 13:38:52.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:57.071" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:57.071" starttime="20210210 13:38:57.071"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:57.072" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:57.072" starttime="20210210 13:38:57.072"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:57.072" starttime="20210210 13:38:52.255"></status>
</kw>
<msg timestamp="20210210 13:38:57.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:57.072" starttime="20210210 13:38:52.254"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:57.073" starttime="20210210 13:38:52.254"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:38:57.073" critical="yes" starttime="20210210 13:38:23.408"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:38:57.078" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:38:57.078" starttime="20210210 13:38:57.078"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:38:57.079" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:38:57.079" starttime="20210210 13:38:57.078"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:57.079" starttime="20210210 13:38:57.077"></status>
</kw>
<msg timestamp="20210210 13:38:57.079" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:38:57.079" starttime="20210210 13:38:57.077"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:57.079" starttime="20210210 13:38:57.076"></status>
</kw>
<msg timestamp="20210210 13:38:57.080" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:38:57.080" starttime="20210210 13:38:57.076"></status>
</kw>
<msg timestamp="20210210 13:38:57.080" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:38:57.080" starttime="20210210 13:38:57.074"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:57.083" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:59.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:59.997" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:59.997" starttime="20210210 13:38:57.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:59.998" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:59.998" starttime="20210210 13:38:59.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:59.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:59.998" starttime="20210210 13:38:59.998"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:59.999" starttime="20210210 13:38:57.080"></status>
</kw>
<msg timestamp="20210210 13:38:59.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:59.999" starttime="20210210 13:38:57.080"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:59.999" starttime="20210210 13:38:57.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:00.002" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:02.852" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:02.853" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:39:02.853" starttime="20210210 13:39:00.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:02.854" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:39:02.854" starttime="20210210 13:39:02.853"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:02.854" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:02.854" starttime="20210210 13:39:02.854"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:02.855" starttime="20210210 13:39:00.000"></status>
</kw>
<msg timestamp="20210210 13:39:02.855" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:02.855" starttime="20210210 13:39:00.000"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:02.855" starttime="20210210 13:38:59.999"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:39:02.855" critical="yes" starttime="20210210 13:38:57.073"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 13:39:02.857" starttime="20210210 13:38:23.362"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-o3fs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:39:26.392" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:39:26.392" starttime="20210210 13:39:26.392"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:39:26.393" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:39:26.393" starttime="20210210 13:39:26.392"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:26.393" starttime="20210210 13:39:26.391"></status>
</kw>
<msg timestamp="20210210 13:39:26.393" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:39:26.393" starttime="20210210 13:39:26.391"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:26.393" starttime="20210210 13:39:26.390"></status>
</kw>
<msg timestamp="20210210 13:39:26.393" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:39:26.393" starttime="20210210 13:39:26.390"></status>
</kw>
<msg timestamp="20210210 13:39:26.394" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:39:26.394" starttime="20210210 13:39:26.389"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:39:26.394" level="INFO">${random} = 12144</msg>
<status status="PASS" endtime="20210210 13:39:26.394" starttime="20210210 13:39:26.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:26.398" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12144 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:29.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:29.890" level="INFO">${output} = 2021-02-10 13:39:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:39:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 13:39:29.890" starttime="20210210 13:39:26.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:29.893" level="INFO">2021-02-10 13:39:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:39:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:39:28 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:39:28 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:39:28 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9B9455E5A424-&gt;18865651-9790-4211-87c3-7a11728fc78c
2021-02-10 13:39:28 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 13:39:29.893" starttime="20210210 13:39:29.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:29.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:29.893" starttime="20210210 13:39:29.893"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:29.894" starttime="20210210 13:39:26.395"></status>
</kw>
<msg timestamp="20210210 13:39:29.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:29.894" starttime="20210210 13:39:26.395"></status>
</kw>
<msg timestamp="20210210 13:39:29.894" level="INFO">${result} = 2021-02-10 13:39:28 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:39:28 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 13:39:29.894" starttime="20210210 13:39:26.394"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:29.897" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:31.668" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:31.668" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:39 o3fs://bucket1.volume1.om/ozone-12144
dr...</msg>
<status status="PASS" endtime="20210210 13:39:31.668" starttime="20210210 13:39:29.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:31.670" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:39 o3fs://bucket1.volume1.om/ozone-12144
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:38 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 13:39:31.670" starttime="20210210 13:39:31.669"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:31.670" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:31.670" starttime="20210210 13:39:31.670"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:31.671" starttime="20210210 13:39:29.895"></status>
</kw>
<msg timestamp="20210210 13:39:31.671" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:31.671" starttime="20210210 13:39:29.895"></status>
</kw>
<msg timestamp="20210210 13:39:31.671" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 13:38 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 13:39 o3fs://bucket1.volume1.om/ozone-12144
dr...</msg>
<status status="PASS" endtime="20210210 13:39:31.671" starttime="20210210 13:39:29.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 13:39:31.672" starttime="20210210 13:39:31.671"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 13:39:31.672" critical="yes" starttime="20210210 13:39:26.388"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 13:39:31.673" starttime="20210210 13:39:26.341"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s3" name="Kinit-Hadoop">
<test id="s1-s3-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:21.922" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:21.924" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:21.924" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210210 13:39:21.925" starttime="20210210 13:39:21.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:21.925" level="INFO">rm</msg>
<status status="PASS" endtime="20210210 13:39:21.926" starttime="20210210 13:39:21.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:21.926" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:21.926" starttime="20210210 13:39:21.926"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:21.926" starttime="20210210 13:39:21.918"></status>
</kw>
<msg timestamp="20210210 13:39:21.926" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:21.927" starttime="20210210 13:39:21.918"></status>
</kw>
<msg timestamp="20210210 13:39:21.927" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210210 13:39:21.927" starttime="20210210 13:39:21.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:39:21.928" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:39:21.928" starttime="20210210 13:39:21.927"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:21.931" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:21.939" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:21.939" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:39:21.939" starttime="20210210 13:39:21.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:21.940" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:39:21.940" starttime="20210210 13:39:21.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:21.940" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:21.941" starttime="20210210 13:39:21.940"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:21.941" starttime="20210210 13:39:21.929"></status>
</kw>
<msg timestamp="20210210 13:39:21.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:21.941" starttime="20210210 13:39:21.929"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:21.941" starttime="20210210 13:39:21.928"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:21.941" starttime="20210210 13:39:21.928"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:21.941" starttime="20210210 13:39:21.917"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:39:21.941" critical="yes" starttime="20210210 13:39:21.916"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210210 13:39:21.942" starttime="20210210 13:39:21.874"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s4" name="Kinit">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:19.073" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:19.075" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:19.075" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210210 13:38:19.075" starttime="20210210 13:38:19.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:19.076" level="INFO">om</msg>
<status status="PASS" endtime="20210210 13:38:19.076" starttime="20210210 13:38:19.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:19.077" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:19.077" starttime="20210210 13:38:19.076"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:19.077" starttime="20210210 13:38:19.069"></status>
</kw>
<msg timestamp="20210210 13:38:19.077" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:19.077" starttime="20210210 13:38:19.069"></status>
</kw>
<msg timestamp="20210210 13:38:19.077" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210210 13:38:19.077" starttime="20210210 13:38:19.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 13:38:19.078" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 13:38:19.078" starttime="20210210 13:38:19.077"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:38:19.081" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:38:19.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:38:19.087" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 13:38:19.087" starttime="20210210 13:38:19.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:38:19.088" level="INFO"></msg>
<status status="PASS" endtime="20210210 13:38:19.088" starttime="20210210 13:38:19.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:38:19.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:38:19.089" starttime="20210210 13:38:19.088"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:19.089" starttime="20210210 13:38:19.079"></status>
</kw>
<msg timestamp="20210210 13:38:19.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:38:19.089" starttime="20210210 13:38:19.079"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:19.089" starttime="20210210 13:38:19.078"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:19.089" starttime="20210210 13:38:19.078"></status>
</kw>
<status status="PASS" endtime="20210210 13:38:19.089" starttime="20210210 13:38:19.068"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 13:38:19.089" critical="yes" starttime="20210210 13:38:19.067"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210210 13:38:19.091" starttime="20210210 13:38:19.022"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s5" name="mapreduce-o3fs">
<test id="s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:36.003" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:36.007" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:36.007" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:36.007" starttime="20210210 13:39:35.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:36.008" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:36.008" starttime="20210210 13:39:36.007"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:36.008" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:36.009" starttime="20210210 13:39:36.008"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:36.009" starttime="20210210 13:39:35.999"></status>
</kw>
<msg timestamp="20210210 13:39:36.009" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:36.009" starttime="20210210 13:39:35.999"></status>
</kw>
<msg timestamp="20210210 13:39:36.009" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:36.009" starttime="20210210 13:39:35.998"></status>
</kw>
<msg timestamp="20210210 13:39:36.009" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:36.009" starttime="20210210 13:39:35.998"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:39:36.013" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:39:36.013" starttime="20210210 13:39:36.013"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:39:36.014" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:39:36.014" starttime="20210210 13:39:36.014"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:36.014" starttime="20210210 13:39:36.013"></status>
</kw>
<msg timestamp="20210210 13:39:36.014" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:39:36.014" starttime="20210210 13:39:36.012"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:36.015" starttime="20210210 13:39:36.012"></status>
</kw>
<msg timestamp="20210210 13:39:36.015" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:39:36.015" starttime="20210210 13:39:36.010"></status>
</kw>
<msg timestamp="20210210 13:39:36.015" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:39:36.015" starttime="20210210 13:39:36.010"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:36.018" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:39.968" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:39:39.968" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:39:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:39:38 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 13:39:39.968" starttime="20210210 13:39:36.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:39.969" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 13:39:38 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 13:39:38 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 13:39:38 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 13:39:38 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 13:39:38 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A6BB101E7A1A-&gt;b8791a37-f337-4e08-a2a5-0a1cd0a01fbe
2021-02-10 13:39:38 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 13:39:39 INFO  AbstractService:267 - Service org.apache.hadoop.yarn.client.api.impl.YarnClientImpl failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 37 more
2021-02-10 13:39:39 INFO  AbstractService:267 - Service org.apache.hadoop.mapred.ResourceMgrDelegate failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 37 more
2021-02-10 13:39:39 INFO  Cluster:149 - Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 37 more
java.io.IOException: Cannot initialize Cluster. Please check your configuration for mapreduce.framework.name and the correspond server addresses.
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:116)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.QuasiMonteCarlo.estimatePi(QuasiMonteCarlo.java:307)
	at org.apache.hadoop.examples.QuasiMonteCarlo.run(QuasiMonteCarlo.java:360)
	at org.apache.hadoop.util.ToolRunner.run(ToolRunner.java:76)
	at org.apache.hadoop.examples.QuasiMonteCarlo.main(QuasiMonteCarlo.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
	Suppressed: java.io.IOException: Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:148)
		... 27 more
	Caused by: java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
		at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
		at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
		at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
		at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
		at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
		... 27 more
	Caused by: java.net.UnknownHostException: jhs
		... 37 more</msg>
<status status="PASS" endtime="20210210 13:39:39.969" starttime="20210210 13:39:39.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:39.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210210 13:39:39.970" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210210 13:39:39.970" starttime="20210210 13:39:39.970"></status>
</kw>
<status status="FAIL" endtime="20210210 13:39:39.971" starttime="20210210 13:39:36.016"></status>
</kw>
<msg timestamp="20210210 13:39:39.971" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210210 13:39:39.971" starttime="20210210 13:39:36.016"></status>
</kw>
<status status="FAIL" endtime="20210210 13:39:39.971" starttime="20210210 13:39:36.015"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20210210 13:39:39.971" critical="yes" starttime="20210210 13:39:35.997">255 != 0</status>
</test>
<test id="s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:39.976" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:39.982" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 13:39:39.982" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:39.982" starttime="20210210 13:39:39.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:39.983" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:39.983" starttime="20210210 13:39:39.982"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:39.984" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 13:39:39.984" starttime="20210210 13:39:39.983"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.984" starttime="20210210 13:39:39.974"></status>
</kw>
<msg timestamp="20210210 13:39:39.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 13:39:39.984" starttime="20210210 13:39:39.973"></status>
</kw>
<msg timestamp="20210210 13:39:39.984" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:39.984" starttime="20210210 13:39:39.973"></status>
</kw>
<msg timestamp="20210210 13:39:39.985" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 13:39:39.985" starttime="20210210 13:39:39.973"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 13:39:39.985" level="INFO">${random} = YN3Rr5yY</msg>
<status status="PASS" endtime="20210210 13:39:39.985" starttime="20210210 13:39:39.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:39:39.988" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:39:39.988" starttime="20210210 13:39:39.988"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:39:39.989" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:39:39.989" starttime="20210210 13:39:39.989"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.989" starttime="20210210 13:39:39.987"></status>
</kw>
<msg timestamp="20210210 13:39:39.989" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:39:39.989" starttime="20210210 13:39:39.987"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.990" starttime="20210210 13:39:39.986"></status>
</kw>
<msg timestamp="20210210 13:39:39.990" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:39:39.990" starttime="20210210 13:39:39.986"></status>
</kw>
<msg timestamp="20210210 13:39:39.990" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 13:39:39.990" starttime="20210210 13:39:39.985"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:39:39.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:39:39.993" starttime="20210210 13:39:39.993"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:39:39.993" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:39:39.993" starttime="20210210 13:39:39.993"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.994" starttime="20210210 13:39:39.992"></status>
</kw>
<msg timestamp="20210210 13:39:39.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:39:39.994" starttime="20210210 13:39:39.992"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.994" starttime="20210210 13:39:39.991"></status>
</kw>
<msg timestamp="20210210 13:39:39.994" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:39:39.994" starttime="20210210 13:39:39.991"></status>
</kw>
<msg timestamp="20210210 13:39:39.994" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 13:39:39.994" starttime="20210210 13:39:39.990"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 13:39:39.997" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 13:39:39.997" starttime="20210210 13:39:39.997"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 13:39:39.998" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 13:39:39.998" starttime="20210210 13:39:39.997"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.998" starttime="20210210 13:39:39.996"></status>
</kw>
<msg timestamp="20210210 13:39:39.998" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 13:39:39.998" starttime="20210210 13:39:39.996"></status>
</kw>
<status status="PASS" endtime="20210210 13:39:39.998" starttime="20210210 13:39:39.995"></status>
</kw>
<msg timestamp="20210210 13:39:39.998" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-YN3Rr5yY.txt</msg>
<status status="PASS" endtime="20210210 13:39:39.998" starttime="20210210 13:39:39.995"></status>
</kw>
<msg timestamp="20210210 13:39:39.999" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-YN3Rr5yY.txt</msg>
<status status="PASS" endtime="20210210 13:39:39.999" starttime="20210210 13:39:39.994"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 13:39:40.002" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-YN3Rr5yY.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 13:39:41.891" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 13:39:41.891" level="INFO">${output} = 2021-02-10 13:39:41 INFO  AbstractService:267 - Service org.apache.hadoop.yarn.client.api.impl.YarnClientImpl failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: ...</msg>
<status status="PASS" endtime="20210210 13:39:41.891" starttime="20210210 13:39:40.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 13:39:41.892" level="INFO">2021-02-10 13:39:41 INFO  AbstractService:267 - Service org.apache.hadoop.yarn.client.api.impl.YarnClientImpl failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 34 more
2021-02-10 13:39:41 INFO  AbstractService:267 - Service org.apache.hadoop.mapred.ResourceMgrDelegate failed in state INITED
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 34 more
2021-02-10 13:39:41 INFO  Cluster:149 - Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
	at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
	at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
	at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
	at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
	at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
	at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
	at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
Caused by: java.net.UnknownHostException: jhs
	... 34 more
java.io.IOException: Cannot initialize Cluster. Please check your configuration for mapreduce.framework.name and the correspond server addresses.
	at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:116)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:109)
	at org.apache.hadoop.mapreduce.Cluster.&lt;init&gt;(Cluster.java:102)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1535)
	at org.apache.hadoop.mapreduce.Job$10.run(Job.java:1531)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.Subject.doAs(Subject.java:422)
	at org.apache.hadoop.security.UserGroupInformation.doAs(UserGroupInformation.java:1762)
	at org.apache.hadoop.mapreduce.Job.connect(Job.java:1531)
	at org.apache.hadoop.mapreduce.Job.submit(Job.java:1559)
	at org.apache.hadoop.mapreduce.Job.waitForCompletion(Job.java:1583)
	at org.apache.hadoop.examples.WordCount.main(WordCount.java:87)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.ProgramDriver$ProgramDescription.invoke(ProgramDriver.java:71)
	at org.apache.hadoop.util.ProgramDriver.run(ProgramDriver.java:144)
	at org.apache.hadoop.examples.ExampleDriver.main(ExampleDriver.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.hadoop.util.RunJar.run(RunJar.java:323)
	at org.apache.hadoop.util.RunJar.main(RunJar.java:236)
	Suppressed: java.io.IOException: Failed to use org.apache.hadoop.mapred.YarnClientProtocolProvider due to error: 
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:148)
		... 24 more
	Caused by: java.lang.IllegalArgumentException: java.net.UnknownHostException: jhs
		at org.apache.hadoop.security.SecurityUtil.buildTokenService(SecurityUtil.java:465)
		at org.apache.hadoop.yarn.util.timeline.TimelineUtils.buildTimelineTokenService(TimelineUtils.java:165)
		at org.apache.hadoop.yarn.client.api.impl.YarnClientImpl.serviceInit(YarnClientImpl.java:191)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.serviceInit(ResourceMgrDelegate.java:115)
		at org.apache.hadoop.service.AbstractService.init(AbstractService.java:164)
		at org.apache.hadoop.mapred.ResourceMgrDelegate.&lt;init&gt;(ResourceMgrDelegate.java:109)
		at org.apache.hadoop.mapred.YARNRunner.&lt;init&gt;(YARNRunner.java:153)
		at org.apache.hadoop.mapred.YarnClientProtocolProvider.create(YarnClientProtocolProvider.java:34)
		at org.apache.hadoop.mapreduce.Cluster.initialize(Cluster.java:130)
		... 24 more
	Caused by: java.net.UnknownHostException: jhs
		... 34 more</msg>
<status status="PASS" endtime="20210210 13:39:41.893" starttime="20210210 13:39:41.891"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 13:39:41.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<msg timestamp="20210210 13:39:41.894" level="FAIL">255 != 0</msg>
<status status="FAIL" endtime="20210210 13:39:41.894" starttime="20210210 13:39:41.893"></status>
</kw>
<status status="FAIL" endtime="20210210 13:39:41.894" starttime="20210210 13:39:39.999"></status>
</kw>
<msg timestamp="20210210 13:39:41.894" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="FAIL" endtime="20210210 13:39:41.894" starttime="20210210 13:39:39.999"></status>
</kw>
<status status="FAIL" endtime="20210210 13:39:41.894" starttime="20210210 13:39:39.999"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="FAIL" endtime="20210210 13:39:41.894" critical="yes" starttime="20210210 13:39:39.972">255 != 0</status>
</test>
<doc>Execute MR jobs</doc>
<status status="FAIL" endtime="20210210 13:39:41.895" starttime="20210210 13:39:35.950"></status>
</suite>
<status status="FAIL" elapsedtime="50909" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="2" pass="5">Critical Tests</stat>
<stat fail="2" pass="5">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="2" id="s1" name="ozonesecure-mr" pass="5">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s4" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="2" id="s1-s5" name="mapreduce-o3fs" pass="0">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
