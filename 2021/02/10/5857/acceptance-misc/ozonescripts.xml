<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 10:06:36.703" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite source="/opt/hadoop/smoketest/admincli/pipeline.robot" id="s1" name="ozonescripts">
<test id="s1-t1" name="Create pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline create</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:05:56.010" level="INFO">Running command 'ozone admin pipeline create 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:05:57.889" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:05:57.889" level="INFO">${output} = PipelineID=bf61dd5b-818b-44f7-b611-c83ffc374c31 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210210 10:05:57.890" starttime="20210210 10:05:56.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:05:57.891" level="INFO">PipelineID=bf61dd5b-818b-44f7-b611-c83ffc374c31 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210210 10:05:57.891" starttime="20210210 10:05:57.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:05:57.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:05:57.892" starttime="20210210 10:05:57.891"></status>
</kw>
<status status="PASS" endtime="20210210 10:05:57.892" starttime="20210210 10:05:56.006"></status>
</kw>
<msg timestamp="20210210 10:05:57.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:05:57.892" starttime="20210210 10:05:56.006"></status>
</kw>
<msg timestamp="20210210 10:05:57.893" level="INFO">${output} = PipelineID=bf61dd5b-818b-44f7-b611-c83ffc374c31 is created. Factor: ONE, Type: STAND_ALONE</msg>
<status status="PASS" endtime="20210210 10:05:57.893" starttime="20210210 10:05:56.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>is created. Factor: ONE, Type: STAND_ALONE</arg>
</arguments>
<status status="PASS" endtime="20210210 10:05:57.893" starttime="20210210 10:05:57.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>echo "${output}" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'='</arg>
</arguments>
<assign>
<var>${pipeline}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:05:57.898" level="INFO">Running command 'echo "PipelineID=bf61dd5b-818b-44f7-b611-c83ffc374c31 is created. Factor: ONE, Type: STAND_ALONE" | grep 'is created' | cut -f1 -d' ' | cut -f2 -d'=' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:05:57.901" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:05:57.901" level="INFO">${output} = bf61dd5b-818b-44f7-b611-c83ffc374c31</msg>
<status status="PASS" endtime="20210210 10:05:57.901" starttime="20210210 10:05:57.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:05:57.902" level="INFO">bf61dd5b-818b-44f7-b611-c83ffc374c31</msg>
<status status="PASS" endtime="20210210 10:05:57.902" starttime="20210210 10:05:57.901"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:05:57.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:05:57.903" starttime="20210210 10:05:57.902"></status>
</kw>
<status status="PASS" endtime="20210210 10:05:57.903" starttime="20210210 10:05:57.894"></status>
</kw>
<msg timestamp="20210210 10:05:57.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:05:57.903" starttime="20210210 10:05:57.894"></status>
</kw>
<msg timestamp="20210210 10:05:57.903" level="INFO">${pipeline} = bf61dd5b-818b-44f7-b611-c83ffc374c31</msg>
<status status="PASS" endtime="20210210 10:05:57.903" starttime="20210210 10:05:57.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${PIPELINE}</arg>
<arg>${pipeline}</arg>
</arguments>
<msg timestamp="20210210 10:05:57.904" level="INFO">${PIPELINE} = bf61dd5b-818b-44f7-b611-c83ffc374c31</msg>
<status status="PASS" endtime="20210210 10:05:57.904" starttime="20210210 10:05:57.904"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:05:57.904" critical="yes" starttime="20210210 10:05:56.004"></status>
</test>
<test id="s1-t2" name="List pipelines">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:05:57.909" level="INFO">Running command 'ozone admin pipeline list 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:05:59.910" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:05:59.911" level="INFO">${output} = Pipeline[ Id: 34029ec5-d4c6-4fc4-85df-6f295330365e, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:05:59.911" starttime="20210210 10:05:57.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:05:59.912" level="INFO">Pipeline[ Id: 34029ec5-d4c6-4fc4-85df-6f295330365e, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:eff8877a-39bd-47f9-962f-c78e86abbe47, CreationTimestamp2021-02-10T10:05:33.497Z]
Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-10T10:05:57.795Z]</msg>
<status status="PASS" endtime="20210210 10:05:59.912" starttime="20210210 10:05:59.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:05:59.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:05:59.913" starttime="20210210 10:05:59.913"></status>
</kw>
<status status="PASS" endtime="20210210 10:05:59.913" starttime="20210210 10:05:57.907"></status>
</kw>
<msg timestamp="20210210 10:05:59.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:05:59.914" starttime="20210210 10:05:57.906"></status>
</kw>
<msg timestamp="20210210 10:05:59.914" level="INFO">${output} = Pipeline[ Id: 34029ec5-d4c6-4fc4-85df-6f295330365e, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:05:59.914" starttime="20210210 10:05:57.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210210 10:05:59.914" starttime="20210210 10:05:59.914"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:05:59.915" critical="yes" starttime="20210210 10:05:57.905"></status>
</test>
<test id="s1-t3" name="List pipelines with explicit host">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list --scm scm</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:05:59.920" level="INFO">Running command 'ozone admin pipeline list --scm scm 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:01.742" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:01.742" level="INFO">${output} = Pipeline[ Id: 34029ec5-d4c6-4fc4-85df-6f295330365e, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:01.743" starttime="20210210 10:05:59.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:01.744" level="INFO">Pipeline[ Id: 34029ec5-d4c6-4fc4-85df-6f295330365e, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:RATIS, Factor:ONE, State:OPEN, leaderId:eff8877a-39bd-47f9-962f-c78e86abbe47, CreationTimestamp2021-02-10T10:05:33.497Z]
Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-10T10:05:57.795Z]</msg>
<status status="PASS" endtime="20210210 10:06:01.744" starttime="20210210 10:06:01.743"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:01.744" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:01.744" starttime="20210210 10:06:01.744"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:01.745" starttime="20210210 10:05:59.917"></status>
</kw>
<msg timestamp="20210210 10:06:01.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:01.745" starttime="20210210 10:05:59.917"></status>
</kw>
<msg timestamp="20210210 10:06:01.745" level="INFO">${output} = Pipeline[ Id: 34029ec5-d4c6-4fc4-85df-6f295330365e, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:01.745" starttime="20210210 10:05:59.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Factor:ONE</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:01.746" starttime="20210210 10:06:01.745"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:06:01.746" critical="yes" starttime="20210210 10:05:59.916"></status>
</test>
<test id="s1-t4" name="Deactivate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline deactivate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:01.751" level="INFO">Running command 'ozone admin pipeline deactivate "bf61dd5b-818b-44f7-b611-c83ffc374c31" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:03.620" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:03.620" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:06:03.621" starttime="20210210 10:06:01.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:03.622" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:06:03.622" starttime="20210210 10:06:03.621"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:03.622" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:03.623" starttime="20210210 10:06:03.622"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:03.623" starttime="20210210 10:06:01.749"></status>
</kw>
<msg timestamp="20210210 10:06:03.623" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:03.623" starttime="20210210 10:06:01.748"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:03.624" starttime="20210210 10:06:01.748"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:03.627" level="INFO">Running command 'ozone admin pipeline list | grep "bf61dd5b-818b-44f7-b611-c83ffc374c31" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:05.476" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:05.477" level="INFO">${output} = Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:05.477" starttime="20210210 10:06:03.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:05.478" level="INFO">Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:DORMANT, leaderId:, CreationTimestamp2021-02-10T10:05:57.795Z]</msg>
<status status="PASS" endtime="20210210 10:06:05.478" starttime="20210210 10:06:05.477"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:05.478" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:05.479" starttime="20210210 10:06:05.478"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:05.479" starttime="20210210 10:06:03.625"></status>
</kw>
<msg timestamp="20210210 10:06:05.479" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:05.479" starttime="20210210 10:06:03.624"></status>
</kw>
<msg timestamp="20210210 10:06:05.480" level="INFO">${output} = Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:05.480" starttime="20210210 10:06:03.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>DORMANT</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:05.480" starttime="20210210 10:06:05.480"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:06:05.480" critical="yes" starttime="20210210 10:06:01.747"></status>
</test>
<test id="s1-t5" name="Activate pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline activate "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:05.485" level="INFO">Running command 'ozone admin pipeline activate "bf61dd5b-818b-44f7-b611-c83ffc374c31" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:07.281" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:07.282" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:06:07.282" starttime="20210210 10:06:05.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:07.283" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:06:07.283" starttime="20210210 10:06:07.282"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:07.284" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:07.284" starttime="20210210 10:06:07.283"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:07.284" starttime="20210210 10:06:05.483"></status>
</kw>
<msg timestamp="20210210 10:06:07.284" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:07.284" starttime="20210210 10:06:05.482"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:07.284" starttime="20210210 10:06:05.481"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:07.289" level="INFO">Running command 'ozone admin pipeline list | grep "bf61dd5b-818b-44f7-b611-c83ffc374c31" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:09.027" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:09.027" level="INFO">${output} = Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:09.027" starttime="20210210 10:06:07.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:09.028" level="INFO">Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:OPEN, leaderId:, CreationTimestamp2021-02-10T10:05:57.795Z]</msg>
<status status="PASS" endtime="20210210 10:06:09.028" starttime="20210210 10:06:09.027"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:09.029" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:09.029" starttime="20210210 10:06:09.028"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:09.029" starttime="20210210 10:06:07.286"></status>
</kw>
<msg timestamp="20210210 10:06:09.029" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:09.030" starttime="20210210 10:06:07.285"></status>
</kw>
<msg timestamp="20210210 10:06:09.030" level="INFO">${output} = Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:09.030" starttime="20210210 10:06:07.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>OPEN</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:09.031" starttime="20210210 10:06:09.030"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:06:09.031" critical="yes" starttime="20210210 10:06:05.481"></status>
</test>
<test id="s1-t6" name="Close pipeline">
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline close "${PIPELINE}"</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:09.036" level="INFO">Running command 'ozone admin pipeline close "bf61dd5b-818b-44f7-b611-c83ffc374c31" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:10.858" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:10.858" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:06:10.858" starttime="20210210 10:06:09.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:10.860" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:06:10.860" starttime="20210210 10:06:10.859"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:10.860" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:10.861" starttime="20210210 10:06:10.860"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:10.861" starttime="20210210 10:06:09.033"></status>
</kw>
<msg timestamp="20210210 10:06:10.861" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:10.861" starttime="20210210 10:06:09.033"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:10.861" starttime="20210210 10:06:09.033"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone admin pipeline list | grep "${PIPELINE}"</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:10.865" level="INFO">Running command 'ozone admin pipeline list | grep "bf61dd5b-818b-44f7-b611-c83ffc374c31" 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:12.783" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:06:12.783" level="INFO">${output} = Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:12.783" starttime="20210210 10:06:10.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:12.784" level="INFO">Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858, RATIS_ADMIN=9857, RATIS_SERVER=9856, STANDALONE=9859], networkLocation: /default-rack, certSerialId: null, persistedOpState: IN_SERVICE, persistedOpStateExpiryEpochSec: 0}, Type:STAND_ALONE, Factor:ONE, State:CLOSED, leaderId:, CreationTimestamp2021-02-10T10:05:57.795Z]</msg>
<status status="PASS" endtime="20210210 10:06:12.784" starttime="20210210 10:06:12.784"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:06:12.785" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:06:12.785" starttime="20210210 10:06:12.785"></status>
</kw>
<status status="PASS" endtime="20210210 10:06:12.785" starttime="20210210 10:06:10.862"></status>
</kw>
<msg timestamp="20210210 10:06:12.785" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:06:12.786" starttime="20210210 10:06:10.862"></status>
</kw>
<msg timestamp="20210210 10:06:12.786" level="INFO">${output} = Pipeline[ Id: bf61dd5b-818b-44f7-b611-c83ffc374c31, Nodes: eff8877a-39bd-47f9-962f-c78e86abbe47{ip: 172.25.0.2, host: ozonescripts_datanode_1.ozonescripts_default, ports: [REPLICATION=9886, RATIS=9858...</msg>
<status status="PASS" endtime="20210210 10:06:12.786" starttime="20210210 10:06:10.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>CLOSED</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:12.787" starttime="20210210 10:06:12.786"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:06:12.787" critical="yes" starttime="20210210 10:06:09.032"></status>
</test>
<test id="s1-t7" name="Incomplete command">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin pipeline</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:12.791" level="INFO">Running command 'ozone admin pipeline 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:14.003" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:06:14.003" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210210 10:06:14.003" starttime="20210210 10:06:12.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:14.004" level="INFO">Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Commands:
  list        List all active pipelines
  activate    Activates the given Pipeline
  deactivate  Deactivates the given Pipeline
  create      create pipeline
  close       Close pipeline</msg>
<status status="PASS" endtime="20210210 10:06:14.004" starttime="20210210 10:06:14.003"></status>
</kw>
<msg timestamp="20210210 10:06:14.004" level="INFO">${output} = Incomplete command
Usage: ozone admin pipeline [-hV] [COMMAND]
Pipeline specific operations
  -h, --help      Show this help message and exit.
  -V, --version   Print version information and exit.
Com...</msg>
<status status="PASS" endtime="20210210 10:06:14.004" starttime="20210210 10:06:12.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Incomplete command</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:14.005" starttime="20210210 10:06:14.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>close</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:14.005" starttime="20210210 10:06:14.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>create</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:14.006" starttime="20210210 10:06:14.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>deactivate</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:14.006" starttime="20210210 10:06:14.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>list</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:14.007" starttime="20210210 10:06:14.006"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:06:14.007" critical="yes" starttime="20210210 10:06:12.788"></status>
</test>
<test id="s1-t8" name="List pipelines on unknown host">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone admin --verbose pipeline list --scm unknown-host</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:06:14.011" level="INFO">Running command 'ozone admin --verbose pipeline list --scm unknown-host 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:06:15.812" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:06:15.812" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210210 10:06:15.812" starttime="20210210 10:06:14.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:06:15.813" level="INFO">java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoop/UnknownHost
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.apache.hadoop.net.NetUtils.wrapWithMessage(NetUtils.java:836)
	at org.apache.hadoop.net.NetUtils.wrapException(NetUtils.java:773)
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1592)
	at org.apache.hadoop.ipc.Client.call(Client.java:1452)
	at org.apache.hadoop.ipc.Client.call(Client.java:1405)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:233)
	at org.apache.hadoop.ipc.ProtobufRpcEngine$Invoker.invoke(ProtobufRpcEngine.java:118)
	at com.sun.proxy.$Proxy16.submitRequest(Unknown Source)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRpcRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:136)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.submitRequest(StorageContainerLocationProtocolClientSideTranslatorPB.java:127)
	at org.apache.hadoop.hdds.scm.protocolPB.StorageContainerLocationProtocolClientSideTranslatorPB.listPipelines(StorageContainerLocationProtocolClientSideTranslatorPB.java:444)
	at org.apache.hadoop.hdds.scm.cli.ContainerOperationClient.listPipelines(ContainerOperationClient.java:312)
	at org.apache.hadoop.hdds.scm.cli.pipeline.ListPipelinesSubcommand.execute(ListPipelinesSubcommand.java:53)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:39)
	at org.apache.hadoop.hdds.scm.cli.ScmSubcommand.call(ScmSubcommand.java:29)
	at picocli.CommandLine.executeUserObject(CommandLine.java:1933)
	at picocli.CommandLine.access$1100(CommandLine.java:145)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2332)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2326)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2291)
	at picocli.CommandLine$AbstractParseResultHandler.handleParseResult(CommandLine.java:2152)
	at picocli.CommandLine.parseWithHandlers(CommandLine.java:2530)
	at picocli.CommandLine.parseWithHandler(CommandLine.java:2465)
	at org.apache.hadoop.hdds.cli.GenericCli.execute(GenericCli.java:96)
	at org.apache.hadoop.hdds.cli.GenericCli.run(GenericCli.java:87)
	at org.apache.hadoop.hdds.cli.OzoneAdmin.main(OzoneAdmin.java:65)
Caused by: java.net.UnknownHostException
	at org.apache.hadoop.ipc.Client.getConnection(Client.java:1593)
	... 23 more</msg>
<status status="PASS" endtime="20210210 10:06:15.813" starttime="20210210 10:06:15.812"></status>
</kw>
<msg timestamp="20210210 10:06:15.814" level="INFO">${output} = java.net.UnknownHostException: Invalid host name: local host is: (unknown); destination host is: "unknown-host":9860; java.net.UnknownHostException; For more details see:  http://wiki.apache.org/hadoo...</msg>
<status status="PASS" endtime="20210210 10:06:15.814" starttime="20210210 10:06:14.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Invalid host name</arg>
</arguments>
<status status="PASS" endtime="20210210 10:06:15.814" starttime="20210210 10:06:15.814"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:06:15.815" critical="yes" starttime="20210210 10:06:14.008"></status>
</test>
<doc>Test ozone admin pipeline command</doc>
<status status="PASS" endtime="20210210 10:06:15.818" starttime="20210210 10:05:55.951"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonescripts" pass="8">ozonescripts</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
