<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 10:19:50.395" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-om-ha">
<suite source="/opt/hadoop/smoketest/freon" id="s1-s1" name="Freon">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1-s1" name="Generate">
<test id="s1-s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:15:40.346" level="INFO">Running command 'ozone freon ockg --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:15:54.807" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:15:54.807" level="INFO">${output} = 2021-02-10 10:15:42,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:15:42,202 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:15:54.807" starttime="20210210 10:15:40.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:15:54.808" level="INFO">2021-02-10 10:15:42,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:15:42,202 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:15:42,206 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:15:42,360 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-10 10:15:42,371 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:43,376 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:43,874 [main] INFO rpc.RpcClient: Creating Volume: vol1, with testuser/scm@EXAMPLE.COM as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 10:15:44,376 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:44,459 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 10:15:45,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:46,379 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:47,383 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:47,436 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:15:47,891 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:15:47,891 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-3DD29AAE4B76-&gt;3abf9b18-022a-4978-8d64-ea4b018b740b
2021-02-10 10:15:47,895 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:15:48,383 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:49,384 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:50,384 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:51,387 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:52,387 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:53,391 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:54,392 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:15:54,437 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=8574.650858, max=8574.650858, mean=8574.650858, stddev=0.0, median=8574.650858, p75=8574.650858, p95=8574.650858, p98=8574.650858, p99=8574.650858, p999=8574.650858, mean_rate=0.10343165433101902, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:15:54,437 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 12
2021-02-10 10:15:54,446 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:15:54,446 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:15:54.808" starttime="20210210 10:15:54.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:15:54.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:15:54.809" starttime="20210210 10:15:54.809"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:54.809" starttime="20210210 10:15:40.341"></status>
</kw>
<msg timestamp="20210210 10:15:54.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:15:54.810" starttime="20210210 10:15:40.341"></status>
</kw>
<msg timestamp="20210210 10:15:54.810" level="INFO">${result} = 2021-02-10 10:15:42,059 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:15:42,202 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:15:54.810" starttime="20210210 10:15:40.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:15:54.811" starttime="20210210 10:15:54.810"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:15:54.811" critical="yes" starttime="20210210 10:15:40.339"></status>
</test>
<test id="s1-s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:15:54.816" level="INFO">Running command 'ozone freon omkg --om-service-id=id1 -t=1 -n=1 -p omkg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:15:59.250" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:15:59.250" level="INFO">${output} = 2021-02-10 10:15:56,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:15:56,648 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:15:59.250" starttime="20210210 10:15:54.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:15:59.252" level="INFO">2021-02-10 10:15:56,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:15:56,648 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:15:56,648 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:15:56,774 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkg
2021-02-10 10:15:56,794 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:57,799 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:15:58,800 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:15:59,228 [Thread-4] INFO metrics: type=TIMER, name=key-create, count=1, min=230.473105, max=230.473105, mean=230.473105, stddev=0.0, median=230.473105, p75=230.473105, p95=230.473105, p98=230.473105, p99=230.473105, p999=230.473105, mean_rate=0.9557601698963102, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:15:59,229 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 10:15:59,229 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:15:59,229 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:15:59.252" starttime="20210210 10:15:59.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:15:59.252" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:15:59.252" starttime="20210210 10:15:59.252"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:59.253" starttime="20210210 10:15:54.814"></status>
</kw>
<msg timestamp="20210210 10:15:59.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:15:59.253" starttime="20210210 10:15:54.814"></status>
</kw>
<msg timestamp="20210210 10:15:59.253" level="INFO">${result} = 2021-02-10 10:15:56,509 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:15:56,648 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:15:59.253" starttime="20210210 10:15:54.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:15:59.254" starttime="20210210 10:15:59.254"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:15:59.254" critical="yes" starttime="20210210 10:15:54.812"></status>
</test>
<test id="s1-s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:15:59.260" level="INFO">Running command 'ozone freon ombg --om-service-id=id1 -t=1 -n=1 -p ombg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:03.921" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:03.922" level="INFO">${output} = 2021-02-10 10:16:01,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:16:01,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:16:03.922" starttime="20210210 10:15:59.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:03.923" level="INFO">2021-02-10 10:16:01,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:16:01,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:16:01,208 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:16:01,345 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombg
2021-02-10 10:16:01,360 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:16:02,361 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:16:03,362 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:16:03,898 [Thread-4] INFO metrics: type=TIMER, name=bucket-create, count=1, min=63.938185, max=63.938185, mean=63.938185, stddev=0.0, median=63.938185, p75=63.938185, p95=63.938185, p98=63.938185, p99=63.938185, p999=63.938185, mean_rate=0.957531577660693, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:16:03,899 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 10:16:03,900 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:16:03,900 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:16:03.923" starttime="20210210 10:16:03.922"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:03.924" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:03.924" starttime="20210210 10:16:03.923"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:03.924" starttime="20210210 10:15:59.257"></status>
</kw>
<msg timestamp="20210210 10:16:03.924" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:03.925" starttime="20210210 10:15:59.257"></status>
</kw>
<msg timestamp="20210210 10:16:03.925" level="INFO">${result} = 2021-02-10 10:16:01,087 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:16:01,208 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:16:03.925" starttime="20210210 10:15:59.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:16:03.926" starttime="20210210 10:16:03.925"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:16:03.926" critical="yes" starttime="20210210 10:15:59.255"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210210 10:16:03.927" starttime="20210210 10:15:40.322"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s1-s2" name="Validate">
<test id="s1-s1-s2-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:03.942" level="INFO">Running command 'ozone freon ockv --om-service-id=id1 -t=1 -n=1 -p ockg 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:11.020" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:11.020" level="INFO">${output} = 2021-02-10 10:16:05,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:16:05,875 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:16:11.020" starttime="20210210 10:16:03.939"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:11.021" level="INFO">2021-02-10 10:16:05,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:16:05,875 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:16:05,875 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:16:06,027 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockg
2021-02-10 10:16:06,052 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:16:07,061 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:16:08,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:16:08,588 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:16:09,062 [Thread-5] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:16:10,063 [Thread-5] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:16:10,681 [Thread-4] INFO metrics: type=TIMER, name=key-validate, count=1, min=57.125376, max=57.125376, mean=57.125376, stddev=0.0, median=57.125376, p75=57.125376, p95=57.125376, p98=57.125376, p99=57.125376, p999=57.125376, mean_rate=0.9710677538918622, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:16:10,689 [Thread-4] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-02-10 10:16:10,689 [Thread-4] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:16:10,689 [Thread-4] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:16:11.022" starttime="20210210 10:16:11.021"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:11.022" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:11.022" starttime="20210210 10:16:11.022"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:11.022" starttime="20210210 10:16:03.938"></status>
</kw>
<msg timestamp="20210210 10:16:11.023" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:11.023" starttime="20210210 10:16:03.938"></status>
</kw>
<msg timestamp="20210210 10:16:11.023" level="INFO">${result} = 2021-02-10 10:16:05,708 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:16:05,875 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:16:11.023" starttime="20210210 10:16:03.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:16:11.024" starttime="20210210 10:16:11.023"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:16:11.024" critical="yes" starttime="20210210 10:16:03.935"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 10:16:11.025" starttime="20210210 10:16:03.930"></status>
</suite>
<status status="PASS" endtime="20210210 10:16:11.027" starttime="20210210 10:15:40.292"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s2" name="Kinit">
<test id="s1-s2-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:15:35.295" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:15:35.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:15:35.298" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:15:35.298" starttime="20210210 10:15:35.291"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:15:35.300" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:15:35.300" starttime="20210210 10:15:35.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:15:35.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:15:35.300" starttime="20210210 10:15:35.300"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:35.301" starttime="20210210 10:15:35.291"></status>
</kw>
<msg timestamp="20210210 10:15:35.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:15:35.301" starttime="20210210 10:15:35.291"></status>
</kw>
<msg timestamp="20210210 10:15:35.301" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:15:35.301" starttime="20210210 10:15:35.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:15:35.302" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:15:35.302" starttime="20210210 10:15:35.302"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:15:35.306" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:15:35.314" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:15:35.314" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:15:35.314" starttime="20210210 10:15:35.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:15:35.315" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:15:35.315" starttime="20210210 10:15:35.314"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:15:35.315" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:15:35.315" starttime="20210210 10:15:35.315"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:35.316" starttime="20210210 10:15:35.304"></status>
</kw>
<msg timestamp="20210210 10:15:35.316" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:15:35.316" starttime="20210210 10:15:35.304"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:35.316" starttime="20210210 10:15:35.303"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:35.316" starttime="20210210 10:15:35.303"></status>
</kw>
<status status="PASS" endtime="20210210 10:15:35.316" starttime="20210210 10:15:35.290"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:15:35.316" critical="yes" starttime="20210210 10:15:35.289"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210210 10:15:35.317" starttime="20210210 10:15:35.232"></status>
</suite>
<suite source="/opt/hadoop/smoketest/basic/links.robot" id="s1-s3" name="Links">
<kw type="setup" name="Create volumes">
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 10:16:16.110" level="INFO">${random} = 96567</msg>
<status status="PASS" endtime="20210210 10:16:16.110" starttime="20210210 10:16:16.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${source}</arg>
<arg>${random}-source</arg>
</arguments>
<msg timestamp="20210210 10:16:16.111" level="INFO">${source} = 96567-source</msg>
<status status="PASS" endtime="20210210 10:16:16.111" starttime="20210210 10:16:16.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${target}</arg>
<arg>${random}-target</arg>
</arguments>
<msg timestamp="20210210 10:16:16.112" level="INFO">${target} = 96567-target</msg>
<status status="PASS" endtime="20210210 10:16:16.113" starttime="20210210 10:16:16.111"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:16.119" level="INFO">Running command 'ozone sh volume create 96567-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:19.824" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:19.824" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:19.824" starttime="20210210 10:16:16.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:19.825" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:19.825" starttime="20210210 10:16:19.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:19.825" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:19.826" starttime="20210210 10:16:19.825"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:19.826" starttime="20210210 10:16:16.113"></status>
</kw>
<msg timestamp="20210210 10:16:19.826" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:19.826" starttime="20210210 10:16:16.113"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:19.826" starttime="20210210 10:16:16.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:19.836" level="INFO">Running command 'ozone sh volume create 96567-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:23.828" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:23.828" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:23.828" starttime="20210210 10:16:19.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:23.830" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:23.830" starttime="20210210 10:16:23.829"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:23.830" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:23.831" starttime="20210210 10:16:23.830"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:23.831" starttime="20210210 10:16:19.828"></status>
</kw>
<msg timestamp="20210210 10:16:23.831" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:23.831" starttime="20210210 10:16:19.828"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:23.831" starttime="20210210 10:16:19.827"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Setup ACL tests</arg>
</arguments>
<kw name="Setup ACL tests">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:23.836" level="INFO">Running command 'ozone sh bucket create 96567-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:27.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:27.084" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:27.084" starttime="20210210 10:16:23.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:27.085" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:27.085" starttime="20210210 10:16:27.084"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:27.086" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:27.086" starttime="20210210 10:16:27.085"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:27.086" starttime="20210210 10:16:23.833"></status>
</kw>
<msg timestamp="20210210 10:16:27.086" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:27.086" starttime="20210210 10:16:23.833"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:27.086" starttime="20210210 10:16:23.832"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/readable-bucket/key-in-readable-bucket /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:27.089" level="INFO">Running command 'ozone sh key put 96567-source/readable-bucket/key-in-readable-bucket /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:33.589" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:33.589" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:33.590" starttime="20210210 10:16:27.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:33.591" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:33.591" starttime="20210210 10:16:33.590"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:33.591" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:33.591" starttime="20210210 10:16:33.591"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:33.592" starttime="20210210 10:16:27.087"></status>
</kw>
<msg timestamp="20210210 10:16:33.592" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:33.592" starttime="20210210 10:16:27.087"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:33.592" starttime="20210210 10:16:27.087"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:33.596" level="INFO">Running command 'ozone sh bucket create 96567-source/unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:37.118" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:37.118" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:37.119" starttime="20210210 10:16:33.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:37.120" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:37.120" starttime="20210210 10:16:37.119"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:37.120" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:37.120" starttime="20210210 10:16:37.120"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:37.121" starttime="20210210 10:16:33.593"></status>
</kw>
<msg timestamp="20210210 10:16:37.121" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:37.121" starttime="20210210 10:16:33.593"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:37.121" starttime="20210210 10:16:33.593"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:37.125" level="INFO">Running command 'ozone sh bucket link 96567-source/readable-bucket 96567-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:40.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:40.601" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:40.601" starttime="20210210 10:16:37.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:40.602" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:40.602" starttime="20210210 10:16:40.601"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:40.603" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:40.603" starttime="20210210 10:16:40.602"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:40.603" starttime="20210210 10:16:37.122"></status>
</kw>
<msg timestamp="20210210 10:16:40.603" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:40.603" starttime="20210210 10:16:37.122"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:40.604" starttime="20210210 10:16:37.121"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/readable-bucket ${target}/unreadable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:40.607" level="INFO">Running command 'ozone sh bucket link 96567-source/readable-bucket 96567-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:44.223" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:44.223" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:44.223" starttime="20210210 10:16:40.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:44.224" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:44.224" starttime="20210210 10:16:44.224"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:44.225" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:44.225" starttime="20210210 10:16:44.225"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:44.225" starttime="20210210 10:16:40.605"></status>
</kw>
<msg timestamp="20210210 10:16:44.225" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:44.226" starttime="20210210 10:16:40.604"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:44.226" starttime="20210210 10:16:40.604"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/unreadable-bucket ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:44.230" level="INFO">Running command 'ozone sh bucket link 96567-source/unreadable-bucket 96567-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:47.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:47.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:16:47.835" starttime="20210210 10:16:44.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:47.837" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:16:47.837" starttime="20210210 10:16:47.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:47.837" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:47.837" starttime="20210210 10:16:47.837"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:47.838" starttime="20210210 10:16:44.227"></status>
</kw>
<msg timestamp="20210210 10:16:47.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:47.838" starttime="20210210 10:16:44.226"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:47.838" starttime="20210210 10:16:44.226"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:47.842" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:r 96567-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:51.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:51.492" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:16:51.492" starttime="20210210 10:16:47.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:51.493" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:16:51.493" starttime="20210210 10:16:51.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:51.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:51.494" starttime="20210210 10:16:51.493"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:51.494" starttime="20210210 10:16:47.840"></status>
</kw>
<msg timestamp="20210210 10:16:51.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:51.495" starttime="20210210 10:16:47.839"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:51.495" starttime="20210210 10:16:47.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:51.499" level="INFO">Running command 'ozone sh volume addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 96567-source 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:55.290" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:55.290" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:16:55.290" starttime="20210210 10:16:51.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:55.291" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:16:55.291" starttime="20210210 10:16:55.290"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:55.292" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:55.292" starttime="20210210 10:16:55.291"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:55.292" starttime="20210210 10:16:51.496"></status>
</kw>
<msg timestamp="20210210 10:16:55.292" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:55.292" starttime="20210210 10:16:51.496"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:55.293" starttime="20210210 10:16:51.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl ${source}/readable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:55.296" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:rl 96567-source/readable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:16:58.793" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:16:58.793" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:16:58.793" starttime="20210210 10:16:55.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:16:58.794" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:rl[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:16:58.794" starttime="20210210 10:16:58.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:16:58.795" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:16:58.795" starttime="20210210 10:16:58.794"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:58.795" starttime="20210210 10:16:55.294"></status>
</kw>
<msg timestamp="20210210 10:16:58.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:16:58.795" starttime="20210210 10:16:55.293"></status>
</kw>
<status status="PASS" endtime="20210210 10:16:58.796" starttime="20210210 10:16:55.293"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/readable-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:16:58.799" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 96567-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:02.278" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:02.278" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:17:02.278" starttime="20210210 10:16:58.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:02.279" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:17:02.279" starttime="20210210 10:17:02.278"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:02.280" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:02.280" starttime="20210210 10:17:02.279"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:02.280" starttime="20210210 10:16:58.797"></status>
</kw>
<msg timestamp="20210210 10:17:02.280" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:02.281" starttime="20210210 10:16:58.797"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:02.281" starttime="20210210 10:16:58.796"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r ${target}/link-to-unreadable-bucket</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:02.285" level="INFO">Running command 'ozone sh bucket addacl --acl user:testuser2/scm@EXAMPLE.COM:r 96567-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:05.888" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:05.888" level="INFO">${output} = ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:17:05.888" starttime="20210210 10:17:02.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:05.890" level="INFO">ACL user:testuser2/scm@EXAMPLE.COM:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:17:05.890" starttime="20210210 10:17:05.889"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:05.892" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:05.892" starttime="20210210 10:17:05.890"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.892" starttime="20210210 10:17:02.282"></status>
</kw>
<msg timestamp="20210210 10:17:05.892" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:05.893" starttime="20210210 10:17:02.282"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.893" starttime="20210210 10:17:02.281"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.893" starttime="20210210 10:16:23.832"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.893" starttime="20210210 10:16:23.831"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.893" starttime="20210210 10:16:16.109"></status>
</kw>
<test id="s1-s3-t1" name="Link to non-existent bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:05.899" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:05.902" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:05.902" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:17:05.902" starttime="20210210 10:17:05.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:05.904" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:17:05.904" starttime="20210210 10:17:05.903"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:05.905" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:05.905" starttime="20210210 10:17:05.904"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.905" starttime="20210210 10:17:05.897"></status>
</kw>
<msg timestamp="20210210 10:17:05.905" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:05.906" starttime="20210210 10:17:05.896"></status>
</kw>
<msg timestamp="20210210 10:17:05.906" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:17:05.906" starttime="20210210 10:17:05.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:17:05.908" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:17:05.908" starttime="20210210 10:17:05.906"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:05.913" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:05.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:05.926" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:05.926" starttime="20210210 10:17:05.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:05.927" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:05.927" starttime="20210210 10:17:05.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:05.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:05.928" starttime="20210210 10:17:05.927"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.928" starttime="20210210 10:17:05.911"></status>
</kw>
<msg timestamp="20210210 10:17:05.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:05.929" starttime="20210210 10:17:05.910"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.929" starttime="20210210 10:17:05.909"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.929" starttime="20210210 10:17:05.909"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.929" starttime="20210210 10:17:05.895"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:05.930" starttime="20210210 10:17:05.894"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/no-such-bucket ${target}/dangling-link</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:05.933" level="INFO">Running command 'ozone sh bucket link 96567-source/no-such-bucket 96567-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:09.381" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:09.381" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:09.381" starttime="20210210 10:17:05.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:09.383" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:09.383" starttime="20210210 10:17:09.382"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:09.383" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:09.384" starttime="20210210 10:17:09.383"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:09.384" starttime="20210210 10:17:05.931"></status>
</kw>
<msg timestamp="20210210 10:17:09.384" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:09.384" starttime="20210210 10:17:05.930"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:09.384" starttime="20210210 10:17:05.930"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/dangling-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:09.387" level="INFO">Running command 'ozone sh key list 96567-target/dangling-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:12.965" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:17:12.965" level="INFO">${output} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210210 10:17:12.965" starttime="20210210 10:17:09.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:12.967" level="INFO">BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210210 10:17:12.967" starttime="20210210 10:17:12.966"></status>
</kw>
<msg timestamp="20210210 10:17:12.967" level="INFO">${result} = BUCKET_NOT_FOUND Bucket not found</msg>
<status status="PASS" endtime="20210210 10:17:12.967" starttime="20210210 10:17:09.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 10:17:12.969" starttime="20210210 10:17:12.968"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:17:12.969" critical="yes" starttime="20210210 10:17:05.893"></status>
</test>
<test id="s1-s3-t2" name="Key create passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:12.977" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:12.980" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:12.980" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:17:12.980" starttime="20210210 10:17:12.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:12.981" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:17:12.981" starttime="20210210 10:17:12.980"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:12.981" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:12.981" starttime="20210210 10:17:12.981"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:12.984" starttime="20210210 10:17:12.975"></status>
</kw>
<msg timestamp="20210210 10:17:12.984" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:12.984" starttime="20210210 10:17:12.975"></status>
</kw>
<msg timestamp="20210210 10:17:12.985" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:17:12.985" starttime="20210210 10:17:12.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:17:12.985" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:17:12.985" starttime="20210210 10:17:12.985"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:12.989" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:12.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:12.996" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:12.996" starttime="20210210 10:17:12.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:12.996" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:12.997" starttime="20210210 10:17:12.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:12.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:12.997" starttime="20210210 10:17:12.997"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:12.997" starttime="20210210 10:17:12.987"></status>
</kw>
<msg timestamp="20210210 10:17:12.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:12.998" starttime="20210210 10:17:12.987"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:12.998" starttime="20210210 10:17:12.986"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:12.998" starttime="20210210 10:17:12.986"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:12.998" starttime="20210210 10:17:12.973"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:12.999" starttime="20210210 10:17:12.973"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:13.002" level="INFO">Running command 'ozone sh bucket link 96567-source/bucket1 96567-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:16.559" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:16.559" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:16.559" starttime="20210210 10:17:13.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:16.561" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:16.561" starttime="20210210 10:17:16.560"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:16.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:16.562" starttime="20210210 10:17:16.561"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:16.562" starttime="20210210 10:17:13.000"></status>
</kw>
<msg timestamp="20210210 10:17:16.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:16.562" starttime="20210210 10:17:12.999"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:16.563" starttime="20210210 10:17:12.999"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:16.566" level="INFO">Running command 'ozone sh bucket create 96567-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:20.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:20.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:20.193" starttime="20210210 10:17:16.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:20.194" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:20.194" starttime="20210210 10:17:20.193"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:20.195" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:20.195" starttime="20210210 10:17:20.194"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:20.195" starttime="20210210 10:17:16.564"></status>
</kw>
<msg timestamp="20210210 10:17:20.195" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:20.195" starttime="20210210 10:17:16.563"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:20.196" starttime="20210210 10:17:16.563"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link1/key1 /etc/passwd</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:20.199" level="INFO">Running command 'ozone sh key put 96567-target/link1/key1 /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:28.790" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:28.790" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:28.790" starttime="20210210 10:17:20.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:28.791" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:28.791" starttime="20210210 10:17:28.790"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:28.792" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:28.792" starttime="20210210 10:17:28.791"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:28.792" starttime="20210210 10:17:20.197"></status>
</kw>
<msg timestamp="20210210 10:17:28.792" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:28.792" starttime="20210210 10:17:20.196"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:28.792" starttime="20210210 10:17:20.196"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key1</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:17:28.794" level="INFO">${postfix} = 60192</msg>
<status status="PASS" endtime="20210210 10:17:28.794" starttime="20210210 10:17:28.794"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:17:28.795" level="INFO">${tmpfile} = /tmp/tempkey-60192</msg>
<status status="PASS" endtime="20210210 10:17:28.795" starttime="20210210 10:17:28.794"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:28.799" level="INFO">Running command 'ozone sh key get 96567-target/link1/key1 /tmp/tempkey-60192 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:34.763" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:34.763" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:34.763" starttime="20210210 10:17:28.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.764" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:34.765" starttime="20210210 10:17:34.764"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.766" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:34.766" starttime="20210210 10:17:34.765"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.766" starttime="20210210 10:17:28.797"></status>
</kw>
<msg timestamp="20210210 10:17:34.766" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:34.766" starttime="20210210 10:17:28.796"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.766" starttime="20210210 10:17:28.795"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:17:34.769" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-60192 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:34.773" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:17:34.773" starttime="20210210 10:17:34.767"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:34.777" level="INFO">Running command 'rm -f /tmp/tempkey-60192 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:34.779" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:34.779" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:34.780" starttime="20210210 10:17:34.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.781" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:34.781" starttime="20210210 10:17:34.780"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.782" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:34.782" starttime="20210210 10:17:34.781"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.782" starttime="20210210 10:17:34.775"></status>
</kw>
<msg timestamp="20210210 10:17:34.782" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:34.782" starttime="20210210 10:17:34.774"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.783" starttime="20210210 10:17:34.774"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:17:34.783" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:17:34.783" starttime="20210210 10:17:34.783"></status>
</kw>
<msg timestamp="20210210 10:17:34.784" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:17:34.784" starttime="20210210 10:17:28.793"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:17:34.784" starttime="20210210 10:17:34.784"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.784" starttime="20210210 10:17:28.793"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:17:34.784" critical="yes" starttime="20210210 10:17:12.970"></status>
</test>
<test id="s1-s3-t3" name="Key read passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:34.790" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:34.792" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:34.793" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:17:34.793" starttime="20210210 10:17:34.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.793" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:17:34.794" starttime="20210210 10:17:34.793"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.794" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:34.794" starttime="20210210 10:17:34.794"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.795" starttime="20210210 10:17:34.788"></status>
</kw>
<msg timestamp="20210210 10:17:34.795" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:34.795" starttime="20210210 10:17:34.788"></status>
</kw>
<msg timestamp="20210210 10:17:34.795" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:17:34.795" starttime="20210210 10:17:34.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:17:34.796" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:17:34.796" starttime="20210210 10:17:34.796"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:34.800" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:34.808" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:34.808" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:34.808" starttime="20210210 10:17:34.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.809" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:34.809" starttime="20210210 10:17:34.808"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:34.809" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:34.810" starttime="20210210 10:17:34.809"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.810" starttime="20210210 10:17:34.798"></status>
</kw>
<msg timestamp="20210210 10:17:34.810" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:34.810" starttime="20210210 10:17:34.798"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.810" starttime="20210210 10:17:34.797"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.810" starttime="20210210 10:17:34.797"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.810" starttime="20210210 10:17:34.787"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:34.811" starttime="20210210 10:17:34.786"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${source}/bucket1/key2 /opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:34.815" level="INFO">Running command 'ozone sh key put 96567-source/bucket1/key2 /opt/hadoop/NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:40.899" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:40.899" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:40.899" starttime="20210210 10:17:34.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:40.900" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:40.900" starttime="20210210 10:17:40.899"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:40.901" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:40.901" starttime="20210210 10:17:40.900"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:40.901" starttime="20210210 10:17:34.812"></status>
</kw>
<msg timestamp="20210210 10:17:40.901" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:40.901" starttime="20210210 10:17:34.811"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:40.901" starttime="20210210 10:17:34.811"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${source}/bucket1/key2</arg>
<arg>/opt/hadoop/NOTICE.txt</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:17:40.903" level="INFO">${postfix} = 49371</msg>
<status status="PASS" endtime="20210210 10:17:40.903" starttime="20210210 10:17:40.903"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:17:40.904" level="INFO">${tmpfile} = /tmp/tempkey-49371</msg>
<status status="PASS" endtime="20210210 10:17:40.904" starttime="20210210 10:17:40.903"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:40.907" level="INFO">Running command 'ozone sh key get 96567-source/bucket1/key2 /tmp/tempkey-49371 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:46.520" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:46.520" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:46.520" starttime="20210210 10:17:40.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.521" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:46.521" starttime="20210210 10:17:46.521"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:46.523" starttime="20210210 10:17:46.522"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.523" starttime="20210210 10:17:40.905"></status>
</kw>
<msg timestamp="20210210 10:17:46.523" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:46.524" starttime="20210210 10:17:40.904"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.524" starttime="20210210 10:17:40.904"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:17:46.526" level="INFO">Running command 'diff -q /opt/hadoop/NOTICE.txt /tmp/tempkey-49371 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:46.529" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:17:46.529" starttime="20210210 10:17:46.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:46.534" level="INFO">Running command 'rm -f /tmp/tempkey-49371 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:46.537" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:46.537" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:46.537" starttime="20210210 10:17:46.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.538" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:46.538" starttime="20210210 10:17:46.538"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.539" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:46.539" starttime="20210210 10:17:46.539"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.539" starttime="20210210 10:17:46.531"></status>
</kw>
<msg timestamp="20210210 10:17:46.540" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:46.540" starttime="20210210 10:17:46.531"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.540" starttime="20210210 10:17:46.529"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:17:46.541" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:17:46.541" starttime="20210210 10:17:46.540"></status>
</kw>
<msg timestamp="20210210 10:17:46.541" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:17:46.541" starttime="20210210 10:17:40.902"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:17:46.542" starttime="20210210 10:17:46.541"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.542" starttime="20210210 10:17:40.901"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:17:46.542" critical="yes" starttime="20210210 10:17:34.785"></status>
</test>
<test id="s1-s3-t4" name="Key list passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:46.548" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:46.550" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:46.550" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:17:46.550" starttime="20210210 10:17:46.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.551" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:17:46.551" starttime="20210210 10:17:46.550"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.552" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:46.552" starttime="20210210 10:17:46.551"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.552" starttime="20210210 10:17:46.545"></status>
</kw>
<msg timestamp="20210210 10:17:46.552" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:46.553" starttime="20210210 10:17:46.545"></status>
</kw>
<msg timestamp="20210210 10:17:46.553" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:17:46.553" starttime="20210210 10:17:46.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:17:46.553" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:17:46.554" starttime="20210210 10:17:46.553"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:46.557" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:46.564" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:46.564" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:46.564" starttime="20210210 10:17:46.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.565" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:46.565" starttime="20210210 10:17:46.564"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:46.566" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:46.566" starttime="20210210 10:17:46.565"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.566" starttime="20210210 10:17:46.555"></status>
</kw>
<msg timestamp="20210210 10:17:46.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:46.566" starttime="20210210 10:17:46.555"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.566" starttime="20210210 10:17:46.554"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.567" starttime="20210210 10:17:46.554"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.567" starttime="20210210 10:17:46.544"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:46.567" starttime="20210210 10:17:46.544"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${target}/link1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${target_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:46.570" level="INFO">Running command 'ozone sh key list 96567-target/link1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:50.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:50.261" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210210 10:17:50.261" starttime="20210210 10:17:46.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:50.262" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210210 10:17:50.262" starttime="20210210 10:17:50.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:50.263" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:50.263" starttime="20210210 10:17:50.263"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:50.263" starttime="20210210 10:17:46.568"></status>
</kw>
<msg timestamp="20210210 10:17:50.263" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:50.264" starttime="20210210 10:17:46.568"></status>
</kw>
<msg timestamp="20210210 10:17:50.264" level="INFO">${target_list} = key1
key2</msg>
<status status="PASS" endtime="20210210 10:17:50.264" starttime="20210210 10:17:46.567"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:50.268" level="INFO">Running command 'ozone sh key list 96567-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:54.073" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:54.073" level="INFO">${output} = key1
key2</msg>
<status status="PASS" endtime="20210210 10:17:54.073" starttime="20210210 10:17:50.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:54.074" level="INFO">key1
key2</msg>
<status status="PASS" endtime="20210210 10:17:54.075" starttime="20210210 10:17:54.074"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:54.075" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:54.075" starttime="20210210 10:17:54.075"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.075" starttime="20210210 10:17:50.265"></status>
</kw>
<msg timestamp="20210210 10:17:54.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:54.076" starttime="20210210 10:17:50.265"></status>
</kw>
<msg timestamp="20210210 10:17:54.076" level="INFO">${source_list} = key1
key2</msg>
<status status="PASS" endtime="20210210 10:17:54.076" starttime="20210210 10:17:50.264"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${target_list}</arg>
<arg>${source_list}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:17:54.077" starttime="20210210 10:17:54.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:17:54.077" starttime="20210210 10:17:54.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210210 10:17:54.078" starttime="20210210 10:17:54.078"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:17:54.078" critical="yes" starttime="20210210 10:17:46.543"></status>
</test>
<test id="s1-s3-t5" name="Key delete passthrough">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:54.084" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:54.087" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:54.087" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:17:54.087" starttime="20210210 10:17:54.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:54.088" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:17:54.088" starttime="20210210 10:17:54.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:54.088" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:54.088" starttime="20210210 10:17:54.088"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.089" starttime="20210210 10:17:54.081"></status>
</kw>
<msg timestamp="20210210 10:17:54.089" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:54.089" starttime="20210210 10:17:54.081"></status>
</kw>
<msg timestamp="20210210 10:17:54.089" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:17:54.089" starttime="20210210 10:17:54.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:17:54.090" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:17:54.090" starttime="20210210 10:17:54.089"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:54.096" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:54.103" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:54.103" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:54.103" starttime="20210210 10:17:54.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:54.104" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:54.104" starttime="20210210 10:17:54.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:54.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:54.105" starttime="20210210 10:17:54.104"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.105" starttime="20210210 10:17:54.092"></status>
</kw>
<msg timestamp="20210210 10:17:54.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:54.105" starttime="20210210 10:17:54.091"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.105" starttime="20210210 10:17:54.091"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.106" starttime="20210210 10:17:54.090"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.106" starttime="20210210 10:17:54.080"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:54.106" starttime="20210210 10:17:54.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key delete ${target}/link1/key2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:54.109" level="INFO">Running command 'ozone sh key delete 96567-target/link1/key2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:17:57.657" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:17:57.657" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:17:57.657" starttime="20210210 10:17:54.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:17:57.659" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:17:57.659" starttime="20210210 10:17:57.658"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:17:57.660" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:17:57.660" starttime="20210210 10:17:57.659"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:57.661" starttime="20210210 10:17:54.107"></status>
</kw>
<msg timestamp="20210210 10:17:57.661" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:17:57.661" starttime="20210210 10:17:54.107"></status>
</kw>
<status status="PASS" endtime="20210210 10:17:57.661" starttime="20210210 10:17:54.106"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:17:57.666" level="INFO">Running command 'ozone sh key list 96567-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:01.205" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:01.206" level="INFO">${output} = key1</msg>
<status status="PASS" endtime="20210210 10:18:01.206" starttime="20210210 10:17:57.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:01.207" level="INFO">key1</msg>
<status status="PASS" endtime="20210210 10:18:01.207" starttime="20210210 10:18:01.206"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:01.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:01.208" starttime="20210210 10:18:01.207"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.208" starttime="20210210 10:17:57.662"></status>
</kw>
<msg timestamp="20210210 10:18:01.208" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:01.209" starttime="20210210 10:17:57.662"></status>
</kw>
<msg timestamp="20210210 10:18:01.209" level="INFO">${source_list} = key1</msg>
<status status="PASS" endtime="20210210 10:18:01.209" starttime="20210210 10:17:57.661"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key2</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:01.209" starttime="20210210 10:18:01.209"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:01.210" critical="yes" starttime="20210210 10:17:54.079"></status>
</test>
<test id="s1-s3-t6" name="Bucket list contains links">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:01.216" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:01.220" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:01.220" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:01.220" starttime="20210210 10:18:01.214"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:01.221" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:01.221" starttime="20210210 10:18:01.220"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:01.222" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:01.222" starttime="20210210 10:18:01.221"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.222" starttime="20210210 10:18:01.213"></status>
</kw>
<msg timestamp="20210210 10:18:01.222" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:01.222" starttime="20210210 10:18:01.213"></status>
</kw>
<msg timestamp="20210210 10:18:01.222" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:01.222" starttime="20210210 10:18:01.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:01.223" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:01.223" starttime="20210210 10:18:01.223"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:01.227" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:01.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:01.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:01.234" starttime="20210210 10:18:01.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:01.235" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:01.235" starttime="20210210 10:18:01.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:01.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:01.236" starttime="20210210 10:18:01.235"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.237" starttime="20210210 10:18:01.225"></status>
</kw>
<msg timestamp="20210210 10:18:01.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:01.237" starttime="20210210 10:18:01.224"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.237" starttime="20210210 10:18:01.224"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.237" starttime="20210210 10:18:01.223"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.237" starttime="20210210 10:18:01.212"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:01.237" starttime="20210210 10:18:01.211"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:01.241" level="INFO">Running command 'ozone sh bucket list 96567-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:04.973" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:04.973" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210210 10:18:04.973" starttime="20210210 10:18:01.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:04.974" level="INFO">{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:17:09.304Z",
  "modificationTime" : "2021-02-10T10:17:09.304Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:47.729Z",
  "modificationTime" : "2021-02-10T10:17:05.775Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:17:16.443Z",
  "modificationTime" : "2021-02-10T10:17:16.443Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:40.480Z",
  "modificationTime" : "2021-02-10T10:17:02.086Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:44.100Z",
  "modificationTime" : "2021-02-10T10:16:44.100Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 10:18:04.974" starttime="20210210 10:18:04.973"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:04.975" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:04.975" starttime="20210210 10:18:04.974"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:04.975" starttime="20210210 10:18:01.239"></status>
</kw>
<msg timestamp="20210210 10:18:04.975" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:04.976" starttime="20210210 10:18:01.238"></status>
</kw>
<msg timestamp="20210210 10:18:04.976" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-...</msg>
<status status="PASS" endtime="20210210 10:18:04.976" starttime="20210210 10:18:01.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:04.976" starttime="20210210 10:18:04.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>dangling-link</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:04.977" starttime="20210210 10:18:04.977"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:04.977" critical="yes" starttime="20210210 10:18:01.211"></status>
</test>
<test id="s1-s3-t7" name="Bucket info shows source">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:04.983" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:04.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:04.985" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:04.986" starttime="20210210 10:18:04.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:04.987" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:04.987" starttime="20210210 10:18:04.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:04.987" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:04.988" starttime="20210210 10:18:04.987"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:04.988" starttime="20210210 10:18:04.981"></status>
</kw>
<msg timestamp="20210210 10:18:04.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:04.988" starttime="20210210 10:18:04.980"></status>
</kw>
<msg timestamp="20210210 10:18:04.988" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:04.988" starttime="20210210 10:18:04.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:04.989" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:04.989" starttime="20210210 10:18:04.988"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:04.994" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:04.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:04.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:04.999" starttime="20210210 10:18:04.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:05.000" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:05.001" starttime="20210210 10:18:05.000"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:05.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:05.001" starttime="20210210 10:18:05.001"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:05.002" starttime="20210210 10:18:04.991"></status>
</kw>
<msg timestamp="20210210 10:18:05.002" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:05.002" starttime="20210210 10:18:04.990"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:05.002" starttime="20210210 10:18:04.990"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:05.002" starttime="20210210 10:18:04.989"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:05.002" starttime="20210210 10:18:04.979"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:05.002" starttime="20210210 10:18:04.979"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:05.005" level="INFO">Running command 'ozone sh bucket info 96567-target/link1 | jq -r '.sourceVolume, .sourceBucket' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:08.633" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:08.633" level="INFO">${output} = 96567-source bucket1</msg>
<status status="PASS" endtime="20210210 10:18:08.634" starttime="20210210 10:18:05.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:08.635" level="INFO">96567-source bucket1</msg>
<status status="PASS" endtime="20210210 10:18:08.635" starttime="20210210 10:18:08.634"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:08.635" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:08.636" starttime="20210210 10:18:08.635"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.636" starttime="20210210 10:18:05.003"></status>
</kw>
<msg timestamp="20210210 10:18:08.636" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:08.636" starttime="20210210 10:18:05.003"></status>
</kw>
<msg timestamp="20210210 10:18:08.636" level="INFO">${result} = 96567-source bucket1</msg>
<status status="PASS" endtime="20210210 10:18:08.636" starttime="20210210 10:18:05.003"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${result}</arg>
<arg>${source} bucket1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:08.637" starttime="20210210 10:18:08.637"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:08.637" critical="yes" starttime="20210210 10:18:04.978"></status>
</test>
<test id="s1-s3-t8" name="Source and target have separate ACLs">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:08.645" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:08.648" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:08.648" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:08.649" starttime="20210210 10:18:08.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:08.649" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:08.650" starttime="20210210 10:18:08.649"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:08.651" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:08.651" starttime="20210210 10:18:08.650"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.651" starttime="20210210 10:18:08.642"></status>
</kw>
<msg timestamp="20210210 10:18:08.651" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:08.652" starttime="20210210 10:18:08.641"></status>
</kw>
<msg timestamp="20210210 10:18:08.652" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:08.652" starttime="20210210 10:18:08.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:08.653" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:08.653" starttime="20210210 10:18:08.652"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:08.657" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:08.663" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:08.664" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:08.664" starttime="20210210 10:18:08.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:08.665" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:08.665" starttime="20210210 10:18:08.664"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:08.665" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:08.665" starttime="20210210 10:18:08.665"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.666" starttime="20210210 10:18:08.654"></status>
</kw>
<msg timestamp="20210210 10:18:08.666" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:08.666" starttime="20210210 10:18:08.654"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.666" starttime="20210210 10:18:08.653"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.666" starttime="20210210 10:18:08.653"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.666" starttime="20210210 10:18:08.640"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:08.666" starttime="20210210 10:18:08.640"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl user:user1:rwxy ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:08.670" level="INFO">Running command 'ozone sh bucket addacl --acl user:user1:rwxy 96567-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:12.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:12.502" level="INFO">${output} = ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:18:12.503" starttime="20210210 10:18:08.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:12.504" level="INFO">ACL user:user1:rwxy[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:18:12.504" starttime="20210210 10:18:12.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:12.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:12.505" starttime="20210210 10:18:12.504"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:12.505" starttime="20210210 10:18:08.668"></status>
</kw>
<msg timestamp="20210210 10:18:12.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:12.505" starttime="20210210 10:18:08.667"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:12.505" starttime="20210210 10:18:08.667"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>READ WRITE READ_ACL WRITE_ACL</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:12.510" level="INFO">Running command 'ozone sh bucket getacl 96567-target/link1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:16.147" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:16.147" level="INFO">${output} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210210 10:18:16.147" starttime="20210210 10:18:12.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:16.148" level="INFO">READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210210 10:18:16.148" starttime="20210210 10:18:16.147"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:16.149" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:16.149" starttime="20210210 10:18:16.148"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:16.150" starttime="20210210 10:18:12.507"></status>
</kw>
<msg timestamp="20210210 10:18:16.150" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:16.150" starttime="20210210 10:18:12.507"></status>
</kw>
<msg timestamp="20210210 10:18:16.150" level="INFO">${actual_acls} = READ WRITE READ_ACL WRITE_ACL</msg>
<status status="PASS" endtime="20210210 10:18:16.150" starttime="20210210 10:18:12.506"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:16.151" starttime="20210210 10:18:16.150"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:16.151" starttime="20210210 10:18:12.505"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>USER</arg>
<arg>user1</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:16.157" level="INFO">Running command 'ozone sh bucket getacl 96567-source/bucket1 | jq -r '.[] | select(.type == "USER") | select(.name == "user1") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:20.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:20.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:20.113" starttime="20210210 10:18:16.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:20.115" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:20.115" starttime="20210210 10:18:20.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:20.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:20.116" starttime="20210210 10:18:20.115"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:20.116" starttime="20210210 10:18:16.154"></status>
</kw>
<msg timestamp="20210210 10:18:20.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:20.116" starttime="20210210 10:18:16.153"></status>
</kw>
<msg timestamp="20210210 10:18:20.116" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210210 10:18:20.117" starttime="20210210 10:18:16.152"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:20.117" starttime="20210210 10:18:20.117"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:20.117" starttime="20210210 10:18:16.152"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket addacl --acl group:group2:r ${source}/bucket1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:20.121" level="INFO">Running command 'ozone sh bucket addacl --acl group:group2:r 96567-source/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:23.948" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:23.949" level="INFO">${output} = ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:18:23.949" starttime="20210210 10:18:20.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:23.950" level="INFO">ACL group:group2:r[ACCESS] added successfully.</msg>
<status status="PASS" endtime="20210210 10:18:23.950" starttime="20210210 10:18:23.949"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:23.951" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:23.951" starttime="20210210 10:18:23.950"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:23.951" starttime="20210210 10:18:20.118"></status>
</kw>
<msg timestamp="20210210 10:18:23.951" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:23.951" starttime="20210210 10:18:20.118"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:23.952" starttime="20210210 10:18:20.117"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${target}/link1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>${EMPTY}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:23.957" level="INFO">Running command 'ozone sh bucket getacl 96567-target/link1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:27.438" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:27.438" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:27.439" starttime="20210210 10:18:23.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:27.440" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:27.440" starttime="20210210 10:18:27.439"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:27.441" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:27.441" starttime="20210210 10:18:27.440"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:27.441" starttime="20210210 10:18:23.954"></status>
</kw>
<msg timestamp="20210210 10:18:27.441" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:27.441" starttime="20210210 10:18:23.954"></status>
</kw>
<msg timestamp="20210210 10:18:27.442" level="INFO">${actual_acls} = </msg>
<status status="PASS" endtime="20210210 10:18:27.442" starttime="20210210 10:18:23.953"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:27.442" starttime="20210210 10:18:27.442"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:27.443" starttime="20210210 10:18:23.952"></status>
</kw>
<kw name="Verify ACL" library="shell">
<arguments>
<arg>bucket</arg>
<arg>${source}/bucket1</arg>
<arg>GROUP</arg>
<arg>group2</arg>
<arg>READ</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh ${object_type} getacl ${object} | jq -r '.[] | select(.type == "${type}") | select(.name == "${name}") | .aclList[]' | xargs</arg>
</arguments>
<assign>
<var>${actual_acls}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:27.447" level="INFO">Running command 'ozone sh bucket getacl 96567-source/bucket1 | jq -r '.[] | select(.type == "GROUP") | select(.name == "group2") | .aclList[]' | xargs 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:31.218" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:31.218" level="INFO">${output} = READ</msg>
<status status="PASS" endtime="20210210 10:18:31.218" starttime="20210210 10:18:27.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:31.219" level="INFO">READ</msg>
<status status="PASS" endtime="20210210 10:18:31.220" starttime="20210210 10:18:31.219"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:31.220" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:31.220" starttime="20210210 10:18:31.220"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.221" starttime="20210210 10:18:27.445"></status>
</kw>
<msg timestamp="20210210 10:18:31.221" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:31.221" starttime="20210210 10:18:27.444"></status>
</kw>
<msg timestamp="20210210 10:18:31.221" level="INFO">${actual_acls} = READ</msg>
<status status="PASS" endtime="20210210 10:18:31.221" starttime="20210210 10:18:27.443"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${acls}</arg>
<arg>${actual_acls}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:31.222" starttime="20210210 10:18:31.222"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.222" starttime="20210210 10:18:27.443"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:31.223" critical="yes" starttime="20210210 10:18:08.638"></status>
</test>
<test id="s1-s3-t9" name="Buckets and links share namespace">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:31.229" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:31.232" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:31.232" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:31.233" starttime="20210210 10:18:31.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:31.234" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:31.234" starttime="20210210 10:18:31.233"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:31.234" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:31.235" starttime="20210210 10:18:31.234"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.235" starttime="20210210 10:18:31.226"></status>
</kw>
<msg timestamp="20210210 10:18:31.235" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:31.235" starttime="20210210 10:18:31.226"></status>
</kw>
<msg timestamp="20210210 10:18:31.236" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:31.236" starttime="20210210 10:18:31.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:31.237" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:31.237" starttime="20210210 10:18:31.236"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:31.241" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:31.265" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:31.265" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:31.265" starttime="20210210 10:18:31.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:31.266" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:31.266" starttime="20210210 10:18:31.266"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:31.267" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:31.267" starttime="20210210 10:18:31.267"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.268" starttime="20210210 10:18:31.239"></status>
</kw>
<msg timestamp="20210210 10:18:31.268" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:31.268" starttime="20210210 10:18:31.238"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.268" starttime="20210210 10:18:31.237"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.268" starttime="20210210 10:18:31.237"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.269" starttime="20210210 10:18:31.225"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:31.269" starttime="20210210 10:18:31.224"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket2 ${target}/link2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:31.273" level="INFO">Running command 'ozone sh bucket link 96567-source/bucket2 96567-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:34.750" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:34.750" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:34.750" starttime="20210210 10:18:31.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:34.752" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:34.752" starttime="20210210 10:18:34.751"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:34.753" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:34.753" starttime="20210210 10:18:34.752"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:34.753" starttime="20210210 10:18:31.270"></status>
</kw>
<msg timestamp="20210210 10:18:34.753" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:34.753" starttime="20210210 10:18:31.270"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:34.753" starttime="20210210 10:18:31.269"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/link2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:34.756" level="INFO">Running command 'ozone sh bucket create 96567-target/link2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:38.180" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:18:38.181" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 10:18:38.181" starttime="20210210 10:18:34.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:38.182" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 10:18:38.182" starttime="20210210 10:18:38.181"></status>
</kw>
<msg timestamp="20210210 10:18:38.182" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 10:18:38.182" starttime="20210210 10:18:34.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:38.183" starttime="20210210 10:18:38.182"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create ${target}/bucket3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:38.186" level="INFO">Running command 'ozone sh bucket create 96567-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:41.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:41.560" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:41.560" starttime="20210210 10:18:38.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:41.562" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:41.562" starttime="20210210 10:18:41.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:41.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:41.563" starttime="20210210 10:18:41.562"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:41.563" starttime="20210210 10:18:38.184"></status>
</kw>
<msg timestamp="20210210 10:18:41.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:41.563" starttime="20210210 10:18:38.184"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:41.564" starttime="20210210 10:18:38.183"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/bucket3</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:41.566" level="INFO">Running command 'ozone sh bucket link 96567-source/bucket1 96567-target/bucket3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:44.883" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:18:44.884" level="INFO">${output} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 10:18:44.884" starttime="20210210 10:18:41.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.885" level="INFO">BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 10:18:44.885" starttime="20210210 10:18:44.884"></status>
</kw>
<msg timestamp="20210210 10:18:44.885" level="INFO">${result} = BUCKET_ALREADY_EXISTS Bucket already exist</msg>
<status status="PASS" endtime="20210210 10:18:44.885" starttime="20210210 10:18:41.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>BUCKET_ALREADY_EXISTS</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:44.886" starttime="20210210 10:18:44.885"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:44.886" critical="yes" starttime="20210210 10:18:31.223"></status>
</test>
<test id="s1-s3-t10" name="Can follow link with read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:44.893" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:44.895" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:44.895" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:44.895" starttime="20210210 10:18:44.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.896" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:44.896" starttime="20210210 10:18:44.896"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.897" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:44.897" starttime="20210210 10:18:44.897"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.897" starttime="20210210 10:18:44.890"></status>
</kw>
<msg timestamp="20210210 10:18:44.898" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:44.898" starttime="20210210 10:18:44.890"></status>
</kw>
<msg timestamp="20210210 10:18:44.898" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:44.898" starttime="20210210 10:18:44.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:44.899" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:44.899" starttime="20210210 10:18:44.898"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:44.902" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:44.919" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:44.919" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:44.919" starttime="20210210 10:18:44.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.920" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:44.920" starttime="20210210 10:18:44.919"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.920" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:44.921" starttime="20210210 10:18:44.920"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.921" starttime="20210210 10:18:44.900"></status>
</kw>
<msg timestamp="20210210 10:18:44.921" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:44.921" starttime="20210210 10:18:44.900"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.921" starttime="20210210 10:18:44.899"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.921" starttime="20210210 10:18:44.899"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.922" starttime="20210210 10:18:44.889"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.922" starttime="20210210 10:18:44.888"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Can follow link with read access</arg>
</arguments>
<kw name="Can follow link with read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:44.927" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:44.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:44.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:44.930" starttime="20210210 10:18:44.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.931" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:44.931" starttime="20210210 10:18:44.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.932" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:44.932" starttime="20210210 10:18:44.931"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.932" starttime="20210210 10:18:44.924"></status>
</kw>
<msg timestamp="20210210 10:18:44.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:44.932" starttime="20210210 10:18:44.924"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.932" starttime="20210210 10:18:44.924"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:44.937" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:44.940" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:44.940" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:44.940" starttime="20210210 10:18:44.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.941" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:44.941" starttime="20210210 10:18:44.940"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.942" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:44.942" starttime="20210210 10:18:44.942"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.942" starttime="20210210 10:18:44.934"></status>
</kw>
<msg timestamp="20210210 10:18:44.942" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:44.943" starttime="20210210 10:18:44.934"></status>
</kw>
<msg timestamp="20210210 10:18:44.943" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:44.943" starttime="20210210 10:18:44.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:44.944" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:44.944" starttime="20210210 10:18:44.943"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:44.948" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:44.955" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:44.956" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:44.956" starttime="20210210 10:18:44.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.956" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:44.957" starttime="20210210 10:18:44.956"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:44.957" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:44.957" starttime="20210210 10:18:44.957"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.957" starttime="20210210 10:18:44.946"></status>
</kw>
<msg timestamp="20210210 10:18:44.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:44.958" starttime="20210210 10:18:44.946"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.958" starttime="20210210 10:18:44.945"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.958" starttime="20210210 10:18:44.944"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.958" starttime="20210210 10:18:44.933"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:44.958" starttime="20210210 10:18:44.933"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/readable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:44.961" level="INFO">Running command 'ozone sh key list 96567-target/readable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:48.552" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:48.552" level="INFO">${output} = {
  "volumeName" : "96567-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-10T10:16:30.527Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210210 10:18:48.552" starttime="20210210 10:18:44.959"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.554" level="INFO">{
  "volumeName" : "96567-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-10T10:16:30.527Z",
  "modificationTime" : "2021-02-10T10:16:33.027Z",
  "replicationType" : "RATIS",
  "replicationFactor" : 3
}</msg>
<status status="PASS" endtime="20210210 10:18:48.554" starttime="20210210 10:18:48.553"></status>
</kw>
<msg timestamp="20210210 10:18:48.555" level="INFO">${result} = {
  "volumeName" : "96567-source",
  "bucketName" : "readable-bucket",
  "name" : "key-in-readable-bucket",
  "dataSize" : 671,
  "creationTime" : "2021-02-10T10:16:30.527Z",
  "modificationTime" : "2...</msg>
<status status="PASS" endtime="20210210 10:18:48.555" starttime="20210210 10:18:44.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>key-in-readable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:48.555" starttime="20210210 10:18:48.555"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.556" starttime="20210210 10:18:44.923"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.556" starttime="20210210 10:18:44.923"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:48.556" critical="yes" starttime="20210210 10:18:44.887"></status>
</test>
<test id="s1-s3-t11" name="Cannot follow link without read access">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:48.562" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:48.565" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:48.565" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:48.565" starttime="20210210 10:18:48.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.566" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:48.566" starttime="20210210 10:18:48.566"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.567" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:48.567" starttime="20210210 10:18:48.567"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.568" starttime="20210210 10:18:48.560"></status>
</kw>
<msg timestamp="20210210 10:18:48.568" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:48.568" starttime="20210210 10:18:48.560"></status>
</kw>
<msg timestamp="20210210 10:18:48.568" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:48.568" starttime="20210210 10:18:48.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:48.569" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:48.569" starttime="20210210 10:18:48.569"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:48.574" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:48.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:48.583" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:48.583" starttime="20210210 10:18:48.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.584" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:48.585" starttime="20210210 10:18:48.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:48.585" starttime="20210210 10:18:48.585"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.586" starttime="20210210 10:18:48.571"></status>
</kw>
<msg timestamp="20210210 10:18:48.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:48.586" starttime="20210210 10:18:48.570"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.586" starttime="20210210 10:18:48.570"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.586" starttime="20210210 10:18:48.569"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.586" starttime="20210210 10:18:48.559"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.586" starttime="20210210 10:18:48.558"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Cannot follow link without read access</arg>
</arguments>
<kw name="Cannot follow link without read access">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:48.591" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:48.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:48.595" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:48.595" starttime="20210210 10:18:48.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.596" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:48.597" starttime="20210210 10:18:48.596"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.597" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:48.597" starttime="20210210 10:18:48.597"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.598" starttime="20210210 10:18:48.589"></status>
</kw>
<msg timestamp="20210210 10:18:48.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:48.598" starttime="20210210 10:18:48.588"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.598" starttime="20210210 10:18:48.588"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:48.603" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:48.605" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:48.605" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:48.605" starttime="20210210 10:18:48.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.606" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:48.606" starttime="20210210 10:18:48.605"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.608" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:48.608" starttime="20210210 10:18:48.606"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.609" starttime="20210210 10:18:48.600"></status>
</kw>
<msg timestamp="20210210 10:18:48.609" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:48.610" starttime="20210210 10:18:48.600"></status>
</kw>
<msg timestamp="20210210 10:18:48.610" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:48.610" starttime="20210210 10:18:48.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:48.611" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:48.611" starttime="20210210 10:18:48.610"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:48.618" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:48.625" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:48.625" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:48.625" starttime="20210210 10:18:48.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.627" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:48.627" starttime="20210210 10:18:48.626"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:48.627" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:48.628" starttime="20210210 10:18:48.627"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.628" starttime="20210210 10:18:48.616"></status>
</kw>
<msg timestamp="20210210 10:18:48.628" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:48.628" starttime="20210210 10:18:48.615"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.628" starttime="20210210 10:18:48.615"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.629" starttime="20210210 10:18:48.611"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.629" starttime="20210210 10:18:48.599"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:48.629" starttime="20210210 10:18:48.598"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/unreadable-link</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:48.631" level="INFO">Running command 'ozone sh key list 96567-target/unreadable-link 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:52.382" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:18:52.382" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 96567-target unreadable-link null</msg>
<status status="PASS" endtime="20210210 10:18:52.382" starttime="20210210 10:18:48.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.384" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 96567-target unreadable-link null</msg>
<status status="PASS" endtime="20210210 10:18:52.384" starttime="20210210 10:18:52.383"></status>
</kw>
<msg timestamp="20210210 10:18:52.384" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have READ permission to access bucket 96567-target unreadable-link null</msg>
<status status="PASS" endtime="20210210 10:18:52.384" starttime="20210210 10:18:48.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:52.385" starttime="20210210 10:18:52.384"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.385" starttime="20210210 10:18:48.587"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.385" starttime="20210210 10:18:48.587"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:52.385" critical="yes" starttime="20210210 10:18:48.557"></status>
</test>
<test id="s1-s3-t12" name="ACL verified on source bucket">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:52.391" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:52.394" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:52.394" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:52.394" starttime="20210210 10:18:52.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.395" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:52.395" starttime="20210210 10:18:52.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.395" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:52.395" starttime="20210210 10:18:52.395"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.396" starttime="20210210 10:18:52.389"></status>
</kw>
<msg timestamp="20210210 10:18:52.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:52.396" starttime="20210210 10:18:52.389"></status>
</kw>
<msg timestamp="20210210 10:18:52.396" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:52.396" starttime="20210210 10:18:52.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:52.397" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:52.397" starttime="20210210 10:18:52.396"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:52.401" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:52.407" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:52.407" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:52.407" starttime="20210210 10:18:52.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.408" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:52.408" starttime="20210210 10:18:52.408"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.409" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:52.409" starttime="20210210 10:18:52.408"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.409" starttime="20210210 10:18:52.398"></status>
</kw>
<msg timestamp="20210210 10:18:52.409" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:52.409" starttime="20210210 10:18:52.398"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.410" starttime="20210210 10:18:52.397"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.410" starttime="20210210 10:18:52.397"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.410" starttime="20210210 10:18:52.388"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.410" starttime="20210210 10:18:52.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>ACL verified on source bucket</arg>
</arguments>
<kw name="ACL verified on source bucket">
<kw name="Execute" library="os">
<arguments>
<arg>kdestroy</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:52.414" level="INFO">Running command 'kdestroy 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:52.416" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:52.416" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:52.417" starttime="20210210 10:18:52.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.417" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:52.418" starttime="20210210 10:18:52.417"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.418" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:52.418" starttime="20210210 10:18:52.418"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.418" starttime="20210210 10:18:52.412"></status>
</kw>
<msg timestamp="20210210 10:18:52.419" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:52.419" starttime="20210210 10:18:52.411"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.419" starttime="20210210 10:18:52.411"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>Kinit test user</arg>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser2</arg>
<arg>testuser2.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:52.423" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:52.425" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:52.425" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:52.425" starttime="20210210 10:18:52.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.426" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:52.426" starttime="20210210 10:18:52.425"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.426" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:52.426" starttime="20210210 10:18:52.426"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.427" starttime="20210210 10:18:52.421"></status>
</kw>
<msg timestamp="20210210 10:18:52.427" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:52.427" starttime="20210210 10:18:52.420"></status>
</kw>
<msg timestamp="20210210 10:18:52.427" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:52.427" starttime="20210210 10:18:52.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:52.428" level="INFO">${TEST_USER} = testuser2/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:52.428" starttime="20210210 10:18:52.427"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:52.433" level="INFO">Running command 'kinit -k testuser2/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser2.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:52.446" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:52.446" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:52.446" starttime="20210210 10:18:52.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.447" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:52.447" starttime="20210210 10:18:52.446"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:52.447" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:52.448" starttime="20210210 10:18:52.447"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.448" starttime="20210210 10:18:52.429"></status>
</kw>
<msg timestamp="20210210 10:18:52.448" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:52.448" starttime="20210210 10:18:52.429"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.448" starttime="20210210 10:18:52.428"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.448" starttime="20210210 10:18:52.428"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.449" starttime="20210210 10:18:52.419"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:52.449" starttime="20210210 10:18:52.419"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:52.452" level="INFO">Running command 'ozone sh bucket info 96567-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:56.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:56.200" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210210 10:18:56.200" starttime="20210210 10:18:52.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:56.201" level="INFO">{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:47.729Z",
  "modificationTime" : "2021-02-10T10:17:05.775Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 10:18:56.202" starttime="20210210 10:18:56.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:56.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:56.202" starttime="20210210 10:18:56.202"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:56.203" starttime="20210210 10:18:52.450"></status>
</kw>
<msg timestamp="20210210 10:18:56.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:56.203" starttime="20210210 10:18:52.449"></status>
</kw>
<msg timestamp="20210210 10:18:56.203" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTi...</msg>
<status status="PASS" endtime="20210210 10:18:56.203" starttime="20210210 10:18:52.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>link-to-unreadable-bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:56.204" starttime="20210210 10:18:56.204"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:56.204" starttime="20210210 10:18:56.204"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/link-to-unreadable-bucket</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:56.208" level="INFO">Running command 'ozone sh key list 96567-target/link-to-unreadable-bucket 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:59.495" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:18:59.495" level="INFO">${output} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 96567-source unreadable-bucket </msg>
<status status="PASS" endtime="20210210 10:18:59.495" starttime="20210210 10:18:56.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:59.496" level="INFO">PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 96567-source unreadable-bucket </msg>
<status status="PASS" endtime="20210210 10:18:59.496" starttime="20210210 10:18:59.495"></status>
</kw>
<msg timestamp="20210210 10:18:59.497" level="INFO">${result} = PERMISSION_DENIED User testuser2/scm@EXAMPLE.COM doesn't have LIST permission to access bucket 96567-source unreadable-bucket </msg>
<status status="PASS" endtime="20210210 10:18:59.497" starttime="20210210 10:18:56.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>PERMISSION_DENIED</arg>
</arguments>
<status status="PASS" endtime="20210210 10:18:59.497" starttime="20210210 10:18:59.497"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.497" starttime="20210210 10:18:52.411"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.497" starttime="20210210 10:18:52.410"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:18:59.498" critical="yes" starttime="20210210 10:18:52.386"></status>
</test>
<test id="s1-s3-t13" name="Loop in link chain is detected">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:59.504" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:59.506" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:59.506" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:18:59.506" starttime="20210210 10:18:59.502"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:59.507" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:18:59.507" starttime="20210210 10:18:59.506"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:59.508" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:59.508" starttime="20210210 10:18:59.507"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.508" starttime="20210210 10:18:59.501"></status>
</kw>
<msg timestamp="20210210 10:18:59.508" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:59.508" starttime="20210210 10:18:59.501"></status>
</kw>
<msg timestamp="20210210 10:18:59.509" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:18:59.509" starttime="20210210 10:18:59.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:18:59.509" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:18:59.509" starttime="20210210 10:18:59.509"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:59.514" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:18:59.521" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:18:59.521" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:18:59.521" starttime="20210210 10:18:59.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:18:59.522" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:18:59.522" starttime="20210210 10:18:59.522"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:18:59.523" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:18:59.523" starttime="20210210 10:18:59.523"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.523" starttime="20210210 10:18:59.511"></status>
</kw>
<msg timestamp="20210210 10:18:59.524" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:18:59.524" starttime="20210210 10:18:59.511"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.524" starttime="20210210 10:18:59.510"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.524" starttime="20210210 10:18:59.510"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.524" starttime="20210210 10:18:59.500"></status>
</kw>
<status status="PASS" endtime="20210210 10:18:59.524" starttime="20210210 10:18:59.499"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop1 ${target}/loop2</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:18:59.527" level="INFO">Running command 'ozone sh bucket link 96567-target/loop1 96567-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:03.113" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:03.113" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:03.113" starttime="20210210 10:18:59.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:03.114" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:03.115" starttime="20210210 10:19:03.114"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:03.115" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:03.115" starttime="20210210 10:19:03.115"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:03.116" starttime="20210210 10:18:59.525"></status>
</kw>
<msg timestamp="20210210 10:19:03.116" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:03.116" starttime="20210210 10:18:59.525"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:03.116" starttime="20210210 10:18:59.524"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop2 ${target}/loop3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:03.120" level="INFO">Running command 'ozone sh bucket link 96567-target/loop2 96567-target/loop3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:06.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:06.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:06.750" starttime="20210210 10:19:03.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:06.751" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:06.751" starttime="20210210 10:19:06.750"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:06.752" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:06.752" starttime="20210210 10:19:06.751"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:06.752" starttime="20210210 10:19:03.117"></status>
</kw>
<msg timestamp="20210210 10:19:06.752" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:06.752" starttime="20210210 10:19:03.117"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:06.752" starttime="20210210 10:19:03.116"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${target}/loop3 ${target}/loop1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:06.756" level="INFO">Running command 'ozone sh bucket link 96567-target/loop3 96567-target/loop1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:10.539" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:10.539" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:10.539" starttime="20210210 10:19:06.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:10.540" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:10.541" starttime="20210210 10:19:10.540"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:10.541" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:10.541" starttime="20210210 10:19:10.541"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:10.542" starttime="20210210 10:19:06.754"></status>
</kw>
<msg timestamp="20210210 10:19:10.542" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:10.542" starttime="20210210 10:19:06.753"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:10.542" starttime="20210210 10:19:06.753"></status>
</kw>
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh key list ${target}/loop2</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:10.545" level="INFO">Running command 'ozone sh key list 96567-target/loop2 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:14.047" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:19:14.047" level="INFO">${output} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210210 10:19:14.047" starttime="20210210 10:19:10.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:14.049" level="INFO">DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210210 10:19:14.049" starttime="20210210 10:19:14.047"></status>
</kw>
<msg timestamp="20210210 10:19:14.049" level="INFO">${result} = DETECTED_LOOP_IN_BUCKET_LINKS Detected loop in bucket links</msg>
<status status="PASS" endtime="20210210 10:19:14.049" starttime="20210210 10:19:10.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>DETECTED_LOOP</arg>
</arguments>
<status status="PASS" endtime="20210210 10:19:14.050" starttime="20210210 10:19:14.049"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:19:14.050" critical="yes" starttime="20210210 10:18:59.498"></status>
</test>
<test id="s1-s3-t14" name="Multiple links to same bucket are allowed">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:14.056" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:14.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:14.059" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:19:14.059" starttime="20210210 10:19:14.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:14.060" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:19:14.060" starttime="20210210 10:19:14.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:14.060" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:14.061" starttime="20210210 10:19:14.060"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:14.061" starttime="20210210 10:19:14.054"></status>
</kw>
<msg timestamp="20210210 10:19:14.061" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:14.061" starttime="20210210 10:19:14.053"></status>
</kw>
<msg timestamp="20210210 10:19:14.062" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:19:14.062" starttime="20210210 10:19:14.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:19:14.062" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:19:14.063" starttime="20210210 10:19:14.062"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:14.067" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:14.074" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:14.074" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:14.074" starttime="20210210 10:19:14.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:14.075" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:14.075" starttime="20210210 10:19:14.075"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:14.076" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:14.076" starttime="20210210 10:19:14.075"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:14.076" starttime="20210210 10:19:14.064"></status>
</kw>
<msg timestamp="20210210 10:19:14.076" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:14.076" starttime="20210210 10:19:14.064"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:14.077" starttime="20210210 10:19:14.063"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:14.077" starttime="20210210 10:19:14.063"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:14.077" starttime="20210210 10:19:14.052"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:14.077" starttime="20210210 10:19:14.052"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket link ${source}/bucket1 ${target}/link3</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:14.081" level="INFO">Running command 'ozone sh bucket link 96567-source/bucket1 96567-target/link3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:17.542" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:17.542" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:17.542" starttime="20210210 10:19:14.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:17.543" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:17.543" starttime="20210210 10:19:17.542"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:17.544" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:17.544" starttime="20210210 10:19:17.543"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:17.544" starttime="20210210 10:19:14.078"></status>
</kw>
<msg timestamp="20210210 10:19:17.544" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:17.545" starttime="20210210 10:19:14.078"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:17.545" starttime="20210210 10:19:14.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${target}/link3/key3 /etc/group</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:17.548" level="INFO">Running command 'ozone sh key put 96567-target/link3/key3 /etc/group 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:23.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:23.710" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:23.710" starttime="20210210 10:19:17.546"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:23.711" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:23.711" starttime="20210210 10:19:23.710"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:23.712" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:23.712" starttime="20210210 10:19:23.711"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:23.712" starttime="20210210 10:19:17.546"></status>
</kw>
<msg timestamp="20210210 10:19:23.712" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:23.712" starttime="20210210 10:19:17.546"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:23.712" starttime="20210210 10:19:17.545"></status>
</kw>
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>${target}/link1/key3</arg>
<arg>/etc/group</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:19:23.714" level="INFO">${postfix} = 19722</msg>
<status status="PASS" endtime="20210210 10:19:23.714" starttime="20210210 10:19:23.714"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:19:23.715" level="INFO">${tmpfile} = /tmp/tempkey-19722</msg>
<status status="PASS" endtime="20210210 10:19:23.715" starttime="20210210 10:19:23.714"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:23.718" level="INFO">Running command 'ozone sh key get 96567-target/link1/key3 /tmp/tempkey-19722 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:29.237" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:29.237" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:29.237" starttime="20210210 10:19:23.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.238" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:29.238" starttime="20210210 10:19:29.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.239" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:29.239" starttime="20210210 10:19:29.239"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.240" starttime="20210210 10:19:23.716"></status>
</kw>
<msg timestamp="20210210 10:19:29.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:29.240" starttime="20210210 10:19:23.715"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.240" starttime="20210210 10:19:23.715"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:19:29.243" level="INFO">Running command 'diff -q /etc/group /tmp/tempkey-19722 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:29.246" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:19:29.246" starttime="20210210 10:19:29.240"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:29.250" level="INFO">Running command 'rm -f /tmp/tempkey-19722 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:29.253" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:29.253" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:29.253" starttime="20210210 10:19:29.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.256" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:29.256" starttime="20210210 10:19:29.254"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.257" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:29.257" starttime="20210210 10:19:29.256"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.257" starttime="20210210 10:19:29.248"></status>
</kw>
<msg timestamp="20210210 10:19:29.257" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:29.258" starttime="20210210 10:19:29.247"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.258" starttime="20210210 10:19:29.246"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:19:29.259" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:19:29.259" starttime="20210210 10:19:29.258"></status>
</kw>
<msg timestamp="20210210 10:19:29.259" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:19:29.259" starttime="20210210 10:19:23.713"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:19:29.260" starttime="20210210 10:19:29.259"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.260" starttime="20210210 10:19:23.713"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:19:29.260" critical="yes" starttime="20210210 10:19:14.051"></status>
</test>
<test id="s1-s3-t15" name="Source bucket not affected by deleting link">
<kw type="setup" name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SECURITY_ENABLED}' == 'true'</arg>
<arg>Kinit test user</arg>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>testuser</arg>
<arg>testuser.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:29.266" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:29.269" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:29.269" level="INFO">${output} = scm</msg>
<status status="PASS" endtime="20210210 10:19:29.269" starttime="20210210 10:19:29.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.270" level="INFO">scm</msg>
<status status="PASS" endtime="20210210 10:19:29.270" starttime="20210210 10:19:29.270"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.271" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:29.271" starttime="20210210 10:19:29.270"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.271" starttime="20210210 10:19:29.264"></status>
</kw>
<msg timestamp="20210210 10:19:29.271" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:29.271" starttime="20210210 10:19:29.264"></status>
</kw>
<msg timestamp="20210210 10:19:29.272" level="INFO">${hostname} = scm</msg>
<status status="PASS" endtime="20210210 10:19:29.272" starttime="20210210 10:19:29.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:19:29.272" level="INFO">${TEST_USER} = testuser/scm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:19:29.272" starttime="20210210 10:19:29.272"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:29.276" level="INFO">Running command 'kinit -k testuser/scm@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:29.283" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:29.283" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:29.283" starttime="20210210 10:19:29.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.284" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:29.284" starttime="20210210 10:19:29.283"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:29.285" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:29.285" starttime="20210210 10:19:29.284"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.285" starttime="20210210 10:19:29.274"></status>
</kw>
<msg timestamp="20210210 10:19:29.286" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:29.286" starttime="20210210 10:19:29.274"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.286" starttime="20210210 10:19:29.273"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.286" starttime="20210210 10:19:29.273"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.286" starttime="20210210 10:19:29.262"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:29.286" starttime="20210210 10:19:29.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket delete ${target}/link1</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:29.290" level="INFO">Running command 'ozone sh bucket delete 96567-target/link1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:32.517" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:32.517" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:19:32.517" starttime="20210210 10:19:29.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:32.519" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:19:32.519" starttime="20210210 10:19:32.518"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:32.520" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:32.520" starttime="20210210 10:19:32.519"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:32.520" starttime="20210210 10:19:29.287"></status>
</kw>
<msg timestamp="20210210 10:19:32.520" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:32.521" starttime="20210210 10:19:29.287"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:32.521" starttime="20210210 10:19:29.286"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket list ${target}</arg>
</arguments>
<assign>
<var>${bucket_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:32.524" level="INFO">Running command 'ozone sh bucket list 96567-target 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:36.554" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:36.554" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T...</msg>
<status status="PASS" endtime="20210210 10:19:36.554" starttime="20210210 10:19:32.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:36.555" level="INFO">{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:18:41.486Z",
  "modificationTime" : "2021-02-10T10:18:41.486Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "dangling-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:17:09.304Z",
  "modificationTime" : "2021-02-10T10:17:09.304Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "no-such-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link-to-unreadable-bucket",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:47.729Z",
  "modificationTime" : "2021-02-10T10:17:05.775Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "unreadable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:18:34.562Z",
  "modificationTime" : "2021-02-10T10:18:34.562Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "bucket2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "link3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:19:17.382Z",
  "modificationTime" : "2021-02-10T10:19:17.382Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "bucket1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "loop1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:19:10.451Z",
  "modificationTime" : "2021-02-10T10:19:10.451Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-target",
  "sourceBucket" : "loop3",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "loop2",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:19:03.017Z",
  "modificationTime" : "2021-02-10T10:19:03.017Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-target",
  "sourceBucket" : "loop1",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "loop3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:19:06.568Z",
  "modificationTime" : "2021-02-10T10:19:06.568Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-target",
  "sourceBucket" : "loop2",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "readable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:40.480Z",
  "modificationTime" : "2021-02-10T10:17:02.086Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}
{
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "unreadable-link",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:16:44.100Z",
  "modificationTime" : "2021-02-10T10:16:44.100Z",
  "encryptionKeyName" : null,
  "sourceVolume" : "96567-source",
  "sourceBucket" : "readable-bucket",
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 10:19:36.555" starttime="20210210 10:19:36.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:36.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:36.556" starttime="20210210 10:19:36.555"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:36.556" starttime="20210210 10:19:32.522"></status>
</kw>
<msg timestamp="20210210 10:19:36.556" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:36.556" starttime="20210210 10:19:32.522"></status>
</kw>
<msg timestamp="20210210 10:19:36.557" level="INFO">${bucket_list} = {
  "metadata" : { },
  "volumeName" : "96567-target",
  "name" : "bucket3",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T...</msg>
<status status="PASS" endtime="20210210 10:19:36.557" starttime="20210210 10:19:32.521"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${bucket_list}</arg>
<arg>link1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:19:36.557" starttime="20210210 10:19:36.557"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key list ${source}/bucket1 | jq -r '.name'</arg>
</arguments>
<assign>
<var>${source_list}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:19:36.562" level="INFO">Running command 'ozone sh key list 96567-source/bucket1 | jq -r '.name' 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:19:39.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:19:39.967" level="INFO">${output} = key1
key3</msg>
<status status="PASS" endtime="20210210 10:19:39.967" starttime="20210210 10:19:36.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:19:39.968" level="INFO">key1
key3</msg>
<status status="PASS" endtime="20210210 10:19:39.968" starttime="20210210 10:19:39.967"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:19:39.969" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:19:39.969" starttime="20210210 10:19:39.968"></status>
</kw>
<status status="PASS" endtime="20210210 10:19:39.969" starttime="20210210 10:19:36.559"></status>
</kw>
<msg timestamp="20210210 10:19:39.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:19:39.970" starttime="20210210 10:19:36.558"></status>
</kw>
<msg timestamp="20210210 10:19:39.970" level="INFO">${source_list} = key1
key3</msg>
<status status="PASS" endtime="20210210 10:19:39.970" starttime="20210210 10:19:36.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${source_list}</arg>
<arg>key1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:19:39.971" starttime="20210210 10:19:39.970"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:19:39.971" critical="yes" starttime="20210210 10:19:29.261"></status>
</test>
<doc>Test bucket links via Ozone CLI</doc>
<status status="PASS" endtime="20210210 10:19:39.974" starttime="20210210 10:16:16.037"></status>
</suite>
<status status="PASS" elapsedtime="234757" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="20">Critical Tests</stat>
<stat fail="0" pass="20">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-om-ha" pass="20">ozonesecure-om-ha</stat>
<stat fail="0" id="s1-s1" name="Freon" pass="4">ozonesecure-om-ha.Freon</stat>
<stat fail="0" id="s1-s1-s1" name="Generate" pass="3">ozonesecure-om-ha.Freon.Generate</stat>
<stat fail="0" id="s1-s1-s2" name="Validate" pass="1">ozonesecure-om-ha.Freon.Validate</stat>
<stat fail="0" id="s1-s2" name="Kinit" pass="1">ozonesecure-om-ha.Kinit</stat>
<stat fail="0" id="s1-s3" name="Links" pass="15">ozonesecure-om-ha.Links</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
