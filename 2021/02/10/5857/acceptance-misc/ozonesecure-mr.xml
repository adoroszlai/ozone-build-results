<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 10:12:50.730" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:38.214" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:42.410" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 10:08:42.410" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 10:08:42.410" starttime="20210210 10:08:38.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:42.412" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 10:08:42.412" starttime="20210210 10:08:42.411"></status>
</kw>
<msg timestamp="20210210 10:08:42.412" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 10:08:42.412" starttime="20210210 10:08:38.210"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:42.418" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:46.499" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:08:46.500" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:08:46.500" starttime="20210210 10:08:42.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:46.501" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:08:46.501" starttime="20210210 10:08:46.500"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:08:46.501" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:08:46.502" starttime="20210210 10:08:46.501"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:46.502" starttime="20210210 10:08:42.414"></status>
</kw>
<msg timestamp="20210210 10:08:46.502" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:08:46.502" starttime="20210210 10:08:42.414"></status>
</kw>
<msg timestamp="20210210 10:08:46.502" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 10:08:46.503" starttime="20210210 10:08:42.413"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:08:46.503" starttime="20210210 10:08:46.503"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:46.503" starttime="20210210 10:08:42.413"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:46.503" starttime="20210210 10:08:42.412"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:46.508" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:50.182" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:08:50.182" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:08:50.182" starttime="20210210 10:08:46.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:50.184" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:08:50.184" starttime="20210210 10:08:50.183"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:08:50.184" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:08:50.184" starttime="20210210 10:08:50.184"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:50.185" starttime="20210210 10:08:46.505"></status>
</kw>
<msg timestamp="20210210 10:08:50.185" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:08:50.185" starttime="20210210 10:08:46.505"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:50.185" starttime="20210210 10:08:46.505"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:50.185" starttime="20210210 10:08:46.504"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:50.186" starttime="20210210 10:08:46.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 10:08:50.186" starttime="20210210 10:08:50.186"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:50.191" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:53.755" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:08:53.755" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:08...</msg>
<status status="PASS" endtime="20210210 10:08:53.755" starttime="20210210 10:08:50.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:53.757" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:08:49.895Z",
  "modificationTime" : "2021-02-10T10:08:49.895Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 10:08:53.757" starttime="20210210 10:08:53.756"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:08:53.757" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:08:53.758" starttime="20210210 10:08:53.757"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:53.758" starttime="20210210 10:08:50.188"></status>
</kw>
<msg timestamp="20210210 10:08:53.758" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:08:53.758" starttime="20210210 10:08:50.187"></status>
</kw>
<msg timestamp="20210210 10:08:53.758" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T10:08...</msg>
<status status="PASS" endtime="20210210 10:08:53.758" starttime="20210210 10:08:50.186"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 10:08:53.759" starttime="20210210 10:08:53.758"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:08:53.763" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:08:53.763" starttime="20210210 10:08:53.762"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:08:53.764" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:08:53.764" starttime="20210210 10:08:53.763"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:53.764" starttime="20210210 10:08:53.762"></status>
</kw>
<msg timestamp="20210210 10:08:53.764" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:08:53.764" starttime="20210210 10:08:53.761"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:53.764" starttime="20210210 10:08:53.761"></status>
</kw>
<msg timestamp="20210210 10:08:53.764" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 10:08:53.765" starttime="20210210 10:08:53.760"></status>
</kw>
<msg timestamp="20210210 10:08:53.765" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 10:08:53.765" starttime="20210210 10:08:53.759"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:53.768" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:57.492" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:08:57.492" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:08:57.492" starttime="20210210 10:08:53.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:57.494" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:08:57.494" starttime="20210210 10:08:57.493"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:08:57.494" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:08:57.494" starttime="20210210 10:08:57.494"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:57.495" starttime="20210210 10:08:53.766"></status>
</kw>
<msg timestamp="20210210 10:08:57.495" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:08:57.495" starttime="20210210 10:08:53.765"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:57.495" starttime="20210210 10:08:53.765"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:57.499" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:06.242" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:06.242" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:09:06.242" starttime="20210210 10:08:57.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:06.244" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:09:06.244" starttime="20210210 10:09:06.243"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:06.245" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:06.245" starttime="20210210 10:09:06.245"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:06.246" starttime="20210210 10:08:57.496"></status>
</kw>
<msg timestamp="20210210 10:09:06.246" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:06.246" starttime="20210210 10:08:57.496"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:06.246" starttime="20210210 10:08:57.495"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:06.250" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:12.801" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:12.801" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:09:12.801" starttime="20210210 10:09:06.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:12.802" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:09:12.802" starttime="20210210 10:09:12.802"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:12.803" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:12.803" starttime="20210210 10:09:12.802"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:12.803" starttime="20210210 10:09:06.247"></status>
</kw>
<msg timestamp="20210210 10:09:12.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:12.803" starttime="20210210 10:09:06.247"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:12.804" starttime="20210210 10:09:06.246"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:12.807" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:18.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:18.886" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:09:18.886" starttime="20210210 10:09:12.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:18.887" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:09:18.887" starttime="20210210 10:09:18.887"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:18.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:18.888" starttime="20210210 10:09:18.888"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:18.888" starttime="20210210 10:09:12.805"></status>
</kw>
<msg timestamp="20210210 10:09:18.889" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:18.889" starttime="20210210 10:09:12.804"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:18.889" starttime="20210210 10:09:12.804"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:09:18.889" critical="yes" starttime="20210210 10:08:38.209"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:09:18.896" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:09:18.896" starttime="20210210 10:09:18.896"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:09:18.897" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:09:18.897" starttime="20210210 10:09:18.896"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:18.897" starttime="20210210 10:09:18.895"></status>
</kw>
<msg timestamp="20210210 10:09:18.897" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:09:18.897" starttime="20210210 10:09:18.894"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:18.897" starttime="20210210 10:09:18.894"></status>
</kw>
<msg timestamp="20210210 10:09:18.898" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 10:09:18.898" starttime="20210210 10:09:18.893"></status>
</kw>
<msg timestamp="20210210 10:09:18.898" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 10:09:18.898" starttime="20210210 10:09:18.890"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:18.901" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:22.330" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:22.330" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:09:22.330" starttime="20210210 10:09:18.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:22.331" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:09:22.331" starttime="20210210 10:09:22.331"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:22.332" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:22.332" starttime="20210210 10:09:22.332"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:22.333" starttime="20210210 10:09:18.899"></status>
</kw>
<msg timestamp="20210210 10:09:22.333" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:22.333" starttime="20210210 10:09:18.898"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:22.333" starttime="20210210 10:09:18.898"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:22.337" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:26.079" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:26.079" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:09:26.079" starttime="20210210 10:09:22.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:26.080" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:09:26.080" starttime="20210210 10:09:26.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:26.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:26.081" starttime="20210210 10:09:26.080"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:26.081" starttime="20210210 10:09:22.334"></status>
</kw>
<msg timestamp="20210210 10:09:26.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:26.081" starttime="20210210 10:09:22.334"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:26.082" starttime="20210210 10:09:22.333"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:09:26.082" critical="yes" starttime="20210210 10:09:18.890"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 10:09:26.083" starttime="20210210 10:08:38.151"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 10:11:15.745" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 10:11:15.745" starttime="20210210 10:11:15.744"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:11:15.746" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 10:11:15.746" starttime="20210210 10:11:15.745"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:15.746" starttime="20210210 10:11:15.744"></status>
</kw>
<msg timestamp="20210210 10:11:15.746" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 10:11:15.746" starttime="20210210 10:11:15.743"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:11:15.747" starttime="20210210 10:11:15.747"></status>
</kw>
<msg timestamp="20210210 10:11:15.748" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 10:11:15.748" starttime="20210210 10:11:15.746"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:15.748" starttime="20210210 10:11:15.742"></status>
</kw>
<msg timestamp="20210210 10:11:15.748" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 10:11:15.748" starttime="20210210 10:11:15.741"></status>
</kw>
<msg timestamp="20210210 10:11:15.749" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 10:11:15.749" starttime="20210210 10:11:15.740"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 10:11:15.750" level="INFO">${random} = 62827</msg>
<status status="PASS" endtime="20210210 10:11:15.750" starttime="20210210 10:11:15.749"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:11:15.757" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-62827 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:11:20.010" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:11:20.010" level="INFO">${output} = 2021-02-10 10:11:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:11:18 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 10:11:20.010" starttime="20210210 10:11:15.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:11:20.011" level="INFO">2021-02-10 10:11:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:11:18 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:11:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 10:11:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:11:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-75BFD65D920A-&gt;09cc96f6-ff29-4c07-85d3-788dbdfe9ede
2021-02-10 10:11:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 10:11:20.011" starttime="20210210 10:11:20.010"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:11:20.012" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:11:20.012" starttime="20210210 10:11:20.011"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:20.012" starttime="20210210 10:11:15.751"></status>
</kw>
<msg timestamp="20210210 10:11:20.012" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:11:20.012" starttime="20210210 10:11:15.751"></status>
</kw>
<msg timestamp="20210210 10:11:20.012" level="INFO">${result} = 2021-02-10 10:11:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:11:18 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 10:11:20.012" starttime="20210210 10:11:15.750"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:11:20.016" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:11:22.163" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:11:22.163" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:09 ofs://om/volume1/bucket1/ozone-51315
-rw-...</msg>
<status status="PASS" endtime="20210210 10:11:22.163" starttime="20210210 10:11:20.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:11:22.165" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:09 ofs://om/volume1/bucket1/ozone-51315
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:11 ofs://om/volume1/bucket1/ozone-62827
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:09 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:10 ofs://om/volume1/bucket1/wordcount-6LDOWlHL.txt</msg>
<status status="PASS" endtime="20210210 10:11:22.165" starttime="20210210 10:11:22.164"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:11:22.165" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:11:22.166" starttime="20210210 10:11:22.165"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:22.166" starttime="20210210 10:11:20.014"></status>
</kw>
<msg timestamp="20210210 10:11:22.166" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:11:22.166" starttime="20210210 10:11:20.013"></status>
</kw>
<msg timestamp="20210210 10:11:22.166" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:08 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:09 ofs://om/volume1/bucket1/ozone-51315
-rw-...</msg>
<status status="PASS" endtime="20210210 10:11:22.166" starttime="20210210 10:11:20.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:11:22.167" starttime="20210210 10:11:22.167"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:11:22.167" critical="yes" starttime="20210210 10:11:15.739"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 10:11:22.169" starttime="20210210 10:11:15.680"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:09:46.440" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:09:46.440" starttime="20210210 10:09:46.439"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:09:46.440" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:09:46.440" starttime="20210210 10:09:46.440"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:46.440" starttime="20210210 10:09:46.438"></status>
</kw>
<msg timestamp="20210210 10:09:46.441" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:09:46.441" starttime="20210210 10:09:46.437"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:46.441" starttime="20210210 10:09:46.437"></status>
</kw>
<msg timestamp="20210210 10:09:46.441" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 10:09:46.441" starttime="20210210 10:09:46.436"></status>
</kw>
<msg timestamp="20210210 10:09:46.441" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 10:09:46.441" starttime="20210210 10:09:46.435"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 10:09:46.442" level="INFO">${random} = 51315</msg>
<status status="PASS" endtime="20210210 10:09:46.442" starttime="20210210 10:09:46.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:46.447" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-51315 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:50.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:50.835" level="INFO">${output} = 2021-02-10 10:09:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:09:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 10:09:50.835" starttime="20210210 10:09:46.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:50.838" level="INFO">2021-02-10 10:09:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:09:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:09:48 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 10:09:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:09:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1171EF61E58C-&gt;532e326a-f451-45a6-af0e-07e4c917ef6d
2021-02-10 10:09:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 10:09:50.838" starttime="20210210 10:09:50.835"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:50.839" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:50.839" starttime="20210210 10:09:50.838"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:50.839" starttime="20210210 10:09:46.443"></status>
</kw>
<msg timestamp="20210210 10:09:50.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:50.839" starttime="20210210 10:09:46.443"></status>
</kw>
<msg timestamp="20210210 10:09:50.840" level="INFO">${result} = 2021-02-10 10:09:48 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:09:48 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 10:09:50.840" starttime="20210210 10:09:46.442"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:50.844" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:52.926" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:52.926" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:09 o3fs://bucket1.volume1.om/ozone-51315
dr...</msg>
<status status="PASS" endtime="20210210 10:09:52.927" starttime="20210210 10:09:50.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:52.928" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:09 o3fs://bucket1.volume1.om/ozone-51315
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:09 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 10:09:52.928" starttime="20210210 10:09:52.927"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:52.928" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:52.928" starttime="20210210 10:09:52.928"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:52.929" starttime="20210210 10:09:50.841"></status>
</kw>
<msg timestamp="20210210 10:09:52.929" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:52.929" starttime="20210210 10:09:50.841"></status>
</kw>
<msg timestamp="20210210 10:09:52.929" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 10:08 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 10:09 o3fs://bucket1.volume1.om/ozone-51315
dr...</msg>
<status status="PASS" endtime="20210210 10:09:52.929" starttime="20210210 10:09:50.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:09:52.930" starttime="20210210 10:09:52.929"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:09:52.930" critical="yes" starttime="20210210 10:09:46.434"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 10:09:52.931" starttime="20210210 10:09:46.375"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:41.573" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:41.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:41.576" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210210 10:09:41.576" starttime="20210210 10:09:41.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:41.577" level="INFO">rm</msg>
<status status="PASS" endtime="20210210 10:09:41.577" starttime="20210210 10:09:41.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:41.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:41.578" starttime="20210210 10:09:41.578"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:41.578" starttime="20210210 10:09:41.568"></status>
</kw>
<msg timestamp="20210210 10:09:41.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:41.579" starttime="20210210 10:09:41.568"></status>
</kw>
<msg timestamp="20210210 10:09:41.579" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210210 10:09:41.579" starttime="20210210 10:09:41.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:09:41.580" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:09:41.580" starttime="20210210 10:09:41.579"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:41.584" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:41.594" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:41.594" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:09:41.594" starttime="20210210 10:09:41.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:41.594" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:09:41.595" starttime="20210210 10:09:41.594"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:41.595" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:41.595" starttime="20210210 10:09:41.595"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:41.595" starttime="20210210 10:09:41.582"></status>
</kw>
<msg timestamp="20210210 10:09:41.596" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:41.596" starttime="20210210 10:09:41.581"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:41.596" starttime="20210210 10:09:41.581"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:41.596" starttime="20210210 10:09:41.580"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:41.596" starttime="20210210 10:09:41.566"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:09:41.596" critical="yes" starttime="20210210 10:09:41.565"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210210 10:09:41.597" starttime="20210210 10:09:41.505"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:33.445" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:33.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:08:33.449" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210210 10:08:33.449" starttime="20210210 10:08:33.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:33.450" level="INFO">om</msg>
<status status="PASS" endtime="20210210 10:08:33.450" starttime="20210210 10:08:33.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:08:33.450" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:08:33.451" starttime="20210210 10:08:33.450"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:33.451" starttime="20210210 10:08:33.441"></status>
</kw>
<msg timestamp="20210210 10:08:33.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:08:33.452" starttime="20210210 10:08:33.441"></status>
</kw>
<msg timestamp="20210210 10:08:33.452" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210210 10:08:33.452" starttime="20210210 10:08:33.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210210 10:08:33.453" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210210 10:08:33.453" starttime="20210210 10:08:33.452"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:08:33.457" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:08:33.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:08:33.464" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:08:33.464" starttime="20210210 10:08:33.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:08:33.465" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:08:33.465" starttime="20210210 10:08:33.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:08:33.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:08:33.466" starttime="20210210 10:08:33.465"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:33.466" starttime="20210210 10:08:33.454"></status>
</kw>
<msg timestamp="20210210 10:08:33.466" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:08:33.467" starttime="20210210 10:08:33.454"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:33.467" starttime="20210210 10:08:33.453"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:33.467" starttime="20210210 10:08:33.453"></status>
</kw>
<status status="PASS" endtime="20210210 10:08:33.467" starttime="20210210 10:08:33.440"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 10:08:33.467" critical="yes" starttime="20210210 10:08:33.439"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210210 10:08:33.468" starttime="20210210 10:08:33.381"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:11:27.122" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:11:27.134" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:11:27.134" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:11:27.134" starttime="20210210 10:11:27.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:11:27.135" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:11:27.135" starttime="20210210 10:11:27.134"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:11:27.136" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:11:27.136" starttime="20210210 10:11:27.136"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:27.137" starttime="20210210 10:11:27.118"></status>
</kw>
<msg timestamp="20210210 10:11:27.137" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:11:27.137" starttime="20210210 10:11:27.118"></status>
</kw>
<msg timestamp="20210210 10:11:27.137" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:11:27.137" starttime="20210210 10:11:27.118"></status>
</kw>
<msg timestamp="20210210 10:11:27.137" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:11:27.137" starttime="20210210 10:11:27.117"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 10:11:27.143" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 10:11:27.143" starttime="20210210 10:11:27.142"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:11:27.143" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 10:11:27.143" starttime="20210210 10:11:27.143"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:27.144" starttime="20210210 10:11:27.142"></status>
</kw>
<msg timestamp="20210210 10:11:27.144" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 10:11:27.144" starttime="20210210 10:11:27.141"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:11:27.145" starttime="20210210 10:11:27.145"></status>
</kw>
<msg timestamp="20210210 10:11:27.145" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 10:11:27.145" starttime="20210210 10:11:27.144"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:27.146" starttime="20210210 10:11:27.140"></status>
</kw>
<msg timestamp="20210210 10:11:27.146" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 10:11:27.146" starttime="20210210 10:11:27.139"></status>
</kw>
<msg timestamp="20210210 10:11:27.146" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 10:11:27.146" starttime="20210210 10:11:27.138"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:11:27.150" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:12:09.320" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:12:09.320" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 10:11:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:11:29 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 10:12:09.320" starttime="20210210 10:11:27.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:12:09.321" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 10:11:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:11:29 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:11:29 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 10:11:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:11:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8C0FE63A4C9D-&gt;532e326a-f451-45a6-af0e-07e4c917ef6d
2021-02-10 10:11:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 10:11:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CB83A36686A9-&gt;09cc96f6-ff29-4c07-85d3-788dbdfe9ede
2021-02-10 10:11:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 10:11:33 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:11:34 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-02-10 10:11:34 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951894326, maxDate=1613556694326, sequenceNumber=3, masterKeyId=2))
2021-02-10 10:11:34 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bb f1 b2 db f8 2e 38 bb f9 e4 fb fa 2e 40 03 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-10 10:11:34 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951894326, maxDate=1613556694326, sequenceNumber=3, masterKeyId=2)
2021-02-10 10:11:34 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 10:11:34 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 10:11:35 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 10:11:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612951658449_0003
2021-02-10 10:11:35 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951894326, maxDate=1613556694326, sequenceNumber=3, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 bb f1 b2 db f8 2e 38 bb f9 e4 fb fa 2e 40 03 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-10 10:11:35 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 10:11:35 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 10:11:35 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-10 10:11:36 INFO  YarnClientImpl:329 - Submitted application application_1612951658449_0003
2021-02-10 10:11:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612951658449_0003/
2021-02-10 10:11:36 INFO  Job:1614 - Running job: job_1612951658449_0003
2021-02-10 10:11:45 INFO  Job:1635 - Job job_1612951658449_0003 running in uber mode : false
2021-02-10 10:11:45 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 10:11:56 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 10:11:57 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 10:11:58 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 10:12:05 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 10:12:08 INFO  Job:1653 - Job job_1612951658449_0003 completed successfully
2021-02-10 10:12:08 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102365
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48672
		Total time spent by all reduces in occupied slots (ms)=12946
		Total time spent by all map tasks (ms)=24336
		Total time spent by all reduce tasks (ms)=6473
		Total vcore-milliseconds taken by all map tasks=24336
		Total vcore-milliseconds taken by all reduce tasks=6473
		Total megabyte-milliseconds taken by all map tasks=49840128
		Total megabyte-milliseconds taken by all reduce tasks=13256704
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1009
		CPU time spent (ms)=7720
		Physical memory (bytes) snapshot=1439145984
		Virtual memory (bytes) snapshot=14058594304
		Total committed heap usage (bytes)=1214775296
		Peak Map Physical memory (bytes)=390410240
		Peak Map Virtual memory (bytes)=3513241600
		Peak Reduce Physical memory (bytes)=326074368
		Peak Reduce Virtual memory (bytes)=3527106560
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.988 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 10:12:09.322" starttime="20210210 10:12:09.321"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:12:09.322" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:12:09.322" starttime="20210210 10:12:09.322"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.322" starttime="20210210 10:11:27.147"></status>
</kw>
<msg timestamp="20210210 10:12:09.323" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:12:09.323" starttime="20210210 10:11:27.147"></status>
</kw>
<msg timestamp="20210210 10:12:09.323" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 10:11:29 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:11:29 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 10:12:09.323" starttime="20210210 10:11:27.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 10:12:09.324" starttime="20210210 10:12:09.324"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 10:12:09.324" critical="yes" starttime="20210210 10:11:27.116"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:12:09.332" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:12:09.340" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:12:09.340" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:12:09.340" starttime="20210210 10:12:09.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:12:09.341" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:12:09.341" starttime="20210210 10:12:09.340"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:12:09.343" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:12:09.343" starttime="20210210 10:12:09.341"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.343" starttime="20210210 10:12:09.329"></status>
</kw>
<msg timestamp="20210210 10:12:09.343" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:12:09.343" starttime="20210210 10:12:09.328"></status>
</kw>
<msg timestamp="20210210 10:12:09.344" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:12:09.344" starttime="20210210 10:12:09.328"></status>
</kw>
<msg timestamp="20210210 10:12:09.344" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:12:09.344" starttime="20210210 10:12:09.327"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 10:12:09.345" level="INFO">${random} = 0YFFACvT</msg>
<status status="PASS" endtime="20210210 10:12:09.345" starttime="20210210 10:12:09.345"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 10:12:09.350" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 10:12:09.350" starttime="20210210 10:12:09.350"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:12:09.351" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 10:12:09.351" starttime="20210210 10:12:09.351"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.351" starttime="20210210 10:12:09.349"></status>
</kw>
<msg timestamp="20210210 10:12:09.352" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 10:12:09.352" starttime="20210210 10:12:09.349"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:12:09.353" starttime="20210210 10:12:09.352"></status>
</kw>
<msg timestamp="20210210 10:12:09.353" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 10:12:09.353" starttime="20210210 10:12:09.352"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.353" starttime="20210210 10:12:09.348"></status>
</kw>
<msg timestamp="20210210 10:12:09.354" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 10:12:09.354" starttime="20210210 10:12:09.347"></status>
</kw>
<msg timestamp="20210210 10:12:09.354" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 10:12:09.354" starttime="20210210 10:12:09.346"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 10:12:09.359" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 10:12:09.359" starttime="20210210 10:12:09.358"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:12:09.360" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 10:12:09.360" starttime="20210210 10:12:09.359"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.360" starttime="20210210 10:12:09.357"></status>
</kw>
<msg timestamp="20210210 10:12:09.360" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 10:12:09.361" starttime="20210210 10:12:09.356"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:12:09.362" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 10:12:09.362" starttime="20210210 10:12:09.362"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:12:09.363" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 10:12:09.363" starttime="20210210 10:12:09.363"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.363" starttime="20210210 10:12:09.361"></status>
</kw>
<msg timestamp="20210210 10:12:09.364" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 10:12:09.364" starttime="20210210 10:12:09.361"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.364" starttime="20210210 10:12:09.356"></status>
</kw>
<msg timestamp="20210210 10:12:09.364" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 10:12:09.364" starttime="20210210 10:12:09.355"></status>
</kw>
<msg timestamp="20210210 10:12:09.365" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 10:12:09.365" starttime="20210210 10:12:09.354"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 10:12:09.370" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 10:12:09.370" starttime="20210210 10:12:09.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:12:09.371" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 10:12:09.371" starttime="20210210 10:12:09.371"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.372" starttime="20210210 10:12:09.369"></status>
</kw>
<msg timestamp="20210210 10:12:09.372" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 10:12:09.372" starttime="20210210 10:12:09.369"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:12:09.374" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 10:12:09.374" starttime="20210210 10:12:09.373"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:12:09.374" level="INFO">${result} = /wordcount-0YFFACvT.txt</msg>
<status status="PASS" endtime="20210210 10:12:09.375" starttime="20210210 10:12:09.374"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.375" starttime="20210210 10:12:09.373"></status>
</kw>
<msg timestamp="20210210 10:12:09.375" level="INFO">${path_with_leading} = /wordcount-0YFFACvT.txt</msg>
<status status="PASS" endtime="20210210 10:12:09.375" starttime="20210210 10:12:09.372"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:09.375" starttime="20210210 10:12:09.368"></status>
</kw>
<msg timestamp="20210210 10:12:09.376" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-0YFFACvT.txt</msg>
<status status="PASS" endtime="20210210 10:12:09.376" starttime="20210210 10:12:09.367"></status>
</kw>
<msg timestamp="20210210 10:12:09.376" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-0YFFACvT.txt</msg>
<status status="PASS" endtime="20210210 10:12:09.376" starttime="20210210 10:12:09.365"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:12:09.380" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-0YFFACvT.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:12:43.078" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:12:43.078" level="INFO">${output} = 2021-02-10 10:12:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:12:11 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" endtime="20210210 10:12:43.079" starttime="20210210 10:12:09.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:12:43.080" level="INFO">2021-02-10 10:12:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:12:11 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-02-10 10:12:12 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951931907, maxDate=1613556731907, sequenceNumber=4, masterKeyId=2))
2021-02-10 10:12:12 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a5 97 b5 db f8 2e 38 a5 9f e7 fb fa 2e 40 04 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-10 10:12:12 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951931907, maxDate=1613556731907, sequenceNumber=4, masterKeyId=2)
2021-02-10 10:12:12 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 10:12:12 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:12:12 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:12:12 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 10:12:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:12:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D7A5348E3232-&gt;09cc96f6-ff29-4c07-85d3-788dbdfe9ede
2021-02-10 10:12:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:12:13 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 10:12:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6C3CCA877CE7-&gt;532e326a-f451-45a6-af0e-07e4c917ef6d
2021-02-10 10:12:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:12:14 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 10:12:15 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612951658449_0004
2021-02-10 10:12:15 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951931907, maxDate=1613556731907, sequenceNumber=4, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 a5 97 b5 db f8 2e 38 a5 9f e7 fb fa 2e 40 04 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-10 10:12:15 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 10:12:15 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 10:12:15 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-10 10:12:16 INFO  YarnClientImpl:329 - Submitted application application_1612951658449_0004
2021-02-10 10:12:16 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612951658449_0004/
2021-02-10 10:12:16 INFO  Job:1614 - Running job: job_1612951658449_0004
2021-02-10 10:12:24 INFO  Job:1635 - Job job_1612951658449_0004 running in uber mode : false
2021-02-10 10:12:24 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 10:12:35 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 10:12:37 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 10:12:38 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 10:12:41 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 10:12:42 INFO  Job:1653 - Job job_1612951658449_0004 completed successfully
2021-02-10 10:12:42 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165047
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49064
		Total time spent by all reduces in occupied slots (ms)=8356
		Total time spent by all map tasks (ms)=24532
		Total time spent by all reduce tasks (ms)=4178
		Total vcore-milliseconds taken by all map tasks=24532
		Total vcore-milliseconds taken by all reduce tasks=4178
		Total megabyte-milliseconds taken by all map tasks=50241536
		Total megabyte-milliseconds taken by all reduce tasks=8556544
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1177
		CPU time spent (ms)=8260
		Physical memory (bytes) snapshot=1462288384
		Virtual memory (bytes) snapshot=14058864640
		Total committed heap usage (bytes)=1211105280
		Peak Map Physical memory (bytes)=397201408
		Peak Map Virtual memory (bytes)=3512217600
		Peak Reduce Physical memory (bytes)=329863168
		Peak Reduce Virtual memory (bytes)=3528253440
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 10:12:43.080" starttime="20210210 10:12:43.079"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:12:43.081" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:12:43.081" starttime="20210210 10:12:43.080"></status>
</kw>
<status status="PASS" endtime="20210210 10:12:43.081" starttime="20210210 10:12:09.377"></status>
</kw>
<msg timestamp="20210210 10:12:43.081" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:12:43.081" starttime="20210210 10:12:09.377"></status>
</kw>
<msg timestamp="20210210 10:12:43.082" level="INFO">${output} = 2021-02-10 10:12:11 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:12:11 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" endtime="20210210 10:12:43.082" starttime="20210210 10:12:09.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 10:12:43.082" starttime="20210210 10:12:43.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 10:12:43.083" starttime="20210210 10:12:43.082"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 10:12:43.083" critical="yes" starttime="20210210 10:12:09.326"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 10:12:43.084" starttime="20210210 10:11:27.054"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:57.748" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:09:57.753" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:09:57.754" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:09:57.754" starttime="20210210 10:09:57.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:09:57.754" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:09:57.755" starttime="20210210 10:09:57.754"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:09:57.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:09:57.755" starttime="20210210 10:09:57.755"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:57.755" starttime="20210210 10:09:57.744"></status>
</kw>
<msg timestamp="20210210 10:09:57.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:09:57.756" starttime="20210210 10:09:57.744"></status>
</kw>
<msg timestamp="20210210 10:09:57.756" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:09:57.756" starttime="20210210 10:09:57.743"></status>
</kw>
<msg timestamp="20210210 10:09:57.756" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:09:57.756" starttime="20210210 10:09:57.743"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:09:57.760" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:09:57.760" starttime="20210210 10:09:57.760"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:09:57.761" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:09:57.761" starttime="20210210 10:09:57.761"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:57.761" starttime="20210210 10:09:57.759"></status>
</kw>
<msg timestamp="20210210 10:09:57.761" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:09:57.761" starttime="20210210 10:09:57.759"></status>
</kw>
<status status="PASS" endtime="20210210 10:09:57.762" starttime="20210210 10:09:57.758"></status>
</kw>
<msg timestamp="20210210 10:09:57.762" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 10:09:57.762" starttime="20210210 10:09:57.757"></status>
</kw>
<msg timestamp="20210210 10:09:57.762" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 10:09:57.762" starttime="20210210 10:09:57.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:09:57.765" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:10:36.956" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:10:36.956" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 10:10:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:10:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 10:10:36.956" starttime="20210210 10:09:57.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:10:36.958" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 10:10:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:10:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:10:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 10:10:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:10:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FF88566ABAF4-&gt;532e326a-f451-45a6-af0e-07e4c917ef6d
2021-02-10 10:10:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 10:10:01 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:10:01 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-02-10 10:10:02 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951802200, maxDate=1613556602200, sequenceNumber=1, masterKeyId=2))
2021-02-10 10:10:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ae a0 ad db f8 2e 38 ae a8 df fb fa 2e 40 01 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-10 10:10:02 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951802200, maxDate=1613556602200, sequenceNumber=1, masterKeyId=2)
2021-02-10 10:10:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9790DDF49427-&gt;09cc96f6-ff29-4c07-85d3-788dbdfe9ede
2021-02-10 10:10:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:10:02 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 10:10:02 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 10:10:03 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612951658449_0001
2021-02-10 10:10:03 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951802200, maxDate=1613556602200, sequenceNumber=1, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 ae a0 ad db f8 2e 38 ae a8 df fb fa 2e 40 01 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-10 10:10:03 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 10:10:03 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 10:10:03 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-10 10:10:05 INFO  YarnClientImpl:329 - Submitted application application_1612951658449_0001
2021-02-10 10:10:05 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612951658449_0001/
2021-02-10 10:10:05 INFO  Job:1614 - Running job: job_1612951658449_0001
2021-02-10 10:10:16 INFO  Job:1635 - Job job_1612951658449_0001 running in uber mode : false
2021-02-10 10:10:16 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 10:10:28 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 10:10:29 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 10:10:30 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 10:10:35 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 10:10:36 INFO  Job:1653 - Job job_1612951658449_0001 completed successfully
2021-02-10 10:10:36 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1102585
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=50810
		Total time spent by all reduces in occupied slots (ms)=8390
		Total time spent by all map tasks (ms)=25405
		Total time spent by all reduce tasks (ms)=4195
		Total vcore-milliseconds taken by all map tasks=25405
		Total vcore-milliseconds taken by all reduce tasks=4195
		Total megabyte-milliseconds taken by all map tasks=52029440
		Total megabyte-milliseconds taken by all reduce tasks=8591360
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1160
		CPU time spent (ms)=7370
		Physical memory (bytes) snapshot=1429786624
		Virtual memory (bytes) snapshot=14050574336
		Total committed heap usage (bytes)=1199046656
		Peak Map Physical memory (bytes)=387608576
		Peak Map Virtual memory (bytes)=3510882304
		Peak Reduce Physical memory (bytes)=330985472
		Peak Reduce Virtual memory (bytes)=3529101312
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.866 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 10:10:36.958" starttime="20210210 10:10:36.957"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:10:36.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:10:36.959" starttime="20210210 10:10:36.958"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.959" starttime="20210210 10:09:57.763"></status>
</kw>
<msg timestamp="20210210 10:10:36.959" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:10:36.959" starttime="20210210 10:09:57.763"></status>
</kw>
<msg timestamp="20210210 10:10:36.960" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 10:10:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:10:00 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 10:10:36.960" starttime="20210210 10:09:57.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 10:10:36.960" starttime="20210210 10:10:36.960"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 10:10:36.961" critical="yes" starttime="20210210 10:09:57.742"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:10:36.965" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:10:36.974" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:10:36.974" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:10:36.974" starttime="20210210 10:10:36.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:10:36.975" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:10:36.975" starttime="20210210 10:10:36.974"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:10:36.976" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:10:36.976" starttime="20210210 10:10:36.975"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.976" starttime="20210210 10:10:36.963"></status>
</kw>
<msg timestamp="20210210 10:10:36.976" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:10:36.976" starttime="20210210 10:10:36.963"></status>
</kw>
<msg timestamp="20210210 10:10:36.976" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:10:36.976" starttime="20210210 10:10:36.962"></status>
</kw>
<msg timestamp="20210210 10:10:36.977" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 10:10:36.977" starttime="20210210 10:10:36.962"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 10:10:36.977" level="INFO">${random} = 6LDOWlHL</msg>
<status status="PASS" endtime="20210210 10:10:36.977" starttime="20210210 10:10:36.977"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:10:36.981" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:10:36.981" starttime="20210210 10:10:36.981"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:10:36.982" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:10:36.982" starttime="20210210 10:10:36.982"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.983" starttime="20210210 10:10:36.980"></status>
</kw>
<msg timestamp="20210210 10:10:36.983" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:10:36.983" starttime="20210210 10:10:36.980"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.983" starttime="20210210 10:10:36.979"></status>
</kw>
<msg timestamp="20210210 10:10:36.983" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 10:10:36.983" starttime="20210210 10:10:36.978"></status>
</kw>
<msg timestamp="20210210 10:10:36.984" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 10:10:36.984" starttime="20210210 10:10:36.978"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:10:36.987" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:10:36.987" starttime="20210210 10:10:36.987"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:10:36.988" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:10:36.988" starttime="20210210 10:10:36.987"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.988" starttime="20210210 10:10:36.986"></status>
</kw>
<msg timestamp="20210210 10:10:36.988" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:10:36.988" starttime="20210210 10:10:36.986"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.988" starttime="20210210 10:10:36.985"></status>
</kw>
<msg timestamp="20210210 10:10:36.989" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 10:10:36.989" starttime="20210210 10:10:36.984"></status>
</kw>
<msg timestamp="20210210 10:10:36.989" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 10:10:36.989" starttime="20210210 10:10:36.984"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 10:10:36.993" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 10:10:36.993" starttime="20210210 10:10:36.992"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:10:36.993" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 10:10:36.993" starttime="20210210 10:10:36.993"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.994" starttime="20210210 10:10:36.992"></status>
</kw>
<msg timestamp="20210210 10:10:36.994" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 10:10:36.994" starttime="20210210 10:10:36.991"></status>
</kw>
<status status="PASS" endtime="20210210 10:10:36.995" starttime="20210210 10:10:36.990"></status>
</kw>
<msg timestamp="20210210 10:10:36.995" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-6LDOWlHL.txt</msg>
<status status="PASS" endtime="20210210 10:10:36.995" starttime="20210210 10:10:36.990"></status>
</kw>
<msg timestamp="20210210 10:10:36.995" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-6LDOWlHL.txt</msg>
<status status="PASS" endtime="20210210 10:10:36.995" starttime="20210210 10:10:36.989"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:10:36.999" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-6LDOWlHL.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:11:10.457" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:11:10.457" level="INFO">${output} = 2021-02-10 10:10:39 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:10:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" endtime="20210210 10:11:10.458" starttime="20210210 10:10:36.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:11:10.459" level="INFO">2021-02-10 10:10:39 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:10:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
2021-02-10 10:10:39 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951839718, maxDate=1613556639718, sequenceNumber=2, masterKeyId=2))
2021-02-10 10:10:39 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 89 c7 af db f8 2e 38 89 cf e1 fb fa 2e 40 02 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-10 10:10:39 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951839718, maxDate=1613556639718, sequenceNumber=2, masterKeyId=2)
2021-02-10 10:10:39 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 10:10:40 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 10:10:40 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:10:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 10:10:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:10:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E43007971E8B-&gt;532e326a-f451-45a6-af0e-07e4c917ef6d
2021-02-10 10:10:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:10:41 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 10:10:41 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 10:10:42 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612951658449_0002
2021-02-10 10:10:42 INFO  JobSubmitter:299 - Executing with tokens: [Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612951839718, maxDate=1613556639718, sequenceNumber=2, masterKeyId=2), Kind: OzoneToken, Service: 172.26.0.2:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 89 c7 af db f8 2e 38 89 cf e1 fb fa 2e 40 02 48 01 5a 0d 32 34 36 36 32 39 36 36 39 35 39 31 31 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74]
2021-02-10 10:10:42 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 10:10:42 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 10:10:42 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-10 10:10:43 INFO  YarnClientImpl:329 - Submitted application application_1612951658449_0002
2021-02-10 10:10:43 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612951658449_0002/
2021-02-10 10:10:43 INFO  Job:1614 - Running job: job_1612951658449_0002
2021-02-10 10:10:51 INFO  Job:1635 - Job job_1612951658449_0002 running in uber mode : false
2021-02-10 10:10:51 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 10:11:02 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 10:11:04 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 10:11:08 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 10:11:09 INFO  Job:1653 - Job job_1612951658449_0002 completed successfully
2021-02-10 10:11:10 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1165131
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=48444
		Total time spent by all reduces in occupied slots (ms)=8292
		Total time spent by all map tasks (ms)=24222
		Total time spent by all reduce tasks (ms)=4146
		Total vcore-milliseconds taken by all map tasks=24222
		Total vcore-milliseconds taken by all reduce tasks=4146
		Total megabyte-milliseconds taken by all map tasks=49606656
		Total megabyte-milliseconds taken by all reduce tasks=8491008
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1118
		CPU time spent (ms)=7750
		Physical memory (bytes) snapshot=1469034496
		Virtual memory (bytes) snapshot=14051921920
		Total committed heap usage (bytes)=1227882496
		Peak Map Physical memory (bytes)=388222976
		Peak Map Virtual memory (bytes)=3511287808
		Peak Reduce Physical memory (bytes)=323575808
		Peak Reduce Virtual memory (bytes)=3526238208
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 10:11:10.460" starttime="20210210 10:11:10.458"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:11:10.460" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:11:10.460" starttime="20210210 10:11:10.460"></status>
</kw>
<status status="PASS" endtime="20210210 10:11:10.461" starttime="20210210 10:10:36.996"></status>
</kw>
<msg timestamp="20210210 10:11:10.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:11:10.461" starttime="20210210 10:10:36.996"></status>
</kw>
<msg timestamp="20210210 10:11:10.461" level="INFO">${output} = 2021-02-10 10:10:39 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.26.0.3:8032
2021-02-10 10:10:39 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.26.0.8:10200
202...</msg>
<status status="PASS" endtime="20210210 10:11:10.461" starttime="20210210 10:10:36.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 10:11:10.462" starttime="20210210 10:11:10.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 10:11:10.462" starttime="20210210 10:11:10.462"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 10:11:10.462" critical="yes" starttime="20210210 10:10:36.961"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 10:11:10.464" starttime="20210210 10:09:57.682"></status>
</suite>
<status status="PASS" elapsedtime="209968" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
