<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 10:36:26.010" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="xcompat">
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s1" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.0.0">
<test id="s1-s1-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:29:57.837" level="INFO">${postfix} = 46057</msg>
<status status="PASS" endtime="20210210 10:29:57.838" starttime="20210210 10:29:57.837"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:29:57.838" level="INFO">${tmpfile} = /tmp/tempkey-46057</msg>
<status status="PASS" endtime="20210210 10:29:57.838" starttime="20210210 10:29:57.838"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:57.843" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-46057 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:02.967" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:02.967" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:30:02.967" starttime="20210210 10:29:57.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:02.969" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:30:02.969" starttime="20210210 10:30:02.968"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:02.970" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:02.970" starttime="20210210 10:30:02.969"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:02.970" starttime="20210210 10:29:57.839"></status>
</kw>
<msg timestamp="20210210 10:30:02.970" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:02.971" starttime="20210210 10:29:57.839"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:02.971" starttime="20210210 10:29:57.838"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:30:02.974" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-46057 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:02.976" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:30:02.976" starttime="20210210 10:30:02.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:02.981" level="INFO">Running command 'rm -f /tmp/tempkey-46057 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:02.983" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:02.983" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:02.983" starttime="20210210 10:30:02.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:02.986" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:02.986" starttime="20210210 10:30:02.984"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:02.986" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:02.986" starttime="20210210 10:30:02.986"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:02.987" starttime="20210210 10:30:02.978"></status>
</kw>
<msg timestamp="20210210 10:30:02.987" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:02.987" starttime="20210210 10:30:02.978"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:02.987" starttime="20210210 10:30:02.977"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:30:02.988" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:30:02.988" starttime="20210210 10:30:02.987"></status>
</kw>
<msg timestamp="20210210 10:30:02.988" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:30:02.988" starttime="20210210 10:29:57.836"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:30:02.989" starttime="20210210 10:30:02.988"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:02.989" starttime="20210210 10:29:57.836"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:30:02.989" critical="yes" starttime="20210210 10:29:57.835"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:30:02.990" starttime="20210210 10:29:57.774"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s2" name="xcompat-cluster-1.1.0-client-1.1.0-read-0.5.0">
<test id="s1-s2-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:30:33.755" level="INFO">${postfix} = 97576</msg>
<status status="PASS" endtime="20210210 10:30:33.755" starttime="20210210 10:30:33.755"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:30:33.756" level="INFO">${tmpfile} = /tmp/tempkey-97576</msg>
<status status="PASS" endtime="20210210 10:30:33.756" starttime="20210210 10:30:33.755"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:33.760" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-97576 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:38.874" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:38.874" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:30:38.874" starttime="20210210 10:30:33.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:38.875" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:30:38.875" starttime="20210210 10:30:38.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:38.876" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:38.876" starttime="20210210 10:30:38.876"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:38.877" starttime="20210210 10:30:33.757"></status>
</kw>
<msg timestamp="20210210 10:30:38.877" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:38.877" starttime="20210210 10:30:33.756"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:38.877" starttime="20210210 10:30:33.756"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:30:38.880" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-97576 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:38.883" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:30:38.883" starttime="20210210 10:30:38.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:38.887" level="INFO">Running command 'rm -f /tmp/tempkey-97576 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:38.890" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:38.890" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:38.890" starttime="20210210 10:30:38.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:38.892" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:38.892" starttime="20210210 10:30:38.890"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:38.893" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:38.893" starttime="20210210 10:30:38.892"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:38.893" starttime="20210210 10:30:38.885"></status>
</kw>
<msg timestamp="20210210 10:30:38.893" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:38.894" starttime="20210210 10:30:38.885"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:38.894" starttime="20210210 10:30:38.884"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:30:38.895" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:30:38.895" starttime="20210210 10:30:38.894"></status>
</kw>
<msg timestamp="20210210 10:30:38.895" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:30:38.895" starttime="20210210 10:30:33.754"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:30:38.896" starttime="20210210 10:30:38.895"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:38.896" starttime="20210210 10:30:33.753"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:30:38.896" critical="yes" starttime="20210210 10:30:33.753"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:30:38.897" starttime="20210210 10:30:33.693"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s3" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.1.0">
<test id="s1-s3-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:32:43.461" level="INFO">${postfix} = 61204</msg>
<status status="PASS" endtime="20210210 10:32:43.461" starttime="20210210 10:32:43.460"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:32:43.461" level="INFO">${tmpfile} = /tmp/tempkey-61204</msg>
<status status="PASS" endtime="20210210 10:32:43.461" starttime="20210210 10:32:43.461"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:32:43.466" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-61204 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:32:48.070" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:32:48.070" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:32:48.070" starttime="20210210 10:32:43.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:32:48.071" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:32:48.071" starttime="20210210 10:32:48.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:32:48.071" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:32:48.071" starttime="20210210 10:32:48.071"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:48.072" starttime="20210210 10:32:43.462"></status>
</kw>
<msg timestamp="20210210 10:32:48.072" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:32:48.072" starttime="20210210 10:32:43.462"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:48.072" starttime="20210210 10:32:43.461"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:32:48.074" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-61204 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:32:48.077" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:32:48.077" starttime="20210210 10:32:48.072"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:32:48.080" level="INFO">Running command 'rm -f /tmp/tempkey-61204 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:32:48.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:32:48.082" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:32:48.083" starttime="20210210 10:32:48.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:32:48.084" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:32:48.084" starttime="20210210 10:32:48.083"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:32:48.085" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:32:48.085" starttime="20210210 10:32:48.085"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:48.085" starttime="20210210 10:32:48.078"></status>
</kw>
<msg timestamp="20210210 10:32:48.085" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:32:48.085" starttime="20210210 10:32:48.078"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:48.086" starttime="20210210 10:32:48.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:32:48.086" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:32:48.086" starttime="20210210 10:32:48.086"></status>
</kw>
<msg timestamp="20210210 10:32:48.086" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:32:48.087" starttime="20210210 10:32:43.460"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:32:48.087" starttime="20210210 10:32:48.087"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:48.087" starttime="20210210 10:32:43.459"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:32:48.087" critical="yes" starttime="20210210 10:32:43.458"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:32:48.088" starttime="20210210 10:32:43.398"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s4" name="xcompat-cluster-1.0.0-client-1.1.0-read-0.5.0">
<test id="s1-s4-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:33:17.645" level="INFO">${postfix} = 42957</msg>
<status status="PASS" endtime="20210210 10:33:17.645" starttime="20210210 10:33:17.644"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:33:17.646" level="INFO">${tmpfile} = /tmp/tempkey-42957</msg>
<status status="PASS" endtime="20210210 10:33:17.646" starttime="20210210 10:33:17.645"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:17.651" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-42957 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:22.638" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:22.638" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:33:22.638" starttime="20210210 10:33:17.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:22.639" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:33:22.639" starttime="20210210 10:33:22.638"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:22.640" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:22.640" starttime="20210210 10:33:22.640"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:22.641" starttime="20210210 10:33:17.647"></status>
</kw>
<msg timestamp="20210210 10:33:22.641" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:22.641" starttime="20210210 10:33:17.646"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:22.641" starttime="20210210 10:33:17.646"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:33:22.643" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-42957 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:22.646" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:33:22.647" starttime="20210210 10:33:22.641"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:22.651" level="INFO">Running command 'rm -f /tmp/tempkey-42957 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:22.653" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:22.653" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:22.653" starttime="20210210 10:33:22.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:22.655" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:22.655" starttime="20210210 10:33:22.653"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:22.656" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:22.656" starttime="20210210 10:33:22.655"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:22.656" starttime="20210210 10:33:22.648"></status>
</kw>
<msg timestamp="20210210 10:33:22.656" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:22.656" starttime="20210210 10:33:22.648"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:22.656" starttime="20210210 10:33:22.647"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:33:22.657" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:33:22.657" starttime="20210210 10:33:22.657"></status>
</kw>
<msg timestamp="20210210 10:33:22.657" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:33:22.657" starttime="20210210 10:33:17.644"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:22.658" starttime="20210210 10:33:22.658"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:22.658" starttime="20210210 10:33:17.643"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:22.658" critical="yes" starttime="20210210 10:33:17.642"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:22.659" starttime="20210210 10:33:17.585"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s5" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.0.0">
<test id="s1-s5-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:33:51.883" level="INFO">${postfix} = 53315</msg>
<status status="PASS" endtime="20210210 10:33:51.883" starttime="20210210 10:33:51.882"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:33:51.884" level="INFO">${tmpfile} = /tmp/tempkey-53315</msg>
<status status="PASS" endtime="20210210 10:33:51.884" starttime="20210210 10:33:51.883"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:51.889" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-53315 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:56.825" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:56.825" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:33:56.825" starttime="20210210 10:33:51.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:56.826" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:33:56.826" starttime="20210210 10:33:56.825"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:56.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:56.827" starttime="20210210 10:33:56.826"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:56.827" starttime="20210210 10:33:51.885"></status>
</kw>
<msg timestamp="20210210 10:33:56.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:56.828" starttime="20210210 10:33:51.884"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:56.828" starttime="20210210 10:33:51.884"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:33:56.830" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-53315 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:56.832" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:33:56.833" starttime="20210210 10:33:56.828"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:56.837" level="INFO">Running command 'rm -f /tmp/tempkey-53315 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:56.839" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:56.839" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:56.839" starttime="20210210 10:33:56.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:56.842" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:56.842" starttime="20210210 10:33:56.840"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:56.843" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:56.843" starttime="20210210 10:33:56.842"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:56.843" starttime="20210210 10:33:56.834"></status>
</kw>
<msg timestamp="20210210 10:33:56.843" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:56.843" starttime="20210210 10:33:56.834"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:56.844" starttime="20210210 10:33:56.833"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:33:56.844" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:33:56.844" starttime="20210210 10:33:56.844"></status>
</kw>
<msg timestamp="20210210 10:33:56.845" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:33:56.845" starttime="20210210 10:33:51.882"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:56.845" starttime="20210210 10:33:56.845"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:56.845" starttime="20210210 10:33:51.881"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:56.846" critical="yes" starttime="20210210 10:33:51.880"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:56.847" starttime="20210210 10:33:51.813"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s6" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.1.0">
<test id="s1-s6-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:35:05.536" level="INFO">${postfix} = 91389</msg>
<status status="PASS" endtime="20210210 10:35:05.536" starttime="20210210 10:35:05.535"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:35:05.537" level="INFO">${tmpfile} = /tmp/tempkey-91389</msg>
<status status="PASS" endtime="20210210 10:35:05.537" starttime="20210210 10:35:05.536"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:05.542" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-91389 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:10.397" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:10.397" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:10.397" starttime="20210210 10:35:05.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:10.398" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:10.398" starttime="20210210 10:35:10.397"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:10.399" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:10.399" starttime="20210210 10:35:10.398"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:10.399" starttime="20210210 10:35:05.538"></status>
</kw>
<msg timestamp="20210210 10:35:10.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:10.399" starttime="20210210 10:35:05.537"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:10.400" starttime="20210210 10:35:05.537"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:35:10.402" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-91389 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:10.405" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:35:10.405" starttime="20210210 10:35:10.400"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:10.410" level="INFO">Running command 'rm -f /tmp/tempkey-91389 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:10.412" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:10.412" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:10.412" starttime="20210210 10:35:10.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:10.414" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:10.414" starttime="20210210 10:35:10.412"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:10.414" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:10.414" starttime="20210210 10:35:10.414"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:10.415" starttime="20210210 10:35:10.407"></status>
</kw>
<msg timestamp="20210210 10:35:10.415" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:10.415" starttime="20210210 10:35:10.406"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:10.415" starttime="20210210 10:35:10.406"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:35:10.416" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:35:10.416" starttime="20210210 10:35:10.415"></status>
</kw>
<msg timestamp="20210210 10:35:10.416" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:35:10.416" starttime="20210210 10:35:05.535"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:10.417" starttime="20210210 10:35:10.416"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:10.417" starttime="20210210 10:35:05.534"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:10.417" critical="yes" starttime="20210210 10:35:05.534"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:10.418" starttime="20210210 10:35:05.476"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s7" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.0.0">
<test id="s1-s7-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:35:39.706" level="INFO">${postfix} = 66926</msg>
<status status="PASS" endtime="20210210 10:35:39.706" starttime="20210210 10:35:39.706"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:35:39.707" level="INFO">${tmpfile} = /tmp/tempkey-66926</msg>
<status status="PASS" endtime="20210210 10:35:39.707" starttime="20210210 10:35:39.706"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:39.712" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-66926 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:44.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:44.306" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:44.306" starttime="20210210 10:35:39.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:44.307" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:44.307" starttime="20210210 10:35:44.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:44.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:44.308" starttime="20210210 10:35:44.308"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:44.308" starttime="20210210 10:35:39.708"></status>
</kw>
<msg timestamp="20210210 10:35:44.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:44.309" starttime="20210210 10:35:39.708"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:44.309" starttime="20210210 10:35:39.707"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:35:44.311" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-66926 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:44.315" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:35:44.315" starttime="20210210 10:35:44.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:44.320" level="INFO">Running command 'rm -f /tmp/tempkey-66926 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:44.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:44.324" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:44.324" starttime="20210210 10:35:44.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:44.326" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:44.326" starttime="20210210 10:35:44.324"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:44.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:44.327" starttime="20210210 10:35:44.326"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:44.327" starttime="20210210 10:35:44.317"></status>
</kw>
<msg timestamp="20210210 10:35:44.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:44.327" starttime="20210210 10:35:44.316"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:44.328" starttime="20210210 10:35:44.315"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:35:44.328" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:35:44.328" starttime="20210210 10:35:44.328"></status>
</kw>
<msg timestamp="20210210 10:35:44.329" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:35:44.329" starttime="20210210 10:35:39.705"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:44.329" starttime="20210210 10:35:44.329"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:44.330" starttime="20210210 10:35:39.705"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:44.330" critical="yes" starttime="20210210 10:35:39.704"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:44.331" starttime="20210210 10:35:39.646"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s8" name="xcompat-cluster-0.5.0-client-1.1.0-read-0.5.0">
<test id="s1-s8-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:36:13.612" level="INFO">${postfix} = 94863</msg>
<status status="PASS" endtime="20210210 10:36:13.612" starttime="20210210 10:36:13.612"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:36:13.613" level="INFO">${tmpfile} = /tmp/tempkey-94863</msg>
<status status="PASS" endtime="20210210 10:36:13.613" starttime="20210210 10:36:13.612"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:36:13.618" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-94863 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:18.388" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:36:18.388" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:36:18.388" starttime="20210210 10:36:13.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:36:18.389" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:36:18.389" starttime="20210210 10:36:18.388"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:36:18.389" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:36:18.390" starttime="20210210 10:36:18.389"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:18.390" starttime="20210210 10:36:13.614"></status>
</kw>
<msg timestamp="20210210 10:36:18.390" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:36:18.390" starttime="20210210 10:36:13.613"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:18.390" starttime="20210210 10:36:13.613"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:36:18.392" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-94863 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:18.394" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:36:18.394" starttime="20210210 10:36:18.390"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:36:18.398" level="INFO">Running command 'rm -f /tmp/tempkey-94863 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:18.401" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:36:18.401" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:36:18.401" starttime="20210210 10:36:18.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:36:18.403" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:36:18.403" starttime="20210210 10:36:18.401"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:36:18.404" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:36:18.404" starttime="20210210 10:36:18.403"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:18.404" starttime="20210210 10:36:18.396"></status>
</kw>
<msg timestamp="20210210 10:36:18.404" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:36:18.404" starttime="20210210 10:36:18.395"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:18.405" starttime="20210210 10:36:18.394"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:36:18.405" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:36:18.405" starttime="20210210 10:36:18.405"></status>
</kw>
<msg timestamp="20210210 10:36:18.405" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:36:18.405" starttime="20210210 10:36:13.611"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:36:18.406" starttime="20210210 10:36:18.406"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:18.406" starttime="20210210 10:36:13.610"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:36:18.406" critical="yes" starttime="20210210 10:36:13.610"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:36:18.407" starttime="20210210 10:36:13.556"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/read.robot" id="s1-s9" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.1.0">
<test id="s1-s9-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:29:23.363" level="INFO">${postfix} = 09436</msg>
<status status="PASS" endtime="20210210 10:29:23.363" starttime="20210210 10:29:23.362"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:29:23.364" level="INFO">${tmpfile} = /tmp/tempkey-09436</msg>
<status status="PASS" endtime="20210210 10:29:23.364" starttime="20210210 10:29:23.363"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:23.370" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-09436 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:28.886" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:28.886" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:29:28.886" starttime="20210210 10:29:23.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:28.887" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:29:28.887" starttime="20210210 10:29:28.886"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:28.888" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:28.888" starttime="20210210 10:29:28.887"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:28.888" starttime="20210210 10:29:23.365"></status>
</kw>
<msg timestamp="20210210 10:29:28.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:28.889" starttime="20210210 10:29:23.365"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:28.889" starttime="20210210 10:29:23.364"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:29:28.891" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-09436 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:28.894" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:29:28.894" starttime="20210210 10:29:28.889"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:28.898" level="INFO">Running command 'rm -f /tmp/tempkey-09436 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:28.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:28.900" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:28.900" starttime="20210210 10:29:28.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:28.902" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:29:28.902" starttime="20210210 10:29:28.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:28.903" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:28.903" starttime="20210210 10:29:28.902"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:28.903" starttime="20210210 10:29:28.896"></status>
</kw>
<msg timestamp="20210210 10:29:28.903" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:28.903" starttime="20210210 10:29:28.895"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:28.904" starttime="20210210 10:29:28.894"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:29:28.904" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:29:28.904" starttime="20210210 10:29:28.904"></status>
</kw>
<msg timestamp="20210210 10:29:28.904" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:29:28.904" starttime="20210210 10:29:23.361"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:29:28.905" starttime="20210210 10:29:28.905"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:28.905" starttime="20210210 10:29:23.361"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:29:28.906" critical="yes" starttime="20210210 10:29:23.360"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:29:28.906" starttime="20210210 10:29:23.298"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s10" name="xcompat-cluster-1.1.0-client-0.5.0-read-1.1.0">
<test id="s1-s10-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:30:25.187" level="INFO">${postfix} = 47165</msg>
<status status="PASS" endtime="20210210 10:30:25.187" starttime="20210210 10:30:25.187"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:30:25.188" level="INFO">${tmpfile} = /tmp/tempkey-47165</msg>
<status status="PASS" endtime="20210210 10:30:25.188" starttime="20210210 10:30:25.187"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:25.190" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-47165 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:28.954" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:28.954" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:28.954" starttime="20210210 10:30:25.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:28.955" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:28.955" starttime="20210210 10:30:28.955"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:28.958" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:28.958" starttime="20210210 10:30:28.955"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:28.958" starttime="20210210 10:30:25.189"></status>
</kw>
<msg timestamp="20210210 10:30:28.958" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:28.958" starttime="20210210 10:30:25.188"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:28.958" starttime="20210210 10:30:25.188"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:30:28.960" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-47165 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:28.964" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:30:28.964" starttime="20210210 10:30:28.958"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:28.967" level="INFO">Running command 'rm -f /tmp/tempkey-47165 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:28.969" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:28.970" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:28.970" starttime="20210210 10:30:28.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:28.970" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:28.970" starttime="20210210 10:30:28.970"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:28.971" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:28.971" starttime="20210210 10:30:28.971"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:28.972" starttime="20210210 10:30:28.966"></status>
</kw>
<msg timestamp="20210210 10:30:28.972" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:28.972" starttime="20210210 10:30:28.965"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:28.972" starttime="20210210 10:30:28.965"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:30:28.973" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:30:28.973" starttime="20210210 10:30:28.972"></status>
</kw>
<msg timestamp="20210210 10:30:28.973" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:30:28.973" starttime="20210210 10:30:25.186"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:30:28.973" starttime="20210210 10:30:28.973"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:28.974" starttime="20210210 10:30:25.186"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:30:28.974" critical="yes" starttime="20210210 10:30:25.185"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:30:28.975" starttime="20210210 10:30:25.137"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s11" name="xcompat-cluster-1.0.0-client-0.5.0-read-0.5.0">
<test id="s1-s11-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:33:00.951" level="INFO">${postfix} = 59061</msg>
<status status="PASS" endtime="20210210 10:33:00.951" starttime="20210210 10:33:00.951"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:33:00.952" level="INFO">${tmpfile} = /tmp/tempkey-59061</msg>
<status status="PASS" endtime="20210210 10:33:00.952" starttime="20210210 10:33:00.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:00.955" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-59061 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:04.771" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:04.772" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:04.772" starttime="20210210 10:33:00.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:04.773" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:04.773" starttime="20210210 10:33:04.772"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:04.775" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:04.775" starttime="20210210 10:33:04.773"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:04.776" starttime="20210210 10:33:00.953"></status>
</kw>
<msg timestamp="20210210 10:33:04.776" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:04.776" starttime="20210210 10:33:00.953"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:04.776" starttime="20210210 10:33:00.952"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:33:04.778" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-59061 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:04.780" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:33:04.780" starttime="20210210 10:33:04.776"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:04.783" level="INFO">Running command 'rm -f /tmp/tempkey-59061 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:04.785" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:04.786" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:04.786" starttime="20210210 10:33:04.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:04.787" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:04.787" starttime="20210210 10:33:04.786"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:04.787" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:04.788" starttime="20210210 10:33:04.787"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:04.788" starttime="20210210 10:33:04.781"></status>
</kw>
<msg timestamp="20210210 10:33:04.788" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:04.788" starttime="20210210 10:33:04.781"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:04.788" starttime="20210210 10:33:04.780"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:33:04.789" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:33:04.789" starttime="20210210 10:33:04.788"></status>
</kw>
<msg timestamp="20210210 10:33:04.789" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:33:04.789" starttime="20210210 10:33:00.950"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:04.790" starttime="20210210 10:33:04.789"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:04.790" starttime="20210210 10:33:00.950"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:04.790" critical="yes" starttime="20210210 10:33:00.949"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:04.791" starttime="20210210 10:33:00.899"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s12" name="xcompat-cluster-1.0.0-client-0.5.0-read-1.1.0">
<test id="s1-s12-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:33:09.326" level="INFO">${postfix} = 08547</msg>
<status status="PASS" endtime="20210210 10:33:09.326" starttime="20210210 10:33:09.326"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:33:09.327" level="INFO">${tmpfile} = /tmp/tempkey-08547</msg>
<status status="PASS" endtime="20210210 10:33:09.327" starttime="20210210 10:33:09.326"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:09.330" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-08547 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:12.946" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:12.946" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:12.946" starttime="20210210 10:33:09.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:12.947" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:12.947" starttime="20210210 10:33:12.947"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:12.950" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:12.950" starttime="20210210 10:33:12.948"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:12.950" starttime="20210210 10:33:09.328"></status>
</kw>
<msg timestamp="20210210 10:33:12.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:12.950" starttime="20210210 10:33:09.328"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:12.951" starttime="20210210 10:33:09.327"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:33:12.952" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-08547 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:12.955" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:33:12.955" starttime="20210210 10:33:12.951"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:12.958" level="INFO">Running command 'rm -f /tmp/tempkey-08547 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:12.961" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:12.961" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:12.961" starttime="20210210 10:33:12.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:12.962" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:12.962" starttime="20210210 10:33:12.961"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:12.963" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:12.963" starttime="20210210 10:33:12.962"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:12.963" starttime="20210210 10:33:12.956"></status>
</kw>
<msg timestamp="20210210 10:33:12.963" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:12.963" starttime="20210210 10:33:12.956"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:12.964" starttime="20210210 10:33:12.955"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:33:12.964" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:33:12.964" starttime="20210210 10:33:12.964"></status>
</kw>
<msg timestamp="20210210 10:33:12.965" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:33:12.965" starttime="20210210 10:33:09.325"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:12.965" starttime="20210210 10:33:12.965"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:12.965" starttime="20210210 10:33:09.325"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:12.965" critical="yes" starttime="20210210 10:33:09.324"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:12.966" starttime="20210210 10:33:09.276"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s13" name="xcompat-cluster-0.5.0-client-0.5.0-read-0.5.0">
<test id="s1-s13-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:35:57.207" level="INFO">${postfix} = 23176</msg>
<status status="PASS" endtime="20210210 10:35:57.207" starttime="20210210 10:35:57.206"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:35:57.208" level="INFO">${tmpfile} = /tmp/tempkey-23176</msg>
<status status="PASS" endtime="20210210 10:35:57.208" starttime="20210210 10:35:57.207"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:57.211" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-23176 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:00.797" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:36:00.798" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:36:00.798" starttime="20210210 10:35:57.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:36:00.799" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:36:00.799" starttime="20210210 10:36:00.798"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:36:00.801" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:36:00.801" starttime="20210210 10:36:00.799"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:00.802" starttime="20210210 10:35:57.209"></status>
</kw>
<msg timestamp="20210210 10:36:00.802" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:36:00.802" starttime="20210210 10:35:57.209"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:00.802" starttime="20210210 10:35:57.208"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:36:00.805" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-23176 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:00.808" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:36:00.808" starttime="20210210 10:36:00.802"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:36:00.811" level="INFO">Running command 'rm -f /tmp/tempkey-23176 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:00.814" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:36:00.814" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:36:00.814" starttime="20210210 10:36:00.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:36:00.815" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:36:00.815" starttime="20210210 10:36:00.814"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:36:00.815" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:36:00.816" starttime="20210210 10:36:00.815"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:00.816" starttime="20210210 10:36:00.809"></status>
</kw>
<msg timestamp="20210210 10:36:00.816" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:36:00.816" starttime="20210210 10:36:00.809"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:00.816" starttime="20210210 10:36:00.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:36:00.817" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:36:00.817" starttime="20210210 10:36:00.816"></status>
</kw>
<msg timestamp="20210210 10:36:00.817" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:36:00.817" starttime="20210210 10:35:57.206"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:36:00.818" starttime="20210210 10:36:00.818"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:00.818" starttime="20210210 10:35:57.205"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:36:00.818" critical="yes" starttime="20210210 10:35:57.205"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:36:00.819" starttime="20210210 10:35:57.158"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s14" name="xcompat-cluster-0.5.0-client-0.5.0-read-1.1.0">
<test id="s1-s14-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:36:05.434" level="INFO">${postfix} = 59918</msg>
<status status="PASS" endtime="20210210 10:36:05.434" starttime="20210210 10:36:05.434"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:36:05.435" level="INFO">${tmpfile} = /tmp/tempkey-59918</msg>
<status status="PASS" endtime="20210210 10:36:05.435" starttime="20210210 10:36:05.434"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:36:05.438" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-59918 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:09.055" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:36:09.055" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:36:09.055" starttime="20210210 10:36:05.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:36:09.056" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:36:09.056" starttime="20210210 10:36:09.056"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:36:09.058" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:36:09.058" starttime="20210210 10:36:09.057"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:09.059" starttime="20210210 10:36:05.436"></status>
</kw>
<msg timestamp="20210210 10:36:09.059" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:36:09.059" starttime="20210210 10:36:05.435"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:09.059" starttime="20210210 10:36:05.435"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:36:09.061" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-59918 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:09.064" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:36:09.064" starttime="20210210 10:36:09.059"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:36:09.067" level="INFO">Running command 'rm -f /tmp/tempkey-59918 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:36:09.069" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:36:09.069" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:36:09.069" starttime="20210210 10:36:09.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:36:09.070" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:36:09.070" starttime="20210210 10:36:09.070"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:36:09.071" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:36:09.071" starttime="20210210 10:36:09.070"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:09.071" starttime="20210210 10:36:09.065"></status>
</kw>
<msg timestamp="20210210 10:36:09.071" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:36:09.072" starttime="20210210 10:36:09.065"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:09.072" starttime="20210210 10:36:09.064"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:36:09.073" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:36:09.073" starttime="20210210 10:36:09.072"></status>
</kw>
<msg timestamp="20210210 10:36:09.073" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:36:09.073" starttime="20210210 10:36:05.433"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:36:09.074" starttime="20210210 10:36:09.073"></status>
</kw>
<status status="PASS" endtime="20210210 10:36:09.074" starttime="20210210 10:36:05.433"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:36:09.074" critical="yes" starttime="20210210 10:36:05.432"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:36:09.075" starttime="20210210 10:36:05.388"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s15" name="xcompat-cluster-1.1.0-client-0.5.0-read-0.5.0">
<test id="s1-s15-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:30:16.562" level="INFO">${postfix} = 10581</msg>
<status status="PASS" endtime="20210210 10:30:16.562" starttime="20210210 10:30:16.561"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:30:16.563" level="INFO">${tmpfile} = /tmp/tempkey-10581</msg>
<status status="PASS" endtime="20210210 10:30:16.563" starttime="20210210 10:30:16.562"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:16.566" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-10581 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:20.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:20.418" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:20.418" starttime="20210210 10:30:16.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:20.418" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:20.419" starttime="20210210 10:30:20.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:20.421" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:20.421" starttime="20210210 10:30:20.419"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:20.421" starttime="20210210 10:30:16.564"></status>
</kw>
<msg timestamp="20210210 10:30:20.421" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:20.422" starttime="20210210 10:30:16.564"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:20.422" starttime="20210210 10:30:16.563"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:30:20.424" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-10581 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:20.427" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:30:20.427" starttime="20210210 10:30:20.422"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:20.431" level="INFO">Running command 'rm -f /tmp/tempkey-10581 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:20.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:20.432" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:20.432" starttime="20210210 10:30:20.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:20.433" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:20.433" starttime="20210210 10:30:20.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:20.434" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:20.434" starttime="20210210 10:30:20.433"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:20.434" starttime="20210210 10:30:20.428"></status>
</kw>
<msg timestamp="20210210 10:30:20.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:20.434" starttime="20210210 10:30:20.428"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:20.434" starttime="20210210 10:30:20.427"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:30:20.435" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:30:20.435" starttime="20210210 10:30:20.435"></status>
</kw>
<msg timestamp="20210210 10:30:20.435" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:30:20.435" starttime="20210210 10:30:16.561"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:30:20.436" starttime="20210210 10:30:20.436"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:20.436" starttime="20210210 10:30:16.560"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:30:20.436" critical="yes" starttime="20210210 10:30:16.560"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:30:20.438" starttime="20210210 10:30:16.499"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s16" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.1.0">
<test id="s1-s16-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:29:49.788" level="INFO">${postfix} = 26461</msg>
<status status="PASS" endtime="20210210 10:29:49.788" starttime="20210210 10:29:49.787"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:29:49.788" level="INFO">${tmpfile} = /tmp/tempkey-26461</msg>
<status status="PASS" endtime="20210210 10:29:49.788" starttime="20210210 10:29:49.788"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:49.791" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-26461 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:53.187" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:53.187" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:53.187" starttime="20210210 10:29:49.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:53.188" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:29:53.189" starttime="20210210 10:29:53.188"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:53.191" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:53.191" starttime="20210210 10:29:53.189"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:53.191" starttime="20210210 10:29:49.789"></status>
</kw>
<msg timestamp="20210210 10:29:53.191" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:53.192" starttime="20210210 10:29:49.789"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:53.192" starttime="20210210 10:29:49.788"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:29:53.193" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-26461 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:53.196" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:29:53.196" starttime="20210210 10:29:53.192"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:53.199" level="INFO">Running command 'rm -f /tmp/tempkey-26461 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:53.201" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:53.201" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:53.201" starttime="20210210 10:29:53.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:53.202" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:29:53.202" starttime="20210210 10:29:53.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:53.202" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:53.203" starttime="20210210 10:29:53.202"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:53.203" starttime="20210210 10:29:53.197"></status>
</kw>
<msg timestamp="20210210 10:29:53.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:53.203" starttime="20210210 10:29:53.197"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:53.203" starttime="20210210 10:29:53.196"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:29:53.204" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:29:53.204" starttime="20210210 10:29:53.203"></status>
</kw>
<msg timestamp="20210210 10:29:53.204" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:29:53.204" starttime="20210210 10:29:49.786"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:29:53.204" starttime="20210210 10:29:53.204"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:53.205" starttime="20210210 10:29:49.786"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:29:53.205" critical="yes" starttime="20210210 10:29:49.785"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:29:53.206" starttime="20210210 10:29:49.740"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s17" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.0.0">
<test id="s1-s17-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:33:35.572" level="INFO">${postfix} = 62419</msg>
<status status="PASS" endtime="20210210 10:33:35.572" starttime="20210210 10:33:35.572"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:33:35.573" level="INFO">${tmpfile} = /tmp/tempkey-62419</msg>
<status status="PASS" endtime="20210210 10:33:35.573" starttime="20210210 10:33:35.572"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:35.576" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-62419 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:38.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:38.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:38.931" starttime="20210210 10:33:35.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:38.932" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:38.932" starttime="20210210 10:33:38.931"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:38.935" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:38.935" starttime="20210210 10:33:38.932"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:38.935" starttime="20210210 10:33:35.574"></status>
</kw>
<msg timestamp="20210210 10:33:38.935" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:38.936" starttime="20210210 10:33:35.573"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:38.936" starttime="20210210 10:33:35.573"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:33:38.938" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-62419 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:38.941" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:33:38.941" starttime="20210210 10:33:38.936"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:38.945" level="INFO">Running command 'rm -f /tmp/tempkey-62419 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:38.947" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:38.947" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:38.947" starttime="20210210 10:33:38.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:38.949" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:38.949" starttime="20210210 10:33:38.948"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:38.949" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:38.949" starttime="20210210 10:33:38.949"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:38.950" starttime="20210210 10:33:38.942"></status>
</kw>
<msg timestamp="20210210 10:33:38.950" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:38.950" starttime="20210210 10:33:38.942"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:38.950" starttime="20210210 10:33:38.941"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:33:38.951" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:33:38.951" starttime="20210210 10:33:38.950"></status>
</kw>
<msg timestamp="20210210 10:33:38.951" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:33:38.951" starttime="20210210 10:33:35.571"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:38.952" starttime="20210210 10:33:38.952"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:38.952" starttime="20210210 10:33:35.571"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:38.952" critical="yes" starttime="20210210 10:33:35.570"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:38.953" starttime="20210210 10:33:35.517"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s18" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.1.0">
<test id="s1-s18-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:33:43.639" level="INFO">${postfix} = 25190</msg>
<status status="PASS" endtime="20210210 10:33:43.639" starttime="20210210 10:33:43.638"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:33:43.640" level="INFO">${tmpfile} = /tmp/tempkey-25190</msg>
<status status="PASS" endtime="20210210 10:33:43.640" starttime="20210210 10:33:43.639"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:43.642" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-25190 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:47.138" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:47.138" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:47.138" starttime="20210210 10:33:43.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:47.139" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:47.140" starttime="20210210 10:33:47.139"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:47.142" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:47.142" starttime="20210210 10:33:47.140"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:47.142" starttime="20210210 10:33:43.641"></status>
</kw>
<msg timestamp="20210210 10:33:47.143" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:47.143" starttime="20210210 10:33:43.640"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:47.143" starttime="20210210 10:33:43.640"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:33:47.145" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-25190 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:47.148" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:33:47.148" starttime="20210210 10:33:47.143"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:47.151" level="INFO">Running command 'rm -f /tmp/tempkey-25190 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:47.154" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:47.154" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:47.154" starttime="20210210 10:33:47.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:47.155" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:47.155" starttime="20210210 10:33:47.154"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:47.156" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:47.156" starttime="20210210 10:33:47.155"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:47.156" starttime="20210210 10:33:47.149"></status>
</kw>
<msg timestamp="20210210 10:33:47.157" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:47.157" starttime="20210210 10:33:47.149"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:47.157" starttime="20210210 10:33:47.148"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:33:47.158" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:33:47.158" starttime="20210210 10:33:47.157"></status>
</kw>
<msg timestamp="20210210 10:33:47.158" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:33:47.158" starttime="20210210 10:33:43.638"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:47.159" starttime="20210210 10:33:47.158"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:47.159" starttime="20210210 10:33:43.637"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:47.159" critical="yes" starttime="20210210 10:33:43.636"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:47.160" starttime="20210210 10:33:43.589"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s19" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.0.0">
<test id="s1-s19-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:35:23.512" level="INFO">${postfix} = 12790</msg>
<status status="PASS" endtime="20210210 10:35:23.512" starttime="20210210 10:35:23.511"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:35:23.512" level="INFO">${tmpfile} = /tmp/tempkey-12790</msg>
<status status="PASS" endtime="20210210 10:35:23.512" starttime="20210210 10:35:23.512"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:23.515" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-12790 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:26.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:26.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:26.752" starttime="20210210 10:35:23.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:26.753" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:26.753" starttime="20210210 10:35:26.752"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:26.756" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:26.756" starttime="20210210 10:35:26.754"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:26.757" starttime="20210210 10:35:23.513"></status>
</kw>
<msg timestamp="20210210 10:35:26.757" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:26.757" starttime="20210210 10:35:23.513"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:26.757" starttime="20210210 10:35:23.512"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:35:26.758" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-12790 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:26.761" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:35:26.761" starttime="20210210 10:35:26.757"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:26.764" level="INFO">Running command 'rm -f /tmp/tempkey-12790 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:26.766" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:26.766" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:26.766" starttime="20210210 10:35:26.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:26.767" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:26.767" starttime="20210210 10:35:26.767"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:26.768" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:26.768" starttime="20210210 10:35:26.767"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:26.768" starttime="20210210 10:35:26.762"></status>
</kw>
<msg timestamp="20210210 10:35:26.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:26.768" starttime="20210210 10:35:26.762"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:26.769" starttime="20210210 10:35:26.761"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:35:26.769" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:35:26.769" starttime="20210210 10:35:26.769"></status>
</kw>
<msg timestamp="20210210 10:35:26.770" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:35:26.770" starttime="20210210 10:35:23.511"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:26.771" starttime="20210210 10:35:26.770"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:26.771" starttime="20210210 10:35:23.510"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:26.771" critical="yes" starttime="20210210 10:35:23.510"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:26.772" starttime="20210210 10:35:23.461"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s20" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.1.0">
<test id="s1-s20-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:35:31.319" level="INFO">${postfix} = 27941</msg>
<status status="PASS" endtime="20210210 10:35:31.319" starttime="20210210 10:35:31.319"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:35:31.320" level="INFO">${tmpfile} = /tmp/tempkey-27941</msg>
<status status="PASS" endtime="20210210 10:35:31.320" starttime="20210210 10:35:31.319"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:31.323" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-27941 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:35.172" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:35.172" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:35.172" starttime="20210210 10:35:31.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:35.173" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:35.173" starttime="20210210 10:35:35.172"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:35.175" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:35.175" starttime="20210210 10:35:35.173"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:35.176" starttime="20210210 10:35:31.321"></status>
</kw>
<msg timestamp="20210210 10:35:35.176" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:35.176" starttime="20210210 10:35:31.321"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:35.176" starttime="20210210 10:35:31.320"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:35:35.178" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-27941 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:35.181" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:35:35.181" starttime="20210210 10:35:35.176"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:35.184" level="INFO">Running command 'rm -f /tmp/tempkey-27941 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:35.186" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:35.186" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:35.187" starttime="20210210 10:35:35.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:35.188" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:35.188" starttime="20210210 10:35:35.187"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:35.188" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:35.188" starttime="20210210 10:35:35.188"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:35.189" starttime="20210210 10:35:35.182"></status>
</kw>
<msg timestamp="20210210 10:35:35.189" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:35.189" starttime="20210210 10:35:35.182"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:35.189" starttime="20210210 10:35:35.181"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:35:35.190" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:35:35.190" starttime="20210210 10:35:35.189"></status>
</kw>
<msg timestamp="20210210 10:35:35.190" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:35:35.190" starttime="20210210 10:35:31.318"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:35.191" starttime="20210210 10:35:35.190"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:35.191" starttime="20210210 10:35:31.318"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:35.191" critical="yes" starttime="20210210 10:35:31.317"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:35.192" starttime="20210210 10:35:31.273"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/read.robot" id="s1-s21" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.0.0">
<test id="s1-s21-t1" name="Key Can Be Read">
<kw name="Key Should Match Local File" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Compare Key With Local File" library="shell">
<arguments>
<arg>${key}</arg>
<arg>${file}</arg>
</arguments>
<assign>
<var>${matches}</var>
</assign>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${postfix}</var>
</assign>
<msg timestamp="20210210 10:29:41.877" level="INFO">${postfix} = 05292</msg>
<status status="PASS" endtime="20210210 10:29:41.877" starttime="20210210 10:29:41.877"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/tmp/tempkey-${postfix}</arg>
</arguments>
<assign>
<var>${tmpfile}</var>
</assign>
<msg timestamp="20210210 10:29:41.878" level="INFO">${tmpfile} = /tmp/tempkey-05292</msg>
<status status="PASS" endtime="20210210 10:29:41.878" starttime="20210210 10:29:41.877"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key get ${key} ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:41.881" level="INFO">Running command 'ozone sh key get /vol1/bucket1/key- /tmp/tempkey-05292 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:45.318" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:45.318" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:45.318" starttime="20210210 10:29:41.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:45.320" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:29:45.320" starttime="20210210 10:29:45.319"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:45.322" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:45.322" starttime="20210210 10:29:45.320"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:45.322" starttime="20210210 10:29:41.879"></status>
</kw>
<msg timestamp="20210210 10:29:45.322" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:45.322" starttime="20210210 10:29:41.879"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:45.323" starttime="20210210 10:29:41.878"></status>
</kw>
<kw name="Run And Return Rc" library="OperatingSystem">
<doc>Runs the given command in the system and returns the return code.</doc>
<arguments>
<arg>diff -q ${file} ${tmpfile}</arg>
</arguments>
<assign>
<var>${rc}</var>
</assign>
<msg timestamp="20210210 10:29:45.324" level="INFO">Running command 'diff -q /etc/passwd /tmp/tempkey-05292 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:45.328" level="INFO">${rc} = 0</msg>
<status status="PASS" endtime="20210210 10:29:45.328" starttime="20210210 10:29:45.323"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>rm -f ${tmpfile}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:45.331" level="INFO">Running command 'rm -f /tmp/tempkey-05292 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:45.333" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:45.333" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:45.333" starttime="20210210 10:29:45.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:45.334" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:29:45.334" starttime="20210210 10:29:45.334"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:45.335" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:45.335" starttime="20210210 10:29:45.334"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:45.335" starttime="20210210 10:29:45.329"></status>
</kw>
<msg timestamp="20210210 10:29:45.335" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:45.335" starttime="20210210 10:29:45.329"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:45.336" starttime="20210210 10:29:45.328"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>${rc} == 0</arg>
<arg>${TRUE}</arg>
<arg>${FALSE}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 10:29:45.336" level="INFO">${result} = True</msg>
<status status="PASS" endtime="20210210 10:29:45.336" starttime="20210210 10:29:45.336"></status>
</kw>
<msg timestamp="20210210 10:29:45.337" level="INFO">${matches} = True</msg>
<status status="PASS" endtime="20210210 10:29:45.337" starttime="20210210 10:29:41.876"></status>
</kw>
<kw name="Should Be True" library="BuiltIn">
<doc>Fails if the given condition is not true.</doc>
<arguments>
<arg>${matches}</arg>
</arguments>
<status status="PASS" endtime="20210210 10:29:45.337" starttime="20210210 10:29:45.337"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:45.337" starttime="20210210 10:29:41.876"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:29:45.338" critical="yes" starttime="20210210 10:29:41.875"></status>
</test>
<doc>Read Compatibility</doc>
<status status="PASS" endtime="20210210 10:29:45.338" starttime="20210210 10:29:41.827"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/write.robot" id="s1-s22" name="xcompat-cluster-1.0.0-client-1.1.0-write">
<test id="s1-s22-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:32:33.575" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:32:38.854" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:32:38.854" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:32:38.854" starttime="20210210 10:32:33.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:32:38.855" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:32:38.856" starttime="20210210 10:32:38.855"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:32:38.856" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:32:38.856" starttime="20210210 10:32:38.856"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:38.857" starttime="20210210 10:32:33.571"></status>
</kw>
<msg timestamp="20210210 10:32:38.857" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:32:38.857" starttime="20210210 10:32:33.571"></status>
</kw>
<msg timestamp="20210210 10:32:38.858" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:32:38.858" starttime="20210210 10:32:33.570"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:32:38.858" starttime="20210210 10:32:38.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:32:38.859" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:32:38.859" starttime="20210210 10:32:38.859"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:38.859" starttime="20210210 10:32:33.570"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:32:38.860" critical="yes" starttime="20210210 10:32:33.569"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:32:38.861" starttime="20210210 10:32:33.503"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/write.robot" id="s1-s23" name="xcompat-cluster-0.5.0-client-1.1.0-write">
<test id="s1-s23-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:34:55.192" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:00.893" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:00.894" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:00.894" starttime="20210210 10:34:55.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:00.895" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:00.895" starttime="20210210 10:35:00.894"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:00.895" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:00.896" starttime="20210210 10:35:00.895"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:00.896" starttime="20210210 10:34:55.189"></status>
</kw>
<msg timestamp="20210210 10:35:00.896" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:00.896" starttime="20210210 10:34:55.188"></status>
</kw>
<msg timestamp="20210210 10:35:00.896" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:35:00.897" starttime="20210210 10:34:55.188"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:00.897" starttime="20210210 10:35:00.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:35:00.898" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:35:00.898" starttime="20210210 10:35:00.897"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:00.898" starttime="20210210 10:34:55.187"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:00.898" critical="yes" starttime="20210210 10:34:55.187"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:00.899" starttime="20210210 10:34:55.132"></status>
</suite>
<suite source="/opt/hadoop/smoketest/compatibility/write.robot" id="s1-s24" name="xcompat-cluster-1.1.0-client-1.1.0-write">
<test id="s1-s24-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:13.175" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:18.702" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:18.702" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:29:18.702" starttime="20210210 10:29:13.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:18.703" level="INFO">WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:29:18.703" starttime="20210210 10:29:18.702"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:18.703" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:18.704" starttime="20210210 10:29:18.703"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:18.704" starttime="20210210 10:29:13.170"></status>
</kw>
<msg timestamp="20210210 10:29:18.704" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:18.704" starttime="20210210 10:29:13.170"></status>
</kw>
<msg timestamp="20210210 10:29:18.704" level="INFO">${output} = WARNING: HADOOP_CONF_DIR has been deprecated by OZONE_CONF_DIR.
WARNING: HADOOP_LOG_DIR has been deprecated by OZONE_LOG_DIR.</msg>
<status status="PASS" endtime="20210210 10:29:18.704" starttime="20210210 10:29:13.169"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:29:18.705" starttime="20210210 10:29:18.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:29:18.705" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:29:18.705" starttime="20210210 10:29:18.705"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:18.706" starttime="20210210 10:29:13.168"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:29:18.706" critical="yes" starttime="20210210 10:29:13.167"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:29:18.707" starttime="20210210 10:29:13.100"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s25" name="xcompat-cluster-1.0.0-client-0.5.0-write">
<test id="s1-s25-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:32:52.648" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:32:56.454" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:32:56.454" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:32:56.454" starttime="20210210 10:32:52.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:32:56.455" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:32:56.455" starttime="20210210 10:32:56.455"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:32:56.456" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:32:56.456" starttime="20210210 10:32:56.455"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:56.456" starttime="20210210 10:32:52.646"></status>
</kw>
<msg timestamp="20210210 10:32:56.456" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:32:56.457" starttime="20210210 10:32:52.645"></status>
</kw>
<msg timestamp="20210210 10:32:56.457" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:32:56.457" starttime="20210210 10:32:52.645"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:32:56.457" starttime="20210210 10:32:56.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:32:56.458" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:32:56.458" starttime="20210210 10:32:56.458"></status>
</kw>
<status status="PASS" endtime="20210210 10:32:56.458" starttime="20210210 10:32:52.644"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:32:56.458" critical="yes" starttime="20210210 10:32:52.643"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:32:56.459" starttime="20210210 10:32:52.597"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s26" name="xcompat-cluster-0.5.0-client-0.5.0-write">
<test id="s1-s26-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:48.809" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:52.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:52.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:52.768" starttime="20210210 10:35:48.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:52.769" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:52.769" starttime="20210210 10:35:52.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:52.770" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:52.770" starttime="20210210 10:35:52.769"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:52.770" starttime="20210210 10:35:48.807"></status>
</kw>
<msg timestamp="20210210 10:35:52.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:52.771" starttime="20210210 10:35:48.807"></status>
</kw>
<msg timestamp="20210210 10:35:52.771" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:52.771" starttime="20210210 10:35:48.806"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:52.771" starttime="20210210 10:35:52.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:35:52.772" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:35:52.772" starttime="20210210 10:35:52.772"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:52.772" starttime="20210210 10:35:48.806"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:52.772" critical="yes" starttime="20210210 10:35:48.805"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:52.773" starttime="20210210 10:35:48.755"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s27" name="xcompat-cluster-1.1.0-client-0.5.0-write">
<test id="s1-s27-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:30:07.614" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:30:11.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:30:11.911" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:11.911" starttime="20210210 10:30:07.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:30:11.912" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:30:11.912" starttime="20210210 10:30:11.912"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:30:11.913" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:30:11.913" starttime="20210210 10:30:11.912"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:11.913" starttime="20210210 10:30:07.612"></status>
</kw>
<msg timestamp="20210210 10:30:11.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:30:11.913" starttime="20210210 10:30:07.611"></status>
</kw>
<msg timestamp="20210210 10:30:11.914" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:30:11.914" starttime="20210210 10:30:07.611"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:30:11.914" starttime="20210210 10:30:11.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:30:11.915" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:30:11.915" starttime="20210210 10:30:11.914"></status>
</kw>
<status status="PASS" endtime="20210210 10:30:11.915" starttime="20210210 10:30:07.610"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:30:11.915" critical="yes" starttime="20210210 10:30:07.609"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:30:11.916" starttime="20210210 10:30:07.566"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s28" name="xcompat-cluster-1.0.0-client-1.0.0-write">
<test id="s1-s28-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:33:27.198" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:33:30.915" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:33:30.916" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:30.916" starttime="20210210 10:33:27.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:33:30.917" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:33:30.917" starttime="20210210 10:33:30.916"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:33:30.917" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:33:30.917" starttime="20210210 10:33:30.917"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:30.917" starttime="20210210 10:33:27.195"></status>
</kw>
<msg timestamp="20210210 10:33:30.918" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:33:30.918" starttime="20210210 10:33:27.195"></status>
</kw>
<msg timestamp="20210210 10:33:30.918" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:33:30.918" starttime="20210210 10:33:27.194"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:33:30.918" starttime="20210210 10:33:30.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:33:30.919" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:33:30.919" starttime="20210210 10:33:30.919"></status>
</kw>
<status status="PASS" endtime="20210210 10:33:30.919" starttime="20210210 10:33:27.193"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:33:30.919" critical="yes" starttime="20210210 10:33:27.193"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:33:30.920" starttime="20210210 10:33:27.142"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s29" name="xcompat-cluster-0.5.0-client-1.0.0-write">
<test id="s1-s29-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:35:15.092" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:35:18.835" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:35:18.835" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:18.835" starttime="20210210 10:35:15.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:35:18.836" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:35:18.837" starttime="20210210 10:35:18.836"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:35:18.837" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:35:18.837" starttime="20210210 10:35:18.837"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:18.837" starttime="20210210 10:35:15.090"></status>
</kw>
<msg timestamp="20210210 10:35:18.838" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:35:18.838" starttime="20210210 10:35:15.090"></status>
</kw>
<msg timestamp="20210210 10:35:18.838" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:35:18.838" starttime="20210210 10:35:15.089"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:35:18.838" starttime="20210210 10:35:18.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:35:18.839" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:35:18.839" starttime="20210210 10:35:18.839"></status>
</kw>
<status status="PASS" endtime="20210210 10:35:18.839" starttime="20210210 10:35:15.089"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:35:18.839" critical="yes" starttime="20210210 10:35:15.088"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:35:18.840" starttime="20210210 10:35:15.040"></status>
</suite>
<suite source="/opt/ozone/smoketest/compatibility/write.robot" id="s1-s30" name="xcompat-cluster-1.1.0-client-1.0.0-write">
<test id="s1-s30-t1" name="Key Can Be Written">
<kw name="Create Key" library="shell">
<arguments>
<arg>/vol1/bucket1/key-${KEY_NAME_SUFFIX}</arg>
<arg>/etc/passwd</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put ${key} ${file}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:29:33.524" level="INFO">Running command 'ozone sh key put /vol1/bucket1/key- /etc/passwd 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:29:37.264" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:29:37.264" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:37.264" starttime="20210210 10:29:33.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:29:37.265" level="INFO"></msg>
<status status="PASS" endtime="20210210 10:29:37.265" starttime="20210210 10:29:37.265"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:29:37.266" level="INFO">Argument types are:
&lt;type 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:29:37.266" starttime="20210210 10:29:37.266"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:37.266" starttime="20210210 10:29:33.522"></status>
</kw>
<msg timestamp="20210210 10:29:37.266" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:29:37.267" starttime="20210210 10:29:33.522"></status>
</kw>
<msg timestamp="20210210 10:29:37.267" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 10:29:37.267" starttime="20210210 10:29:33.521"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 10:29:37.267" starttime="20210210 10:29:37.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>Uploaded ${file} to ${key}</arg>
</arguments>
<msg timestamp="20210210 10:29:37.268" level="INFO">Uploaded /etc/passwd to /vol1/bucket1/key-</msg>
<status status="PASS" endtime="20210210 10:29:37.268" starttime="20210210 10:29:37.268"></status>
</kw>
<status status="PASS" endtime="20210210 10:29:37.268" starttime="20210210 10:29:33.521"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:29:37.268" critical="yes" starttime="20210210 10:29:33.520"></status>
</test>
<doc>Write Compatibility</doc>
<status status="PASS" endtime="20210210 10:29:37.269" starttime="20210210 10:29:33.473"></status>
</suite>
<status status="PASS" elapsedtime="129561" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="30">Critical Tests</stat>
<stat fail="0" pass="30">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="xcompat" pass="30">xcompat</stat>
<stat fail="0" id="s1-s1" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-read-1.0.0</stat>
<stat fail="0" id="s1-s2" name="xcompat-cluster-1.1.0-client-1.1.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-read-0.5.0</stat>
<stat fail="0" id="s1-s3" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-read-1.1.0</stat>
<stat fail="0" id="s1-s4" name="xcompat-cluster-1.0.0-client-1.1.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-read-0.5.0</stat>
<stat fail="0" id="s1-s5" name="xcompat-cluster-1.0.0-client-1.1.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-read-1.0.0</stat>
<stat fail="0" id="s1-s6" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-read-1.1.0</stat>
<stat fail="0" id="s1-s7" name="xcompat-cluster-0.5.0-client-1.1.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-read-1.0.0</stat>
<stat fail="0" id="s1-s8" name="xcompat-cluster-0.5.0-client-1.1.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-read-0.5.0</stat>
<stat fail="0" id="s1-s9" name="xcompat-cluster-1.1.0-client-1.1.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-read-1.1.0</stat>
<stat fail="0" id="s1-s10" name="xcompat-cluster-1.1.0-client-0.5.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-0.5.0-read-1.1.0</stat>
<stat fail="0" id="s1-s11" name="xcompat-cluster-1.0.0-client-0.5.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-0.5.0-read-0.5.0</stat>
<stat fail="0" id="s1-s12" name="xcompat-cluster-1.0.0-client-0.5.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-0.5.0-read-1.1.0</stat>
<stat fail="0" id="s1-s13" name="xcompat-cluster-0.5.0-client-0.5.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-0.5.0-read-0.5.0</stat>
<stat fail="0" id="s1-s14" name="xcompat-cluster-0.5.0-client-0.5.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-0.5.0-read-1.1.0</stat>
<stat fail="0" id="s1-s15" name="xcompat-cluster-1.1.0-client-0.5.0-read-0.5.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-0.5.0-read-0.5.0</stat>
<stat fail="0" id="s1-s16" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.0.0-read-1.1.0</stat>
<stat fail="0" id="s1-s17" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.0.0-read-1.0.0</stat>
<stat fail="0" id="s1-s18" name="xcompat-cluster-1.0.0-client-1.0.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.0.0-read-1.1.0</stat>
<stat fail="0" id="s1-s19" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.0.0-read-1.0.0</stat>
<stat fail="0" id="s1-s20" name="xcompat-cluster-0.5.0-client-1.0.0-read-1.1.0" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.0.0-read-1.1.0</stat>
<stat fail="0" id="s1-s21" name="xcompat-cluster-1.1.0-client-1.0.0-read-1.0.0" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.0.0-read-1.0.0</stat>
<stat fail="0" id="s1-s22" name="xcompat-cluster-1.0.0-client-1.1.0-write" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.1.0-write</stat>
<stat fail="0" id="s1-s23" name="xcompat-cluster-0.5.0-client-1.1.0-write" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.1.0-write</stat>
<stat fail="0" id="s1-s24" name="xcompat-cluster-1.1.0-client-1.1.0-write" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.1.0-write</stat>
<stat fail="0" id="s1-s25" name="xcompat-cluster-1.0.0-client-0.5.0-write" pass="1">xcompat.xcompat-cluster-1.0.0-client-0.5.0-write</stat>
<stat fail="0" id="s1-s26" name="xcompat-cluster-0.5.0-client-0.5.0-write" pass="1">xcompat.xcompat-cluster-0.5.0-client-0.5.0-write</stat>
<stat fail="0" id="s1-s27" name="xcompat-cluster-1.1.0-client-0.5.0-write" pass="1">xcompat.xcompat-cluster-1.1.0-client-0.5.0-write</stat>
<stat fail="0" id="s1-s28" name="xcompat-cluster-1.0.0-client-1.0.0-write" pass="1">xcompat.xcompat-cluster-1.0.0-client-1.0.0-write</stat>
<stat fail="0" id="s1-s29" name="xcompat-cluster-0.5.0-client-1.0.0-write" pass="1">xcompat.xcompat-cluster-0.5.0-client-1.0.0-write</stat>
<stat fail="0" id="s1-s30" name="xcompat-cluster-1.1.0-client-1.0.0-write" pass="1">xcompat.xcompat-cluster-1.1.0-client-1.0.0-write</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
