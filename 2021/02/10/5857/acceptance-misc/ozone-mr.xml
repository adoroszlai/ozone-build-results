<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 09:56:14.962" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:41:55.388" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:41:57.984" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 09:41:57.984" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:41:57.984" starttime="20210210 09:41:55.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:41:57.985" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:41:57.985" starttime="20210210 09:41:57.985"></status>
</kw>
<msg timestamp="20210210 09:41:57.986" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:41:57.986" starttime="20210210 09:41:55.383"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:41:57.992" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:00.148" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:00.149" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:00.149" starttime="20210210 09:41:57.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:00.150" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:00.150" starttime="20210210 09:42:00.149"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:00.151" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:00.151" starttime="20210210 09:42:00.150"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:00.151" starttime="20210210 09:41:57.988"></status>
</kw>
<msg timestamp="20210210 09:42:00.151" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:00.151" starttime="20210210 09:41:57.988"></status>
</kw>
<msg timestamp="20210210 09:42:00.152" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 09:42:00.152" starttime="20210210 09:41:57.987"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 09:42:00.152" starttime="20210210 09:42:00.152"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:00.153" starttime="20210210 09:41:57.987"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:00.153" starttime="20210210 09:41:57.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:00.157" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:02.234" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:02.234" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:02.234" starttime="20210210 09:42:00.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:02.236" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:02.236" starttime="20210210 09:42:02.235"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:02.236" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:02.237" starttime="20210210 09:42:02.236"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:02.237" starttime="20210210 09:42:00.155"></status>
</kw>
<msg timestamp="20210210 09:42:02.237" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:02.237" starttime="20210210 09:42:00.154"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:02.238" starttime="20210210 09:42:00.154"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:02.238" starttime="20210210 09:42:00.153"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:02.238" starttime="20210210 09:42:00.153"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 09:42:02.239" starttime="20210210 09:42:02.238"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:02.242" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:04.455" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:04.455" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:42...</msg>
<status status="PASS" endtime="20210210 09:42:04.455" starttime="20210210 09:42:02.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:04.457" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:42:02.194Z",
  "modificationTime" : "2021-02-10T09:42:02.194Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 09:42:04.457" starttime="20210210 09:42:04.456"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:04.457" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:04.457" starttime="20210210 09:42:04.457"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:04.458" starttime="20210210 09:42:02.240"></status>
</kw>
<msg timestamp="20210210 09:42:04.458" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:04.458" starttime="20210210 09:42:02.239"></status>
</kw>
<msg timestamp="20210210 09:42:04.458" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:42...</msg>
<status status="PASS" endtime="20210210 09:42:04.458" starttime="20210210 09:42:02.239"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 09:42:04.459" starttime="20210210 09:42:04.458"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:42:04.463" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:42:04.463" starttime="20210210 09:42:04.462"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:42:04.464" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:42:04.464" starttime="20210210 09:42:04.463"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:04.464" starttime="20210210 09:42:04.462"></status>
</kw>
<msg timestamp="20210210 09:42:04.464" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:42:04.465" starttime="20210210 09:42:04.461"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:04.465" starttime="20210210 09:42:04.461"></status>
</kw>
<msg timestamp="20210210 09:42:04.465" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 09:42:04.465" starttime="20210210 09:42:04.460"></status>
</kw>
<msg timestamp="20210210 09:42:04.465" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 09:42:04.466" starttime="20210210 09:42:04.459"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:04.469" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:06.715" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:06.715" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:06.715" starttime="20210210 09:42:04.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:06.717" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:06.717" starttime="20210210 09:42:06.715"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:06.718" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:06.718" starttime="20210210 09:42:06.718"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:06.719" starttime="20210210 09:42:04.466"></status>
</kw>
<msg timestamp="20210210 09:42:06.719" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:06.719" starttime="20210210 09:42:04.466"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:06.719" starttime="20210210 09:42:04.466"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:06.723" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:12.553" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:12.554" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:12.554" starttime="20210210 09:42:06.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:12.555" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:12.555" starttime="20210210 09:42:12.554"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:12.556" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:12.556" starttime="20210210 09:42:12.555"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:12.557" starttime="20210210 09:42:06.720"></status>
</kw>
<msg timestamp="20210210 09:42:12.557" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:12.557" starttime="20210210 09:42:06.720"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:12.557" starttime="20210210 09:42:06.719"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:12.562" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:17.049" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:17.049" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:17.049" starttime="20210210 09:42:12.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:17.051" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:17.051" starttime="20210210 09:42:17.050"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:17.052" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:17.052" starttime="20210210 09:42:17.051"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:17.052" starttime="20210210 09:42:12.559"></status>
</kw>
<msg timestamp="20210210 09:42:17.052" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:17.052" starttime="20210210 09:42:12.559"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:17.053" starttime="20210210 09:42:12.558"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:17.058" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:21.067" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:21.067" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:21.067" starttime="20210210 09:42:17.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:21.068" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:21.068" starttime="20210210 09:42:21.067"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:21.069" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:21.069" starttime="20210210 09:42:21.068"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:21.069" starttime="20210210 09:42:17.054"></status>
</kw>
<msg timestamp="20210210 09:42:21.069" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:21.069" starttime="20210210 09:42:17.053"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:21.069" starttime="20210210 09:42:17.053"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 09:42:21.070" critical="yes" starttime="20210210 09:41:55.382"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:42:21.075" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:42:21.075" starttime="20210210 09:42:21.074"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:42:21.076" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:42:21.076" starttime="20210210 09:42:21.075"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:21.076" starttime="20210210 09:42:21.074"></status>
</kw>
<msg timestamp="20210210 09:42:21.076" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:42:21.076" starttime="20210210 09:42:21.073"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:21.076" starttime="20210210 09:42:21.073"></status>
</kw>
<msg timestamp="20210210 09:42:21.076" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:42:21.077" starttime="20210210 09:42:21.072"></status>
</kw>
<msg timestamp="20210210 09:42:21.077" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:42:21.077" starttime="20210210 09:42:21.071"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:21.080" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:23.417" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:23.417" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:23.417" starttime="20210210 09:42:21.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:23.418" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:23.419" starttime="20210210 09:42:23.418"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:23.419" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:23.419" starttime="20210210 09:42:23.419"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:23.420" starttime="20210210 09:42:21.078"></status>
</kw>
<msg timestamp="20210210 09:42:23.420" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:23.420" starttime="20210210 09:42:21.077"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:23.420" starttime="20210210 09:42:21.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:23.424" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:25.679" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:25.679" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:42:25.679" starttime="20210210 09:42:23.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:25.680" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:42:25.680" starttime="20210210 09:42:25.679"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:25.681" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:25.681" starttime="20210210 09:42:25.680"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:25.681" starttime="20210210 09:42:23.421"></status>
</kw>
<msg timestamp="20210210 09:42:25.681" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:25.681" starttime="20210210 09:42:23.421"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:25.682" starttime="20210210 09:42:23.420"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 09:42:25.682" critical="yes" starttime="20210210 09:42:21.070"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 09:42:25.684" starttime="20210210 09:41:55.315"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:43:58.311" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:43:58.311" starttime="20210210 09:43:58.311"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:43:58.312" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:43:58.312" starttime="20210210 09:43:58.311"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:58.312" starttime="20210210 09:43:58.310"></status>
</kw>
<msg timestamp="20210210 09:43:58.312" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:43:58.312" starttime="20210210 09:43:58.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:43:58.313" starttime="20210210 09:43:58.313"></status>
</kw>
<msg timestamp="20210210 09:43:58.314" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:43:58.314" starttime="20210210 09:43:58.313"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:58.314" starttime="20210210 09:43:58.309"></status>
</kw>
<msg timestamp="20210210 09:43:58.314" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:43:58.314" starttime="20210210 09:43:58.308"></status>
</kw>
<msg timestamp="20210210 09:43:58.314" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:43:58.314" starttime="20210210 09:43:58.307"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:43:58.315" level="INFO">${random} = 69772</msg>
<status status="PASS" endtime="20210210 09:43:58.315" starttime="20210210 09:43:58.314"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:43:58.321" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-69772 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:44:01.795" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:44:01.795" level="INFO">${output} = 2021-02-10 09:44:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 09:44:01.795" starttime="20210210 09:43:58.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:44:01.796" level="INFO">2021-02-10 09:44:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 09:44:00 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 09:44:00 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:44:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6F9452BC407C-&gt;db06cbe6-43ea-4243-811c-8b510eada71f
2021-02-10 09:44:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 09:44:01.796" starttime="20210210 09:44:01.795"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:44:01.797" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:44:01.797" starttime="20210210 09:44:01.796"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:01.797" starttime="20210210 09:43:58.316"></status>
</kw>
<msg timestamp="20210210 09:44:01.797" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:44:01.798" starttime="20210210 09:43:58.316"></status>
</kw>
<msg timestamp="20210210 09:44:01.798" level="INFO">${result} = 2021-02-10 09:44:00 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:00 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 09:44:01.798" starttime="20210210 09:43:58.315"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:44:01.801" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:44:03.630" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:44:03.630" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:44 ofs://om/volume1/bucket1/ozone-69772
-rw-...</msg>
<status status="PASS" endtime="20210210 09:44:03.630" starttime="20210210 09:44:01.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:44:03.631" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:44 ofs://om/volume1/bucket1/ozone-69772
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:42 ofs://om/volume1/bucket1/ozone-94244
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:43 ofs://om/volume1/bucket1/wordcount-LY7JyQzJ.txt</msg>
<status status="PASS" endtime="20210210 09:44:03.631" starttime="20210210 09:44:03.631"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:44:03.632" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:44:03.632" starttime="20210210 09:44:03.632"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:03.633" starttime="20210210 09:44:01.799"></status>
</kw>
<msg timestamp="20210210 09:44:03.633" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:44:03.633" starttime="20210210 09:44:01.799"></status>
</kw>
<msg timestamp="20210210 09:44:03.633" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:44 ofs://om/volume1/bucket1/ozone-69772
-rw-...</msg>
<status status="PASS" endtime="20210210 09:44:03.633" starttime="20210210 09:44:01.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:44:03.634" starttime="20210210 09:44:03.633"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 09:44:03.634" critical="yes" starttime="20210210 09:43:58.306"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 09:44:03.635" starttime="20210210 09:43:58.245"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:42:30.176" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:42:30.176" starttime="20210210 09:42:30.176"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:42:30.177" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:42:30.177" starttime="20210210 09:42:30.176"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:30.177" starttime="20210210 09:42:30.175"></status>
</kw>
<msg timestamp="20210210 09:42:30.177" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:42:30.177" starttime="20210210 09:42:30.175"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:30.178" starttime="20210210 09:42:30.174"></status>
</kw>
<msg timestamp="20210210 09:42:30.178" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:42:30.178" starttime="20210210 09:42:30.173"></status>
</kw>
<msg timestamp="20210210 09:42:30.178" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:42:30.178" starttime="20210210 09:42:30.172"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:42:30.179" level="INFO">${random} = 94244</msg>
<status status="PASS" endtime="20210210 09:42:30.179" starttime="20210210 09:42:30.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:30.184" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-94244 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:33.582" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:33.582" level="INFO">${output} = 2021-02-10 09:42:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:42:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 09:42:33.582" starttime="20210210 09:42:30.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:33.584" level="INFO">2021-02-10 09:42:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:42:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 09:42:32 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 09:42:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:42:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F0941B7E5AE8-&gt;db06cbe6-43ea-4243-811c-8b510eada71f
2021-02-10 09:42:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 09:42:33.584" starttime="20210210 09:42:33.582"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:33.585" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:33.585" starttime="20210210 09:42:33.584"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:33.585" starttime="20210210 09:42:30.180"></status>
</kw>
<msg timestamp="20210210 09:42:33.585" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:33.585" starttime="20210210 09:42:30.180"></status>
</kw>
<msg timestamp="20210210 09:42:33.586" level="INFO">${result} = 2021-02-10 09:42:32 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:42:32 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 ...</msg>
<status status="PASS" endtime="20210210 09:42:33.586" starttime="20210210 09:42:30.179"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:33.590" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:35.385" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:35.386" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:42 o3fs://bucket1.volume1.om/ozone-94244
dr...</msg>
<status status="PASS" endtime="20210210 09:42:35.386" starttime="20210210 09:42:33.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:35.387" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:42 o3fs://bucket1.volume1.om/ozone-94244
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:42:35.387" starttime="20210210 09:42:35.386"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:35.388" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:35.388" starttime="20210210 09:42:35.387"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:35.388" starttime="20210210 09:42:33.587"></status>
</kw>
<msg timestamp="20210210 09:42:35.388" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:35.389" starttime="20210210 09:42:33.587"></status>
</kw>
<msg timestamp="20210210 09:42:35.389" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-10 09:42 o3fs://bucket1.volume1.om/ozone-94244
dr...</msg>
<status status="PASS" endtime="20210210 09:42:35.389" starttime="20210210 09:42:33.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:42:35.390" starttime="20210210 09:42:35.389"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 09:42:35.390" critical="yes" starttime="20210210 09:42:30.172"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 09:42:35.391" starttime="20210210 09:42:30.114"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:44:08.124" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:44:08.132" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:44:08.132" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:08.132" starttime="20210210 09:44:08.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:44:08.133" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:08.134" starttime="20210210 09:44:08.133"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:44:08.134" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:44:08.134" starttime="20210210 09:44:08.134"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:08.135" starttime="20210210 09:44:08.120"></status>
</kw>
<msg timestamp="20210210 09:44:08.135" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:44:08.135" starttime="20210210 09:44:08.119"></status>
</kw>
<msg timestamp="20210210 09:44:08.136" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:08.136" starttime="20210210 09:44:08.118"></status>
</kw>
<msg timestamp="20210210 09:44:08.136" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:08.136" starttime="20210210 09:44:08.118"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:44:08.142" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:44:08.142" starttime="20210210 09:44:08.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:44:08.142" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:44:08.142" starttime="20210210 09:44:08.142"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:08.143" starttime="20210210 09:44:08.140"></status>
</kw>
<msg timestamp="20210210 09:44:08.143" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:44:08.143" starttime="20210210 09:44:08.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:44:08.144" starttime="20210210 09:44:08.144"></status>
</kw>
<msg timestamp="20210210 09:44:08.144" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:44:08.144" starttime="20210210 09:44:08.143"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:08.144" starttime="20210210 09:44:08.139"></status>
</kw>
<msg timestamp="20210210 09:44:08.145" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:44:08.145" starttime="20210210 09:44:08.137"></status>
</kw>
<msg timestamp="20210210 09:44:08.145" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:44:08.145" starttime="20210210 09:44:08.136"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:44:08.148" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:44:47.256" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:44:47.256" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:44:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 09:44:47.256" starttime="20210210 09:44:08.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:44:47.257" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:44:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:10 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 09:44:10 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 09:44:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:44:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B239D1658AD0-&gt;db06cbe6-43ea-4243-811c-8b510eada71f
2021-02-10 09:44:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 09:44:13 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F3FFE8C99A27-&gt;be7d8aee-ad61-4357-8a6d-25f32560a40c
2021-02-10 09:44:13 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 09:44:13 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:44:14 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:44:14 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 09:44:16 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 09:44:17 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612950078281_0003
2021-02-10 09:44:17 INFO  YarnClientImpl:273 - Submitted application application_1612950078281_0003
2021-02-10 09:44:17 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612950078281_0003/
2021-02-10 09:44:17 INFO  Job:1339 - Running job: job_1612950078281_0003
2021-02-10 09:44:24 INFO  Job:1360 - Job job_1612950078281_0003 running in uber mode : false
2021-02-10 09:44:24 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 09:44:31 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 09:44:36 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 09:44:41 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 09:44:45 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 09:44:46 INFO  Job:1378 - Job job_1612950078281_0003 completed successfully
2021-02-10 09:44:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=611873
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41184
		Total time spent by all reduces in occupied slots (ms)=15324
		Total time spent by all map tasks (ms)=10296
		Total time spent by all reduce tasks (ms)=3831
		Total vcore-milliseconds taken by all map tasks=10296
		Total vcore-milliseconds taken by all reduce tasks=3831
		Total megabyte-milliseconds taken by all map tasks=42172416
		Total megabyte-milliseconds taken by all reduce tasks=15691776
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=576
		CPU time spent (ms)=7610
		Physical memory (bytes) snapshot=1195085824
		Virtual memory (bytes) snapshot=15797301248
		Total committed heap usage (bytes)=1074790400
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.876 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 09:44:47.257" starttime="20210210 09:44:47.256"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:44:47.258" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:44:47.258" starttime="20210210 09:44:47.257"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.258" starttime="20210210 09:44:08.146"></status>
</kw>
<msg timestamp="20210210 09:44:47.258" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:44:47.258" starttime="20210210 09:44:08.146"></status>
</kw>
<msg timestamp="20210210 09:44:47.259" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:44:10 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:10 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 09:44:47.259" starttime="20210210 09:44:08.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:44:47.260" starttime="20210210 09:44:47.259"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:44:47.260" critical="yes" starttime="20210210 09:44:08.117"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:44:47.266" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:44:47.271" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:44:47.271" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:47.272" starttime="20210210 09:44:47.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:44:47.276" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:47.277" starttime="20210210 09:44:47.272"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:44:47.278" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:44:47.278" starttime="20210210 09:44:47.278"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.279" starttime="20210210 09:44:47.263"></status>
</kw>
<msg timestamp="20210210 09:44:47.279" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:44:47.279" starttime="20210210 09:44:47.263"></status>
</kw>
<msg timestamp="20210210 09:44:47.279" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:47.279" starttime="20210210 09:44:47.262"></status>
</kw>
<msg timestamp="20210210 09:44:47.279" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:44:47.280" starttime="20210210 09:44:47.262"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:44:47.280" level="INFO">${random} = MvUDXq9b</msg>
<status status="PASS" endtime="20210210 09:44:47.280" starttime="20210210 09:44:47.280"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:44:47.284" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:44:47.284" starttime="20210210 09:44:47.284"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:44:47.285" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:44:47.285" starttime="20210210 09:44:47.285"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.285" starttime="20210210 09:44:47.283"></status>
</kw>
<msg timestamp="20210210 09:44:47.285" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:44:47.286" starttime="20210210 09:44:47.283"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:44:47.287" starttime="20210210 09:44:47.286"></status>
</kw>
<msg timestamp="20210210 09:44:47.287" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:44:47.287" starttime="20210210 09:44:47.286"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.287" starttime="20210210 09:44:47.282"></status>
</kw>
<msg timestamp="20210210 09:44:47.287" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:44:47.287" starttime="20210210 09:44:47.281"></status>
</kw>
<msg timestamp="20210210 09:44:47.287" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:44:47.287" starttime="20210210 09:44:47.281"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:44:47.291" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:44:47.291" starttime="20210210 09:44:47.291"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:44:47.292" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:44:47.292" starttime="20210210 09:44:47.291"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.292" starttime="20210210 09:44:47.290"></status>
</kw>
<msg timestamp="20210210 09:44:47.292" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:44:47.292" starttime="20210210 09:44:47.290"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:44:47.294" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 09:44:47.294" starttime="20210210 09:44:47.294"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:44:47.295" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 09:44:47.295" starttime="20210210 09:44:47.294"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.295" starttime="20210210 09:44:47.293"></status>
</kw>
<msg timestamp="20210210 09:44:47.295" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 09:44:47.295" starttime="20210210 09:44:47.293"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.296" starttime="20210210 09:44:47.289"></status>
</kw>
<msg timestamp="20210210 09:44:47.296" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 09:44:47.296" starttime="20210210 09:44:47.288"></status>
</kw>
<msg timestamp="20210210 09:44:47.296" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 09:44:47.296" starttime="20210210 09:44:47.288"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:44:47.300" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:44:47.300" starttime="20210210 09:44:47.299"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:44:47.300" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:44:47.300" starttime="20210210 09:44:47.300"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.301" starttime="20210210 09:44:47.299"></status>
</kw>
<msg timestamp="20210210 09:44:47.301" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:44:47.301" starttime="20210210 09:44:47.298"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:44:47.302" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 09:44:47.302" starttime="20210210 09:44:47.302"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:44:47.303" level="INFO">${result} = /wordcount-MvUDXq9b.txt</msg>
<status status="PASS" endtime="20210210 09:44:47.303" starttime="20210210 09:44:47.303"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.303" starttime="20210210 09:44:47.301"></status>
</kw>
<msg timestamp="20210210 09:44:47.304" level="INFO">${path_with_leading} = /wordcount-MvUDXq9b.txt</msg>
<status status="PASS" endtime="20210210 09:44:47.304" starttime="20210210 09:44:47.301"></status>
</kw>
<status status="PASS" endtime="20210210 09:44:47.304" starttime="20210210 09:44:47.298"></status>
</kw>
<msg timestamp="20210210 09:44:47.304" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-MvUDXq9b.txt</msg>
<status status="PASS" endtime="20210210 09:44:47.304" starttime="20210210 09:44:47.297"></status>
</kw>
<msg timestamp="20210210 09:44:47.305" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-MvUDXq9b.txt</msg>
<status status="PASS" endtime="20210210 09:44:47.305" starttime="20210210 09:44:47.296"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:44:47.308" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-MvUDXq9b.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:45:21.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:45:21.353" level="INFO">${output} = 2021-02-10 09:44:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:44:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 09:45:21.353" starttime="20210210 09:44:47.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:45:21.355" level="INFO">2021-02-10 09:44:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:44:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:44:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:44:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 09:44:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 09:44:50 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:44:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7F864E85A084-&gt;be7d8aee-ad61-4357-8a6d-25f32560a40c
2021-02-10 09:44:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:44:50 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 09:44:50 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1AB458C7C039-&gt;db06cbe6-43ea-4243-811c-8b510eada71f
2021-02-10 09:44:50 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:44:51 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 09:44:51 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612950078281_0004
2021-02-10 09:44:51 INFO  YarnClientImpl:273 - Submitted application application_1612950078281_0004
2021-02-10 09:44:51 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612950078281_0004/
2021-02-10 09:44:51 INFO  Job:1339 - Running job: job_1612950078281_0004
2021-02-10 09:44:58 INFO  Job:1360 - Job job_1612950078281_0004 running in uber mode : false
2021-02-10 09:44:58 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 09:45:05 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 09:45:10 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 09:45:15 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 09:45:19 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 09:45:20 INFO  Job:1378 - Job job_1612950078281_0004 completed successfully
2021-02-10 09:45:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674635
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41620
		Total time spent by all reduces in occupied slots (ms)=15340
		Total time spent by all map tasks (ms)=10405
		Total time spent by all reduce tasks (ms)=3835
		Total vcore-milliseconds taken by all map tasks=10405
		Total vcore-milliseconds taken by all reduce tasks=3835
		Total megabyte-milliseconds taken by all map tasks=42618880
		Total megabyte-milliseconds taken by all reduce tasks=15708160
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=583
		CPU time spent (ms)=7530
		Physical memory (bytes) snapshot=1183461376
		Virtual memory (bytes) snapshot=15781552128
		Total committed heap usage (bytes)=1051721728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 09:45:21.355" starttime="20210210 09:45:21.354"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:45:21.355" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:45:21.356" starttime="20210210 09:45:21.355"></status>
</kw>
<status status="PASS" endtime="20210210 09:45:21.356" starttime="20210210 09:44:47.306"></status>
</kw>
<msg timestamp="20210210 09:45:21.356" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:45:21.356" starttime="20210210 09:44:47.305"></status>
</kw>
<msg timestamp="20210210 09:45:21.357" level="INFO">${output} = 2021-02-10 09:44:49 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:44:49 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 09:45:21.357" starttime="20210210 09:44:47.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 09:45:21.357" starttime="20210210 09:45:21.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:45:21.358" starttime="20210210 09:45:21.357"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:45:21.358" critical="yes" starttime="20210210 09:44:47.261"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 09:45:21.359" starttime="20210210 09:44:08.048"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:39.761" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:42:39.765" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:42:39.766" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:42:39.766" starttime="20210210 09:42:39.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:42:39.767" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:42:39.767" starttime="20210210 09:42:39.766"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:42:39.767" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:42:39.768" starttime="20210210 09:42:39.767"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:39.768" starttime="20210210 09:42:39.756"></status>
</kw>
<msg timestamp="20210210 09:42:39.768" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:42:39.768" starttime="20210210 09:42:39.756"></status>
</kw>
<msg timestamp="20210210 09:42:39.768" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:42:39.768" starttime="20210210 09:42:39.755"></status>
</kw>
<msg timestamp="20210210 09:42:39.769" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:42:39.769" starttime="20210210 09:42:39.755"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:42:39.773" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:42:39.773" starttime="20210210 09:42:39.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:42:39.774" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:42:39.774" starttime="20210210 09:42:39.774"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:39.774" starttime="20210210 09:42:39.772"></status>
</kw>
<msg timestamp="20210210 09:42:39.775" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:42:39.775" starttime="20210210 09:42:39.772"></status>
</kw>
<status status="PASS" endtime="20210210 09:42:39.775" starttime="20210210 09:42:39.771"></status>
</kw>
<msg timestamp="20210210 09:42:39.775" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:42:39.776" starttime="20210210 09:42:39.770"></status>
</kw>
<msg timestamp="20210210 09:42:39.776" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:42:39.776" starttime="20210210 09:42:39.769"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:42:39.780" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:43:19.451" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:43:19.451" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:42:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:42:41 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 09:43:19.451" starttime="20210210 09:42:39.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:43:19.452" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:42:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:42:41 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 09:42:41 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 09:42:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:42:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-696F7B946112-&gt;db06cbe6-43ea-4243-811c-8b510eada71f
2021-02-10 09:42:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 09:42:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-05DCC6FA5086-&gt;be7d8aee-ad61-4357-8a6d-25f32560a40c
2021-02-10 09:42:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 09:42:43 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:42:43 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 09:42:43 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 09:42:43 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612950078281_0001
2021-02-10 09:42:44 INFO  YarnClientImpl:273 - Submitted application application_1612950078281_0001
2021-02-10 09:42:44 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612950078281_0001/
2021-02-10 09:42:44 INFO  Job:1339 - Running job: job_1612950078281_0001
2021-02-10 09:42:53 INFO  Job:1360 - Job job_1612950078281_0001 running in uber mode : false
2021-02-10 09:42:53 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 09:43:00 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 09:43:05 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 09:43:10 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 09:43:17 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 09:43:18 INFO  Job:1378 - Job job_1612950078281_0001 completed successfully
2021-02-10 09:43:18 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=612085
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41988
		Total time spent by all reduces in occupied slots (ms)=25924
		Total time spent by all map tasks (ms)=10497
		Total time spent by all reduce tasks (ms)=6481
		Total vcore-milliseconds taken by all map tasks=10497
		Total vcore-milliseconds taken by all reduce tasks=6481
		Total megabyte-milliseconds taken by all map tasks=42995712
		Total megabyte-milliseconds taken by all reduce tasks=26546176
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=638
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1178177536
		Virtual memory (bytes) snapshot=15787589632
		Total committed heap usage (bytes)=1060110336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 35.85 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 09:43:19.452" starttime="20210210 09:43:19.451"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:43:19.453" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:43:19.453" starttime="20210210 09:43:19.453"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.453" starttime="20210210 09:42:39.777"></status>
</kw>
<msg timestamp="20210210 09:43:19.454" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:43:19.454" starttime="20210210 09:42:39.777"></status>
</kw>
<msg timestamp="20210210 09:43:19.454" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:42:41 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:42:41 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210210 09:43:19.454" starttime="20210210 09:42:39.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:43:19.455" starttime="20210210 09:43:19.454"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:43:19.455" critical="yes" starttime="20210210 09:42:39.754"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:43:19.460" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:43:19.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:43:19.466" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:43:19.466" starttime="20210210 09:43:19.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:43:19.466" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:43:19.467" starttime="20210210 09:43:19.466"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:43:19.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:43:19.467" starttime="20210210 09:43:19.467"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.467" starttime="20210210 09:43:19.457"></status>
</kw>
<msg timestamp="20210210 09:43:19.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:43:19.468" starttime="20210210 09:43:19.457"></status>
</kw>
<msg timestamp="20210210 09:43:19.468" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:43:19.468" starttime="20210210 09:43:19.457"></status>
</kw>
<msg timestamp="20210210 09:43:19.468" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210210 09:43:19.468" starttime="20210210 09:43:19.456"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:43:19.469" level="INFO">${random} = LY7JyQzJ</msg>
<status status="PASS" endtime="20210210 09:43:19.469" starttime="20210210 09:43:19.468"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:43:19.473" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:43:19.473" starttime="20210210 09:43:19.472"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:43:19.473" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:43:19.473" starttime="20210210 09:43:19.473"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.474" starttime="20210210 09:43:19.472"></status>
</kw>
<msg timestamp="20210210 09:43:19.474" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:43:19.474" starttime="20210210 09:43:19.471"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.474" starttime="20210210 09:43:19.470"></status>
</kw>
<msg timestamp="20210210 09:43:19.474" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:43:19.474" starttime="20210210 09:43:19.470"></status>
</kw>
<msg timestamp="20210210 09:43:19.474" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:43:19.474" starttime="20210210 09:43:19.469"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:43:19.478" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:43:19.478" starttime="20210210 09:43:19.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:43:19.479" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:43:19.479" starttime="20210210 09:43:19.478"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.479" starttime="20210210 09:43:19.477"></status>
</kw>
<msg timestamp="20210210 09:43:19.479" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:43:19.479" starttime="20210210 09:43:19.476"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.480" starttime="20210210 09:43:19.476"></status>
</kw>
<msg timestamp="20210210 09:43:19.480" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 09:43:19.480" starttime="20210210 09:43:19.475"></status>
</kw>
<msg timestamp="20210210 09:43:19.480" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 09:43:19.480" starttime="20210210 09:43:19.475"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:43:19.483" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:43:19.484" starttime="20210210 09:43:19.483"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:43:19.485" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:43:19.485" starttime="20210210 09:43:19.484"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.485" starttime="20210210 09:43:19.482"></status>
</kw>
<msg timestamp="20210210 09:43:19.485" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:43:19.485" starttime="20210210 09:43:19.482"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:19.486" starttime="20210210 09:43:19.481"></status>
</kw>
<msg timestamp="20210210 09:43:19.486" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-LY7JyQzJ.txt</msg>
<status status="PASS" endtime="20210210 09:43:19.486" starttime="20210210 09:43:19.481"></status>
</kw>
<msg timestamp="20210210 09:43:19.486" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-LY7JyQzJ.txt</msg>
<status status="PASS" endtime="20210210 09:43:19.486" starttime="20210210 09:43:19.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:43:19.490" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-LY7JyQzJ.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:43:53.563" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:43:53.563" level="INFO">${output} = 2021-02-10 09:43:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:43:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 09:43:53.563" starttime="20210210 09:43:19.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:43:53.564" level="INFO">2021-02-10 09:43:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:43:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:43:21 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:43:21 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-10 09:43:21 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-10 09:43:22 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:43:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C55FECD16398-&gt;db06cbe6-43ea-4243-811c-8b510eada71f
2021-02-10 09:43:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:43:22 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-10 09:43:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-AB89F56D8691-&gt;be7d8aee-ad61-4357-8a6d-25f32560a40c
2021-02-10 09:43:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:43:23 INFO  JobSubmitter:198 - number of splits:3
2021-02-10 09:43:23 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612950078281_0002
2021-02-10 09:43:23 INFO  YarnClientImpl:273 - Submitted application application_1612950078281_0002
2021-02-10 09:43:23 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612950078281_0002/
2021-02-10 09:43:23 INFO  Job:1339 - Running job: job_1612950078281_0002
2021-02-10 09:43:30 INFO  Job:1360 - Job job_1612950078281_0002 running in uber mode : false
2021-02-10 09:43:30 INFO  Job:1367 -  map 0% reduce 0%
2021-02-10 09:43:37 INFO  Job:1367 -  map 33% reduce 0%
2021-02-10 09:43:42 INFO  Job:1367 -  map 67% reduce 0%
2021-02-10 09:43:48 INFO  Job:1367 -  map 100% reduce 0%
2021-02-10 09:43:52 INFO  Job:1367 -  map 100% reduce 100%
2021-02-10 09:43:53 INFO  Job:1378 - Job job_1612950078281_0002 completed successfully
2021-02-10 09:43:53 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=674719
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40964
		Total time spent by all reduces in occupied slots (ms)=14664
		Total time spent by all map tasks (ms)=10241
		Total time spent by all reduce tasks (ms)=3666
		Total vcore-milliseconds taken by all map tasks=10241
		Total vcore-milliseconds taken by all reduce tasks=3666
		Total megabyte-milliseconds taken by all map tasks=41947136
		Total megabyte-milliseconds taken by all reduce tasks=15015936
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=533
		CPU time spent (ms)=7370
		Physical memory (bytes) snapshot=1213612032
		Virtual memory (bytes) snapshot=15805870080
		Total committed heap usage (bytes)=1014497280
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 09:43:53.564" starttime="20210210 09:43:53.563"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:43:53.565" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:43:53.565" starttime="20210210 09:43:53.565"></status>
</kw>
<status status="PASS" endtime="20210210 09:43:53.566" starttime="20210210 09:43:19.488"></status>
</kw>
<msg timestamp="20210210 09:43:53.566" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:43:53.566" starttime="20210210 09:43:19.487"></status>
</kw>
<msg timestamp="20210210 09:43:53.566" level="INFO">${output} = 2021-02-10 09:43:21 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.6:8032
2021-02-10 09:43:21 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210210 09:43:53.567" starttime="20210210 09:43:19.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 09:43:53.567" starttime="20210210 09:43:53.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:43:53.568" starttime="20210210 09:43:53.568"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:43:53.568" critical="yes" starttime="20210210 09:43:19.456"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 09:43:53.569" starttime="20210210 09:42:39.690"></status>
</suite>
<status status="PASS" elapsedtime="188226" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:30.905" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:33.594" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 09:46:33.594" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:46:33.594" starttime="20210210 09:46:30.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:33.595" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:46:33.595" starttime="20210210 09:46:33.595"></status>
</kw>
<msg timestamp="20210210 09:46:33.596" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:46:33.596" starttime="20210210 09:46:30.899"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:33.601" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:35.860" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:35.860" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:46:35.860" starttime="20210210 09:46:33.600"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:35.862" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:46:35.862" starttime="20210210 09:46:35.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:35.862" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:35.862" starttime="20210210 09:46:35.862"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:35.863" starttime="20210210 09:46:33.598"></status>
</kw>
<msg timestamp="20210210 09:46:35.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:35.863" starttime="20210210 09:46:33.598"></status>
</kw>
<msg timestamp="20210210 09:46:35.863" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 09:46:35.863" starttime="20210210 09:46:33.597"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 09:46:35.864" starttime="20210210 09:46:35.864"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:35.864" starttime="20210210 09:46:33.597"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:35.864" starttime="20210210 09:46:33.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:35.869" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:37.930" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:37.930" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:46:37.930" starttime="20210210 09:46:35.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:37.931" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:46:37.931" starttime="20210210 09:46:37.930"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:37.931" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:37.931" starttime="20210210 09:46:37.931"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:37.932" starttime="20210210 09:46:35.866"></status>
</kw>
<msg timestamp="20210210 09:46:37.932" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:37.932" starttime="20210210 09:46:35.866"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:37.932" starttime="20210210 09:46:35.865"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:37.932" starttime="20210210 09:46:35.865"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:37.932" starttime="20210210 09:46:35.864"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 09:46:37.933" starttime="20210210 09:46:37.933"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:37.936" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:40.238" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:40.238" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:46...</msg>
<status status="PASS" endtime="20210210 09:46:40.238" starttime="20210210 09:46:37.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:40.239" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:46:37.896Z",
  "modificationTime" : "2021-02-10T09:46:37.896Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 09:46:40.239" starttime="20210210 09:46:40.238"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:40.240" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:40.240" starttime="20210210 09:46:40.239"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:40.240" starttime="20210210 09:46:37.934"></status>
</kw>
<msg timestamp="20210210 09:46:40.240" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:40.240" starttime="20210210 09:46:37.934"></status>
</kw>
<msg timestamp="20210210 09:46:40.241" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:46...</msg>
<status status="PASS" endtime="20210210 09:46:40.241" starttime="20210210 09:46:37.933"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 09:46:40.241" starttime="20210210 09:46:40.241"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:46:40.245" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:46:40.246" starttime="20210210 09:46:40.245"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:46:40.247" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:46:40.247" starttime="20210210 09:46:40.246"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:40.247" starttime="20210210 09:46:40.244"></status>
</kw>
<msg timestamp="20210210 09:46:40.247" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:46:40.247" starttime="20210210 09:46:40.244"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:40.247" starttime="20210210 09:46:40.243"></status>
</kw>
<msg timestamp="20210210 09:46:40.248" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 09:46:40.248" starttime="20210210 09:46:40.242"></status>
</kw>
<msg timestamp="20210210 09:46:40.248" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 09:46:40.248" starttime="20210210 09:46:40.242"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:40.251" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:42.431" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:42.431" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:46:42.431" starttime="20210210 09:46:40.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:42.432" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:46:42.432" starttime="20210210 09:46:42.431"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:42.433" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:42.433" starttime="20210210 09:46:42.432"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:42.434" starttime="20210210 09:46:40.249"></status>
</kw>
<msg timestamp="20210210 09:46:42.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:42.434" starttime="20210210 09:46:40.248"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:42.434" starttime="20210210 09:46:40.248"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:42.438" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:47.820" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:47.820" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:46:47.820" starttime="20210210 09:46:42.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:47.821" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:46:47.821" starttime="20210210 09:46:47.820"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:47.822" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:47.822" starttime="20210210 09:46:47.821"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:47.822" starttime="20210210 09:46:42.436"></status>
</kw>
<msg timestamp="20210210 09:46:47.822" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:47.822" starttime="20210210 09:46:42.435"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:47.823" starttime="20210210 09:46:42.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:47.827" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:54.938" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:54.938" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:46:54.938" starttime="20210210 09:46:47.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:54.940" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:46:54.940" starttime="20210210 09:46:54.939"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:54.941" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:54.941" starttime="20210210 09:46:54.940"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:54.941" starttime="20210210 09:46:47.824"></status>
</kw>
<msg timestamp="20210210 09:46:54.941" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:54.942" starttime="20210210 09:46:47.824"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:54.942" starttime="20210210 09:46:47.823"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:54.948" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:46:58.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:46:58.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:46:58.847" starttime="20210210 09:46:54.946"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:46:58.848" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:46:58.848" starttime="20210210 09:46:58.848"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:46:58.849" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:46:58.849" starttime="20210210 09:46:58.849"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:58.849" starttime="20210210 09:46:54.944"></status>
</kw>
<msg timestamp="20210210 09:46:58.849" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:46:58.850" starttime="20210210 09:46:54.943"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:58.850" starttime="20210210 09:46:54.942"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 09:46:58.850" critical="yes" starttime="20210210 09:46:30.898"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:46:58.856" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:46:58.856" starttime="20210210 09:46:58.856"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:46:58.857" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:46:58.857" starttime="20210210 09:46:58.856"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:58.857" starttime="20210210 09:46:58.855"></status>
</kw>
<msg timestamp="20210210 09:46:58.857" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:46:58.857" starttime="20210210 09:46:58.854"></status>
</kw>
<status status="PASS" endtime="20210210 09:46:58.858" starttime="20210210 09:46:58.853"></status>
</kw>
<msg timestamp="20210210 09:46:58.858" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:46:58.858" starttime="20210210 09:46:58.853"></status>
</kw>
<msg timestamp="20210210 09:46:58.858" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:46:58.858" starttime="20210210 09:46:58.852"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:46:58.861" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:47:01.015" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:47:01.015" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:47:01.015" starttime="20210210 09:46:58.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:47:01.016" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:47:01.016" starttime="20210210 09:47:01.015"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:47:01.017" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:47:01.017" starttime="20210210 09:47:01.016"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:01.017" starttime="20210210 09:46:58.859"></status>
</kw>
<msg timestamp="20210210 09:47:01.017" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:47:01.017" starttime="20210210 09:46:58.859"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:01.018" starttime="20210210 09:46:58.858"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:47:01.021" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:47:03.355" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:47:03.356" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:47:03.356" starttime="20210210 09:47:01.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:47:03.357" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:47:03.357" starttime="20210210 09:47:03.356"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:47:03.358" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:47:03.358" starttime="20210210 09:47:03.357"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:03.358" starttime="20210210 09:47:01.019"></status>
</kw>
<msg timestamp="20210210 09:47:03.359" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:47:03.359" starttime="20210210 09:47:01.018"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:03.359" starttime="20210210 09:47:01.018"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 09:47:03.359" critical="yes" starttime="20210210 09:46:58.851"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 09:47:03.361" starttime="20210210 09:46:30.798"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:48:54.077" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:48:54.077" starttime="20210210 09:48:54.077"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:48:54.078" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:48:54.078" starttime="20210210 09:48:54.077"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:54.078" starttime="20210210 09:48:54.076"></status>
</kw>
<msg timestamp="20210210 09:48:54.078" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:48:54.078" starttime="20210210 09:48:54.076"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:48:54.079" starttime="20210210 09:48:54.079"></status>
</kw>
<msg timestamp="20210210 09:48:54.079" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:48:54.079" starttime="20210210 09:48:54.078"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:54.080" starttime="20210210 09:48:54.075"></status>
</kw>
<msg timestamp="20210210 09:48:54.080" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:48:54.080" starttime="20210210 09:48:54.074"></status>
</kw>
<msg timestamp="20210210 09:48:54.080" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:48:54.080" starttime="20210210 09:48:54.073"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:48:54.081" level="INFO">${random} = 43101</msg>
<status status="PASS" endtime="20210210 09:48:54.081" starttime="20210210 09:48:54.080"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:48:54.086" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-43101 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:48:57.733" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:48:57.734" level="INFO">${output} = 2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:48:57.734" starttime="20210210 09:48:54.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:48:57.737" level="INFO">2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:56 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 09:48:56 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:48:56 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:48:56 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:48:56 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:48:56 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B8CFEE318E06-&gt;2ac4a577-0d29-40c8-9935-7e6613db506c
2021-02-10 09:48:56 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:48:57 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:48:57.737" starttime="20210210 09:48:57.736"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:48:57.738" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:48:57.738" starttime="20210210 09:48:57.737"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:57.738" starttime="20210210 09:48:54.082"></status>
</kw>
<msg timestamp="20210210 09:48:57.739" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:48:57.739" starttime="20210210 09:48:54.081"></status>
</kw>
<msg timestamp="20210210 09:48:57.739" level="INFO">${result} = 2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:55 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:48:57.739" starttime="20210210 09:48:54.081"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:48:57.742" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:48:59.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:48:59.691" level="INFO">${output} = 2021-02-10 09:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:48:59.691" starttime="20210210 09:48:57.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:48:59.692" level="INFO">2021-02-10 09:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:59 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-10 09:47 ofs://om/volume1/bucket1/ozone-12865
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-10 09:48 ofs://om/volume1/bucket1/ozone-43101
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:47 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:48 ofs://om/volume1/bucket1/wordcount-ZjgD3uWh.txt
2021-02-10 09:48:59 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:48:59.692" starttime="20210210 09:48:59.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:48:59.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:48:59.693" starttime="20210210 09:48:59.692"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:59.693" starttime="20210210 09:48:57.740"></status>
</kw>
<msg timestamp="20210210 09:48:59.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:48:59.693" starttime="20210210 09:48:57.740"></status>
</kw>
<msg timestamp="20210210 09:48:59.694" level="INFO">${result} = 2021-02-10 09:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:59 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:48:59.694" starttime="20210210 09:48:57.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:48:59.695" starttime="20210210 09:48:59.694"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 09:48:59.695" critical="yes" starttime="20210210 09:48:54.072"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 09:48:59.696" starttime="20210210 09:48:54.010"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:47:07.726" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:47:07.726" starttime="20210210 09:47:07.726"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:47:07.727" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:47:07.727" starttime="20210210 09:47:07.727"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:07.727" starttime="20210210 09:47:07.726"></status>
</kw>
<msg timestamp="20210210 09:47:07.727" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:47:07.727" starttime="20210210 09:47:07.725"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:07.728" starttime="20210210 09:47:07.724"></status>
</kw>
<msg timestamp="20210210 09:47:07.728" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:47:07.728" starttime="20210210 09:47:07.724"></status>
</kw>
<msg timestamp="20210210 09:47:07.728" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:47:07.728" starttime="20210210 09:47:07.723"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:47:07.729" level="INFO">${random} = 12865</msg>
<status status="PASS" endtime="20210210 09:47:07.729" starttime="20210210 09:47:07.728"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:47:07.734" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-12865 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:47:12.059" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:47:12.059" level="INFO">${output} = 2021-02-10 09:47:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:47:12.059" starttime="20210210 09:47:07.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:47:12.061" level="INFO">2021-02-10 09:47:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:10 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 09:47:10 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:47:10 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:47:10 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:47:10 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:47:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C0101B979A42-&gt;2ac4a577-0d29-40c8-9935-7e6613db506c
2021-02-10 09:47:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:47:11 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:47:12.061" starttime="20210210 09:47:12.059"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:47:12.062" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:47:12.062" starttime="20210210 09:47:12.061"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:12.062" starttime="20210210 09:47:07.730"></status>
</kw>
<msg timestamp="20210210 09:47:12.062" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:47:12.062" starttime="20210210 09:47:07.730"></status>
</kw>
<msg timestamp="20210210 09:47:12.062" level="INFO">${result} = 2021-02-10 09:47:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:09 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:47:12.062" starttime="20210210 09:47:07.729"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:47:12.066" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:47:13.985" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:47:13.986" level="INFO">${output} = 2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:47:13.986" starttime="20210210 09:47:12.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:47:13.987" level="INFO">2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-10 09:47 o3fs://bucket1.volume1.om/ozone-12865
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:47 o3fs://bucket1.volume1.om/user
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:47:13.987" starttime="20210210 09:47:13.986"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:47:13.988" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:47:13.988" starttime="20210210 09:47:13.987"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:13.988" starttime="20210210 09:47:12.063"></status>
</kw>
<msg timestamp="20210210 09:47:13.988" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:47:13.988" starttime="20210210 09:47:12.063"></status>
</kw>
<msg timestamp="20210210 09:47:13.989" level="INFO">${result} = 2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:13 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:47:13.989" starttime="20210210 09:47:12.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:47:13.989" starttime="20210210 09:47:13.989"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 09:47:13.989" critical="yes" starttime="20210210 09:47:07.722"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 09:47:13.991" starttime="20210210 09:47:07.665"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:49:04.189" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:49:04.195" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:49:04.195" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:04.195" starttime="20210210 09:49:04.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:49:04.196" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:04.196" starttime="20210210 09:49:04.196"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:49:04.197" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:49:04.197" starttime="20210210 09:49:04.196"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:04.197" starttime="20210210 09:49:04.185"></status>
</kw>
<msg timestamp="20210210 09:49:04.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:49:04.197" starttime="20210210 09:49:04.185"></status>
</kw>
<msg timestamp="20210210 09:49:04.198" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:04.198" starttime="20210210 09:49:04.184"></status>
</kw>
<msg timestamp="20210210 09:49:04.198" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:04.198" starttime="20210210 09:49:04.184"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:49:04.204" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:49:04.204" starttime="20210210 09:49:04.203"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:49:04.205" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:49:04.205" starttime="20210210 09:49:04.204"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:04.205" starttime="20210210 09:49:04.203"></status>
</kw>
<msg timestamp="20210210 09:49:04.205" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:49:04.205" starttime="20210210 09:49:04.202"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:49:04.206" starttime="20210210 09:49:04.206"></status>
</kw>
<msg timestamp="20210210 09:49:04.206" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:49:04.206" starttime="20210210 09:49:04.205"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:04.207" starttime="20210210 09:49:04.201"></status>
</kw>
<msg timestamp="20210210 09:49:04.207" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:49:04.207" starttime="20210210 09:49:04.200"></status>
</kw>
<msg timestamp="20210210 09:49:04.207" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:49:04.207" starttime="20210210 09:49:04.198"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:49:04.210" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:49:40.859" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:49:40.859" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49...</msg>
<status status="PASS" endtime="20210210 09:49:40.859" starttime="20210210 09:49:04.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:49:40.860" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:06 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:06 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 09:49:06 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:49:06 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:49:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:49:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:49:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-03ED172B49BE-&gt;2ac4a577-0d29-40c8-9935-7e6613db506c
2021-02-10 09:49:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 09:49:07 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-99BBCFBC28C3-&gt;e0dfbe3c-a2a1-4333-8002-6c21625aeb7c
2021-02-10 09:49:07 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 09:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:07 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-02-10 09:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:07 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:08 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:49:08 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:49:08 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950360729_0003
2021-02-10 09:49:08 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:08 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 09:49:08 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 09:49:08 INFO  YarnClientImpl:324 - Submitted application application_1612950360729_0003
2021-02-10 09:49:08 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612950360729_0003/
2021-02-10 09:49:08 INFO  Job:1619 - Running job: job_1612950360729_0003
2021-02-10 09:49:17 INFO  Job:1640 - Job job_1612950360729_0003 running in uber mode : false
2021-02-10 09:49:17 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 09:49:24 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 09:49:29 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 09:49:34 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 09:49:40 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 09:49:40 INFO  Job:1658 - Job job_1612950360729_0003 completed successfully
2021-02-10 09:49:40 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:40 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017457
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=756
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43380
		Total time spent by all reduces in occupied slots (ms)=15420
		Total time spent by all map tasks (ms)=10845
		Total time spent by all reduce tasks (ms)=3855
		Total vcore-milliseconds taken by all map tasks=10845
		Total vcore-milliseconds taken by all reduce tasks=3855
		Total megabyte-milliseconds taken by all map tasks=44421120
		Total megabyte-milliseconds taken by all reduce tasks=15790080
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=402
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=618
		CPU time spent (ms)=7120
		Physical memory (bytes) snapshot=1399017472
		Virtual memory (bytes) snapshot=15809003520
		Total committed heap usage (bytes)=1220018176
		Peak Map Physical memory (bytes)=382971904
		Peak Map Virtual memory (bytes)=3948613632
		Peak Reduce Physical memory (bytes)=314286080
		Peak Reduce Virtual memory (bytes)=3968073728
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 32.652 seconds
2021-02-10 09:49:40 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-10 09:49:40 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:49:40.861" starttime="20210210 09:49:40.860"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:49:40.861" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:49:40.861" starttime="20210210 09:49:40.861"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.862" starttime="20210210 09:49:04.208"></status>
</kw>
<msg timestamp="20210210 09:49:40.862" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:49:40.862" starttime="20210210 09:49:04.208"></status>
</kw>
<msg timestamp="20210210 09:49:40.862" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49...</msg>
<status status="PASS" endtime="20210210 09:49:40.862" starttime="20210210 09:49:04.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:49:40.863" starttime="20210210 09:49:40.863"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:49:40.863" critical="yes" starttime="20210210 09:49:04.183"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:49:40.868" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:49:40.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:49:40.874" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:40.874" starttime="20210210 09:49:40.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:49:40.874" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:40.875" starttime="20210210 09:49:40.874"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:49:40.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:49:40.875" starttime="20210210 09:49:40.875"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.876" starttime="20210210 09:49:40.865"></status>
</kw>
<msg timestamp="20210210 09:49:40.876" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:49:40.876" starttime="20210210 09:49:40.865"></status>
</kw>
<msg timestamp="20210210 09:49:40.876" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:40.876" starttime="20210210 09:49:40.865"></status>
</kw>
<msg timestamp="20210210 09:49:40.876" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:49:40.876" starttime="20210210 09:49:40.864"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:49:40.877" level="INFO">${random} = n2AYGgGa</msg>
<status status="PASS" endtime="20210210 09:49:40.877" starttime="20210210 09:49:40.877"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:49:40.882" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:49:40.882" starttime="20210210 09:49:40.881"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:49:40.882" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:49:40.882" starttime="20210210 09:49:40.882"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.883" starttime="20210210 09:49:40.881"></status>
</kw>
<msg timestamp="20210210 09:49:40.883" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:49:40.883" starttime="20210210 09:49:40.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:49:40.884" starttime="20210210 09:49:40.883"></status>
</kw>
<msg timestamp="20210210 09:49:40.884" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:49:40.884" starttime="20210210 09:49:40.883"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.884" starttime="20210210 09:49:40.879"></status>
</kw>
<msg timestamp="20210210 09:49:40.884" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:49:40.884" starttime="20210210 09:49:40.878"></status>
</kw>
<msg timestamp="20210210 09:49:40.885" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:49:40.885" starttime="20210210 09:49:40.877"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:49:40.889" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:49:40.889" starttime="20210210 09:49:40.888"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:49:40.889" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:49:40.889" starttime="20210210 09:49:40.889"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.890" starttime="20210210 09:49:40.888"></status>
</kw>
<msg timestamp="20210210 09:49:40.890" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:49:40.890" starttime="20210210 09:49:40.887"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:49:40.891" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 09:49:40.891" starttime="20210210 09:49:40.891"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:49:40.892" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 09:49:40.892" starttime="20210210 09:49:40.891"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.892" starttime="20210210 09:49:40.890"></status>
</kw>
<msg timestamp="20210210 09:49:40.892" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 09:49:40.892" starttime="20210210 09:49:40.890"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.893" starttime="20210210 09:49:40.886"></status>
</kw>
<msg timestamp="20210210 09:49:40.893" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 09:49:40.893" starttime="20210210 09:49:40.886"></status>
</kw>
<msg timestamp="20210210 09:49:40.893" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 09:49:40.893" starttime="20210210 09:49:40.885"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:49:40.897" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:49:40.897" starttime="20210210 09:49:40.897"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:49:40.898" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:49:40.898" starttime="20210210 09:49:40.898"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.898" starttime="20210210 09:49:40.896"></status>
</kw>
<msg timestamp="20210210 09:49:40.899" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:49:40.899" starttime="20210210 09:49:40.895"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:49:40.900" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 09:49:40.900" starttime="20210210 09:49:40.900"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:49:40.901" level="INFO">${result} = /wordcount-n2AYGgGa.txt</msg>
<status status="PASS" endtime="20210210 09:49:40.901" starttime="20210210 09:49:40.900"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.902" starttime="20210210 09:49:40.899"></status>
</kw>
<msg timestamp="20210210 09:49:40.902" level="INFO">${path_with_leading} = /wordcount-n2AYGgGa.txt</msg>
<status status="PASS" endtime="20210210 09:49:40.902" starttime="20210210 09:49:40.899"></status>
</kw>
<status status="PASS" endtime="20210210 09:49:40.902" starttime="20210210 09:49:40.894"></status>
</kw>
<msg timestamp="20210210 09:49:40.903" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-n2AYGgGa.txt</msg>
<status status="PASS" endtime="20210210 09:49:40.903" starttime="20210210 09:49:40.894"></status>
</kw>
<msg timestamp="20210210 09:49:40.903" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-n2AYGgGa.txt</msg>
<status status="PASS" endtime="20210210 09:49:40.903" starttime="20210210 09:49:40.893"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:49:40.907" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-n2AYGgGa.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:50:20.298" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:50:20.298" level="INFO">${output} = 2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:50:20.298" starttime="20210210 09:49:40.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:50:20.299" level="INFO">2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-02-10 09:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:43 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:49:43 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:43 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 09:49:43 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:49:43 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:49:43 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:49:43 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:49:43 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-F819954BCE74-&gt;2ac4a577-0d29-40c8-9935-7e6613db506c
2021-02-10 09:49:43 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:49:44 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:49:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-72F209DC7877-&gt;e0dfbe3c-a2a1-4333-8002-6c21625aeb7c
2021-02-10 09:49:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:49:44 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:49:45 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950360729_0004
2021-02-10 09:49:45 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:49:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:45 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 09:49:45 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 09:49:45 INFO  YarnClientImpl:324 - Submitted application application_1612950360729_0004
2021-02-10 09:49:45 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612950360729_0004/
2021-02-10 09:49:45 INFO  Job:1619 - Running job: job_1612950360729_0004
2021-02-10 09:49:53 INFO  Job:1640 - Job job_1612950360729_0004 running in uber mode : false
2021-02-10 09:49:53 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 09:50:00 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 09:50:06 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 09:50:12 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 09:50:16 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 09:50:19 INFO  Job:1658 - Job job_1612950360729_0004 completed successfully
2021-02-10 09:50:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:50:19 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080147
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43468
		Total time spent by all reduces in occupied slots (ms)=15400
		Total time spent by all map tasks (ms)=10867
		Total time spent by all reduce tasks (ms)=3850
		Total vcore-milliseconds taken by all map tasks=10867
		Total vcore-milliseconds taken by all reduce tasks=3850
		Total megabyte-milliseconds taken by all map tasks=44511232
		Total megabyte-milliseconds taken by all reduce tasks=15769600
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=613
		CPU time spent (ms)=7020
		Physical memory (bytes) snapshot=1262157824
		Virtual memory (bytes) snapshot=15816622080
		Total committed heap usage (bytes)=1039663104
		Peak Map Physical memory (bytes)=324952064
		Peak Map Virtual memory (bytes)=3956613120
		Peak Reduce Physical memory (bytes)=300199936
		Peak Reduce Virtual memory (bytes)=3970449408
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-10 09:50:19 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:50:20.299" starttime="20210210 09:50:20.298"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:50:20.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:50:20.300" starttime="20210210 09:50:20.299"></status>
</kw>
<status status="PASS" endtime="20210210 09:50:20.300" starttime="20210210 09:49:40.904"></status>
</kw>
<msg timestamp="20210210 09:50:20.300" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:50:20.301" starttime="20210210 09:49:40.904"></status>
</kw>
<msg timestamp="20210210 09:50:20.301" level="INFO">${output} = 2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:49:42 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:50:20.301" starttime="20210210 09:49:40.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 09:50:20.302" starttime="20210210 09:50:20.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:50:20.302" starttime="20210210 09:50:20.302"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:50:20.303" critical="yes" starttime="20210210 09:49:40.864"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 09:50:20.304" starttime="20210210 09:49:04.116"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:47:18.474" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:47:18.479" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:47:18.479" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:47:18.479" starttime="20210210 09:47:18.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:47:18.480" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:47:18.480" starttime="20210210 09:47:18.479"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:47:18.481" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:47:18.481" starttime="20210210 09:47:18.480"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:18.482" starttime="20210210 09:47:18.471"></status>
</kw>
<msg timestamp="20210210 09:47:18.482" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:47:18.482" starttime="20210210 09:47:18.470"></status>
</kw>
<msg timestamp="20210210 09:47:18.482" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:47:18.482" starttime="20210210 09:47:18.470"></status>
</kw>
<msg timestamp="20210210 09:47:18.482" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:47:18.483" starttime="20210210 09:47:18.469"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:47:18.488" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:47:18.488" starttime="20210210 09:47:18.487"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:47:18.488" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:47:18.488" starttime="20210210 09:47:18.488"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:18.489" starttime="20210210 09:47:18.487"></status>
</kw>
<msg timestamp="20210210 09:47:18.489" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:47:18.489" starttime="20210210 09:47:18.486"></status>
</kw>
<status status="PASS" endtime="20210210 09:47:18.489" starttime="20210210 09:47:18.485"></status>
</kw>
<msg timestamp="20210210 09:47:18.489" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:47:18.489" starttime="20210210 09:47:18.484"></status>
</kw>
<msg timestamp="20210210 09:47:18.489" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:47:18.489" starttime="20210210 09:47:18.483"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:47:18.492" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:48:06.561" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:48:06.561" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47...</msg>
<status status="PASS" endtime="20210210 09:48:06.561" starttime="20210210 09:47:18.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:48:06.562" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:20 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 09:47:20 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:47:20 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:47:20 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:47:21 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:47:21 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-85B7C12032A1-&gt;e0dfbe3c-a2a1-4333-8002-6c21625aeb7c
2021-02-10 09:47:21 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 09:47:22 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DF5E60A1444C-&gt;2ac4a577-0d29-40c8-9935-7e6613db506c
2021-02-10 09:47:22 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 09:47:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:24 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-02-10 09:47:24 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:25 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:47:25 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:47:25 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950360729_0001
2021-02-10 09:47:25 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:47:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:25 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:26 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:26 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 09:47:26 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 09:47:26 INFO  YarnClientImpl:324 - Submitted application application_1612950360729_0001
2021-02-10 09:47:26 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612950360729_0001/
2021-02-10 09:47:26 INFO  Job:1619 - Running job: job_1612950360729_0001
2021-02-10 09:47:36 INFO  Job:1640 - Job job_1612950360729_0001 running in uber mode : false
2021-02-10 09:47:36 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 09:47:43 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 09:47:48 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 09:47:53 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 09:47:59 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 09:48:05 INFO  Job:1658 - Job job_1612950360729_0001 completed successfully
2021-02-10 09:48:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:05 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1017669
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=43876
		Total time spent by all reduces in occupied slots (ms)=15464
		Total time spent by all map tasks (ms)=10969
		Total time spent by all reduce tasks (ms)=3866
		Total vcore-milliseconds taken by all map tasks=10969
		Total vcore-milliseconds taken by all reduce tasks=3866
		Total megabyte-milliseconds taken by all map tasks=44929024
		Total megabyte-milliseconds taken by all reduce tasks=15835136
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=616
		CPU time spent (ms)=6630
		Physical memory (bytes) snapshot=1311715328
		Virtual memory (bytes) snapshot=15790096384
		Total committed heap usage (bytes)=1142423552
		Peak Map Physical memory (bytes)=383995904
		Peak Map Virtual memory (bytes)=3949109248
		Peak Reduce Physical memory (bytes)=287473664
		Peak Reduce Virtual memory (bytes)=3949666304
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 41.246 seconds
2021-02-10 09:48:05 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:05 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-10 09:48:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:48:06.562" starttime="20210210 09:48:06.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:48:06.563" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:48:06.563" starttime="20210210 09:48:06.562"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.563" starttime="20210210 09:47:18.490"></status>
</kw>
<msg timestamp="20210210 09:48:06.563" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:48:06.563" starttime="20210210 09:47:18.490"></status>
</kw>
<msg timestamp="20210210 09:48:06.564" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:47...</msg>
<status status="PASS" endtime="20210210 09:48:06.564" starttime="20210210 09:47:18.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:48:06.564" starttime="20210210 09:48:06.564"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:48:06.565" critical="yes" starttime="20210210 09:47:18.468"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:48:06.570" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:48:06.576" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:48:06.576" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:48:06.576" starttime="20210210 09:48:06.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:48:06.577" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:48:06.577" starttime="20210210 09:48:06.577"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:48:06.578" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:48:06.578" starttime="20210210 09:48:06.577"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.578" starttime="20210210 09:48:06.568"></status>
</kw>
<msg timestamp="20210210 09:48:06.578" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:48:06.579" starttime="20210210 09:48:06.568"></status>
</kw>
<msg timestamp="20210210 09:48:06.579" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:48:06.579" starttime="20210210 09:48:06.567"></status>
</kw>
<msg timestamp="20210210 09:48:06.579" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210210 09:48:06.579" starttime="20210210 09:48:06.566"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:48:06.580" level="INFO">${random} = ZjgD3uWh</msg>
<status status="PASS" endtime="20210210 09:48:06.580" starttime="20210210 09:48:06.579"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:48:06.584" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:48:06.584" starttime="20210210 09:48:06.584"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:48:06.585" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:48:06.585" starttime="20210210 09:48:06.584"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.585" starttime="20210210 09:48:06.583"></status>
</kw>
<msg timestamp="20210210 09:48:06.585" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:48:06.585" starttime="20210210 09:48:06.583"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.585" starttime="20210210 09:48:06.581"></status>
</kw>
<msg timestamp="20210210 09:48:06.585" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:48:06.585" starttime="20210210 09:48:06.581"></status>
</kw>
<msg timestamp="20210210 09:48:06.586" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:48:06.586" starttime="20210210 09:48:06.580"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:48:06.589" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:48:06.590" starttime="20210210 09:48:06.589"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:48:06.590" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:48:06.590" starttime="20210210 09:48:06.590"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.590" starttime="20210210 09:48:06.588"></status>
</kw>
<msg timestamp="20210210 09:48:06.590" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:48:06.591" starttime="20210210 09:48:06.588"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.591" starttime="20210210 09:48:06.587"></status>
</kw>
<msg timestamp="20210210 09:48:06.591" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 09:48:06.591" starttime="20210210 09:48:06.587"></status>
</kw>
<msg timestamp="20210210 09:48:06.591" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 09:48:06.591" starttime="20210210 09:48:06.586"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:48:06.595" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:48:06.595" starttime="20210210 09:48:06.594"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:48:06.595" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:48:06.595" starttime="20210210 09:48:06.595"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.596" starttime="20210210 09:48:06.594"></status>
</kw>
<msg timestamp="20210210 09:48:06.596" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:48:06.596" starttime="20210210 09:48:06.593"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:06.596" starttime="20210210 09:48:06.593"></status>
</kw>
<msg timestamp="20210210 09:48:06.596" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-ZjgD3uWh.txt</msg>
<status status="PASS" endtime="20210210 09:48:06.596" starttime="20210210 09:48:06.592"></status>
</kw>
<msg timestamp="20210210 09:48:06.597" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-ZjgD3uWh.txt</msg>
<status status="PASS" endtime="20210210 09:48:06.597" starttime="20210210 09:48:06.591"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:48:06.600" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-ZjgD3uWh.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:48:49.595" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:48:49.595" level="INFO">${output} = 2021-02-10 09:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:48:49.595" starttime="20210210 09:48:06.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:48:49.596" level="INFO">2021-02-10 09:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.2:8032
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:09 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-10 09:48:09 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-10 09:48:09 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:48:09 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:48:09 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:48:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7F0126B1F5E0-&gt;2ac4a577-0d29-40c8-9935-7e6613db506c
2021-02-10 09:48:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:48:10 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:48:10 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A0C4DA5F903C-&gt;e0dfbe3c-a2a1-4333-8002-6c21625aeb7c
2021-02-10 09:48:10 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:48:13 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:48:13 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950360729_0002
2021-02-10 09:48:13 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:48:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:13 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:13 INFO  Configuration:2752 - resource-types.xml not found
2021-02-10 09:48:13 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-10 09:48:13 INFO  YarnClientImpl:324 - Submitted application application_1612950360729_0002
2021-02-10 09:48:13 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612950360729_0002/
2021-02-10 09:48:13 INFO  Job:1619 - Running job: job_1612950360729_0002
2021-02-10 09:48:21 INFO  Job:1640 - Job job_1612950360729_0002 running in uber mode : false
2021-02-10 09:48:21 INFO  Job:1647 -  map 0% reduce 0%
2021-02-10 09:48:28 INFO  Job:1647 -  map 33% reduce 0%
2021-02-10 09:48:34 INFO  Job:1647 -  map 67% reduce 0%
2021-02-10 09:48:41 INFO  Job:1647 -  map 100% reduce 0%
2021-02-10 09:48:46 INFO  Job:1647 -  map 100% reduce 100%
2021-02-10 09:48:49 INFO  Job:1658 - Job job_1612950360729_0002 completed successfully
2021-02-10 09:48:49 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:49 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1080231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=44108
		Total time spent by all reduces in occupied slots (ms)=16220
		Total time spent by all map tasks (ms)=11027
		Total time spent by all reduce tasks (ms)=4055
		Total vcore-milliseconds taken by all map tasks=11027
		Total vcore-milliseconds taken by all reduce tasks=4055
		Total megabyte-milliseconds taken by all map tasks=45166592
		Total megabyte-milliseconds taken by all reduce tasks=16609280
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=631
		CPU time spent (ms)=6970
		Physical memory (bytes) snapshot=1309057024
		Virtual memory (bytes) snapshot=15791620096
		Total committed heap usage (bytes)=1096810496
		Peak Map Physical memory (bytes)=387039232
		Peak Map Virtual memory (bytes)=3949273088
		Peak Reduce Physical memory (bytes)=297353216
		Peak Reduce Virtual memory (bytes)=3968888832
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-10 09:48:49 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210210 09:48:49.597" starttime="20210210 09:48:49.595"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:48:49.598" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:48:49.598" starttime="20210210 09:48:49.597"></status>
</kw>
<status status="PASS" endtime="20210210 09:48:49.598" starttime="20210210 09:48:06.598"></status>
</kw>
<msg timestamp="20210210 09:48:49.598" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:48:49.598" starttime="20210210 09:48:06.598"></status>
</kw>
<msg timestamp="20210210 09:48:49.599" level="INFO">${output} = 2021-02-10 09:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-10 09:48:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210210 09:48:49.599" starttime="20210210 09:48:06.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 09:48:49.600" starttime="20210210 09:48:49.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:48:49.600" starttime="20210210 09:48:49.600"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:48:49.601" critical="yes" starttime="20210210 09:48:06.565"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 09:48:49.602" starttime="20210210 09:47:18.403"></status>
</suite>
<status status="PASS" elapsedtime="211962" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:13.906" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:17.685" level="INFO">${rc} = 255</msg>
<msg timestamp="20210210 09:52:17.685" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:52:17.685" starttime="20210210 09:52:13.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:17.686" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:52:17.686" starttime="20210210 09:52:17.686"></status>
</kw>
<msg timestamp="20210210 09:52:17.687" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210210 09:52:17.687" starttime="20210210 09:52:13.901"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:17.693" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:21.043" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:21.044" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:21.044" starttime="20210210 09:52:17.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:21.045" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:21.045" starttime="20210210 09:52:21.044"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:21.045" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:21.046" starttime="20210210 09:52:21.045"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:21.046" starttime="20210210 09:52:17.689"></status>
</kw>
<msg timestamp="20210210 09:52:21.046" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:21.046" starttime="20210210 09:52:17.689"></status>
</kw>
<msg timestamp="20210210 09:52:21.046" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210210 09:52:21.046" starttime="20210210 09:52:17.688"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210210 09:52:21.047" starttime="20210210 09:52:21.047"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:21.047" starttime="20210210 09:52:17.688"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:21.047" starttime="20210210 09:52:17.687"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:21.052" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:24.502" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:24.502" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:24.502" starttime="20210210 09:52:21.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:24.503" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:24.504" starttime="20210210 09:52:24.503"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:24.504" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:24.504" starttime="20210210 09:52:24.504"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:24.504" starttime="20210210 09:52:21.050"></status>
</kw>
<msg timestamp="20210210 09:52:24.505" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:24.505" starttime="20210210 09:52:21.049"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:24.505" starttime="20210210 09:52:21.049"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:24.505" starttime="20210210 09:52:21.048"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:24.505" starttime="20210210 09:52:21.048"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210210 09:52:24.506" starttime="20210210 09:52:24.505"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:24.509" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:28.017" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:28.017" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:52...</msg>
<status status="PASS" endtime="20210210 09:52:28.017" starttime="20210210 09:52:24.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:28.019" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:52:24.216Z",
  "modificationTime" : "2021-02-10T09:52:24.216Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210210 09:52:28.019" starttime="20210210 09:52:28.018"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:28.020" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:28.020" starttime="20210210 09:52:28.019"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:28.020" starttime="20210210 09:52:24.507"></status>
</kw>
<msg timestamp="20210210 09:52:28.020" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:28.021" starttime="20210210 09:52:24.506"></status>
</kw>
<msg timestamp="20210210 09:52:28.021" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-10T09:52...</msg>
<status status="PASS" endtime="20210210 09:52:28.021" starttime="20210210 09:52:24.506"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210210 09:52:28.021" starttime="20210210 09:52:28.021"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:52:28.026" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:52:28.026" starttime="20210210 09:52:28.025"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:52:28.027" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:52:28.027" starttime="20210210 09:52:28.026"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:28.028" starttime="20210210 09:52:28.025"></status>
</kw>
<msg timestamp="20210210 09:52:28.028" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:52:28.028" starttime="20210210 09:52:28.024"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:28.028" starttime="20210210 09:52:28.023"></status>
</kw>
<msg timestamp="20210210 09:52:28.028" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 09:52:28.028" starttime="20210210 09:52:28.022"></status>
</kw>
<msg timestamp="20210210 09:52:28.029" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210210 09:52:28.029" starttime="20210210 09:52:28.022"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:28.033" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:31.466" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:31.466" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:31.466" starttime="20210210 09:52:28.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:31.468" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:31.468" starttime="20210210 09:52:31.467"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:31.469" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:31.469" starttime="20210210 09:52:31.468"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:31.469" starttime="20210210 09:52:28.030"></status>
</kw>
<msg timestamp="20210210 09:52:31.469" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:31.470" starttime="20210210 09:52:28.030"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:31.470" starttime="20210210 09:52:28.029"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:31.475" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:38.239" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:38.239" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:38.239" starttime="20210210 09:52:31.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:38.241" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:38.241" starttime="20210210 09:52:38.240"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:38.242" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:38.242" starttime="20210210 09:52:38.241"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:38.242" starttime="20210210 09:52:31.472"></status>
</kw>
<msg timestamp="20210210 09:52:38.242" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:38.242" starttime="20210210 09:52:31.471"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:38.242" starttime="20210210 09:52:31.470"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:38.247" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:46.524" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:46.524" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:46.524" starttime="20210210 09:52:38.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:46.525" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:46.525" starttime="20210210 09:52:46.524"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:46.526" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:46.526" starttime="20210210 09:52:46.525"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:46.526" starttime="20210210 09:52:38.244"></status>
</kw>
<msg timestamp="20210210 09:52:46.526" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:46.526" starttime="20210210 09:52:38.244"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:46.526" starttime="20210210 09:52:38.243"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:46.531" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:52.019" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:52.019" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:52.019" starttime="20210210 09:52:46.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:52.020" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:52.021" starttime="20210210 09:52:52.020"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:52.021" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:52.021" starttime="20210210 09:52:52.021"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:52.021" starttime="20210210 09:52:46.528"></status>
</kw>
<msg timestamp="20210210 09:52:52.022" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:52.022" starttime="20210210 09:52:46.527"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:52.022" starttime="20210210 09:52:46.526"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 09:52:52.022" critical="yes" starttime="20210210 09:52:13.900"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:52:52.028" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:52:52.028" starttime="20210210 09:52:52.028"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:52:52.029" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:52:52.029" starttime="20210210 09:52:52.028"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:52.029" starttime="20210210 09:52:52.027"></status>
</kw>
<msg timestamp="20210210 09:52:52.029" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:52:52.029" starttime="20210210 09:52:52.026"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:52.030" starttime="20210210 09:52:52.025"></status>
</kw>
<msg timestamp="20210210 09:52:52.030" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:52:52.030" starttime="20210210 09:52:52.025"></status>
</kw>
<msg timestamp="20210210 09:52:52.030" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:52:52.030" starttime="20210210 09:52:52.024"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:52.034" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:55.164" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:55.164" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:55.164" starttime="20210210 09:52:52.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:55.165" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:55.166" starttime="20210210 09:52:55.165"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:55.166" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:55.166" starttime="20210210 09:52:55.166"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:55.167" starttime="20210210 09:52:52.031"></status>
</kw>
<msg timestamp="20210210 09:52:55.167" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:55.167" starttime="20210210 09:52:52.031"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:55.167" starttime="20210210 09:52:52.030"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:52:55.171" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:52:58.202" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:52:58.202" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210210 09:52:58.202" starttime="20210210 09:52:55.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:52:58.203" level="INFO"></msg>
<status status="PASS" endtime="20210210 09:52:58.203" starttime="20210210 09:52:58.202"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:52:58.204" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:52:58.204" starttime="20210210 09:52:58.203"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:58.204" starttime="20210210 09:52:55.168"></status>
</kw>
<msg timestamp="20210210 09:52:58.204" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:52:58.205" starttime="20210210 09:52:55.168"></status>
</kw>
<status status="PASS" endtime="20210210 09:52:58.205" starttime="20210210 09:52:55.167"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210210 09:52:58.205" critical="yes" starttime="20210210 09:52:52.023"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210210 09:52:58.207" starttime="20210210 09:52:13.841"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:54:40.218" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:54:40.218" starttime="20210210 09:54:40.218"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:54:40.219" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:54:40.219" starttime="20210210 09:54:40.218"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:40.219" starttime="20210210 09:54:40.217"></status>
</kw>
<msg timestamp="20210210 09:54:40.219" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:54:40.219" starttime="20210210 09:54:40.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:54:40.220" starttime="20210210 09:54:40.220"></status>
</kw>
<msg timestamp="20210210 09:54:40.221" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:54:40.221" starttime="20210210 09:54:40.219"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:40.221" starttime="20210210 09:54:40.216"></status>
</kw>
<msg timestamp="20210210 09:54:40.221" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:54:40.221" starttime="20210210 09:54:40.215"></status>
</kw>
<msg timestamp="20210210 09:54:40.221" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:54:40.221" starttime="20210210 09:54:40.214"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:54:40.222" level="INFO">${random} = 64876</msg>
<status status="PASS" endtime="20210210 09:54:40.222" starttime="20210210 09:54:40.221"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:54:40.227" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-64876 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:54:43.996" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:54:43.996" level="INFO">${output} = 2021-02-10 09:54:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 09:54:43.996" starttime="20210210 09:54:40.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:54:43.998" level="INFO">2021-02-10 09:54:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:54:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:54:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:54:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EE75530F7FD8-&gt;50d7838f-e331-4b3f-959c-adeb58290070
2021-02-10 09:54:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 09:54:43.998" starttime="20210210 09:54:43.997"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:54:43.998" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:54:43.998" starttime="20210210 09:54:43.998"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:43.999" starttime="20210210 09:54:40.223"></status>
</kw>
<msg timestamp="20210210 09:54:43.999" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:54:43.999" starttime="20210210 09:54:40.223"></status>
</kw>
<msg timestamp="20210210 09:54:43.999" level="INFO">${result} = 2021-02-10 09:54:42 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 09:54:43.999" starttime="20210210 09:54:40.222"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:54:44.003" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:54:45.995" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:54:45.995" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:54 ofs://om/volume1/bucket1/ozone-64876
-rw-...</msg>
<status status="PASS" endtime="20210210 09:54:45.995" starttime="20210210 09:54:44.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:54:45.996" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:54 ofs://om/volume1/bucket1/ozone-64876
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:53 ofs://om/volume1/bucket1/ozone-79920
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:54 ofs://om/volume1/bucket1/wordcount-z1jfEzKu.txt</msg>
<status status="PASS" endtime="20210210 09:54:45.996" starttime="20210210 09:54:45.996"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:54:45.997" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:54:45.997" starttime="20210210 09:54:45.997"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:45.998" starttime="20210210 09:54:44.001"></status>
</kw>
<msg timestamp="20210210 09:54:45.998" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:54:45.998" starttime="20210210 09:54:44.000"></status>
</kw>
<msg timestamp="20210210 09:54:45.999" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:54 ofs://om/volume1/bucket1/ozone-64876
-rw-...</msg>
<status status="PASS" endtime="20210210 09:54:45.999" starttime="20210210 09:54:44.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:54:46.000" starttime="20210210 09:54:45.999"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 09:54:46.000" critical="yes" starttime="20210210 09:54:40.213"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 09:54:46.001" starttime="20210210 09:54:40.153"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:53:02.607" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:53:02.608" starttime="20210210 09:53:02.607"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:53:02.608" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:53:02.608" starttime="20210210 09:53:02.608"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:02.608" starttime="20210210 09:53:02.606"></status>
</kw>
<msg timestamp="20210210 09:53:02.609" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:53:02.609" starttime="20210210 09:53:02.606"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:02.609" starttime="20210210 09:53:02.605"></status>
</kw>
<msg timestamp="20210210 09:53:02.609" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:53:02.609" starttime="20210210 09:53:02.605"></status>
</kw>
<msg timestamp="20210210 09:53:02.609" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:53:02.609" starttime="20210210 09:53:02.604"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:53:02.610" level="INFO">${random} = 79920</msg>
<status status="PASS" endtime="20210210 09:53:02.610" starttime="20210210 09:53:02.609"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:53:02.614" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-79920 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:53:06.823" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:53:06.824" level="INFO">${output} = 2021-02-10 09:53:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:53:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 09:53:06.824" starttime="20210210 09:53:02.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:53:06.826" level="INFO">2021-02-10 09:53:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:53:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:53:04 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:53:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:53:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-B1BAC144D02D-&gt;50d7838f-e331-4b3f-959c-adeb58290070
2021-02-10 09:53:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210210 09:53:06.826" starttime="20210210 09:53:06.824"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:53:06.827" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:53:06.827" starttime="20210210 09:53:06.826"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:06.827" starttime="20210210 09:53:02.611"></status>
</kw>
<msg timestamp="20210210 09:53:06.827" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:53:06.828" starttime="20210210 09:53:02.610"></status>
</kw>
<msg timestamp="20210210 09:53:06.828" level="INFO">${result} = 2021-02-10 09:53:04 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:53:04 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210210 09:53:06.828" starttime="20210210 09:53:02.610"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:53:06.832" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:53:08.710" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:53:08.710" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:53 o3fs://bucket1.volume1.om/ozone-79920
dr...</msg>
<status status="PASS" endtime="20210210 09:53:08.711" starttime="20210210 09:53:06.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:53:08.712" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:53 o3fs://bucket1.volume1.om/ozone-79920
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210210 09:53:08.712" starttime="20210210 09:53:08.711"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:53:08.713" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:53:08.713" starttime="20210210 09:53:08.712"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:08.713" starttime="20210210 09:53:06.829"></status>
</kw>
<msg timestamp="20210210 09:53:08.713" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:53:08.713" starttime="20210210 09:53:06.829"></status>
</kw>
<msg timestamp="20210210 09:53:08.713" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-10 09:52 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-10 09:53 o3fs://bucket1.volume1.om/ozone-79920
dr...</msg>
<status status="PASS" endtime="20210210 09:53:08.713" starttime="20210210 09:53:06.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:53:08.714" starttime="20210210 09:53:08.714"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 09:53:08.714" critical="yes" starttime="20210210 09:53:02.603"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210210 09:53:08.716" starttime="20210210 09:53:02.536"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:54:50.300" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:54:50.306" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:54:50.306" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:54:50.306" starttime="20210210 09:54:50.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:54:50.307" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:54:50.307" starttime="20210210 09:54:50.306"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:54:50.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:54:50.308" starttime="20210210 09:54:50.307"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:50.308" starttime="20210210 09:54:50.295"></status>
</kw>
<msg timestamp="20210210 09:54:50.308" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:54:50.308" starttime="20210210 09:54:50.295"></status>
</kw>
<msg timestamp="20210210 09:54:50.309" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:54:50.309" starttime="20210210 09:54:50.294"></status>
</kw>
<msg timestamp="20210210 09:54:50.309" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:54:50.309" starttime="20210210 09:54:50.294"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:54:50.314" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:54:50.314" starttime="20210210 09:54:50.313"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:54:50.314" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:54:50.314" starttime="20210210 09:54:50.314"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:50.315" starttime="20210210 09:54:50.313"></status>
</kw>
<msg timestamp="20210210 09:54:50.315" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:54:50.315" starttime="20210210 09:54:50.312"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:54:50.316" starttime="20210210 09:54:50.315"></status>
</kw>
<msg timestamp="20210210 09:54:50.316" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:54:50.316" starttime="20210210 09:54:50.315"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:50.316" starttime="20210210 09:54:50.311"></status>
</kw>
<msg timestamp="20210210 09:54:50.317" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:54:50.317" starttime="20210210 09:54:50.310"></status>
</kw>
<msg timestamp="20210210 09:54:50.317" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:54:50.317" starttime="20210210 09:54:50.309"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:54:50.320" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:55:29.065" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:55:29.065" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:54:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:52 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 09:55:29.065" starttime="20210210 09:54:50.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:55:29.066" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:54:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:52 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:54:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:54:52 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:54:52 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C16A9ADD9B28-&gt;50d7838f-e331-4b3f-959c-adeb58290070
2021-02-10 09:54:52 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-10 09:54:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-5E518AE339E5-&gt;f652d107-0d3f-476a-91cc-9e39c8f09cc1
2021-02-10 09:54:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-10 09:54:53 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:54:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:54:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:54:54 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:54:54 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950666249_0003
2021-02-10 09:54:54 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:54:54 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 09:54:54 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 09:54:54 INFO  YarnClientImpl:329 - Submitted application application_1612950666249_0003
2021-02-10 09:54:54 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612950666249_0003/
2021-02-10 09:54:54 INFO  Job:1614 - Running job: job_1612950666249_0003
2021-02-10 09:55:02 INFO  Job:1635 - Job job_1612950666249_0003 running in uber mode : false
2021-02-10 09:55:02 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 09:55:09 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 09:55:15 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 09:55:20 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 09:55:25 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 09:55:28 INFO  Job:1653 - Job job_1612950666249_0003 completed successfully
2021-02-10 09:55:28 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1092865
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42352
		Total time spent by all reduces in occupied slots (ms)=15500
		Total time spent by all map tasks (ms)=10588
		Total time spent by all reduce tasks (ms)=3875
		Total vcore-milliseconds taken by all map tasks=10588
		Total vcore-milliseconds taken by all reduce tasks=3875
		Total megabyte-milliseconds taken by all map tasks=43368448
		Total megabyte-milliseconds taken by all reduce tasks=15872000
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=608
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1198239744
		Virtual memory (bytes) snapshot=15795347456
		Total committed heap usage (bytes)=1015021568
		Peak Map Physical memory (bytes)=303976448
		Peak Map Virtual memory (bytes)=3947134976
		Peak Reduce Physical memory (bytes)=303357952
		Peak Reduce Virtual memory (bytes)=3966107648
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 34.887 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 09:55:29.066" starttime="20210210 09:55:29.065"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:55:29.067" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:55:29.067" starttime="20210210 09:55:29.066"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.067" starttime="20210210 09:54:50.318"></status>
</kw>
<msg timestamp="20210210 09:55:29.067" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:55:29.068" starttime="20210210 09:54:50.318"></status>
</kw>
<msg timestamp="20210210 09:55:29.068" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:54:52 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:52 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 09:55:29.068" starttime="20210210 09:54:50.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:55:29.069" starttime="20210210 09:55:29.068"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:55:29.069" critical="yes" starttime="20210210 09:54:50.293"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:55:29.074" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:55:29.080" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:55:29.081" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:55:29.081" starttime="20210210 09:55:29.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:55:29.082" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:55:29.082" starttime="20210210 09:55:29.081"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:55:29.083" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:55:29.083" starttime="20210210 09:55:29.082"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.083" starttime="20210210 09:55:29.072"></status>
</kw>
<msg timestamp="20210210 09:55:29.083" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:55:29.083" starttime="20210210 09:55:29.072"></status>
</kw>
<msg timestamp="20210210 09:55:29.084" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:55:29.084" starttime="20210210 09:55:29.071"></status>
</kw>
<msg timestamp="20210210 09:55:29.084" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:55:29.084" starttime="20210210 09:55:29.071"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:55:29.087" level="INFO">${random} = nJ33WJer</msg>
<status status="PASS" endtime="20210210 09:55:29.087" starttime="20210210 09:55:29.084"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:55:29.092" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:55:29.093" starttime="20210210 09:55:29.092"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:55:29.093" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:55:29.093" starttime="20210210 09:55:29.093"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.093" starttime="20210210 09:55:29.091"></status>
</kw>
<msg timestamp="20210210 09:55:29.094" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:55:29.094" starttime="20210210 09:55:29.091"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210210 09:55:29.095" starttime="20210210 09:55:29.094"></status>
</kw>
<msg timestamp="20210210 09:55:29.095" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210210 09:55:29.095" starttime="20210210 09:55:29.094"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.095" starttime="20210210 09:55:29.090"></status>
</kw>
<msg timestamp="20210210 09:55:29.095" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:55:29.095" starttime="20210210 09:55:29.088"></status>
</kw>
<msg timestamp="20210210 09:55:29.096" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210210 09:55:29.096" starttime="20210210 09:55:29.087"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:55:29.099" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:55:29.099" starttime="20210210 09:55:29.099"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:55:29.100" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:55:29.100" starttime="20210210 09:55:29.099"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.100" starttime="20210210 09:55:29.098"></status>
</kw>
<msg timestamp="20210210 09:55:29.100" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:55:29.100" starttime="20210210 09:55:29.098"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:55:29.102" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210210 09:55:29.102" starttime="20210210 09:55:29.102"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:55:29.103" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210210 09:55:29.103" starttime="20210210 09:55:29.102"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.103" starttime="20210210 09:55:29.101"></status>
</kw>
<msg timestamp="20210210 09:55:29.103" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210210 09:55:29.103" starttime="20210210 09:55:29.100"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.104" starttime="20210210 09:55:29.097"></status>
</kw>
<msg timestamp="20210210 09:55:29.104" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 09:55:29.104" starttime="20210210 09:55:29.096"></status>
</kw>
<msg timestamp="20210210 09:55:29.104" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210210 09:55:29.104" starttime="20210210 09:55:29.096"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210210 09:55:29.108" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210210 09:55:29.108" starttime="20210210 09:55:29.107"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:55:29.108" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210210 09:55:29.108" starttime="20210210 09:55:29.108"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.109" starttime="20210210 09:55:29.107"></status>
</kw>
<msg timestamp="20210210 09:55:29.109" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210210 09:55:29.109" starttime="20210210 09:55:29.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:55:29.110" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210210 09:55:29.110" starttime="20210210 09:55:29.110"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:55:29.111" level="INFO">${result} = /wordcount-nJ33WJer.txt</msg>
<status status="PASS" endtime="20210210 09:55:29.111" starttime="20210210 09:55:29.111"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.111" starttime="20210210 09:55:29.109"></status>
</kw>
<msg timestamp="20210210 09:55:29.111" level="INFO">${path_with_leading} = /wordcount-nJ33WJer.txt</msg>
<status status="PASS" endtime="20210210 09:55:29.112" starttime="20210210 09:55:29.109"></status>
</kw>
<status status="PASS" endtime="20210210 09:55:29.112" starttime="20210210 09:55:29.105"></status>
</kw>
<msg timestamp="20210210 09:55:29.112" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-nJ33WJer.txt</msg>
<status status="PASS" endtime="20210210 09:55:29.112" starttime="20210210 09:55:29.105"></status>
</kw>
<msg timestamp="20210210 09:55:29.112" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-nJ33WJer.txt</msg>
<status status="PASS" endtime="20210210 09:55:29.112" starttime="20210210 09:55:29.104"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:55:29.116" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-nJ33WJer.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:56:08.102" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:56:08.103" level="INFO">${output} = 2021-02-10 09:55:31 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:55:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 09:56:08.103" starttime="20210210 09:55:29.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:56:08.104" level="INFO">2021-02-10 09:55:31 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:55:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:55:31 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:55:31 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:55:31 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:55:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:55:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-73E48D6BCB70-&gt;50d7838f-e331-4b3f-959c-adeb58290070
2021-02-10 09:55:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:55:32 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:55:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EDC0B64166ED-&gt;f652d107-0d3f-476a-91cc-9e39c8f09cc1
2021-02-10 09:55:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:55:33 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:55:35 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950666249_0004
2021-02-10 09:55:35 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:55:35 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 09:55:35 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 09:55:36 INFO  YarnClientImpl:329 - Submitted application application_1612950666249_0004
2021-02-10 09:55:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612950666249_0004/
2021-02-10 09:55:36 INFO  Job:1614 - Running job: job_1612950666249_0004
2021-02-10 09:55:44 INFO  Job:1635 - Job job_1612950666249_0004 running in uber mode : false
2021-02-10 09:55:44 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 09:55:50 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 09:55:56 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 09:56:02 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 09:56:07 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 09:56:07 INFO  Job:1653 - Job job_1612950666249_0004 completed successfully
2021-02-10 09:56:07 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155531
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42744
		Total time spent by all reduces in occupied slots (ms)=15644
		Total time spent by all map tasks (ms)=10686
		Total time spent by all reduce tasks (ms)=3911
		Total vcore-milliseconds taken by all map tasks=10686
		Total vcore-milliseconds taken by all reduce tasks=3911
		Total megabyte-milliseconds taken by all map tasks=43769856
		Total megabyte-milliseconds taken by all reduce tasks=16019456
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=600
		CPU time spent (ms)=6880
		Physical memory (bytes) snapshot=1246302208
		Virtual memory (bytes) snapshot=15784087552
		Total committed heap usage (bytes)=1233125376
		Peak Map Physical memory (bytes)=367833088
		Peak Map Virtual memory (bytes)=3945234432
		Peak Reduce Physical memory (bytes)=298676224
		Peak Reduce Virtual memory (bytes)=3969306624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 09:56:08.104" starttime="20210210 09:56:08.103"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:56:08.105" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:56:08.105" starttime="20210210 09:56:08.104"></status>
</kw>
<status status="PASS" endtime="20210210 09:56:08.105" starttime="20210210 09:55:29.113"></status>
</kw>
<msg timestamp="20210210 09:56:08.105" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:56:08.105" starttime="20210210 09:55:29.113"></status>
</kw>
<msg timestamp="20210210 09:56:08.106" level="INFO">${output} = 2021-02-10 09:55:31 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:55:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 09:56:08.106" starttime="20210210 09:55:29.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 09:56:08.107" starttime="20210210 09:56:08.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:56:08.107" starttime="20210210 09:56:08.107"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:56:08.107" critical="yes" starttime="20210210 09:55:29.070"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 09:56:08.109" starttime="20210210 09:54:50.230"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:53:13.092" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:53:13.096" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:53:13.096" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:13.096" starttime="20210210 09:53:13.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:53:13.097" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:13.097" starttime="20210210 09:53:13.097"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:53:13.098" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:53:13.098" starttime="20210210 09:53:13.098"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:13.098" starttime="20210210 09:53:13.088"></status>
</kw>
<msg timestamp="20210210 09:53:13.098" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:53:13.099" starttime="20210210 09:53:13.087"></status>
</kw>
<msg timestamp="20210210 09:53:13.099" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:13.099" starttime="20210210 09:53:13.087"></status>
</kw>
<msg timestamp="20210210 09:53:13.099" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:13.099" starttime="20210210 09:53:13.086"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:53:13.104" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:53:13.104" starttime="20210210 09:53:13.103"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:53:13.104" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:53:13.104" starttime="20210210 09:53:13.104"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:13.105" starttime="20210210 09:53:13.102"></status>
</kw>
<msg timestamp="20210210 09:53:13.105" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:53:13.105" starttime="20210210 09:53:13.102"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:13.105" starttime="20210210 09:53:13.101"></status>
</kw>
<msg timestamp="20210210 09:53:13.105" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:53:13.105" starttime="20210210 09:53:13.100"></status>
</kw>
<msg timestamp="20210210 09:53:13.105" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:53:13.106" starttime="20210210 09:53:13.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:53:13.109" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:53:58.231" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:53:58.231" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:53:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:53:15 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 09:53:58.231" starttime="20210210 09:53:13.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:53:58.232" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:53:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:53:15 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:53:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:53:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:53:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CFA69CD91FA5-&gt;f652d107-0d3f-476a-91cc-9e39c8f09cc1
2021-02-10 09:53:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-10 09:53:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C2B77BCE4021-&gt;50d7838f-e331-4b3f-959c-adeb58290070
2021-02-10 09:53:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-10 09:53:19 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:53:20 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:53:20 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:53:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950666249_0001
2021-02-10 09:53:20 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:53:20 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 09:53:20 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 09:53:21 INFO  YarnClientImpl:329 - Submitted application application_1612950666249_0001
2021-02-10 09:53:21 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612950666249_0001/
2021-02-10 09:53:21 INFO  Job:1614 - Running job: job_1612950666249_0001
2021-02-10 09:53:31 INFO  Job:1635 - Job job_1612950666249_0001 running in uber mode : false
2021-02-10 09:53:31 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 09:53:38 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 09:53:44 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 09:53:49 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 09:53:56 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 09:53:57 INFO  Job:1653 - Job job_1612950666249_0001 completed successfully
2021-02-10 09:53:57 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1093061
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41908
		Total time spent by all reduces in occupied slots (ms)=26132
		Total time spent by all map tasks (ms)=10477
		Total time spent by all reduce tasks (ms)=6533
		Total vcore-milliseconds taken by all map tasks=10477
		Total vcore-milliseconds taken by all reduce tasks=6533
		Total megabyte-milliseconds taken by all map tasks=42913792
		Total megabyte-milliseconds taken by all reduce tasks=26759168
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=600
		CPU time spent (ms)=6670
		Physical memory (bytes) snapshot=1248063488
		Virtual memory (bytes) snapshot=15773351936
		Total committed heap usage (bytes)=1069547520
		Peak Map Physical memory (bytes)=359817216
		Peak Map Virtual memory (bytes)=3947560960
		Peak Reduce Physical memory (bytes)=308494336
		Peak Reduce Virtual memory (bytes)=3971203072
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.394 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210210 09:53:58.233" starttime="20210210 09:53:58.232"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:53:58.233" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:53:58.233" starttime="20210210 09:53:58.233"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.234" starttime="20210210 09:53:13.107"></status>
</kw>
<msg timestamp="20210210 09:53:58.234" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:53:58.234" starttime="20210210 09:53:13.107"></status>
</kw>
<msg timestamp="20210210 09:53:58.234" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-10 09:53:15 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:53:15 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210210 09:53:58.234" starttime="20210210 09:53:13.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:53:58.235" starttime="20210210 09:53:58.234"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:53:58.235" critical="yes" starttime="20210210 09:53:13.085"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:53:58.242" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:53:58.248" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:53:58.248" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:58.248" starttime="20210210 09:53:58.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:53:58.250" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:58.250" starttime="20210210 09:53:58.249"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:53:58.250" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:53:58.251" starttime="20210210 09:53:58.250"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.251" starttime="20210210 09:53:58.239"></status>
</kw>
<msg timestamp="20210210 09:53:58.251" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:53:58.251" starttime="20210210 09:53:58.238"></status>
</kw>
<msg timestamp="20210210 09:53:58.251" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:58.252" starttime="20210210 09:53:58.238"></status>
</kw>
<msg timestamp="20210210 09:53:58.252" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210210 09:53:58.252" starttime="20210210 09:53:58.237"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210210 09:53:58.252" level="INFO">${random} = z1jfEzKu</msg>
<status status="PASS" endtime="20210210 09:53:58.252" starttime="20210210 09:53:58.252"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:53:58.258" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:53:58.258" starttime="20210210 09:53:58.257"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:53:58.259" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:53:58.259" starttime="20210210 09:53:58.258"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.259" starttime="20210210 09:53:58.256"></status>
</kw>
<msg timestamp="20210210 09:53:58.259" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:53:58.259" starttime="20210210 09:53:58.256"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.259" starttime="20210210 09:53:58.254"></status>
</kw>
<msg timestamp="20210210 09:53:58.260" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:53:58.260" starttime="20210210 09:53:58.254"></status>
</kw>
<msg timestamp="20210210 09:53:58.260" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210210 09:53:58.260" starttime="20210210 09:53:58.253"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:53:58.264" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:53:58.264" starttime="20210210 09:53:58.264"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:53:58.265" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:53:58.265" starttime="20210210 09:53:58.264"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.265" starttime="20210210 09:53:58.263"></status>
</kw>
<msg timestamp="20210210 09:53:58.265" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:53:58.265" starttime="20210210 09:53:58.262"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.266" starttime="20210210 09:53:58.261"></status>
</kw>
<msg timestamp="20210210 09:53:58.266" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 09:53:58.266" starttime="20210210 09:53:58.261"></status>
</kw>
<msg timestamp="20210210 09:53:58.266" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210210 09:53:58.266" starttime="20210210 09:53:58.260"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210210 09:53:58.270" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210210 09:53:58.270" starttime="20210210 09:53:58.270"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210210 09:53:58.271" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210210 09:53:58.271" starttime="20210210 09:53:58.270"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.271" starttime="20210210 09:53:58.269"></status>
</kw>
<msg timestamp="20210210 09:53:58.271" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210210 09:53:58.271" starttime="20210210 09:53:58.269"></status>
</kw>
<status status="PASS" endtime="20210210 09:53:58.271" starttime="20210210 09:53:58.268"></status>
</kw>
<msg timestamp="20210210 09:53:58.271" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-z1jfEzKu.txt</msg>
<status status="PASS" endtime="20210210 09:53:58.271" starttime="20210210 09:53:58.267"></status>
</kw>
<msg timestamp="20210210 09:53:58.272" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-z1jfEzKu.txt</msg>
<status status="PASS" endtime="20210210 09:53:58.272" starttime="20210210 09:53:58.266"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 09:53:58.275" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-z1jfEzKu.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 09:54:35.803" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 09:54:35.803" level="INFO">${output} = 2021-02-10 09:54:00 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:54:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 09:54:35.803" starttime="20210210 09:53:58.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 09:54:35.804" level="INFO">2021-02-10 09:54:00 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:54:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-10 09:54:00 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-10 09:54:00 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-10 09:54:00 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-10 09:54:01 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 09:54:01 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D9C34E8A3973-&gt;f652d107-0d3f-476a-91cc-9e39c8f09cc1
2021-02-10 09:54:01 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:54:02 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-10 09:54:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-2D0D152A482B-&gt;50d7838f-e331-4b3f-959c-adeb58290070
2021-02-10 09:54:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 09:54:02 INFO  JobSubmitter:202 - number of splits:3
2021-02-10 09:54:02 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612950666249_0002
2021-02-10 09:54:02 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-10 09:54:02 INFO  Configuration:2795 - resource-types.xml not found
2021-02-10 09:54:02 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-10 09:54:02 INFO  YarnClientImpl:329 - Submitted application application_1612950666249_0002
2021-02-10 09:54:02 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612950666249_0002/
2021-02-10 09:54:02 INFO  Job:1614 - Running job: job_1612950666249_0002
2021-02-10 09:54:11 INFO  Job:1635 - Job job_1612950666249_0002 running in uber mode : false
2021-02-10 09:54:11 INFO  Job:1642 -  map 0% reduce 0%
2021-02-10 09:54:18 INFO  Job:1642 -  map 33% reduce 0%
2021-02-10 09:54:24 INFO  Job:1642 -  map 67% reduce 0%
2021-02-10 09:54:29 INFO  Job:1642 -  map 100% reduce 0%
2021-02-10 09:54:34 INFO  Job:1642 -  map 100% reduce 100%
2021-02-10 09:54:35 INFO  Job:1653 - Job job_1612950666249_0002 completed successfully
2021-02-10 09:54:35 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1155615
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45056
		Total time spent by all reduces in occupied slots (ms)=16524
		Total time spent by all map tasks (ms)=11264
		Total time spent by all reduce tasks (ms)=4131
		Total vcore-milliseconds taken by all map tasks=11264
		Total vcore-milliseconds taken by all reduce tasks=4131
		Total megabyte-milliseconds taken by all map tasks=46137344
		Total megabyte-milliseconds taken by all reduce tasks=16920576
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1074
		CPU time spent (ms)=8130
		Physical memory (bytes) snapshot=1638084608
		Virtual memory (bytes) snapshot=15806496768
		Total committed heap usage (bytes)=1435500544
		Peak Map Physical memory (bytes)=521641984
		Peak Map Virtual memory (bytes)=3954143232
		Peak Reduce Physical memory (bytes)=299110400
		Peak Reduce Virtual memory (bytes)=3969073152
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210210 09:54:35.804" starttime="20210210 09:54:35.803"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 09:54:35.805" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 09:54:35.805" starttime="20210210 09:54:35.804"></status>
</kw>
<status status="PASS" endtime="20210210 09:54:35.805" starttime="20210210 09:53:58.273"></status>
</kw>
<msg timestamp="20210210 09:54:35.805" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 09:54:35.805" starttime="20210210 09:53:58.273"></status>
</kw>
<msg timestamp="20210210 09:54:35.805" level="INFO">${output} = 2021-02-10 09:54:00 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-10 09:54:00 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210210 09:54:35.805" starttime="20210210 09:53:58.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210210 09:54:35.806" starttime="20210210 09:54:35.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210210 09:54:35.806" starttime="20210210 09:54:35.806"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210210 09:54:35.807" critical="yes" starttime="20210210 09:53:58.236"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210210 09:54:35.808" starttime="20210210 09:53:13.024"></status>
</suite>
<status status="PASS" elapsedtime="217057" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="617245" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
