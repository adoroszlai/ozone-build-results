<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210210 10:22:41.012" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="restart">
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s1" name="Generate">
<test id="s1-s1-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:22:07.136" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:22:19.600" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:22:19.600" level="INFO">${output} = 2021-02-10 10:22:08,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:08,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:19.600" starttime="20210210 10:22:07.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:22:19.601" level="INFO">2021-02-10 10:22:08,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:08,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:22:08,569 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:22:08,709 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-10 10:22:08,730 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:09,739 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:10,000 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:22:10,219 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:22:10,219 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A0481444DCEF-&gt;f87c6a66-f4d5-4e96-a5c5-12b0d4b4ceab
2021-02-10 10:22:10,220 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:22:10,740 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:11,740 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:12,741 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:13,741 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:14,742 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:15,742 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:16,743 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:17,669 [java.util.concurrent.ThreadPoolExecutor$Worker@79a3e5b9[State = -1, empty queue]] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-A0481444DCEF-&gt;51e71c80-2a4f-444f-8aea-3876cfd2f23f
2021-02-10 10:22:17,669 [java.util.concurrent.ThreadPoolExecutor$Worker@79a3e5b9[State = -1, empty queue]] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:22:17,743 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:18,744 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:22:19,274 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=9083.01915, max=9083.01915, mean=9083.01915, stddev=0.0, median=9083.01915, p75=9083.01915, p95=9083.01915, p98=9083.01915, p99=9083.01915, p999=9083.01915, mean_rate=0.09972493753046668, m1=0.015991117074135343, m5=0.0033057092356765017, m15=0.0011080303990206543, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:22:19,275 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 11
2021-02-10 10:22:19,275 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:22:19,275 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:22:19.601" starttime="20210210 10:22:19.600"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:22:19.601" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:22:19.601" starttime="20210210 10:22:19.601"></status>
</kw>
<status status="PASS" endtime="20210210 10:22:19.602" starttime="20210210 10:22:07.132"></status>
</kw>
<msg timestamp="20210210 10:22:19.602" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:22:19.602" starttime="20210210 10:22:07.131"></status>
</kw>
<msg timestamp="20210210 10:22:19.602" level="INFO">${result} = 2021-02-10 10:22:08,390 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:08,569 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:19.602" starttime="20210210 10:22:07.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:22:19.603" starttime="20210210 10:22:19.602"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:22:19.603" critical="yes" starttime="20210210 10:22:07.129"></status>
</test>
<test id="s1-s1-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:22:19.608" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:22:22.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:22:22.712" level="INFO">${output} = 2021-02-10 10:22:20,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:20,912 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:22.712" starttime="20210210 10:22:19.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:22:22.713" level="INFO">2021-02-10 10:22:20,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:20,912 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:22:20,912 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:22:21,077 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpost
2021-02-10 10:22:21,093 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:22,101 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:22:22,698 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=186.890268, max=186.890268, mean=186.890268, stddev=0.0, median=186.890268, p75=186.890268, p95=186.890268, p98=186.890268, p99=186.890268, p999=186.890268, mean_rate=0.986101932611281, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:22:22,699 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 10:22:22,699 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:22:22,699 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:22:22.713" starttime="20210210 10:22:22.712"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:22:22.714" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:22:22.714" starttime="20210210 10:22:22.713"></status>
</kw>
<status status="PASS" endtime="20210210 10:22:22.714" starttime="20210210 10:22:19.606"></status>
</kw>
<msg timestamp="20210210 10:22:22.714" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:22:22.714" starttime="20210210 10:22:19.605"></status>
</kw>
<msg timestamp="20210210 10:22:22.715" level="INFO">${result} = 2021-02-10 10:22:20,759 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:20,912 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:22.715" starttime="20210210 10:22:19.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:22:22.715" starttime="20210210 10:22:22.715"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:22:22.716" critical="yes" starttime="20210210 10:22:19.604"></status>
</test>
<test id="s1-s1-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:22:22.721" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:22:25.816" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:22:25.816" level="INFO">${output} = 2021-02-10 10:22:23,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:24,076 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:25.816" starttime="20210210 10:22:22.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:22:25.817" level="INFO">2021-02-10 10:22:23,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:24,076 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:22:24,076 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:22:24,245 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpost
2021-02-10 10:22:24,263 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:25,266 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:22:25,807 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=24.290216, max=24.290216, mean=24.290216, stddev=0.0, median=24.290216, p75=24.290216, p95=24.290216, p98=24.290216, p99=24.290216, p999=24.290216, mean_rate=0.9855782201784129, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:22:25,807 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 10:22:25,808 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:22:25,808 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:22:25.817" starttime="20210210 10:22:25.817"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:22:25.818" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:22:25.818" starttime="20210210 10:22:25.817"></status>
</kw>
<status status="PASS" endtime="20210210 10:22:25.818" starttime="20210210 10:22:22.718"></status>
</kw>
<msg timestamp="20210210 10:22:25.818" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:22:25.818" starttime="20210210 10:22:22.718"></status>
</kw>
<msg timestamp="20210210 10:22:25.819" level="INFO">${result} = 2021-02-10 10:22:23,886 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:24,076 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:25.819" starttime="20210210 10:22:22.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:22:25.819" starttime="20210210 10:22:25.819"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:22:25.820" critical="yes" starttime="20210210 10:22:22.716"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210210 10:22:25.821" starttime="20210210 10:22:07.084"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/generate.robot" id="s1-s2" name="Generate">
<test id="s1-s2-t1" name="Ozone Client Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockg ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:20:44.263" level="INFO">Running command 'ozone freon ockg  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:20:51.261" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:20:51.261" level="INFO">${output} = 2021-02-10 10:20:45,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:45,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:20:51.261" starttime="20210210 10:20:44.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:20:51.263" level="INFO">2021-02-10 10:20:45,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:45,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:20:45,517 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:20:45,668 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-10 10:20:45,685 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:46,553 [main] INFO rpc.RpcClient: Creating Volume: vol1, with hadoop as owner and space quota set to -1 bytes, counts quota set to -1
2021-02-10 10:20:46,688 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:46,837 [main] INFO rpc.RpcClient: Creating Bucket: vol1/bucket1, with Versioning false and Storage Type set to DISK and Encryption set to false 
2021-02-10 10:20:47,667 [pool-1-thread-1] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:20:47,688 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:47,879 [pool-1-thread-1] INFO metrics.MetricRegistries: Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-10 10:20:47,880 [pool-1-thread-1] INFO metrics.RatisMetrics: Creating Metrics Registry : ratis.client_message_metrics.client-95D9A421E1F6-&gt;def1e021-0c76-4459-9ac9-3c6dd2eccea5
2021-02-10 10:20:47,880 [pool-1-thread-1] WARN impl.MetricRegistriesImpl: First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-10 10:20:48,688 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:49,689 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:50,689 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:20:50,935 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=3083.865902, max=3083.865902, mean=3083.865902, stddev=0.0, median=3083.865902, p75=3083.865902, p95=3083.865902, p98=3083.865902, p99=3083.865902, p999=3083.865902, mean_rate=0.2461287704032536, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:20:50,935 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 5
2021-02-10 10:20:50,936 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:20:50,936 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:20:51.263" starttime="20210210 10:20:51.262"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:20:51.264" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:20:51.264" starttime="20210210 10:20:51.263"></status>
</kw>
<status status="PASS" endtime="20210210 10:20:51.264" starttime="20210210 10:20:44.260"></status>
</kw>
<msg timestamp="20210210 10:20:51.264" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:20:51.264" starttime="20210210 10:20:44.259"></status>
</kw>
<msg timestamp="20210210 10:20:51.265" level="INFO">${result} = 2021-02-10 10:20:45,346 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:45,517 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:20:51.265" starttime="20210210 10:20:44.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:20:51.265" starttime="20210210 10:20:51.265"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:20:51.266" critical="yes" starttime="20210210 10:20:44.258"></status>
</test>
<test id="s1-s2-t2" name="OM Key Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon omkg ${OM_HA_PARAM} -t=1 -n=1 -p omkg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:20:51.271" level="INFO">Running command 'ozone freon omkg  -t=1 -n=1 -p omkgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:20:54.410" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:20:54.411" level="INFO">${output} = 2021-02-10 10:20:52,554 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:52,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:20:54.411" starttime="20210210 10:20:51.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:20:54.412" level="INFO">2021-02-10 10:20:52,554 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:52,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:20:52,678 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:20:52,824 [main] INFO freon.BaseFreonGenerator: Executing test with prefix omkgpre
2021-02-10 10:20:52,841 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:53,845 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:20:54,387 [Thread-2] INFO metrics: type=TIMER, name=key-create, count=1, min=70.460751, max=70.460751, mean=70.460751, stddev=0.0, median=70.460751, p75=70.460751, p95=70.460751, p98=70.460751, p99=70.460751, p999=70.460751, mean_rate=0.9819291590232564, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:20:54,391 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 10:20:54,391 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:20:54,391 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:20:54.412" starttime="20210210 10:20:54.411"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:20:54.412" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:20:54.413" starttime="20210210 10:20:54.412"></status>
</kw>
<status status="PASS" endtime="20210210 10:20:54.413" starttime="20210210 10:20:51.269"></status>
</kw>
<msg timestamp="20210210 10:20:54.413" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:20:54.413" starttime="20210210 10:20:51.268"></status>
</kw>
<msg timestamp="20210210 10:20:54.413" level="INFO">${result} = 2021-02-10 10:20:52,554 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:52,678 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:20:54.413" starttime="20210210 10:20:51.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:20:54.414" starttime="20210210 10:20:54.414"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:20:54.414" critical="yes" starttime="20210210 10:20:51.267"></status>
</test>
<test id="s1-s2-t3" name="OM Bucket Generator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ombg ${OM_HA_PARAM} -t=1 -n=1 -p ombg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:20:54.444" level="INFO">Running command 'ozone freon ombg  -t=1 -n=1 -p ombgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:20:57.465" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:20:57.465" level="INFO">${output} = 2021-02-10 10:20:55,574 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:55,743 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:20:57.465" starttime="20210210 10:20:54.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:20:57.466" level="INFO">2021-02-10 10:20:55,574 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:55,743 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:20:55,743 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:20:55,888 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ombgpre
2021-02-10 10:20:55,901 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:20:56,918 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:20:57,438 [Thread-2] INFO metrics: type=TIMER, name=bucket-create, count=1, min=20.045284, max=20.045284, mean=20.045284, stddev=0.0, median=20.045284, p75=20.045284, p95=20.045284, p98=20.045284, p99=20.045284, p999=20.045284, mean_rate=0.9825173216010704, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:20:57,439 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 2
2021-02-10 10:20:57,444 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:20:57,444 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:20:57.466" starttime="20210210 10:20:57.465"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:20:57.467" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:20:57.467" starttime="20210210 10:20:57.467"></status>
</kw>
<status status="PASS" endtime="20210210 10:20:57.467" starttime="20210210 10:20:54.417"></status>
</kw>
<msg timestamp="20210210 10:20:57.468" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:20:57.468" starttime="20210210 10:20:54.416"></status>
</kw>
<msg timestamp="20210210 10:20:57.468" level="INFO">${result} = 2021-02-10 10:20:55,574 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:20:55,743 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:20:57.468" starttime="20210210 10:20:54.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:20:57.469" starttime="20210210 10:20:57.468"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:20:57.469" critical="yes" starttime="20210210 10:20:54.415"></status>
</test>
<doc>Test freon data generation commands</doc>
<status status="PASS" endtime="20210210 10:20:57.471" starttime="20210210 10:20:44.211"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s3" name="Validate">
<test id="s1-s3-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:21:57.345" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:22:02.781" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:22:02.781" level="INFO">${output} = 2021-02-10 10:21:58,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:21:58,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:02.781" starttime="20210210 10:21:57.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:22:02.782" level="INFO">2021-02-10 10:21:58,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:21:58,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:21:58,702 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:21:58,857 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-10 10:21:58,868 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:21:59,883 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:00,711 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:22:00,883 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:01,884 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:22:02,454 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=41.757984, max=41.757984, mean=41.757984, stddev=0.0, median=41.757984, p75=41.757984, p95=41.757984, p98=41.757984, p99=41.757984, p999=41.757984, mean_rate=0.989600910449463, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:22:02,455 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 4
2021-02-10 10:22:02,455 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:22:02,455 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:22:02.782" starttime="20210210 10:22:02.781"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:22:02.783" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:22:02.783" starttime="20210210 10:22:02.782"></status>
</kw>
<status status="PASS" endtime="20210210 10:22:02.783" starttime="20210210 10:21:57.341"></status>
</kw>
<msg timestamp="20210210 10:22:02.783" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:22:02.784" starttime="20210210 10:21:57.341"></status>
</kw>
<msg timestamp="20210210 10:22:02.784" level="INFO">${result} = 2021-02-10 10:21:58,545 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:21:58,702 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:02.784" starttime="20210210 10:21:57.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:22:02.785" starttime="20210210 10:22:02.784"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:22:02.785" critical="yes" starttime="20210210 10:21:57.339"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 10:22:02.786" starttime="20210210 10:21:57.296"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s4" name="Validate">
<test id="s1-s4-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:22:30.103" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpost 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:22:34.836" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:22:34.836" level="INFO">${output} = 2021-02-10 10:22:31,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:31,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:34.836" starttime="20210210 10:22:30.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:22:34.838" level="INFO">2021-02-10 10:22:31,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:31,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:22:31,439 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:22:31,632 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpost
2021-02-10 10:22:31,655 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:32,663 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:22:32,783 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:22:33,663 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:22:34,512 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=41.275163, max=41.275163, mean=41.275163, stddev=0.0, median=41.275163, p75=41.275163, p95=41.275163, p98=41.275163, p99=41.275163, p999=41.275163, mean_rate=0.9873959011952023, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:22:34,513 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 10:22:34,513 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:22:34,513 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:22:34.838" starttime="20210210 10:22:34.837"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:22:34.838" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:22:34.838" starttime="20210210 10:22:34.838"></status>
</kw>
<status status="PASS" endtime="20210210 10:22:34.839" starttime="20210210 10:22:30.100"></status>
</kw>
<msg timestamp="20210210 10:22:34.839" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:22:34.839" starttime="20210210 10:22:30.099"></status>
</kw>
<msg timestamp="20210210 10:22:34.839" level="INFO">${result} = 2021-02-10 10:22:31,299 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:22:31,439 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:22:34.839" starttime="20210210 10:22:30.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:22:34.840" starttime="20210210 10:22:34.839"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:22:34.840" critical="yes" starttime="20210210 10:22:30.097"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 10:22:34.841" starttime="20210210 10:22:30.045"></status>
</suite>
<suite source="/opt/hadoop/smoketest/freon/validate.robot" id="s1-s5" name="Validate">
<test id="s1-s5-t1" name="Ozone Client Key Validator">
<kw name="Execute" library="os">
<arguments>
<arg>ozone freon ockv ${OM_HA_PARAM} -t=1 -n=1 -p ockg${PREFIX}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210210 10:21:01.793" level="INFO">Running command 'ozone freon ockv  -t=1 -n=1 -p ockgpre 2&gt;&amp;1'.</msg>
<msg timestamp="20210210 10:21:06.697" level="INFO">${rc} = 0</msg>
<msg timestamp="20210210 10:21:06.697" level="INFO">${output} = 2021-02-10 10:21:02,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:21:03,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:21:06.697" starttime="20210210 10:21:01.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210210 10:21:06.698" level="INFO">2021-02-10 10:21:02,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:21:03,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period at 10 second(s).
2021-02-10 10:21:03,106 [main] INFO impl.MetricsSystemImpl: ozone-freon metrics system started
2021-02-10 10:21:03,293 [main] INFO freon.BaseFreonGenerator: Executing test with prefix ockgpre
2021-02-10 10:21:03,309 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:21:04,310 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:21:04,693 [main] WARN impl.MetricsSystemImpl: ozone-freon metrics system already initialized!
2021-02-10 10:21:05,312 [Thread-3] INFO freon.ProgressBar: Progress: 0.00 % (0 out of 1)
2021-02-10 10:21:06,323 [Thread-3] INFO freon.ProgressBar: Progress: 100.00 % (1 out of 1)
2021-02-10 10:21:06,369 [Thread-2] INFO metrics: type=TIMER, name=key-validate, count=1, min=59.237638, max=59.237638, mean=59.237638, stddev=0.0, median=59.237638, p75=59.237638, p95=59.237638, p98=59.237638, p99=59.237638, p999=59.237638, mean_rate=0.9904121448805945, m1=0.0, m5=0.0, m15=0.0, rate_unit=events/second, duration_unit=milliseconds
2021-02-10 10:21:06,370 [Thread-2] INFO freon.BaseFreonGenerator: Total execution time (sec): 3
2021-02-10 10:21:06,371 [Thread-2] INFO freon.BaseFreonGenerator: Failures: 0
2021-02-10 10:21:06,371 [Thread-2] INFO freon.BaseFreonGenerator: Successful executions: 1</msg>
<status status="PASS" endtime="20210210 10:21:06.698" starttime="20210210 10:21:06.698"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210210 10:21:06.699" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210210 10:21:06.699" starttime="20210210 10:21:06.699"></status>
</kw>
<status status="PASS" endtime="20210210 10:21:06.699" starttime="20210210 10:21:01.788"></status>
</kw>
<msg timestamp="20210210 10:21:06.699" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210210 10:21:06.700" starttime="20210210 10:21:01.788"></status>
</kw>
<msg timestamp="20210210 10:21:06.700" level="INFO">${result} = 2021-02-10 10:21:02,987 [main] INFO impl.MetricsConfig: Loaded properties from hadoop-metrics2.properties
2021-02-10 10:21:03,106 [main] INFO impl.MetricsSystemImpl: Scheduled Metric snapshot period a...</msg>
<status status="PASS" endtime="20210210 10:21:06.700" starttime="20210210 10:21:01.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Successful executions: 1</arg>
</arguments>
<status status="PASS" endtime="20210210 10:21:06.700" starttime="20210210 10:21:06.700"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210210 10:21:06.701" critical="yes" starttime="20210210 10:21:01.786"></status>
</test>
<doc>Test freon data validation commands</doc>
<status status="PASS" endtime="20210210 10:21:06.702" starttime="20210210 10:21:01.740"></status>
</suite>
<status status="PASS" elapsedtime="47245" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="9">Critical Tests</stat>
<stat fail="0" pass="9">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="restart" pass="9">restart</stat>
<stat fail="0" id="s1-s1" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s2" name="Generate" pass="3">restart.Generate</stat>
<stat fail="0" id="s1-s3" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s4" name="Validate" pass="1">restart.Validate</stat>
<stat fail="0" id="s1-s5" name="Validate" pass="1">restart.Validate</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
