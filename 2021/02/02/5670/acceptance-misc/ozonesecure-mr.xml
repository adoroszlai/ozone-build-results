<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210202 15:15:54.904" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozonesecure-mr">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1" name="Createmrenv">
<test id="s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:38.536" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:42.767" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 15:11:42.768" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 15:11:42.768" starttime="20210202 15:11:38.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:42.769" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 15:11:42.769" starttime="20210202 15:11:42.768"></status>
</kw>
<msg timestamp="20210202 15:11:42.769" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 15:11:42.769" starttime="20210202 15:11:38.532"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:42.778" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:46.505" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:11:46.505" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:11:46.505" starttime="20210202 15:11:42.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:46.506" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:11:46.506" starttime="20210202 15:11:46.505"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:11:46.507" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:11:46.507" starttime="20210202 15:11:46.506"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:46.507" starttime="20210202 15:11:42.772"></status>
</kw>
<msg timestamp="20210202 15:11:46.507" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:11:46.507" starttime="20210202 15:11:42.771"></status>
</kw>
<msg timestamp="20210202 15:11:46.508" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210202 15:11:46.508" starttime="20210202 15:11:42.771"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210202 15:11:46.509" starttime="20210202 15:11:46.508"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:46.509" starttime="20210202 15:11:42.770"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:46.509" starttime="20210202 15:11:42.770"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:46.514" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:49.999" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:11:49.999" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:11:49.999" starttime="20210202 15:11:46.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:50.000" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:11:50.000" starttime="20210202 15:11:49.999"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:11:50.001" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:11:50.001" starttime="20210202 15:11:50.000"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:50.001" starttime="20210202 15:11:46.511"></status>
</kw>
<msg timestamp="20210202 15:11:50.001" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:11:50.001" starttime="20210202 15:11:46.511"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:50.004" starttime="20210202 15:11:46.510"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:50.004" starttime="20210202 15:11:46.509"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:50.005" starttime="20210202 15:11:46.509"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210202 15:11:50.005" starttime="20210202 15:11:50.005"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:50.011" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:53.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:11:53.741" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:11...</msg>
<status status="PASS" endtime="20210202 15:11:53.741" starttime="20210202 15:11:50.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:53.743" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:11:49.875Z",
  "modificationTime" : "2021-02-02T15:11:49.875Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 15:11:53.743" starttime="20210202 15:11:53.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:11:53.743" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:11:53.743" starttime="20210202 15:11:53.743"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:53.744" starttime="20210202 15:11:50.009"></status>
</kw>
<msg timestamp="20210202 15:11:53.744" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:11:53.744" starttime="20210202 15:11:50.006"></status>
</kw>
<msg timestamp="20210202 15:11:53.744" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T15:11...</msg>
<status status="PASS" endtime="20210202 15:11:53.744" starttime="20210202 15:11:50.005"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210202 15:11:53.745" starttime="20210202 15:11:53.745"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:11:53.749" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:11:53.749" starttime="20210202 15:11:53.748"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:11:53.750" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:11:53.750" starttime="20210202 15:11:53.749"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:53.750" starttime="20210202 15:11:53.748"></status>
</kw>
<msg timestamp="20210202 15:11:53.750" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:11:53.750" starttime="20210202 15:11:53.747"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:53.750" starttime="20210202 15:11:53.747"></status>
</kw>
<msg timestamp="20210202 15:11:53.750" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 15:11:53.750" starttime="20210202 15:11:53.746"></status>
</kw>
<msg timestamp="20210202 15:11:53.751" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 15:11:53.751" starttime="20210202 15:11:53.745"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:53.754" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:57.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:11:57.768" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:11:57.768" starttime="20210202 15:11:53.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:57.769" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:11:57.769" starttime="20210202 15:11:57.768"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:11:57.770" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:11:57.770" starttime="20210202 15:11:57.769"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:57.770" starttime="20210202 15:11:53.751"></status>
</kw>
<msg timestamp="20210202 15:11:57.770" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:11:57.770" starttime="20210202 15:11:53.751"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:57.771" starttime="20210202 15:11:53.751"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:57.774" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:05.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:05.683" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:12:05.683" starttime="20210202 15:11:57.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:05.684" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:12:05.684" starttime="20210202 15:12:05.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:05.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:05.685" starttime="20210202 15:12:05.684"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:05.685" starttime="20210202 15:11:57.772"></status>
</kw>
<msg timestamp="20210202 15:12:05.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:05.685" starttime="20210202 15:11:57.771"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:05.686" starttime="20210202 15:11:57.771"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:05.690" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:11.295" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:11.295" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:12:11.295" starttime="20210202 15:12:05.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:11.300" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:12:11.300" starttime="20210202 15:12:11.299"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:11.300" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:11.301" starttime="20210202 15:12:11.300"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:11.301" starttime="20210202 15:12:05.687"></status>
</kw>
<msg timestamp="20210202 15:12:11.301" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:11.301" starttime="20210202 15:12:05.686"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:11.302" starttime="20210202 15:12:05.686"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:11.310" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:16.826" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:16.826" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:12:16.826" starttime="20210202 15:12:11.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:16.827" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:12:16.827" starttime="20210202 15:12:16.827"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:16.828" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:16.828" starttime="20210202 15:12:16.828"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:16.828" starttime="20210202 15:12:11.303"></status>
</kw>
<msg timestamp="20210202 15:12:16.828" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:16.829" starttime="20210202 15:12:11.302"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:16.829" starttime="20210202 15:12:11.302"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:12:16.829" critical="yes" starttime="20210202 15:11:38.531"></status>
</test>
<test id="s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:12:16.834" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:12:16.834" starttime="20210202 15:12:16.834"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:12:16.836" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:12:16.836" starttime="20210202 15:12:16.835"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:16.836" starttime="20210202 15:12:16.833"></status>
</kw>
<msg timestamp="20210202 15:12:16.836" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:12:16.837" starttime="20210202 15:12:16.832"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:16.837" starttime="20210202 15:12:16.832"></status>
</kw>
<msg timestamp="20210202 15:12:16.837" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 15:12:16.837" starttime="20210202 15:12:16.831"></status>
</kw>
<msg timestamp="20210202 15:12:16.839" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 15:12:16.839" starttime="20210202 15:12:16.830"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:16.842" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:20.193" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:20.193" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:12:20.193" starttime="20210202 15:12:16.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:20.195" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:12:20.195" starttime="20210202 15:12:20.194"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:20.196" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:20.196" starttime="20210202 15:12:20.195"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:20.197" starttime="20210202 15:12:16.840"></status>
</kw>
<msg timestamp="20210202 15:12:20.197" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:20.197" starttime="20210202 15:12:16.839"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:20.197" starttime="20210202 15:12:16.839"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:20.201" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:23.684" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:23.684" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:12:23.684" starttime="20210202 15:12:20.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:23.685" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:12:23.685" starttime="20210202 15:12:23.685"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:23.686" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:23.686" starttime="20210202 15:12:23.686"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:23.686" starttime="20210202 15:12:20.198"></status>
</kw>
<msg timestamp="20210202 15:12:23.686" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:23.687" starttime="20210202 15:12:20.198"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:23.687" starttime="20210202 15:12:20.197"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:12:23.687" critical="yes" starttime="20210202 15:12:16.830"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210202 15:12:23.689" starttime="20210202 15:11:38.470"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2" name="hadoopfs-ofs">
<test id="s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 15:14:28.821" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 15:14:28.821" starttime="20210202 15:14:28.821"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:14:28.822" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 15:14:28.822" starttime="20210202 15:14:28.821"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:28.822" starttime="20210202 15:14:28.820"></status>
</kw>
<msg timestamp="20210202 15:14:28.822" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 15:14:28.822" starttime="20210202 15:14:28.820"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:14:28.823" starttime="20210202 15:14:28.823"></status>
</kw>
<msg timestamp="20210202 15:14:28.823" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 15:14:28.823" starttime="20210202 15:14:28.822"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:28.824" starttime="20210202 15:14:28.819"></status>
</kw>
<msg timestamp="20210202 15:14:28.824" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 15:14:28.824" starttime="20210202 15:14:28.818"></status>
</kw>
<msg timestamp="20210202 15:14:28.824" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 15:14:28.824" starttime="20210202 15:14:28.817"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 15:14:28.824" level="INFO">${random} = 52912</msg>
<status status="PASS" endtime="20210202 15:14:28.825" starttime="20210202 15:14:28.824"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:14:28.830" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-52912 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:14:32.449" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:14:32.449" level="INFO">${output} = 2021-02-02 15:14:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:14:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 15:14:32.449" starttime="20210202 15:14:28.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:14:32.450" level="INFO">2021-02-02 15:14:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:14:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:14:30 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 15:14:31 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:14:31 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4C953E8A9496-&gt;04a5ee4e-781c-478a-babf-cf288e80eaa2
2021-02-02 15:14:31 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210202 15:14:32.450" starttime="20210202 15:14:32.449"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:14:32.451" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:14:32.451" starttime="20210202 15:14:32.450"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:32.451" starttime="20210202 15:14:28.825"></status>
</kw>
<msg timestamp="20210202 15:14:32.451" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:14:32.451" starttime="20210202 15:14:28.825"></status>
</kw>
<msg timestamp="20210202 15:14:32.452" level="INFO">${result} = 2021-02-02 15:14:30 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:14:30 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 15:14:32.452" starttime="20210202 15:14:28.825"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:14:32.455" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:14:34.464" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:14:34.464" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:14 ofs://om/volume1/bucket1/ozone-52912
-rw-...</msg>
<status status="PASS" endtime="20210202 15:14:34.464" starttime="20210202 15:14:32.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:14:34.465" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:14 ofs://om/volume1/bucket1/ozone-52912
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:12 ofs://om/volume1/bucket1/ozone-93854
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:12 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:14 ofs://om/volume1/bucket1/wordcount-EGrnI7NP.txt</msg>
<status status="PASS" endtime="20210202 15:14:34.465" starttime="20210202 15:14:34.464"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:14:34.466" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:14:34.466" starttime="20210202 15:14:34.465"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:34.466" starttime="20210202 15:14:32.453"></status>
</kw>
<msg timestamp="20210202 15:14:34.467" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:14:34.467" starttime="20210202 15:14:32.453"></status>
</kw>
<msg timestamp="20210202 15:14:34.467" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:11 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:14 ofs://om/volume1/bucket1/ozone-52912
-rw-...</msg>
<status status="PASS" endtime="20210202 15:14:34.467" starttime="20210202 15:14:32.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:14:34.469" starttime="20210202 15:14:34.467"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 15:14:34.469" critical="yes" starttime="20210202 15:14:28.817"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 15:14:34.475" starttime="20210202 15:14:28.720"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3" name="hadoopfs-o3fs">
<test id="s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:12:51.612" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:12:51.612" starttime="20210202 15:12:51.612"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:12:51.613" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:12:51.613" starttime="20210202 15:12:51.612"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:51.613" starttime="20210202 15:12:51.611"></status>
</kw>
<msg timestamp="20210202 15:12:51.613" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:12:51.613" starttime="20210202 15:12:51.611"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:51.614" starttime="20210202 15:12:51.610"></status>
</kw>
<msg timestamp="20210202 15:12:51.614" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 15:12:51.614" starttime="20210202 15:12:51.609"></status>
</kw>
<msg timestamp="20210202 15:12:51.614" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 15:12:51.614" starttime="20210202 15:12:51.608"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 15:12:51.615" level="INFO">${random} = 93854</msg>
<status status="PASS" endtime="20210202 15:12:51.615" starttime="20210202 15:12:51.614"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:51.620" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-93854 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:56.643" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:56.643" level="INFO">${output} = 2021-02-02 15:12:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:12:54 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 15:12:56.643" starttime="20210202 15:12:51.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:56.646" level="INFO">2021-02-02 15:12:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:12:54 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:12:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 15:12:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:12:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C8C373933696-&gt;04a5ee4e-781c-478a-babf-cf288e80eaa2
2021-02-02 15:12:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210202 15:12:56.646" starttime="20210202 15:12:56.644"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:56.646" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:56.647" starttime="20210202 15:12:56.646"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:56.647" starttime="20210202 15:12:51.616"></status>
</kw>
<msg timestamp="20210202 15:12:56.647" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:56.647" starttime="20210202 15:12:51.615"></status>
</kw>
<msg timestamp="20210202 15:12:56.647" level="INFO">${result} = 2021-02-02 15:12:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:12:54 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 15:12:56.648" starttime="20210202 15:12:51.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:56.652" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:58.666" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:58.666" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:12 o3fs://bucket1.volume1.om/ozone-93854
dr...</msg>
<status status="PASS" endtime="20210202 15:12:58.667" starttime="20210202 15:12:56.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:58.668" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:12 o3fs://bucket1.volume1.om/ozone-93854
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:12 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 15:12:58.668" starttime="20210202 15:12:58.667"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:58.669" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:58.669" starttime="20210202 15:12:58.668"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:58.669" starttime="20210202 15:12:56.649"></status>
</kw>
<msg timestamp="20210202 15:12:58.669" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:58.669" starttime="20210202 15:12:56.648"></status>
</kw>
<msg timestamp="20210202 15:12:58.670" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 15:11 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 15:12 o3fs://bucket1.volume1.om/ozone-93854
dr...</msg>
<status status="PASS" endtime="20210202 15:12:58.670" starttime="20210202 15:12:56.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:12:58.670" starttime="20210202 15:12:58.670"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 15:12:58.671" critical="yes" starttime="20210202 15:12:51.608"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 15:12:58.673" starttime="20210202 15:12:51.545"></status>
</suite>
<suite source="/opt/ozone/smoketest/kinit-hadoop.robot" id="s1-s4" name="Kinit-Hadoop">
<test id="s1-s4-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>hadoop</arg>
<arg>hadoop.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:46.456" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:46.458" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:46.458" level="INFO">${output} = rm</msg>
<status status="PASS" endtime="20210202 15:12:46.459" starttime="20210202 15:12:46.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:46.460" level="INFO">rm</msg>
<status status="PASS" endtime="20210202 15:12:46.460" starttime="20210202 15:12:46.459"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:46.461" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:46.461" starttime="20210202 15:12:46.460"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:46.461" starttime="20210202 15:12:46.451"></status>
</kw>
<msg timestamp="20210202 15:12:46.461" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:46.462" starttime="20210202 15:12:46.451"></status>
</kw>
<msg timestamp="20210202 15:12:46.462" level="INFO">${hostname} = rm</msg>
<status status="PASS" endtime="20210202 15:12:46.462" starttime="20210202 15:12:46.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:12:46.463" level="INFO">${TEST_USER} = hadoop/rm@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:12:46.463" starttime="20210202 15:12:46.462"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:12:46.467" level="INFO">Running command 'kinit -k hadoop/rm@EXAMPLE.COM -t /etc/security/keytabs/hadoop.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:12:46.486" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:12:46.486" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:12:46.486" starttime="20210202 15:12:46.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:12:46.487" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:12:46.487" starttime="20210202 15:12:46.486"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:12:46.488" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:12:46.488" starttime="20210202 15:12:46.487"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:46.488" starttime="20210202 15:12:46.465"></status>
</kw>
<msg timestamp="20210202 15:12:46.488" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:12:46.488" starttime="20210202 15:12:46.464"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:46.489" starttime="20210202 15:12:46.464"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:46.489" starttime="20210202 15:12:46.463"></status>
</kw>
<status status="PASS" endtime="20210202 15:12:46.489" starttime="20210202 15:12:46.450"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:12:46.489" critical="yes" starttime="20210202 15:12:46.450"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210202 15:12:46.490" starttime="20210202 15:12:46.388"></status>
</suite>
<suite source="/opt/hadoop/smoketest/kinit.robot" id="s1-s5" name="Kinit">
<test id="s1-s5-t1" name="Kinit">
<kw name="Kinit test user" library="commonlib">
<arguments>
<arg>${testuser}</arg>
<arg>${testuser}.keytab</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>hostname</arg>
</arguments>
<assign>
<var>${hostname}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:33.283" level="INFO">Running command 'hostname 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:33.286" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:11:33.286" level="INFO">${output} = om</msg>
<status status="PASS" endtime="20210202 15:11:33.286" starttime="20210202 15:11:33.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:33.287" level="INFO">om</msg>
<status status="PASS" endtime="20210202 15:11:33.287" starttime="20210202 15:11:33.286"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:11:33.288" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:11:33.288" starttime="20210202 15:11:33.287"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:33.288" starttime="20210202 15:11:33.279"></status>
</kw>
<msg timestamp="20210202 15:11:33.288" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:11:33.288" starttime="20210202 15:11:33.278"></status>
</kw>
<msg timestamp="20210202 15:11:33.288" level="INFO">${hostname} = om</msg>
<status status="PASS" endtime="20210202 15:11:33.289" starttime="20210202 15:11:33.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${TEST_USER}</arg>
<arg>${user}/${hostname}@EXAMPLE.COM</arg>
</arguments>
<msg timestamp="20210202 15:11:33.289" level="INFO">${TEST_USER} = testuser/om@EXAMPLE.COM</msg>
<status status="PASS" endtime="20210202 15:11:33.290" starttime="20210202 15:11:33.289"></status>
</kw>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>2min</arg>
<arg>10sec</arg>
<arg>Execute</arg>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Execute" library="os">
<arguments>
<arg>kinit -k ${user}/${hostname}@EXAMPLE.COM -t /etc/security/keytabs/${keytab}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:11:33.293" level="INFO">Running command 'kinit -k testuser/om@EXAMPLE.COM -t /etc/security/keytabs/testuser.keytab 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:11:33.305" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:11:33.305" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 15:11:33.305" starttime="20210202 15:11:33.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:11:33.306" level="INFO"></msg>
<status status="PASS" endtime="20210202 15:11:33.306" starttime="20210202 15:11:33.305"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:11:33.307" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:11:33.307" starttime="20210202 15:11:33.306"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:33.307" starttime="20210202 15:11:33.291"></status>
</kw>
<msg timestamp="20210202 15:11:33.307" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:11:33.307" starttime="20210202 15:11:33.291"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:33.308" starttime="20210202 15:11:33.290"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:33.308" starttime="20210202 15:11:33.290"></status>
</kw>
<status status="PASS" endtime="20210202 15:11:33.308" starttime="20210202 15:11:33.277"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 15:11:33.308" critical="yes" starttime="20210202 15:11:33.276"></status>
</test>
<doc>Kinit test user</doc>
<status status="PASS" endtime="20210202 15:11:33.309" starttime="20210202 15:11:33.219"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s6" name="mapreduce-ofs">
<test id="s1-s6-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:14:39.668" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:14:39.675" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:14:39.675" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:14:39.675" starttime="20210202 15:14:39.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:14:39.676" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:14:39.676" starttime="20210202 15:14:39.675"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:14:39.676" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:14:39.677" starttime="20210202 15:14:39.676"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:39.677" starttime="20210202 15:14:39.663"></status>
</kw>
<msg timestamp="20210202 15:14:39.677" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:14:39.677" starttime="20210202 15:14:39.663"></status>
</kw>
<msg timestamp="20210202 15:14:39.678" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:14:39.678" starttime="20210202 15:14:39.662"></status>
</kw>
<msg timestamp="20210202 15:14:39.678" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:14:39.678" starttime="20210202 15:14:39.662"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 15:14:39.683" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 15:14:39.683" starttime="20210202 15:14:39.683"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:14:39.684" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 15:14:39.684" starttime="20210202 15:14:39.684"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:39.684" starttime="20210202 15:14:39.682"></status>
</kw>
<msg timestamp="20210202 15:14:39.685" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 15:14:39.685" starttime="20210202 15:14:39.682"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:14:39.686" starttime="20210202 15:14:39.685"></status>
</kw>
<msg timestamp="20210202 15:14:39.686" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 15:14:39.686" starttime="20210202 15:14:39.685"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:39.686" starttime="20210202 15:14:39.681"></status>
</kw>
<msg timestamp="20210202 15:14:39.686" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 15:14:39.686" starttime="20210202 15:14:39.679"></status>
</kw>
<msg timestamp="20210202 15:14:39.687" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 15:14:39.687" starttime="20210202 15:14:39.678"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:14:39.690" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:15:15.200" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:15:15.200" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 15:14:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:14:42 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 15:15:15.200" starttime="20210202 15:14:39.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:15:15.201" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 15:14:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:14:42 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:14:42 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 15:14:42 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:14:42 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DBD07ADDE9FE-&gt;04a5ee4e-781c-478a-babf-cf288e80eaa2
2021-02-02 15:14:42 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-02 15:14:45 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-62AF681FAAF5-&gt;3816c425-ef04-4c7c-8eec-96df79e0e2f1
2021-02-02 15:14:45 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-02 15:14:46 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:14:46 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-02-02 15:14:46 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278886369, maxDate=1612883686369, sequenceNumber=3, masterKeyId=2))
2021-02-02 15:14:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 df bd 9a f6 2e 38 80 e7 ef ba f8 2e 40 03 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-02 15:14:46 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278886369, maxDate=1612883686369, sequenceNumber=3, masterKeyId=2)
2021-02-02 15:14:46 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 15:14:46 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 15:14:46 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 15:14:47 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612278638170_0003
2021-02-02 15:14:47 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 80 df bd 9a f6 2e 38 80 e7 ef ba f8 2e 40 03 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278886369, maxDate=1612883686369, sequenceNumber=3, masterKeyId=2)]
2021-02-02 15:14:47 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 15:14:47 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 15:14:47 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-02 15:14:48 INFO  YarnClientImpl:329 - Submitted application application_1612278638170_0003
2021-02-02 15:14:48 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612278638170_0003/
2021-02-02 15:14:48 INFO  Job:1614 - Running job: job_1612278638170_0003
2021-02-02 15:14:56 INFO  Job:1635 - Job job_1612278638170_0003 running in uber mode : false
2021-02-02 15:14:56 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 15:15:06 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 15:15:08 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 15:15:13 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 15:15:14 INFO  Job:1653 - Job job_1612278638170_0003 completed successfully
2021-02-02 15:15:14 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101065
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45456
		Total time spent by all reduces in occupied slots (ms)=7786
		Total time spent by all map tasks (ms)=22728
		Total time spent by all reduce tasks (ms)=3893
		Total vcore-milliseconds taken by all map tasks=22728
		Total vcore-milliseconds taken by all reduce tasks=3893
		Total megabyte-milliseconds taken by all map tasks=46546944
		Total megabyte-milliseconds taken by all reduce tasks=7972864
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1071
		CPU time spent (ms)=7520
		Physical memory (bytes) snapshot=1489068032
		Virtual memory (bytes) snapshot=14056890368
		Total committed heap usage (bytes)=1294467072
		Peak Map Physical memory (bytes)=392757248
		Peak Map Virtual memory (bytes)=3509923840
		Peak Reduce Physical memory (bytes)=322265088
		Peak Reduce Virtual memory (bytes)=3530014720
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 28.75 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210202 15:15:15.202" starttime="20210202 15:15:15.201"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:15:15.202" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:15:15.202" starttime="20210202 15:15:15.202"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.202" starttime="20210202 15:14:39.688"></status>
</kw>
<msg timestamp="20210202 15:15:15.203" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:15:15.203" starttime="20210202 15:14:39.688"></status>
</kw>
<msg timestamp="20210202 15:15:15.203" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 15:14:41 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:14:42 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 15:15:15.203" starttime="20210202 15:14:39.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 15:15:15.204" starttime="20210202 15:15:15.203"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 15:15:15.204" critical="yes" starttime="20210202 15:14:39.661"></status>
</test>
<test id="s1-s6-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:15:15.209" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:15:15.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:15:15.215" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:15:15.215" starttime="20210202 15:15:15.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:15:15.216" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:15:15.216" starttime="20210202 15:15:15.215"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:15:15.217" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:15:15.217" starttime="20210202 15:15:15.216"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.217" starttime="20210202 15:15:15.207"></status>
</kw>
<msg timestamp="20210202 15:15:15.217" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:15:15.217" starttime="20210202 15:15:15.207"></status>
</kw>
<msg timestamp="20210202 15:15:15.218" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:15:15.218" starttime="20210202 15:15:15.206"></status>
</kw>
<msg timestamp="20210202 15:15:15.218" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:15:15.218" starttime="20210202 15:15:15.206"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 15:15:15.219" level="INFO">${random} = pfIj5zI3</msg>
<status status="PASS" endtime="20210202 15:15:15.219" starttime="20210202 15:15:15.218"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 15:15:15.223" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 15:15:15.223" starttime="20210202 15:15:15.223"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:15:15.224" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 15:15:15.224" starttime="20210202 15:15:15.223"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.224" starttime="20210202 15:15:15.222"></status>
</kw>
<msg timestamp="20210202 15:15:15.224" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 15:15:15.224" starttime="20210202 15:15:15.221"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 15:15:15.225" starttime="20210202 15:15:15.224"></status>
</kw>
<msg timestamp="20210202 15:15:15.225" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 15:15:15.225" starttime="20210202 15:15:15.224"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.226" starttime="20210202 15:15:15.221"></status>
</kw>
<msg timestamp="20210202 15:15:15.226" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 15:15:15.226" starttime="20210202 15:15:15.220"></status>
</kw>
<msg timestamp="20210202 15:15:15.226" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 15:15:15.226" starttime="20210202 15:15:15.219"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 15:15:15.231" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 15:15:15.231" starttime="20210202 15:15:15.230"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:15:15.231" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 15:15:15.231" starttime="20210202 15:15:15.231"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.232" starttime="20210202 15:15:15.230"></status>
</kw>
<msg timestamp="20210202 15:15:15.232" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 15:15:15.232" starttime="20210202 15:15:15.229"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:15:15.234" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210202 15:15:15.234" starttime="20210202 15:15:15.233"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:15:15.235" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210202 15:15:15.235" starttime="20210202 15:15:15.234"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.235" starttime="20210202 15:15:15.233"></status>
</kw>
<msg timestamp="20210202 15:15:15.235" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210202 15:15:15.235" starttime="20210202 15:15:15.232"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.235" starttime="20210202 15:15:15.228"></status>
</kw>
<msg timestamp="20210202 15:15:15.236" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 15:15:15.236" starttime="20210202 15:15:15.227"></status>
</kw>
<msg timestamp="20210202 15:15:15.236" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 15:15:15.236" starttime="20210202 15:15:15.226"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 15:15:15.240" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 15:15:15.240" starttime="20210202 15:15:15.239"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:15:15.240" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 15:15:15.241" starttime="20210202 15:15:15.240"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.241" starttime="20210202 15:15:15.239"></status>
</kw>
<msg timestamp="20210202 15:15:15.241" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 15:15:15.241" starttime="20210202 15:15:15.238"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:15:15.243" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210202 15:15:15.243" starttime="20210202 15:15:15.242"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:15:15.244" level="INFO">${result} = /wordcount-pfIj5zI3.txt</msg>
<status status="PASS" endtime="20210202 15:15:15.244" starttime="20210202 15:15:15.243"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.244" starttime="20210202 15:15:15.242"></status>
</kw>
<msg timestamp="20210202 15:15:15.244" level="INFO">${path_with_leading} = /wordcount-pfIj5zI3.txt</msg>
<status status="PASS" endtime="20210202 15:15:15.244" starttime="20210202 15:15:15.241"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:15.245" starttime="20210202 15:15:15.238"></status>
</kw>
<msg timestamp="20210202 15:15:15.245" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-pfIj5zI3.txt</msg>
<status status="PASS" endtime="20210202 15:15:15.245" starttime="20210202 15:15:15.237"></status>
</kw>
<msg timestamp="20210202 15:15:15.245" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-pfIj5zI3.txt</msg>
<status status="PASS" endtime="20210202 15:15:15.245" starttime="20210202 15:15:15.236"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:15:15.249" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-pfIj5zI3.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:15:46.721" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:15:46.721" level="INFO">${output} = 2021-02-02 15:15:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:15:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
202...</msg>
<status status="PASS" endtime="20210202 15:15:46.721" starttime="20210202 15:15:15.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:15:46.722" level="INFO">2021-02-02 15:15:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:15:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-02-02 15:15:17 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278917620, maxDate=1612883717620, sequenceNumber=4, masterKeyId=2))
2021-02-02 15:15:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 95 d3 bf 9a f6 2e 38 95 db f1 ba f8 2e 40 04 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-02 15:15:17 INFO  TokenCache:147 - Got dt for ofs://om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278917620, maxDate=1612883717620, sequenceNumber=4, masterKeyId=2)
2021-02-02 15:15:17 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 15:15:18 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:15:18 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:15:18 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 15:15:18 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:15:18 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-DFBA36DA1071-&gt;3816c425-ef04-4c7c-8eec-96df79e0e2f1
2021-02-02 15:15:18 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 15:15:19 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 15:15:19 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 15:15:19 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612278638170_0004
2021-02-02 15:15:19 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 95 d3 bf 9a f6 2e 38 95 db f1 ba f8 2e 40 04 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278917620, maxDate=1612883717620, sequenceNumber=4, masterKeyId=2)]
2021-02-02 15:15:20 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 15:15:20 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 15:15:20 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-02 15:15:20 INFO  YarnClientImpl:329 - Submitted application application_1612278638170_0004
2021-02-02 15:15:20 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612278638170_0004/
2021-02-02 15:15:20 INFO  Job:1614 - Running job: job_1612278638170_0004
2021-02-02 15:15:29 INFO  Job:1635 - Job job_1612278638170_0004 running in uber mode : false
2021-02-02 15:15:29 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 15:15:39 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 15:15:41 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 15:15:45 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 15:15:46 INFO  Job:1653 - Job job_1612278638170_0004 completed successfully
2021-02-02 15:15:46 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163731
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49918
		Total time spent by all reduces in occupied slots (ms)=7798
		Total time spent by all map tasks (ms)=24959
		Total time spent by all reduce tasks (ms)=3899
		Total vcore-milliseconds taken by all map tasks=24959
		Total vcore-milliseconds taken by all reduce tasks=3899
		Total megabyte-milliseconds taken by all map tasks=51116032
		Total megabyte-milliseconds taken by all reduce tasks=7985152
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1010
		CPU time spent (ms)=8220
		Physical memory (bytes) snapshot=1433432064
		Virtual memory (bytes) snapshot=14057701376
		Total committed heap usage (bytes)=1195900928
		Peak Map Physical memory (bytes)=389439488
		Peak Map Virtual memory (bytes)=3511226368
		Peak Reduce Physical memory (bytes)=322531328
		Peak Reduce Virtual memory (bytes)=3528937472
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210202 15:15:46.723" starttime="20210202 15:15:46.722"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:15:46.723" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:15:46.723" starttime="20210202 15:15:46.723"></status>
</kw>
<status status="PASS" endtime="20210202 15:15:46.724" starttime="20210202 15:15:15.247"></status>
</kw>
<msg timestamp="20210202 15:15:46.724" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:15:46.724" starttime="20210202 15:15:15.246"></status>
</kw>
<msg timestamp="20210202 15:15:46.724" level="INFO">${output} = 2021-02-02 15:15:17 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:15:17 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
202...</msg>
<status status="PASS" endtime="20210202 15:15:46.725" starttime="20210202 15:15:15.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 15:15:46.725" starttime="20210202 15:15:46.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 15:15:46.726" starttime="20210202 15:15:46.725"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 15:15:46.726" critical="yes" starttime="20210202 15:15:15.205"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 15:15:46.727" starttime="20210202 15:14:39.598"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s7" name="mapreduce-o3fs">
<test id="s1-s7-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:13:03.855" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:13:03.861" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:13:03.861" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:03.861" starttime="20210202 15:13:03.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:13:03.862" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:03.862" starttime="20210202 15:13:03.861"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:13:03.863" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:13:03.863" starttime="20210202 15:13:03.862"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:03.863" starttime="20210202 15:13:03.851"></status>
</kw>
<msg timestamp="20210202 15:13:03.863" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:13:03.863" starttime="20210202 15:13:03.850"></status>
</kw>
<msg timestamp="20210202 15:13:03.864" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:03.864" starttime="20210202 15:13:03.850"></status>
</kw>
<msg timestamp="20210202 15:13:03.864" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:03.864" starttime="20210202 15:13:03.849"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:13:03.869" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:13:03.869" starttime="20210202 15:13:03.869"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:13:03.870" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:13:03.870" starttime="20210202 15:13:03.869"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:03.870" starttime="20210202 15:13:03.868"></status>
</kw>
<msg timestamp="20210202 15:13:03.870" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:13:03.870" starttime="20210202 15:13:03.868"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:03.871" starttime="20210202 15:13:03.866"></status>
</kw>
<msg timestamp="20210202 15:13:03.871" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 15:13:03.871" starttime="20210202 15:13:03.865"></status>
</kw>
<msg timestamp="20210202 15:13:03.871" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 15:13:03.871" starttime="20210202 15:13:03.864"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:13:03.874" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:13:50.543" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:13:50.544" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 15:13:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:13:06 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 15:13:50.544" starttime="20210202 15:13:03.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:13:50.545" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 15:13:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:13:06 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:13:06 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 15:13:06 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:13:06 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-49E88D52F1F8-&gt;04a5ee4e-781c-478a-babf-cf288e80eaa2
2021-02-02 15:13:06 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-02 15:13:09 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-726D4A329BDE-&gt;3816c425-ef04-4c7c-8eec-96df79e0e2f1
2021-02-02 15:13:09 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-02 15:13:10 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:13:10 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-02-02 15:13:11 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278790936, maxDate=1612883590936, sequenceNumber=1, masterKeyId=2))
2021-02-02 15:13:11 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 f3 b7 9a f6 2e 38 92 fb e9 ba f8 2e 40 01 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-02 15:13:11 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278790936, maxDate=1612883590936, sequenceNumber=1, masterKeyId=2)
2021-02-02 15:13:14 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 15:13:14 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 15:13:14 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612278638170_0001
2021-02-02 15:13:14 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 92 f3 b7 9a f6 2e 38 92 fb e9 ba f8 2e 40 01 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278790936, maxDate=1612883590936, sequenceNumber=1, masterKeyId=2)]
2021-02-02 15:13:14 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 15:13:14 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 15:13:14 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-02 15:13:16 INFO  YarnClientImpl:329 - Submitted application application_1612278638170_0001
2021-02-02 15:13:16 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612278638170_0001/
2021-02-02 15:13:16 INFO  Job:1614 - Running job: job_1612278638170_0001
2021-02-02 15:13:27 INFO  Job:1635 - Job job_1612278638170_0001 running in uber mode : false
2021-02-02 15:13:27 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 15:13:38 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 15:13:40 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 15:13:45 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 15:13:49 INFO  Job:1653 - Job job_1612278638170_0001 completed successfully
2021-02-02 15:13:49 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1101261
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=804
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=49046
		Total time spent by all reduces in occupied slots (ms)=7878
		Total time spent by all map tasks (ms)=24523
		Total time spent by all reduce tasks (ms)=3939
		Total vcore-milliseconds taken by all map tasks=24523
		Total vcore-milliseconds taken by all reduce tasks=3939
		Total megabyte-milliseconds taken by all map tasks=50223104
		Total megabyte-milliseconds taken by all reduce tasks=8067072
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=450
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=1063
		CPU time spent (ms)=7700
		Physical memory (bytes) snapshot=1438511104
		Virtual memory (bytes) snapshot=14061166592
		Total committed heap usage (bytes)=1211105280
		Peak Map Physical memory (bytes)=395804672
		Peak Map Virtual memory (bytes)=3511615488
		Peak Reduce Physical memory (bytes)=319959040
		Peak Reduce Virtual memory (bytes)=3528605696
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 39.973 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210202 15:13:50.545" starttime="20210202 15:13:50.544"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:13:50.546" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:13:50.546" starttime="20210202 15:13:50.546"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.546" starttime="20210202 15:13:03.872"></status>
</kw>
<msg timestamp="20210202 15:13:50.546" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:13:50.547" starttime="20210202 15:13:03.872"></status>
</kw>
<msg timestamp="20210202 15:13:50.547" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 15:13:06 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:13:06 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 15:13:50.547" starttime="20210202 15:13:03.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 15:13:50.548" starttime="20210202 15:13:50.547"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 15:13:50.548" critical="yes" starttime="20210202 15:13:03.848"></status>
</test>
<test id="s1-s7-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:13:50.553" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:13:50.560" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:13:50.560" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:50.560" starttime="20210202 15:13:50.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:13:50.561" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:50.561" starttime="20210202 15:13:50.561"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:13:50.562" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:13:50.562" starttime="20210202 15:13:50.562"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.562" starttime="20210202 15:13:50.551"></status>
</kw>
<msg timestamp="20210202 15:13:50.562" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:13:50.563" starttime="20210202 15:13:50.550"></status>
</kw>
<msg timestamp="20210202 15:13:50.563" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:50.563" starttime="20210202 15:13:50.550"></status>
</kw>
<msg timestamp="20210202 15:13:50.563" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 15:13:50.563" starttime="20210202 15:13:50.550"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 15:13:50.564" level="INFO">${random} = EGrnI7NP</msg>
<status status="PASS" endtime="20210202 15:13:50.564" starttime="20210202 15:13:50.563"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:13:50.568" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:13:50.568" starttime="20210202 15:13:50.567"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:13:50.569" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:13:50.569" starttime="20210202 15:13:50.568"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.570" starttime="20210202 15:13:50.567"></status>
</kw>
<msg timestamp="20210202 15:13:50.570" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:13:50.570" starttime="20210202 15:13:50.566"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.570" starttime="20210202 15:13:50.565"></status>
</kw>
<msg timestamp="20210202 15:13:50.570" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 15:13:50.570" starttime="20210202 15:13:50.565"></status>
</kw>
<msg timestamp="20210202 15:13:50.571" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 15:13:50.571" starttime="20210202 15:13:50.564"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:13:50.574" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:13:50.574" starttime="20210202 15:13:50.574"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:13:50.575" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:13:50.575" starttime="20210202 15:13:50.575"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.575" starttime="20210202 15:13:50.573"></status>
</kw>
<msg timestamp="20210202 15:13:50.575" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:13:50.576" starttime="20210202 15:13:50.573"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.576" starttime="20210202 15:13:50.572"></status>
</kw>
<msg timestamp="20210202 15:13:50.576" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 15:13:50.576" starttime="20210202 15:13:50.572"></status>
</kw>
<msg timestamp="20210202 15:13:50.576" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 15:13:50.576" starttime="20210202 15:13:50.571"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 15:13:50.580" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 15:13:50.580" starttime="20210202 15:13:50.579"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 15:13:50.580" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 15:13:50.580" starttime="20210202 15:13:50.580"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.581" starttime="20210202 15:13:50.579"></status>
</kw>
<msg timestamp="20210202 15:13:50.581" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 15:13:50.581" starttime="20210202 15:13:50.578"></status>
</kw>
<status status="PASS" endtime="20210202 15:13:50.581" starttime="20210202 15:13:50.578"></status>
</kw>
<msg timestamp="20210202 15:13:50.581" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-EGrnI7NP.txt</msg>
<status status="PASS" endtime="20210202 15:13:50.581" starttime="20210202 15:13:50.577"></status>
</kw>
<msg timestamp="20210202 15:13:50.582" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-EGrnI7NP.txt</msg>
<status status="PASS" endtime="20210202 15:13:50.582" starttime="20210202 15:13:50.576"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 15:13:50.585" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-EGrnI7NP.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 15:14:22.690" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 15:14:22.690" level="INFO">${output} = 2021-02-02 15:13:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:13:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
202...</msg>
<status status="PASS" endtime="20210202 15:14:22.690" starttime="20210202 15:13:50.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 15:14:22.692" level="INFO">2021-02-02 15:13:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:13:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
2021-02-02 15:13:53 INFO  KMSClientProvider:1041 - New token created: (Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278833065, maxDate=1612883633065, sequenceNumber=2, masterKeyId=2))
2021-02-02 15:13:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cf be ba 9a f6 2e 38 cf c6 ec ba f8 2e 40 02 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74
2021-02-02 15:13:53 INFO  TokenCache:147 - Got dt for o3fs://bucket1.volume1.om; Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278833065, maxDate=1612883633065, sequenceNumber=2, masterKeyId=2)
2021-02-02 15:13:53 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 15:13:53 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 15:13:53 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 15:13:53 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 15:13:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 15:13:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-9CB570795765-&gt;04a5ee4e-781c-478a-babf-cf288e80eaa2
2021-02-02 15:13:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 15:13:54 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 15:13:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7E47582923F1-&gt;3816c425-ef04-4c7c-8eec-96df79e0e2f1
2021-02-02 15:13:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 15:13:55 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 15:13:55 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612278638170_0002
2021-02-02 15:13:55 INFO  JobSubmitter:299 - Executing with tokens: [Kind: OzoneToken, Service: 172.27.0.9:9862, Ident: 08 01 1a 15 68 61 64 6f 6f 70 2f 72 6d 40 45 58 41 4d 50 4c 45 2e 43 4f 4d 22 02 72 6d 2a 00 30 cf be ba 9a f6 2e 38 cf c6 ec ba f8 2e 40 02 48 01 5a 0d 32 31 39 35 31 30 30 36 38 36 39 37 34 7a 12 6f 6d 53 65 72 76 69 63 65 49 64 44 65 66 61 75 6c 74, Kind: kms-dt, Service: kms://http@kms:9600/kms, Ident: (kms-dt owner=hadoop, renewer=rm, realUser=, issueDate=1612278833065, maxDate=1612883633065, sequenceNumber=2, masterKeyId=2)]
2021-02-02 15:13:55 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 15:13:55 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 15:13:55 INFO  TimelineClientImpl:129 - Timeline service address: jhs:8188
2021-02-02 15:13:56 INFO  YarnClientImpl:329 - Submitted application application_1612278638170_0002
2021-02-02 15:13:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612278638170_0002/
2021-02-02 15:13:56 INFO  Job:1614 - Running job: job_1612278638170_0002
2021-02-02 15:14:05 INFO  Job:1635 - Job job_1612278638170_0002 running in uber mode : false
2021-02-02 15:14:05 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 15:14:15 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 15:14:17 INFO  Job:1642 -  map 67% reduce 0%
2021-02-02 15:14:18 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 15:14:22 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 15:14:22 INFO  Job:1653 - Job job_1612278638170_0002 completed successfully
2021-02-02 15:14:22 INFO  Job:1660 - Counters: 54
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1163815
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Killed map tasks=1
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=45210
		Total time spent by all reduces in occupied slots (ms)=7740
		Total time spent by all map tasks (ms)=22605
		Total time spent by all reduce tasks (ms)=3870
		Total vcore-milliseconds taken by all map tasks=22605
		Total vcore-milliseconds taken by all reduce tasks=3870
		Total megabyte-milliseconds taken by all map tasks=46295040
		Total megabyte-milliseconds taken by all reduce tasks=7925760
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=944
		CPU time spent (ms)=7990
		Physical memory (bytes) snapshot=1481904128
		Virtual memory (bytes) snapshot=14047240192
		Total committed heap usage (bytes)=1264582656
		Peak Map Physical memory (bytes)=397684736
		Peak Map Virtual memory (bytes)=3511259136
		Peak Reduce Physical memory (bytes)=320126976
		Peak Reduce Virtual memory (bytes)=3524931584
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210202 15:14:22.692" starttime="20210202 15:14:22.691"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 15:14:22.693" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 15:14:22.693" starttime="20210202 15:14:22.692"></status>
</kw>
<status status="PASS" endtime="20210202 15:14:22.693" starttime="20210202 15:13:50.583"></status>
</kw>
<msg timestamp="20210202 15:14:22.693" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 15:14:22.694" starttime="20210202 15:13:50.582"></status>
</kw>
<msg timestamp="20210202 15:14:22.694" level="INFO">${output} = 2021-02-02 15:13:52 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.27.0.2:8032
2021-02-02 15:13:52 INFO  AHSProxy:42 - Connecting to Application History server at jhs/172.27.0.6:10200
202...</msg>
<status status="PASS" endtime="20210202 15:14:22.694" starttime="20210202 15:13:50.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 15:14:22.695" starttime="20210202 15:14:22.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 15:14:22.695" starttime="20210202 15:14:22.695"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 15:14:22.696" critical="yes" starttime="20210202 15:13:50.549"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 15:14:22.697" starttime="20210202 15:13:03.788"></status>
</suite>
<status status="PASS" elapsedtime="204332" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozonesecure-mr" pass="10">ozonesecure-mr</stat>
<stat fail="0" id="s1-s1" name="Createmrenv" pass="2">ozonesecure-mr.Createmrenv</stat>
<stat fail="0" id="s1-s2" name="hadoopfs-ofs" pass="1">ozonesecure-mr.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3" name="hadoopfs-o3fs" pass="1">ozonesecure-mr.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s4" name="Kinit-Hadoop" pass="1">ozonesecure-mr.Kinit-Hadoop</stat>
<stat fail="0" id="s1-s5" name="Kinit" pass="1">ozonesecure-mr.Kinit</stat>
<stat fail="0" id="s1-s6" name="mapreduce-ofs" pass="2">ozonesecure-mr.mapreduce-ofs</stat>
<stat fail="0" id="s1-s7" name="mapreduce-o3fs" pass="2">ozonesecure-mr.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
