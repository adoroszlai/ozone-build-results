<?xml version="1.0" encoding="UTF-8"?>
<robot rpa="false" generated="20210202 14:55:13.513" generator="Rebot 3.2.2 (Python 2.7.17 on linux2)">
<suite id="s1" name="ozone-mr">
<suite id="s1-s1" name="hadoop27">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s1-s1" name="Createmrenv">
<test id="s1-s1-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:41:54.115" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:41:56.514" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 14:41:56.514" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:41:56.514" starttime="20210202 14:41:54.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:41:56.516" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:41:56.516" starttime="20210202 14:41:56.515"></status>
</kw>
<msg timestamp="20210202 14:41:56.516" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:41:56.516" starttime="20210202 14:41:54.108"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:41:56.523" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:41:58.718" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:41:58.718" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:41:58.718" starttime="20210202 14:41:56.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:41:58.719" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:41:58.719" starttime="20210202 14:41:58.718"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:41:58.720" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:41:58.720" starttime="20210202 14:41:58.719"></status>
</kw>
<status status="PASS" endtime="20210202 14:41:58.720" starttime="20210202 14:41:56.519"></status>
</kw>
<msg timestamp="20210202 14:41:58.720" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:41:58.720" starttime="20210202 14:41:56.518"></status>
</kw>
<msg timestamp="20210202 14:41:58.721" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210202 14:41:58.721" starttime="20210202 14:41:56.517"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210202 14:41:58.721" starttime="20210202 14:41:58.721"></status>
</kw>
<status status="PASS" endtime="20210202 14:41:58.722" starttime="20210202 14:41:56.517"></status>
</kw>
<status status="PASS" endtime="20210202 14:41:58.722" starttime="20210202 14:41:56.516"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:41:58.731" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:00.911" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:00.911" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:00.911" starttime="20210202 14:41:58.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:00.912" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:00.912" starttime="20210202 14:42:00.911"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:00.913" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:00.913" starttime="20210202 14:42:00.912"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:00.913" starttime="20210202 14:41:58.725"></status>
</kw>
<msg timestamp="20210202 14:42:00.913" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:00.913" starttime="20210202 14:41:58.725"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:00.914" starttime="20210202 14:41:58.724"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:00.914" starttime="20210202 14:41:58.723"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:00.914" starttime="20210202 14:41:58.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210202 14:42:00.915" starttime="20210202 14:42:00.914"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:00.918" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:03.362" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:03.362" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:42...</msg>
<status status="PASS" endtime="20210202 14:42:03.362" starttime="20210202 14:42:00.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:03.363" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:42:00.876Z",
  "modificationTime" : "2021-02-02T14:42:00.876Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 14:42:03.364" starttime="20210202 14:42:03.363"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:03.365" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:03.365" starttime="20210202 14:42:03.364"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:03.365" starttime="20210202 14:42:00.916"></status>
</kw>
<msg timestamp="20210202 14:42:03.365" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:03.365" starttime="20210202 14:42:00.915"></status>
</kw>
<msg timestamp="20210202 14:42:03.366" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:42...</msg>
<status status="PASS" endtime="20210202 14:42:03.366" starttime="20210202 14:42:00.915"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210202 14:42:03.366" starttime="20210202 14:42:03.366"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:42:03.370" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:42:03.370" starttime="20210202 14:42:03.370"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:42:03.371" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:42:03.371" starttime="20210202 14:42:03.371"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:03.371" starttime="20210202 14:42:03.369"></status>
</kw>
<msg timestamp="20210202 14:42:03.371" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:42:03.371" starttime="20210202 14:42:03.369"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:03.372" starttime="20210202 14:42:03.368"></status>
</kw>
<msg timestamp="20210202 14:42:03.372" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 14:42:03.372" starttime="20210202 14:42:03.367"></status>
</kw>
<msg timestamp="20210202 14:42:03.372" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 14:42:03.372" starttime="20210202 14:42:03.366"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:03.376" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:05.510" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:05.510" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:05.510" starttime="20210202 14:42:03.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:05.511" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:05.512" starttime="20210202 14:42:05.511"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:05.512" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:05.513" starttime="20210202 14:42:05.512"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:05.513" starttime="20210202 14:42:03.373"></status>
</kw>
<msg timestamp="20210202 14:42:05.513" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:05.513" starttime="20210202 14:42:03.373"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:05.513" starttime="20210202 14:42:03.372"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:05.517" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:10.925" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:10.925" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:10.925" starttime="20210202 14:42:05.515"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:10.926" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:10.926" starttime="20210202 14:42:10.925"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:10.927" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:10.927" starttime="20210202 14:42:10.927"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:10.928" starttime="20210202 14:42:05.515"></status>
</kw>
<msg timestamp="20210202 14:42:10.928" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:10.928" starttime="20210202 14:42:05.514"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:10.928" starttime="20210202 14:42:05.514"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:10.932" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:14.847" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:14.847" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:14.847" starttime="20210202 14:42:10.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:14.848" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:14.848" starttime="20210202 14:42:14.847"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:14.851" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:14.851" starttime="20210202 14:42:14.849"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:14.851" starttime="20210202 14:42:10.929"></status>
</kw>
<msg timestamp="20210202 14:42:14.852" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:14.852" starttime="20210202 14:42:10.929"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:14.852" starttime="20210202 14:42:10.928"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:14.856" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:18.959" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:18.959" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:18.959" starttime="20210202 14:42:14.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:18.961" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:18.961" starttime="20210202 14:42:18.960"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:18.961" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:18.962" starttime="20210202 14:42:18.961"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:18.962" starttime="20210202 14:42:14.853"></status>
</kw>
<msg timestamp="20210202 14:42:18.962" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:18.962" starttime="20210202 14:42:14.853"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:18.962" starttime="20210202 14:42:14.852"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 14:42:18.963" critical="yes" starttime="20210202 14:41:54.107"></status>
</test>
<test id="s1-s1-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:42:18.968" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:42:18.968" starttime="20210202 14:42:18.968"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:42:18.969" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:42:18.969" starttime="20210202 14:42:18.968"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:18.969" starttime="20210202 14:42:18.967"></status>
</kw>
<msg timestamp="20210202 14:42:18.969" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:42:18.970" starttime="20210202 14:42:18.966"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:18.970" starttime="20210202 14:42:18.966"></status>
</kw>
<msg timestamp="20210202 14:42:18.970" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:42:18.970" starttime="20210202 14:42:18.965"></status>
</kw>
<msg timestamp="20210202 14:42:18.970" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:42:18.970" starttime="20210202 14:42:18.964"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:18.974" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:21.207" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:21.207" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:21.207" starttime="20210202 14:42:18.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:21.209" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:21.209" starttime="20210202 14:42:21.208"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:21.210" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:21.211" starttime="20210202 14:42:21.210"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:21.211" starttime="20210202 14:42:18.971"></status>
</kw>
<msg timestamp="20210202 14:42:21.211" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:21.211" starttime="20210202 14:42:18.971"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:21.212" starttime="20210202 14:42:18.971"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:21.215" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:23.303" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:23.304" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:42:23.304" starttime="20210202 14:42:21.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:23.307" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:42:23.307" starttime="20210202 14:42:23.307"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:23.308" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:23.308" starttime="20210202 14:42:23.308"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:23.309" starttime="20210202 14:42:21.213"></status>
</kw>
<msg timestamp="20210202 14:42:23.309" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:23.309" starttime="20210202 14:42:21.212"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:23.309" starttime="20210202 14:42:21.212"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 14:42:23.309" critical="yes" starttime="20210202 14:42:18.963"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210202 14:42:23.311" starttime="20210202 14:41:54.031"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s2" name="hadoopfs-ofs">
<test id="s1-s1-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:44:00.095" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:44:00.095" starttime="20210202 14:44:00.095"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:00.096" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:44:00.096" starttime="20210202 14:44:00.095"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:00.096" starttime="20210202 14:44:00.094"></status>
</kw>
<msg timestamp="20210202 14:44:00.096" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:44:00.096" starttime="20210202 14:44:00.094"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:44:00.097" starttime="20210202 14:44:00.097"></status>
</kw>
<msg timestamp="20210202 14:44:00.097" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:44:00.097" starttime="20210202 14:44:00.096"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:00.098" starttime="20210202 14:44:00.093"></status>
</kw>
<msg timestamp="20210202 14:44:00.098" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:44:00.098" starttime="20210202 14:44:00.092"></status>
</kw>
<msg timestamp="20210202 14:44:00.098" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:44:00.098" starttime="20210202 14:44:00.091"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:44:00.099" level="INFO">${random} = 97508</msg>
<status status="PASS" endtime="20210202 14:44:00.099" starttime="20210202 14:44:00.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:44:00.105" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-97508 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:44:03.393" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:44:03.394" level="INFO">${output} = 2021-02-02 14:44:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 ...</msg>
<status status="PASS" endtime="20210202 14:44:03.394" starttime="20210202 14:44:00.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:44:03.395" level="INFO">2021-02-02 14:44:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 14:44:02 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-02 14:44:02 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:44:02 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E0C53F9DB62F-&gt;d887a650-29e1-456b-8216-2068e8bbc2fe
2021-02-02 14:44:02 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210202 14:44:03.395" starttime="20210202 14:44:03.394"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:44:03.396" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:44:03.396" starttime="20210202 14:44:03.395"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:03.396" starttime="20210202 14:44:00.100"></status>
</kw>
<msg timestamp="20210202 14:44:03.396" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:44:03.397" starttime="20210202 14:44:00.100"></status>
</kw>
<msg timestamp="20210202 14:44:03.397" level="INFO">${result} = 2021-02-02 14:44:01 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:02 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 ...</msg>
<status status="PASS" endtime="20210202 14:44:03.397" starttime="20210202 14:44:00.099"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:44:03.400" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:44:05.210" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:44:05.210" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:42 ofs://om/volume1/bucket1/ozone-63096
-rw-...</msg>
<status status="PASS" endtime="20210202 14:44:05.210" starttime="20210202 14:44:03.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:44:05.212" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:42 ofs://om/volume1/bucket1/ozone-63096
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:44 ofs://om/volume1/bucket1/ozone-97508
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:43 ofs://om/volume1/bucket1/wordcount-D8lHA9DO.txt</msg>
<status status="PASS" endtime="20210202 14:44:05.212" starttime="20210202 14:44:05.211"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:44:05.212" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:44:05.213" starttime="20210202 14:44:05.212"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:05.213" starttime="20210202 14:44:03.398"></status>
</kw>
<msg timestamp="20210202 14:44:05.213" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:44:05.213" starttime="20210202 14:44:03.398"></status>
</kw>
<msg timestamp="20210202 14:44:05.213" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:42 ofs://om/volume1/bucket1/ozone-63096
-rw-...</msg>
<status status="PASS" endtime="20210202 14:44:05.213" starttime="20210202 14:44:03.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:44:05.214" starttime="20210202 14:44:05.213"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 14:44:05.214" critical="yes" starttime="20210202 14:44:00.090"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 14:44:05.215" starttime="20210202 14:44:00.028"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s1-s3" name="hadoopfs-o3fs">
<test id="s1-s1-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:42:28.215" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:42:28.215" starttime="20210202 14:42:28.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:42:28.215" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:42:28.216" starttime="20210202 14:42:28.215"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:28.216" starttime="20210202 14:42:28.214"></status>
</kw>
<msg timestamp="20210202 14:42:28.216" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:42:28.216" starttime="20210202 14:42:28.213"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:28.216" starttime="20210202 14:42:28.213"></status>
</kw>
<msg timestamp="20210202 14:42:28.216" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:42:28.216" starttime="20210202 14:42:28.212"></status>
</kw>
<msg timestamp="20210202 14:42:28.217" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:42:28.217" starttime="20210202 14:42:28.211"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:42:28.217" level="INFO">${random} = 63096</msg>
<status status="PASS" endtime="20210202 14:42:28.217" starttime="20210202 14:42:28.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:28.221" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-63096 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:31.768" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:31.768" level="INFO">${output} = 2021-02-02 14:42:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:42:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 ...</msg>
<status status="PASS" endtime="20210202 14:42:31.768" starttime="20210202 14:42:28.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:31.770" level="INFO">2021-02-02 14:42:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:42:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 14:42:30 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-02 14:42:30 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:42:30 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-48D151ADD807-&gt;f96436cb-6bc4-4ced-b909-e26a78940932
2021-02-02 14:42:30 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210202 14:42:31.771" starttime="20210202 14:42:31.769"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:31.771" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:31.771" starttime="20210202 14:42:31.771"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:31.772" starttime="20210202 14:42:28.218"></status>
</kw>
<msg timestamp="20210202 14:42:31.772" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:31.772" starttime="20210202 14:42:28.218"></status>
</kw>
<msg timestamp="20210202 14:42:31.773" level="INFO">${result} = 2021-02-02 14:42:30 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:42:30 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 ...</msg>
<status status="PASS" endtime="20210202 14:42:31.773" starttime="20210202 14:42:28.217"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:31.777" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:33.603" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:33.603" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:42 o3fs://bucket1.volume1.om/ozone-63096
dr...</msg>
<status status="PASS" endtime="20210202 14:42:33.603" starttime="20210202 14:42:31.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:33.605" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:42 o3fs://bucket1.volume1.om/ozone-63096
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:42:33.605" starttime="20210202 14:42:33.604"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:33.605" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:33.605" starttime="20210202 14:42:33.605"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:33.606" starttime="20210202 14:42:31.774"></status>
</kw>
<msg timestamp="20210202 14:42:33.606" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:33.606" starttime="20210202 14:42:31.774"></status>
</kw>
<msg timestamp="20210202 14:42:33.606" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:42 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      14978 2021-02-02 14:42 o3fs://bucket1.volume1.om/ozone-63096
dr...</msg>
<status status="PASS" endtime="20210202 14:42:33.606" starttime="20210202 14:42:31.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:42:33.607" starttime="20210202 14:42:33.606"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 14:42:33.607" critical="yes" starttime="20210202 14:42:28.210"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 14:42:33.608" starttime="20210202 14:42:28.147"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s4" name="mapreduce-ofs">
<test id="s1-s1-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:44:09.805" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:44:09.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:44:09.812" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:09.812" starttime="20210202 14:44:09.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:44:09.813" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:09.813" starttime="20210202 14:44:09.812"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:44:09.814" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:44:09.814" starttime="20210202 14:44:09.813"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:09.814" starttime="20210202 14:44:09.802"></status>
</kw>
<msg timestamp="20210202 14:44:09.814" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:44:09.814" starttime="20210202 14:44:09.801"></status>
</kw>
<msg timestamp="20210202 14:44:09.815" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:09.815" starttime="20210202 14:44:09.801"></status>
</kw>
<msg timestamp="20210202 14:44:09.815" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:09.815" starttime="20210202 14:44:09.800"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:44:09.820" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:44:09.821" starttime="20210202 14:44:09.820"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:09.821" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:44:09.821" starttime="20210202 14:44:09.821"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:09.822" starttime="20210202 14:44:09.819"></status>
</kw>
<msg timestamp="20210202 14:44:09.822" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:44:09.822" starttime="20210202 14:44:09.819"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:44:09.823" starttime="20210202 14:44:09.823"></status>
</kw>
<msg timestamp="20210202 14:44:09.823" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:44:09.823" starttime="20210202 14:44:09.822"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:09.823" starttime="20210202 14:44:09.818"></status>
</kw>
<msg timestamp="20210202 14:44:09.824" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:44:09.824" starttime="20210202 14:44:09.816"></status>
</kw>
<msg timestamp="20210202 14:44:09.824" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:44:09.824" starttime="20210202 14:44:09.815"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:44:09.827" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:44:46.745" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:44:46.745" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:44:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:11 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210202 14:44:46.745" starttime="20210202 14:44:09.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:44:46.746" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:44:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:11 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 14:44:11 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-02 14:44:12 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:44:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8434CE1F3628-&gt;d887a650-29e1-456b-8216-2068e8bbc2fe
2021-02-02 14:44:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-02 14:44:12 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4A70926B55F7-&gt;f96436cb-6bc4-4ced-b909-e26a78940932
2021-02-02 14:44:12 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-02 14:44:12 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:44:13 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:44:13 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-02 14:44:13 INFO  JobSubmitter:198 - number of splits:3
2021-02-02 14:44:13 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612276869706_0003
2021-02-02 14:44:13 INFO  YarnClientImpl:273 - Submitted application application_1612276869706_0003
2021-02-02 14:44:13 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612276869706_0003/
2021-02-02 14:44:13 INFO  Job:1339 - Running job: job_1612276869706_0003
2021-02-02 14:44:21 INFO  Job:1360 - Job job_1612276869706_0003 running in uber mode : false
2021-02-02 14:44:21 INFO  Job:1367 -  map 0% reduce 0%
2021-02-02 14:44:27 INFO  Job:1367 -  map 33% reduce 0%
2021-02-02 14:44:32 INFO  Job:1367 -  map 67% reduce 0%
2021-02-02 14:44:38 INFO  Job:1367 -  map 100% reduce 0%
2021-02-02 14:44:45 INFO  Job:1367 -  map 100% reduce 100%
2021-02-02 14:44:46 INFO  Job:1378 - Job job_1612276869706_0003 completed successfully
2021-02-02 14:44:46 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610717
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=20
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41504
		Total time spent by all reduces in occupied slots (ms)=25400
		Total time spent by all map tasks (ms)=10376
		Total time spent by all reduce tasks (ms)=6350
		Total vcore-milliseconds taken by all map tasks=10376
		Total vcore-milliseconds taken by all reduce tasks=6350
		Total megabyte-milliseconds taken by all map tasks=42500096
		Total megabyte-milliseconds taken by all reduce tasks=26009600
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=551
		CPU time spent (ms)=6900
		Physical memory (bytes) snapshot=1145217024
		Virtual memory (bytes) snapshot=15770435584
		Total committed heap usage (bytes)=976748544
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.377 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210202 14:44:46.746" starttime="20210202 14:44:46.745"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:44:46.747" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:44:46.747" starttime="20210202 14:44:46.746"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.747" starttime="20210202 14:44:09.825"></status>
</kw>
<msg timestamp="20210202 14:44:46.747" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:44:46.747" starttime="20210202 14:44:09.825"></status>
</kw>
<msg timestamp="20210202 14:44:46.748" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:44:11 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:11 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210202 14:44:46.748" starttime="20210202 14:44:09.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:44:46.749" starttime="20210202 14:44:46.748"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:44:46.749" critical="yes" starttime="20210202 14:44:09.800"></status>
</test>
<test id="s1-s1-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:44:46.754" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:44:46.758" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:44:46.758" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:46.759" starttime="20210202 14:44:46.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:44:46.759" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:46.760" starttime="20210202 14:44:46.759"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:44:46.760" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:44:46.760" starttime="20210202 14:44:46.760"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.761" starttime="20210202 14:44:46.752"></status>
</kw>
<msg timestamp="20210202 14:44:46.761" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:44:46.761" starttime="20210202 14:44:46.751"></status>
</kw>
<msg timestamp="20210202 14:44:46.761" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:46.761" starttime="20210202 14:44:46.751"></status>
</kw>
<msg timestamp="20210202 14:44:46.761" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:44:46.761" starttime="20210202 14:44:46.750"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:44:46.762" level="INFO">${random} = KOQJl44N</msg>
<status status="PASS" endtime="20210202 14:44:46.762" starttime="20210202 14:44:46.761"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:44:46.766" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:44:46.766" starttime="20210202 14:44:46.765"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:46.766" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:44:46.766" starttime="20210202 14:44:46.766"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.767" starttime="20210202 14:44:46.765"></status>
</kw>
<msg timestamp="20210202 14:44:46.767" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:44:46.767" starttime="20210202 14:44:46.764"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:44:46.768" starttime="20210202 14:44:46.768"></status>
</kw>
<msg timestamp="20210202 14:44:46.768" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:44:46.768" starttime="20210202 14:44:46.767"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.768" starttime="20210202 14:44:46.764"></status>
</kw>
<msg timestamp="20210202 14:44:46.769" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:44:46.769" starttime="20210202 14:44:46.763"></status>
</kw>
<msg timestamp="20210202 14:44:46.769" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:44:46.769" starttime="20210202 14:44:46.762"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:44:46.773" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:44:46.773" starttime="20210202 14:44:46.773"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:46.774" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:44:46.774" starttime="20210202 14:44:46.774"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.775" starttime="20210202 14:44:46.772"></status>
</kw>
<msg timestamp="20210202 14:44:46.775" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:44:46.775" starttime="20210202 14:44:46.772"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:44:46.777" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210202 14:44:46.777" starttime="20210202 14:44:46.776"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:46.777" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210202 14:44:46.777" starttime="20210202 14:44:46.777"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.778" starttime="20210202 14:44:46.775"></status>
</kw>
<msg timestamp="20210202 14:44:46.778" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210202 14:44:46.778" starttime="20210202 14:44:46.775"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.778" starttime="20210202 14:44:46.771"></status>
</kw>
<msg timestamp="20210202 14:44:46.778" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 14:44:46.778" starttime="20210202 14:44:46.770"></status>
</kw>
<msg timestamp="20210202 14:44:46.779" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 14:44:46.779" starttime="20210202 14:44:46.769"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:44:46.783" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:44:46.783" starttime="20210202 14:44:46.782"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:46.784" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:44:46.784" starttime="20210202 14:44:46.783"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.784" starttime="20210202 14:44:46.782"></status>
</kw>
<msg timestamp="20210202 14:44:46.784" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:44:46.784" starttime="20210202 14:44:46.781"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:44:46.787" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210202 14:44:46.787" starttime="20210202 14:44:46.786"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:44:46.788" level="INFO">${result} = /wordcount-KOQJl44N.txt</msg>
<status status="PASS" endtime="20210202 14:44:46.788" starttime="20210202 14:44:46.787"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.788" starttime="20210202 14:44:46.785"></status>
</kw>
<msg timestamp="20210202 14:44:46.788" level="INFO">${path_with_leading} = /wordcount-KOQJl44N.txt</msg>
<status status="PASS" endtime="20210202 14:44:46.788" starttime="20210202 14:44:46.785"></status>
</kw>
<status status="PASS" endtime="20210202 14:44:46.788" starttime="20210202 14:44:46.780"></status>
</kw>
<msg timestamp="20210202 14:44:46.789" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-KOQJl44N.txt</msg>
<status status="PASS" endtime="20210202 14:44:46.789" starttime="20210202 14:44:46.780"></status>
</kw>
<msg timestamp="20210202 14:44:46.789" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-KOQJl44N.txt</msg>
<status status="PASS" endtime="20210202 14:44:46.789" starttime="20210202 14:44:46.779"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:44:46.792" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-KOQJl44N.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:45:20.712" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:45:20.712" level="INFO">${output} = 2021-02-02 14:44:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:44:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210202 14:45:20.713" starttime="20210202 14:44:46.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:45:20.714" level="INFO">2021-02-02 14:44:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:44:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:44:49 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:44:49 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 14:44:49 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-02 14:44:49 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:44:49 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CB26DA24466D-&gt;d887a650-29e1-456b-8216-2068e8bbc2fe
2021-02-02 14:44:49 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:44:50 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-02 14:44:50 INFO  JobSubmitter:198 - number of splits:3
2021-02-02 14:44:50 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612276869706_0004
2021-02-02 14:44:50 INFO  YarnClientImpl:273 - Submitted application application_1612276869706_0004
2021-02-02 14:44:50 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612276869706_0004/
2021-02-02 14:44:50 INFO  Job:1339 - Running job: job_1612276869706_0004
2021-02-02 14:44:58 INFO  Job:1360 - Job job_1612276869706_0004 running in uber mode : false
2021-02-02 14:44:58 INFO  Job:1367 -  map 0% reduce 0%
2021-02-02 14:45:05 INFO  Job:1367 -  map 33% reduce 0%
2021-02-02 14:45:10 INFO  Job:1367 -  map 67% reduce 0%
2021-02-02 14:45:15 INFO  Job:1367 -  map 100% reduce 0%
2021-02-02 14:45:19 INFO  Job:1367 -  map 100% reduce 100%
2021-02-02 14:45:20 INFO  Job:1378 - Job job_1612276869706_0004 completed successfully
2021-02-02 14:45:20 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673495
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=17
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39048
		Total time spent by all reduces in occupied slots (ms)=14708
		Total time spent by all map tasks (ms)=9762
		Total time spent by all reduce tasks (ms)=3677
		Total vcore-milliseconds taken by all map tasks=9762
		Total vcore-milliseconds taken by all reduce tasks=3677
		Total megabyte-milliseconds taken by all map tasks=39985152
		Total megabyte-milliseconds taken by all reduce tasks=15060992
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=512
		CPU time spent (ms)=6110
		Physical memory (bytes) snapshot=1121099776
		Virtual memory (bytes) snapshot=15739674624
		Total committed heap usage (bytes)=1060634624
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210202 14:45:20.714" starttime="20210202 14:45:20.713"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:45:20.715" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:45:20.715" starttime="20210202 14:45:20.714"></status>
</kw>
<status status="PASS" endtime="20210202 14:45:20.715" starttime="20210202 14:44:46.790"></status>
</kw>
<msg timestamp="20210202 14:45:20.715" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:45:20.715" starttime="20210202 14:44:46.790"></status>
</kw>
<msg timestamp="20210202 14:45:20.716" level="INFO">${output} = 2021-02-02 14:44:48 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:44:48 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210202 14:45:20.716" starttime="20210202 14:44:46.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 14:45:20.717" starttime="20210202 14:45:20.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:45:20.717" starttime="20210202 14:45:20.717"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:45:20.717" critical="yes" starttime="20210202 14:44:46.750"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 14:45:20.719" starttime="20210202 14:44:09.741"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s1-s5" name="mapreduce-o3fs">
<test id="s1-s1-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:38.240" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:42:38.246" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:42:38.246" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:42:38.246" starttime="20210202 14:42:38.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:42:38.247" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:42:38.247" starttime="20210202 14:42:38.246"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:42:38.247" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:42:38.247" starttime="20210202 14:42:38.247"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:38.248" starttime="20210202 14:42:38.235"></status>
</kw>
<msg timestamp="20210202 14:42:38.248" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:42:38.248" starttime="20210202 14:42:38.235"></status>
</kw>
<msg timestamp="20210202 14:42:38.248" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:42:38.248" starttime="20210202 14:42:38.235"></status>
</kw>
<msg timestamp="20210202 14:42:38.249" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:42:38.249" starttime="20210202 14:42:38.234"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:42:38.254" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:42:38.254" starttime="20210202 14:42:38.253"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:42:38.255" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:42:38.255" starttime="20210202 14:42:38.254"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:38.255" starttime="20210202 14:42:38.253"></status>
</kw>
<msg timestamp="20210202 14:42:38.255" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:42:38.255" starttime="20210202 14:42:38.252"></status>
</kw>
<status status="PASS" endtime="20210202 14:42:38.255" starttime="20210202 14:42:38.251"></status>
</kw>
<msg timestamp="20210202 14:42:38.255" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:42:38.255" starttime="20210202 14:42:38.250"></status>
</kw>
<msg timestamp="20210202 14:42:38.256" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:42:38.256" starttime="20210202 14:42:38.249"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:42:38.259" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:43:20.384" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:43:20.384" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:42:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:42:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210202 14:43:20.384" starttime="20210202 14:42:38.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:43:20.386" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:42:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:42:40 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 14:42:40 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-02 14:42:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:42:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-6F293C6B1447-&gt;d887a650-29e1-456b-8216-2068e8bbc2fe
2021-02-02 14:42:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-02 14:42:41 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-FAA336A14E4B-&gt;f96436cb-6bc4-4ced-b909-e26a78940932
2021-02-02 14:42:41 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-02 14:42:41 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:42:41 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-02 14:42:44 INFO  JobSubmitter:198 - number of splits:3
2021-02-02 14:42:44 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612276869706_0001
2021-02-02 14:42:45 INFO  YarnClientImpl:273 - Submitted application application_1612276869706_0001
2021-02-02 14:42:45 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612276869706_0001/
2021-02-02 14:42:45 INFO  Job:1339 - Running job: job_1612276869706_0001
2021-02-02 14:42:55 INFO  Job:1360 - Job job_1612276869706_0001 running in uber mode : false
2021-02-02 14:42:55 INFO  Job:1367 -  map 0% reduce 0%
2021-02-02 14:43:02 INFO  Job:1367 -  map 33% reduce 0%
2021-02-02 14:43:06 INFO  Job:1367 -  map 67% reduce 0%
2021-02-02 14:43:11 INFO  Job:1367 -  map 100% reduce 0%
2021-02-02 14:43:16 INFO  Job:1367 -  map 100% reduce 100%
2021-02-02 14:43:19 INFO  Job:1378 - Job job_1612276869706_0001 completed successfully
2021-02-02 14:43:19 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=610929
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=810
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=20
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41532
		Total time spent by all reduces in occupied slots (ms)=15392
		Total time spent by all map tasks (ms)=10383
		Total time spent by all reduce tasks (ms)=3848
		Total vcore-milliseconds taken by all map tasks=10383
		Total vcore-milliseconds taken by all reduce tasks=3848
		Total megabyte-milliseconds taken by all map tasks=42528768
		Total megabyte-milliseconds taken by all reduce tasks=15761408
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=456
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=986
		CPU time spent (ms)=7050
		Physical memory (bytes) snapshot=1661558784
		Virtual memory (bytes) snapshot=15763570688
		Total committed heap usage (bytes)=1518862336
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 38.334 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210202 14:43:20.386" starttime="20210202 14:43:20.385"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:43:20.386" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:43:20.387" starttime="20210202 14:43:20.386"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.387" starttime="20210202 14:42:38.257"></status>
</kw>
<msg timestamp="20210202 14:43:20.387" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:43:20.387" starttime="20210202 14:42:38.257"></status>
</kw>
<msg timestamp="20210202 14:43:20.388" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:42:40 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:42:40 INFO  MetricsSystemImpl:375 - Scheduled snap...</msg>
<status status="PASS" endtime="20210202 14:43:20.388" starttime="20210202 14:42:38.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:43:20.388" starttime="20210202 14:43:20.388"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:43:20.389" critical="yes" starttime="20210202 14:42:38.233"></status>
</test>
<test id="s1-s1-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:43:20.394" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:43:20.400" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:43:20.400" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:43:20.400" starttime="20210202 14:43:20.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:43:20.401" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:43:20.401" starttime="20210202 14:43:20.400"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:43:20.401" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:43:20.401" starttime="20210202 14:43:20.401"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.402" starttime="20210202 14:43:20.392"></status>
</kw>
<msg timestamp="20210202 14:43:20.402" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:43:20.402" starttime="20210202 14:43:20.391"></status>
</kw>
<msg timestamp="20210202 14:43:20.402" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:43:20.402" starttime="20210202 14:43:20.391"></status>
</kw>
<msg timestamp="20210202 14:43:20.403" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar</msg>
<status status="PASS" endtime="20210202 14:43:20.403" starttime="20210202 14:43:20.390"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:43:20.403" level="INFO">${random} = D8lHA9DO</msg>
<status status="PASS" endtime="20210202 14:43:20.403" starttime="20210202 14:43:20.403"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:43:20.407" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:43:20.407" starttime="20210202 14:43:20.407"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:43:20.408" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:43:20.408" starttime="20210202 14:43:20.407"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.408" starttime="20210202 14:43:20.406"></status>
</kw>
<msg timestamp="20210202 14:43:20.408" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:43:20.408" starttime="20210202 14:43:20.406"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.408" starttime="20210202 14:43:20.405"></status>
</kw>
<msg timestamp="20210202 14:43:20.409" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:43:20.409" starttime="20210202 14:43:20.404"></status>
</kw>
<msg timestamp="20210202 14:43:20.409" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:43:20.409" starttime="20210202 14:43:20.403"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:43:20.413" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:43:20.413" starttime="20210202 14:43:20.413"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:43:20.414" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:43:20.414" starttime="20210202 14:43:20.413"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.414" starttime="20210202 14:43:20.412"></status>
</kw>
<msg timestamp="20210202 14:43:20.414" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:43:20.414" starttime="20210202 14:43:20.411"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.414" starttime="20210202 14:43:20.411"></status>
</kw>
<msg timestamp="20210202 14:43:20.414" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 14:43:20.414" starttime="20210202 14:43:20.410"></status>
</kw>
<msg timestamp="20210202 14:43:20.415" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 14:43:20.415" starttime="20210202 14:43:20.409"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:43:20.419" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:43:20.419" starttime="20210202 14:43:20.418"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:43:20.419" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:43:20.419" starttime="20210202 14:43:20.419"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.419" starttime="20210202 14:43:20.417"></status>
</kw>
<msg timestamp="20210202 14:43:20.419" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:43:20.420" starttime="20210202 14:43:20.417"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:20.420" starttime="20210202 14:43:20.416"></status>
</kw>
<msg timestamp="20210202 14:43:20.420" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-D8lHA9DO.txt</msg>
<status status="PASS" endtime="20210202 14:43:20.420" starttime="20210202 14:43:20.416"></status>
</kw>
<msg timestamp="20210202 14:43:20.420" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-D8lHA9DO.txt</msg>
<status status="PASS" endtime="20210202 14:43:20.420" starttime="20210202 14:43:20.415"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:43:20.424" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-D8lHA9DO.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:43:55.395" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:43:55.395" level="INFO">${output} = 2021-02-02 14:43:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:43:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210202 14:43:55.395" starttime="20210202 14:43:20.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:43:55.397" level="INFO">2021-02-02 14:43:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:43:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:43:22 INFO  MetricsConfig:112 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:43:22 INFO  MetricsSystemImpl:375 - Scheduled snapshot period at 10 second(s).
2021-02-02 14:43:22 INFO  MetricsSystemImpl:192 - XceiverClientMetrics metrics system started
2021-02-02 14:43:23 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:43:23 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7774B2C355F8-&gt;f96436cb-6bc4-4ced-b909-e26a78940932
2021-02-02 14:43:23 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:43:23 INFO  FileInputFormat:283 - Total input paths to process : 3
2021-02-02 14:43:24 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-E1ACC8335A22-&gt;d887a650-29e1-456b-8216-2068e8bbc2fe
2021-02-02 14:43:24 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:43:24 INFO  JobSubmitter:198 - number of splits:3
2021-02-02 14:43:24 INFO  JobSubmitter:287 - Submitting tokens for job: job_1612276869706_0002
2021-02-02 14:43:24 INFO  YarnClientImpl:273 - Submitted application application_1612276869706_0002
2021-02-02 14:43:24 INFO  Job:1294 - The url to track the job: http://rm:8088/proxy/application_1612276869706_0002/
2021-02-02 14:43:24 INFO  Job:1339 - Running job: job_1612276869706_0002
2021-02-02 14:43:32 INFO  Job:1360 - Job job_1612276869706_0002 running in uber mode : false
2021-02-02 14:43:32 INFO  Job:1367 -  map 0% reduce 0%
2021-02-02 14:43:39 INFO  Job:1367 -  map 33% reduce 0%
2021-02-02 14:43:44 INFO  Job:1367 -  map 67% reduce 0%
2021-02-02 14:43:49 INFO  Job:1367 -  map 100% reduce 0%
2021-02-02 14:43:53 INFO  Job:1367 -  map 100% reduce 100%
2021-02-02 14:43:54 INFO  Job:1378 - Job job_1612276869706_0002 completed successfully
2021-02-02 14:43:55 INFO  Job:1385 - Counters: 49
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=673579
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=17
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40544
		Total time spent by all reduces in occupied slots (ms)=15556
		Total time spent by all map tasks (ms)=10136
		Total time spent by all reduce tasks (ms)=3889
		Total vcore-milliseconds taken by all map tasks=10136
		Total vcore-milliseconds taken by all reduce tasks=3889
		Total megabyte-milliseconds taken by all map tasks=41517056
		Total megabyte-milliseconds taken by all reduce tasks=15929344
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=522
		CPU time spent (ms)=7100
		Physical memory (bytes) snapshot=1166651392
		Virtual memory (bytes) snapshot=15779528704
		Total committed heap usage (bytes)=1054343168
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210202 14:43:55.397" starttime="20210202 14:43:55.396"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:43:55.398" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:43:55.398" starttime="20210202 14:43:55.397"></status>
</kw>
<status status="PASS" endtime="20210202 14:43:55.399" starttime="20210202 14:43:20.421"></status>
</kw>
<msg timestamp="20210202 14:43:55.399" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:43:55.399" starttime="20210202 14:43:20.421"></status>
</kw>
<msg timestamp="20210202 14:43:55.399" level="INFO">${output} = 2021-02-02 14:43:22 INFO  RMProxy:98 - Connecting to ResourceManager at rm/172.21.0.3:8032
2021-02-02 14:43:22 INFO  JobSubmissionFiles:127 - Permissions on staging directory /user/hadoop/.staging are...</msg>
<status status="PASS" endtime="20210202 14:43:55.399" starttime="20210202 14:43:20.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 14:43:55.400" starttime="20210202 14:43:55.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:43:55.400" starttime="20210202 14:43:55.400"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:43:55.400" critical="yes" starttime="20210202 14:43:20.389"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 14:43:55.402" starttime="20210202 14:42:38.168"></status>
</suite>
<status status="PASS" elapsedtime="188140" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s2" name="hadoop31">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s2-s1" name="Createmrenv">
<test id="s1-s2-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:28.942" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:31.445" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 14:46:31.445" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:46:31.445" starttime="20210202 14:46:28.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:31.446" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:46:31.446" starttime="20210202 14:46:31.445"></status>
</kw>
<msg timestamp="20210202 14:46:31.447" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:46:31.447" starttime="20210202 14:46:28.936"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:31.453" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:33.749" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:33.749" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:33.749" starttime="20210202 14:46:31.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:33.750" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:33.750" starttime="20210202 14:46:33.749"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:33.751" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:33.751" starttime="20210202 14:46:33.750"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:33.751" starttime="20210202 14:46:31.450"></status>
</kw>
<msg timestamp="20210202 14:46:33.751" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:33.751" starttime="20210202 14:46:31.449"></status>
</kw>
<msg timestamp="20210202 14:46:33.752" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210202 14:46:33.752" starttime="20210202 14:46:31.448"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210202 14:46:33.752" starttime="20210202 14:46:33.752"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:33.753" starttime="20210202 14:46:31.448"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:33.753" starttime="20210202 14:46:31.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:33.758" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:35.957" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:35.957" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:35.957" starttime="20210202 14:46:33.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:35.958" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:35.959" starttime="20210202 14:46:35.958"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:35.959" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:35.959" starttime="20210202 14:46:35.959"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:35.960" starttime="20210202 14:46:33.754"></status>
</kw>
<msg timestamp="20210202 14:46:35.960" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:35.960" starttime="20210202 14:46:33.754"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:35.960" starttime="20210202 14:46:33.754"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:35.960" starttime="20210202 14:46:33.753"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:35.960" starttime="20210202 14:46:33.753"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210202 14:46:35.961" starttime="20210202 14:46:35.960"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:35.964" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:38.167" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:38.167" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:46...</msg>
<status status="PASS" endtime="20210202 14:46:38.167" starttime="20210202 14:46:35.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:38.168" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:46:35.914Z",
  "modificationTime" : "2021-02-02T14:46:35.914Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 14:46:38.168" starttime="20210202 14:46:38.167"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:38.169" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:38.169" starttime="20210202 14:46:38.169"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:38.170" starttime="20210202 14:46:35.962"></status>
</kw>
<msg timestamp="20210202 14:46:38.170" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:38.170" starttime="20210202 14:46:35.962"></status>
</kw>
<msg timestamp="20210202 14:46:38.170" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:46...</msg>
<status status="PASS" endtime="20210202 14:46:38.170" starttime="20210202 14:46:35.961"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210202 14:46:38.171" starttime="20210202 14:46:38.171"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:46:38.175" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:46:38.175" starttime="20210202 14:46:38.175"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:46:38.176" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:46:38.176" starttime="20210202 14:46:38.175"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:38.176" starttime="20210202 14:46:38.174"></status>
</kw>
<msg timestamp="20210202 14:46:38.176" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:46:38.176" starttime="20210202 14:46:38.174"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:38.177" starttime="20210202 14:46:38.173"></status>
</kw>
<msg timestamp="20210202 14:46:38.177" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 14:46:38.177" starttime="20210202 14:46:38.172"></status>
</kw>
<msg timestamp="20210202 14:46:38.178" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 14:46:38.178" starttime="20210202 14:46:38.171"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:38.182" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:40.612" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:40.612" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:40.612" starttime="20210202 14:46:38.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:40.613" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:40.613" starttime="20210202 14:46:40.612"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:40.614" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:40.614" starttime="20210202 14:46:40.613"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:40.614" starttime="20210202 14:46:38.179"></status>
</kw>
<msg timestamp="20210202 14:46:40.614" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:40.614" starttime="20210202 14:46:38.179"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:40.615" starttime="20210202 14:46:38.178"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:40.619" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:45.950" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:45.950" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:45.950" starttime="20210202 14:46:40.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:45.952" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:45.952" starttime="20210202 14:46:45.951"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:45.952" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:45.953" starttime="20210202 14:46:45.952"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:45.953" starttime="20210202 14:46:40.616"></status>
</kw>
<msg timestamp="20210202 14:46:45.953" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:45.953" starttime="20210202 14:46:40.616"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:45.954" starttime="20210202 14:46:40.615"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:45.957" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:50.173" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:50.173" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:50.173" starttime="20210202 14:46:45.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:50.174" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:50.174" starttime="20210202 14:46:50.173"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:50.175" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:50.175" starttime="20210202 14:46:50.174"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:50.175" starttime="20210202 14:46:45.955"></status>
</kw>
<msg timestamp="20210202 14:46:50.175" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:50.175" starttime="20210202 14:46:45.954"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:50.175" starttime="20210202 14:46:45.954"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:50.179" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:54.251" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:54.251" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:54.251" starttime="20210202 14:46:50.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:54.252" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:54.252" starttime="20210202 14:46:54.251"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:54.253" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:54.253" starttime="20210202 14:46:54.252"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:54.253" starttime="20210202 14:46:50.177"></status>
</kw>
<msg timestamp="20210202 14:46:54.253" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:54.253" starttime="20210202 14:46:50.176"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:54.254" starttime="20210202 14:46:50.176"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 14:46:54.254" critical="yes" starttime="20210202 14:46:28.935"></status>
</test>
<test id="s1-s2-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:46:54.260" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:46:54.260" starttime="20210202 14:46:54.259"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:46:54.261" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:46:54.261" starttime="20210202 14:46:54.260"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:54.261" starttime="20210202 14:46:54.258"></status>
</kw>
<msg timestamp="20210202 14:46:54.261" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:46:54.261" starttime="20210202 14:46:54.258"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:54.261" starttime="20210202 14:46:54.257"></status>
</kw>
<msg timestamp="20210202 14:46:54.262" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:46:54.262" starttime="20210202 14:46:54.256"></status>
</kw>
<msg timestamp="20210202 14:46:54.262" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:46:54.262" starttime="20210202 14:46:54.255"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:54.265" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:56.376" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:56.376" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:56.376" starttime="20210202 14:46:54.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:56.378" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:56.378" starttime="20210202 14:46:56.377"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:56.378" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:56.378" starttime="20210202 14:46:56.378"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:56.379" starttime="20210202 14:46:54.263"></status>
</kw>
<msg timestamp="20210202 14:46:56.379" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:56.379" starttime="20210202 14:46:54.263"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:56.379" starttime="20210202 14:46:54.262"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:46:56.383" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:46:58.583" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:46:58.584" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:46:58.584" starttime="20210202 14:46:56.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:46:58.585" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:46:58.585" starttime="20210202 14:46:58.584"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:46:58.586" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:46:58.586" starttime="20210202 14:46:58.585"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:58.586" starttime="20210202 14:46:56.381"></status>
</kw>
<msg timestamp="20210202 14:46:58.586" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:46:58.587" starttime="20210202 14:46:56.380"></status>
</kw>
<status status="PASS" endtime="20210202 14:46:58.587" starttime="20210202 14:46:56.379"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 14:46:58.587" critical="yes" starttime="20210202 14:46:54.254"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210202 14:46:58.588" starttime="20210202 14:46:28.849"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s2" name="hadoopfs-ofs">
<test id="s1-s2-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:48:38.021" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:48:38.021" starttime="20210202 14:48:38.020"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:48:38.022" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:48:38.022" starttime="20210202 14:48:38.021"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:38.022" starttime="20210202 14:48:38.019"></status>
</kw>
<msg timestamp="20210202 14:48:38.022" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:48:38.022" starttime="20210202 14:48:38.018"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:48:38.023" starttime="20210202 14:48:38.023"></status>
</kw>
<msg timestamp="20210202 14:48:38.023" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:48:38.023" starttime="20210202 14:48:38.022"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:38.024" starttime="20210202 14:48:38.017"></status>
</kw>
<msg timestamp="20210202 14:48:38.024" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:48:38.024" starttime="20210202 14:48:38.016"></status>
</kw>
<msg timestamp="20210202 14:48:38.024" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:48:38.025" starttime="20210202 14:48:38.015"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:48:38.025" level="INFO">${random} = 34390</msg>
<status status="PASS" endtime="20210202 14:48:38.025" starttime="20210202 14:48:38.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:48:38.036" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-34390 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:48:44.141" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:48:44.141" level="INFO">${output} = 2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:48:44.141" starttime="20210202 14:48:38.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:48:44.142" level="INFO">2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:40 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-02 14:48:40 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:48:40 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:48:40 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:48:40 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:48:40 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-490BD8C1D1E6-&gt;59697009-9123-4502-a3a0-d246dd071405
2021-02-02 14:48:40 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:48:43 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:48:44.143" starttime="20210202 14:48:44.142"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:48:44.143" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:48:44.143" starttime="20210202 14:48:44.143"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:44.144" starttime="20210202 14:48:38.028"></status>
</kw>
<msg timestamp="20210202 14:48:44.144" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:48:44.144" starttime="20210202 14:48:38.028"></status>
</kw>
<msg timestamp="20210202 14:48:44.144" level="INFO">${result} = 2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:39 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:39 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:48:44.144" starttime="20210202 14:48:38.025"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:48:44.148" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:48:46.084" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:48:46.084" level="INFO">${output} = 2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:48:46.084" starttime="20210202 14:48:44.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:48:46.085" level="INFO">2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:46 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-02 14:48 ofs://om/volume1/bucket1/ozone-34390
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-02 14:47 ofs://om/volume1/bucket1/ozone-84013
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:46 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:48 ofs://om/volume1/bucket1/wordcount-sdqD6Cd8.txt
2021-02-02 14:48:46 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:48:46.085" starttime="20210202 14:48:46.085"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:48:46.092" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:48:46.092" starttime="20210202 14:48:46.085"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:46.092" starttime="20210202 14:48:44.146"></status>
</kw>
<msg timestamp="20210202 14:48:46.092" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:48:46.093" starttime="20210202 14:48:44.145"></status>
</kw>
<msg timestamp="20210202 14:48:46.093" level="INFO">${result} = 2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:45 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:45 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:48:46.093" starttime="20210202 14:48:44.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:48:46.094" starttime="20210202 14:48:46.093"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 14:48:46.094" critical="yes" starttime="20210202 14:48:38.014"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 14:48:46.095" starttime="20210202 14:48:37.947"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s2-s3" name="hadoopfs-o3fs">
<test id="s1-s2-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:47:03.270" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:47:03.270" starttime="20210202 14:47:03.269"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:47:03.271" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:47:03.271" starttime="20210202 14:47:03.270"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:03.271" starttime="20210202 14:47:03.269"></status>
</kw>
<msg timestamp="20210202 14:47:03.271" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:47:03.271" starttime="20210202 14:47:03.268"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:03.272" starttime="20210202 14:47:03.267"></status>
</kw>
<msg timestamp="20210202 14:47:03.272" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:47:03.272" starttime="20210202 14:47:03.266"></status>
</kw>
<msg timestamp="20210202 14:47:03.272" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:47:03.272" starttime="20210202 14:47:03.265"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:47:03.273" level="INFO">${random} = 84013</msg>
<status status="PASS" endtime="20210202 14:47:03.273" starttime="20210202 14:47:03.272"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:47:03.278" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-84013 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:47:06.944" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:47:06.944" level="INFO">${output} = 2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:47:06.944" starttime="20210202 14:47:03.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:47:06.947" level="INFO">2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:05 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-02 14:47:05 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:47:05 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:47:05 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:47:05 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:47:05 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-BFDBE8830D65-&gt;59697009-9123-4502-a3a0-d246dd071405
2021-02-02 14:47:05 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:47:06 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:47:06.947" starttime="20210202 14:47:06.945"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:47:06.948" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:47:06.948" starttime="20210202 14:47:06.947"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:06.948" starttime="20210202 14:47:03.274"></status>
</kw>
<msg timestamp="20210202 14:47:06.948" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:47:06.948" starttime="20210202 14:47:03.274"></status>
</kw>
<msg timestamp="20210202 14:47:06.949" level="INFO">${result} = 2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:04 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:04 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:47:06.949" starttime="20210202 14:47:03.273"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:47:06.952" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:47:08.831" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:47:08.831" level="INFO">${output} = 2021-02-02 14:47:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:47:08.831" starttime="20210202 14:47:06.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:47:08.832" level="INFO">2021-02-02 14:47:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:08 INFO  Configuration:3318 - Removed undeclared tags:
Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:46 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21867 2021-02-02 14:47 o3fs://bucket1.volume1.om/ozone-84013
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:46 o3fs://bucket1.volume1.om/user
2021-02-02 14:47:08 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:47:08.833" starttime="20210202 14:47:08.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:47:08.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:47:08.833" starttime="20210202 14:47:08.833"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:08.834" starttime="20210202 14:47:06.950"></status>
</kw>
<msg timestamp="20210202 14:47:08.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:47:08.834" starttime="20210202 14:47:06.949"></status>
</kw>
<msg timestamp="20210202 14:47:08.834" level="INFO">${result} = 2021-02-02 14:47:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:07 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:08 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:47:08.834" starttime="20210202 14:47:06.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:47:08.835" starttime="20210202 14:47:08.834"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 14:47:08.835" critical="yes" starttime="20210202 14:47:03.264"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 14:47:08.836" starttime="20210202 14:47:03.196"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s4" name="mapreduce-ofs">
<test id="s1-s2-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:48:50.795" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:48:50.800" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:48:50.801" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:48:50.801" starttime="20210202 14:48:50.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:48:50.801" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:48:50.802" starttime="20210202 14:48:50.801"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:48:50.802" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:48:50.802" starttime="20210202 14:48:50.802"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:50.803" starttime="20210202 14:48:50.789"></status>
</kw>
<msg timestamp="20210202 14:48:50.803" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:48:50.803" starttime="20210202 14:48:50.789"></status>
</kw>
<msg timestamp="20210202 14:48:50.803" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:48:50.803" starttime="20210202 14:48:50.788"></status>
</kw>
<msg timestamp="20210202 14:48:50.804" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:48:50.804" starttime="20210202 14:48:50.787"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:48:50.809" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:48:50.809" starttime="20210202 14:48:50.808"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:48:50.809" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:48:50.809" starttime="20210202 14:48:50.809"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:50.809" starttime="20210202 14:48:50.808"></status>
</kw>
<msg timestamp="20210202 14:48:50.810" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:48:50.810" starttime="20210202 14:48:50.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:48:50.811" starttime="20210202 14:48:50.810"></status>
</kw>
<msg timestamp="20210202 14:48:50.811" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:48:50.811" starttime="20210202 14:48:50.810"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:50.811" starttime="20210202 14:48:50.806"></status>
</kw>
<msg timestamp="20210202 14:48:50.811" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:48:50.811" starttime="20210202 14:48:50.805"></status>
</kw>
<msg timestamp="20210202 14:48:50.811" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:48:50.812" starttime="20210202 14:48:50.804"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:48:50.815" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:49:30.812" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:49:30.812" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:48:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48...</msg>
<status status="PASS" endtime="20210202 14:49:30.813" starttime="20210202 14:48:50.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:49:30.814" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:48:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:52 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:52 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-02 14:48:52 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:48:52 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:48:52 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:48:53 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:48:53 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D82647BC3F35-&gt;b11fdad9-040f-4021-986a-e73160e75d84
2021-02-02 14:48:53 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-02 14:48:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:54 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-02-02 14:48:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:54 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:48:54 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-0C8BCCCBD790-&gt;59697009-9123-4502-a3a0-d246dd071405
2021-02-02 14:48:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:48:57 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:48:57 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:48:57 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277164744_0003
2021-02-02 14:48:57 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:48:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:57 INFO  Configuration:2752 - resource-types.xml not found
2021-02-02 14:48:57 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-02 14:48:57 INFO  YarnClientImpl:324 - Submitted application application_1612277164744_0003
2021-02-02 14:48:57 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612277164744_0003/
2021-02-02 14:48:57 INFO  Job:1619 - Running job: job_1612277164744_0003
2021-02-02 14:49:04 INFO  Job:1640 - Job job_1612277164744_0003 running in uber mode : false
2021-02-02 14:49:04 INFO  Job:1647 -  map 0% reduce 0%
2021-02-02 14:49:11 INFO  Job:1647 -  map 33% reduce 0%
2021-02-02 14:49:18 INFO  Job:1647 -  map 67% reduce 0%
2021-02-02 14:49:23 INFO  Job:1647 -  map 100% reduce 0%
2021-02-02 14:49:30 INFO  Job:1647 -  map 100% reduce 100%
2021-02-02 14:49:30 INFO  Job:1658 - Job job_1612277164744_0003 completed successfully
2021-02-02 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:30 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016149
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=753
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40872
		Total time spent by all reduces in occupied slots (ms)=25048
		Total time spent by all map tasks (ms)=10218
		Total time spent by all reduce tasks (ms)=6262
		Total vcore-milliseconds taken by all map tasks=10218
		Total vcore-milliseconds taken by all reduce tasks=6262
		Total megabyte-milliseconds taken by all map tasks=41852928
		Total megabyte-milliseconds taken by all reduce tasks=25649152
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=399
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=690
		CPU time spent (ms)=7250
		Physical memory (bytes) snapshot=1269096448
		Virtual memory (bytes) snapshot=15828189184
		Total committed heap usage (bytes)=1076887552
		Peak Map Physical memory (bytes)=320720896
		Peak Map Virtual memory (bytes)=3955900416
		Peak Reduce Physical memory (bytes)=311996416
		Peak Reduce Virtual memory (bytes)=3969355776
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.087 seconds
2021-02-02 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-02 14:49:30 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:49:30.814" starttime="20210202 14:49:30.813"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:49:30.815" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:49:30.815" starttime="20210202 14:49:30.814"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.815" starttime="20210202 14:48:50.813"></status>
</kw>
<msg timestamp="20210202 14:49:30.815" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:49:30.815" starttime="20210202 14:48:50.812"></status>
</kw>
<msg timestamp="20210202 14:49:30.816" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:48:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:51 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48...</msg>
<status status="PASS" endtime="20210202 14:49:30.816" starttime="20210202 14:48:50.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:49:30.817" starttime="20210202 14:49:30.816"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:49:30.817" critical="yes" starttime="20210202 14:48:50.787"></status>
</test>
<test id="s1-s2-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:49:30.824" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:49:30.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:49:30.832" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:49:30.832" starttime="20210202 14:49:30.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:49:30.833" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:49:30.833" starttime="20210202 14:49:30.832"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:49:30.833" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:49:30.834" starttime="20210202 14:49:30.833"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.834" starttime="20210202 14:49:30.822"></status>
</kw>
<msg timestamp="20210202 14:49:30.834" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:49:30.834" starttime="20210202 14:49:30.821"></status>
</kw>
<msg timestamp="20210202 14:49:30.835" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:49:30.835" starttime="20210202 14:49:30.821"></status>
</kw>
<msg timestamp="20210202 14:49:30.835" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:49:30.835" starttime="20210202 14:49:30.820"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:49:30.836" level="INFO">${random} = 44RSaBxf</msg>
<status status="PASS" endtime="20210202 14:49:30.836" starttime="20210202 14:49:30.835"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:49:30.840" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:49:30.840" starttime="20210202 14:49:30.840"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:49:30.841" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:49:30.841" starttime="20210202 14:49:30.840"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.841" starttime="20210202 14:49:30.839"></status>
</kw>
<msg timestamp="20210202 14:49:30.842" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:49:30.842" starttime="20210202 14:49:30.838"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:49:30.843" starttime="20210202 14:49:30.842"></status>
</kw>
<msg timestamp="20210202 14:49:30.843" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:49:30.843" starttime="20210202 14:49:30.842"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.843" starttime="20210202 14:49:30.838"></status>
</kw>
<msg timestamp="20210202 14:49:30.843" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:49:30.843" starttime="20210202 14:49:30.837"></status>
</kw>
<msg timestamp="20210202 14:49:30.844" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:49:30.844" starttime="20210202 14:49:30.836"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:49:30.848" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:49:30.848" starttime="20210202 14:49:30.847"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:49:30.849" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:49:30.849" starttime="20210202 14:49:30.848"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.849" starttime="20210202 14:49:30.847"></status>
</kw>
<msg timestamp="20210202 14:49:30.849" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:49:30.849" starttime="20210202 14:49:30.846"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:49:30.851" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210202 14:49:30.851" starttime="20210202 14:49:30.851"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:49:30.852" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210202 14:49:30.852" starttime="20210202 14:49:30.851"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.852" starttime="20210202 14:49:30.850"></status>
</kw>
<msg timestamp="20210202 14:49:30.852" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210202 14:49:30.852" starttime="20210202 14:49:30.849"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.853" starttime="20210202 14:49:30.845"></status>
</kw>
<msg timestamp="20210202 14:49:30.853" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 14:49:30.853" starttime="20210202 14:49:30.845"></status>
</kw>
<msg timestamp="20210202 14:49:30.853" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 14:49:30.853" starttime="20210202 14:49:30.844"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:49:30.857" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:49:30.857" starttime="20210202 14:49:30.857"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:49:30.858" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:49:30.858" starttime="20210202 14:49:30.857"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.859" starttime="20210202 14:49:30.856"></status>
</kw>
<msg timestamp="20210202 14:49:30.859" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:49:30.859" starttime="20210202 14:49:30.856"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:49:30.861" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210202 14:49:30.861" starttime="20210202 14:49:30.860"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:49:30.862" level="INFO">${result} = /wordcount-44RSaBxf.txt</msg>
<status status="PASS" endtime="20210202 14:49:30.862" starttime="20210202 14:49:30.861"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.862" starttime="20210202 14:49:30.860"></status>
</kw>
<msg timestamp="20210202 14:49:30.862" level="INFO">${path_with_leading} = /wordcount-44RSaBxf.txt</msg>
<status status="PASS" endtime="20210202 14:49:30.862" starttime="20210202 14:49:30.859"></status>
</kw>
<status status="PASS" endtime="20210202 14:49:30.863" starttime="20210202 14:49:30.855"></status>
</kw>
<msg timestamp="20210202 14:49:30.863" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-44RSaBxf.txt</msg>
<status status="PASS" endtime="20210202 14:49:30.863" starttime="20210202 14:49:30.854"></status>
</kw>
<msg timestamp="20210202 14:49:30.863" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-44RSaBxf.txt</msg>
<status status="PASS" endtime="20210202 14:49:30.863" starttime="20210202 14:49:30.853"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:49:30.867" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-44RSaBxf.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:50:09.990" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:50:09.990" level="INFO">${output} = 2021-02-02 14:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:50:09.990" starttime="20210202 14:49:30.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:50:09.992" level="INFO">2021-02-02 14:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:33 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-02 14:49:33 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:49:33 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:49:33 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:49:33 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:49:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EB5CAB616F2C-&gt;59697009-9123-4502-a3a0-d246dd071405
2021-02-02 14:49:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:49:34 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:49:34 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-13BA42398944-&gt;b11fdad9-040f-4021-986a-e73160e75d84
2021-02-02 14:49:34 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:49:34 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:49:34 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277164744_0004
2021-02-02 14:49:34 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:49:34 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:35 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:35 INFO  Configuration:2752 - resource-types.xml not found
2021-02-02 14:49:35 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-02 14:49:35 INFO  YarnClientImpl:324 - Submitted application application_1612277164744_0004
2021-02-02 14:49:35 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612277164744_0004/
2021-02-02 14:49:35 INFO  Job:1619 - Running job: job_1612277164744_0004
2021-02-02 14:49:43 INFO  Job:1640 - Job job_1612277164744_0004 running in uber mode : false
2021-02-02 14:49:43 INFO  Job:1647 -  map 0% reduce 0%
2021-02-02 14:49:50 INFO  Job:1647 -  map 33% reduce 0%
2021-02-02 14:49:56 INFO  Job:1647 -  map 67% reduce 0%
2021-02-02 14:50:02 INFO  Job:1647 -  map 100% reduce 0%
2021-02-02 14:50:06 INFO  Job:1647 -  map 100% reduce 100%
2021-02-02 14:50:09 INFO  Job:1658 - Job job_1612277164744_0004 completed successfully
2021-02-02 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:50:09 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078831
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=42176
		Total time spent by all reduces in occupied slots (ms)=15004
		Total time spent by all map tasks (ms)=10544
		Total time spent by all reduce tasks (ms)=3751
		Total vcore-milliseconds taken by all map tasks=10544
		Total vcore-milliseconds taken by all reduce tasks=3751
		Total megabyte-milliseconds taken by all map tasks=43188224
		Total megabyte-milliseconds taken by all reduce tasks=15364096
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=566
		CPU time spent (ms)=6860
		Physical memory (bytes) snapshot=1307516928
		Virtual memory (bytes) snapshot=15788666880
		Total committed heap usage (bytes)=1137704960
		Peak Map Physical memory (bytes)=358715392
		Peak Map Virtual memory (bytes)=3945566208
		Peak Reduce Physical memory (bytes)=308690944
		Peak Reduce Virtual memory (bytes)=3970535424
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-02 14:50:09 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:50:09.992" starttime="20210202 14:50:09.991"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:50:09.993" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:50:09.993" starttime="20210202 14:50:09.992"></status>
</kw>
<status status="PASS" endtime="20210202 14:50:09.993" starttime="20210202 14:49:30.864"></status>
</kw>
<msg timestamp="20210202 14:50:09.994" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:50:09.994" starttime="20210202 14:49:30.864"></status>
</kw>
<msg timestamp="20210202 14:50:09.994" level="INFO">${output} = 2021-02-02 14:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:31 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:49:32 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:50:09.994" starttime="20210202 14:49:30.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 14:50:09.995" starttime="20210202 14:50:09.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:50:09.996" starttime="20210202 14:50:09.995"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:50:09.996" critical="yes" starttime="20210202 14:49:30.819"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 14:50:09.997" starttime="20210202 14:48:50.728"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s2-s5" name="mapreduce-o3fs">
<test id="s1-s2-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:47:13.528" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:47:13.535" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:47:13.535" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:13.536" starttime="20210202 14:47:13.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:47:13.537" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:13.537" starttime="20210202 14:47:13.536"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:47:13.538" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:47:13.538" starttime="20210202 14:47:13.537"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:13.539" starttime="20210202 14:47:13.524"></status>
</kw>
<msg timestamp="20210202 14:47:13.539" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:47:13.539" starttime="20210202 14:47:13.524"></status>
</kw>
<msg timestamp="20210202 14:47:13.539" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:13.539" starttime="20210202 14:47:13.523"></status>
</kw>
<msg timestamp="20210202 14:47:13.540" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:13.540" starttime="20210202 14:47:13.523"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:47:13.545" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:47:13.545" starttime="20210202 14:47:13.544"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:47:13.545" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:47:13.545" starttime="20210202 14:47:13.545"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:13.546" starttime="20210202 14:47:13.543"></status>
</kw>
<msg timestamp="20210202 14:47:13.546" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:47:13.546" starttime="20210202 14:47:13.543"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:13.546" starttime="20210202 14:47:13.542"></status>
</kw>
<msg timestamp="20210202 14:47:13.546" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:47:13.546" starttime="20210202 14:47:13.541"></status>
</kw>
<msg timestamp="20210202 14:47:13.547" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:47:13.547" starttime="20210202 14:47:13.540"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:47:13.550" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:47:56.082" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:47:56.082" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:47:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47...</msg>
<status status="PASS" endtime="20210202 14:47:56.082" starttime="20210202 14:47:13.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:47:56.088" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:47:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:15 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:15 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-02 14:47:15 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:47:15 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:47:15 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:47:15 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:47:15 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-C70BD686A670-&gt;59697009-9123-4502-a3a0-d246dd071405
2021-02-02 14:47:15 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-02 14:47:19 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-7A2AE0E6B0A0-&gt;b11fdad9-040f-4021-986a-e73160e75d84
2021-02-02 14:47:19 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-02 14:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:19 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-02-02 14:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:19 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:19 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:47:20 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:47:20 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277164744_0001
2021-02-02 14:47:20 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:47:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:20 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:20 INFO  Configuration:2752 - resource-types.xml not found
2021-02-02 14:47:20 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-02 14:47:21 INFO  YarnClientImpl:324 - Submitted application application_1612277164744_0001
2021-02-02 14:47:21 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612277164744_0001/
2021-02-02 14:47:21 INFO  Job:1619 - Running job: job_1612277164744_0001
2021-02-02 14:47:31 INFO  Job:1640 - Job job_1612277164744_0001 running in uber mode : false
2021-02-02 14:47:31 INFO  Job:1647 -  map 0% reduce 0%
2021-02-02 14:47:37 INFO  Job:1647 -  map 33% reduce 0%
2021-02-02 14:47:43 INFO  Job:1647 -  map 67% reduce 0%
2021-02-02 14:47:48 INFO  Job:1647 -  map 100% reduce 0%
2021-02-02 14:47:53 INFO  Job:1647 -  map 100% reduce 100%
2021-02-02 14:47:55 INFO  Job:1658 - Job job_1612277164744_0001 completed successfully
2021-02-02 14:47:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:55 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1016369
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41064
		Total time spent by all reduces in occupied slots (ms)=15088
		Total time spent by all map tasks (ms)=10266
		Total time spent by all reduce tasks (ms)=3772
		Total vcore-milliseconds taken by all map tasks=10266
		Total vcore-milliseconds taken by all reduce tasks=3772
		Total megabyte-milliseconds taken by all map tasks=42049536
		Total megabyte-milliseconds taken by all reduce tasks=15450112
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=586
		CPU time spent (ms)=6540
		Physical memory (bytes) snapshot=1283522560
		Virtual memory (bytes) snapshot=15805505536
		Total committed heap usage (bytes)=1037041664
		Peak Map Physical memory (bytes)=327929856
		Peak Map Virtual memory (bytes)=3947905024
		Peak Reduce Physical memory (bytes)=313229312
		Peak Reduce Virtual memory (bytes)=3967823872
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 36.146 seconds
2021-02-02 14:47:55 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:55 INFO  Configuration:3318 - Removed undeclared tags:
Estimated value of Pi is 3.55555555555555555556
2021-02-02 14:47:55 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:47:56.088" starttime="20210202 14:47:56.087"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:47:56.089" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:47:56.089" starttime="20210202 14:47:56.089"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.089" starttime="20210202 14:47:13.548"></status>
</kw>
<msg timestamp="20210202 14:47:56.090" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:47:56.090" starttime="20210202 14:47:13.547"></status>
</kw>
<msg timestamp="20210202 14:47:56.090" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:47:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:14 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47...</msg>
<status status="PASS" endtime="20210202 14:47:56.090" starttime="20210202 14:47:13.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:47:56.091" starttime="20210202 14:47:56.090"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:47:56.091" critical="yes" starttime="20210202 14:47:13.522"></status>
</test>
<test id="s1-s2-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:47:56.098" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:47:56.110" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:47:56.110" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:56.110" starttime="20210202 14:47:56.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:47:56.111" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:56.111" starttime="20210202 14:47:56.111"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:47:56.112" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:47:56.112" starttime="20210202 14:47:56.111"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.112" starttime="20210202 14:47:56.095"></status>
</kw>
<msg timestamp="20210202 14:47:56.112" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:47:56.112" starttime="20210202 14:47:56.094"></status>
</kw>
<msg timestamp="20210202 14:47:56.113" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:56.113" starttime="20210202 14:47:56.094"></status>
</kw>
<msg timestamp="20210202 14:47:56.113" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar</msg>
<status status="PASS" endtime="20210202 14:47:56.113" starttime="20210202 14:47:56.093"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:47:56.113" level="INFO">${random} = sdqD6Cd8</msg>
<status status="PASS" endtime="20210202 14:47:56.113" starttime="20210202 14:47:56.113"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:47:56.118" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:47:56.118" starttime="20210202 14:47:56.117"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:47:56.119" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:47:56.119" starttime="20210202 14:47:56.118"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.119" starttime="20210202 14:47:56.117"></status>
</kw>
<msg timestamp="20210202 14:47:56.119" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:47:56.119" starttime="20210202 14:47:56.116"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.119" starttime="20210202 14:47:56.115"></status>
</kw>
<msg timestamp="20210202 14:47:56.119" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:47:56.120" starttime="20210202 14:47:56.114"></status>
</kw>
<msg timestamp="20210202 14:47:56.120" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:47:56.120" starttime="20210202 14:47:56.114"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:47:56.124" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:47:56.124" starttime="20210202 14:47:56.123"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:47:56.125" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:47:56.125" starttime="20210202 14:47:56.124"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.125" starttime="20210202 14:47:56.123"></status>
</kw>
<msg timestamp="20210202 14:47:56.125" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:47:56.125" starttime="20210202 14:47:56.122"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.125" starttime="20210202 14:47:56.121"></status>
</kw>
<msg timestamp="20210202 14:47:56.125" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 14:47:56.125" starttime="20210202 14:47:56.121"></status>
</kw>
<msg timestamp="20210202 14:47:56.126" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 14:47:56.126" starttime="20210202 14:47:56.120"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:47:56.129" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:47:56.129" starttime="20210202 14:47:56.129"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:47:56.130" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:47:56.130" starttime="20210202 14:47:56.130"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.131" starttime="20210202 14:47:56.128"></status>
</kw>
<msg timestamp="20210202 14:47:56.131" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:47:56.131" starttime="20210202 14:47:56.128"></status>
</kw>
<status status="PASS" endtime="20210202 14:47:56.131" starttime="20210202 14:47:56.127"></status>
</kw>
<msg timestamp="20210202 14:47:56.131" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-sdqD6Cd8.txt</msg>
<status status="PASS" endtime="20210202 14:47:56.131" starttime="20210202 14:47:56.127"></status>
</kw>
<msg timestamp="20210202 14:47:56.132" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-sdqD6Cd8.txt</msg>
<status status="PASS" endtime="20210202 14:47:56.132" starttime="20210202 14:47:56.126"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:47:56.135" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.1.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-sdqD6Cd8.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:48:33.324" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:48:33.325" level="INFO">${output} = 2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:48:33.325" starttime="20210202 14:47:56.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:48:33.326" level="INFO">2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  RMProxy:133 - Connecting to ResourceManager at rm/172.22.0.5:8032
2021-02-02 14:47:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:58 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:47:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:58 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:58 INFO  FluentPropertyBeanIntrospector:147 - Error when creating PropertyDescriptor for public final void org.apache.commons.configuration2.AbstractConfiguration.setProperty(java.lang.String,java.lang.Object)! Ignoring this property.
2021-02-02 14:47:58 INFO  MetricsConfig:121 - loaded properties from hadoop-metrics2.properties
2021-02-02 14:47:58 INFO  MetricsSystemImpl:374 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:47:58 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:47:58 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:47:58 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-D929F733FCC2-&gt;59697009-9123-4502-a3a0-d246dd071405
2021-02-02 14:47:58 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:47:59 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:47:59 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:48:00 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-85BCCB945509-&gt;b11fdad9-040f-4021-986a-e73160e75d84
2021-02-02 14:48:00 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:48:00 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277164744_0002
2021-02-02 14:48:00 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:48:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:00 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:00 INFO  Configuration:2752 - resource-types.xml not found
2021-02-02 14:48:00 INFO  ResourceUtils:418 - Unable to find 'resource-types.xml'.
2021-02-02 14:48:00 INFO  YarnClientImpl:324 - Submitted application application_1612277164744_0002
2021-02-02 14:48:00 INFO  Job:1574 - The url to track the job: http://rm:8088/proxy/application_1612277164744_0002/
2021-02-02 14:48:00 INFO  Job:1619 - Running job: job_1612277164744_0002
2021-02-02 14:48:07 INFO  Job:1640 - Job job_1612277164744_0002 running in uber mode : false
2021-02-02 14:48:07 INFO  Job:1647 -  map 0% reduce 0%
2021-02-02 14:48:14 INFO  Job:1647 -  map 33% reduce 0%
2021-02-02 14:48:20 INFO  Job:1647 -  map 67% reduce 0%
2021-02-02 14:48:25 INFO  Job:1647 -  map 100% reduce 0%
2021-02-02 14:48:31 INFO  Job:1647 -  map 100% reduce 100%
2021-02-02 14:48:32 INFO  Job:1658 - Job job_1612277164744_0002 completed successfully
2021-02-02 14:48:32 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:48:32 INFO  Job:1665 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1078915
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39812
		Total time spent by all reduces in occupied slots (ms)=24560
		Total time spent by all map tasks (ms)=9953
		Total time spent by all reduce tasks (ms)=6140
		Total vcore-milliseconds taken by all map tasks=9953
		Total vcore-milliseconds taken by all reduce tasks=6140
		Total megabyte-milliseconds taken by all map tasks=40767488
		Total megabyte-milliseconds taken by all reduce tasks=25149440
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=566
		CPU time spent (ms)=6750
		Physical memory (bytes) snapshot=1258975232
		Virtual memory (bytes) snapshot=15803834368
		Total committed heap usage (bytes)=1074790400
		Peak Map Physical memory (bytes)=324603904
		Peak Map Virtual memory (bytes)=3950084096
		Peak Reduce Physical memory (bytes)=297250816
		Peak Reduce Virtual memory (bytes)=3963437056
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203
2021-02-02 14:48:33 INFO  Configuration:3318 - Removed undeclared tags:</msg>
<status status="PASS" endtime="20210202 14:48:33.326" starttime="20210202 14:48:33.325"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:48:33.327" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:48:33.327" starttime="20210202 14:48:33.326"></status>
</kw>
<status status="PASS" endtime="20210202 14:48:33.327" starttime="20210202 14:47:56.133"></status>
</kw>
<msg timestamp="20210202 14:48:33.327" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:48:33.327" starttime="20210202 14:47:56.133"></status>
</kw>
<msg timestamp="20210202 14:48:33.328" level="INFO">${output} = 2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed undeclared tags:
2021-02-02 14:47:57 INFO  Configuration:3318 - Removed u...</msg>
<status status="PASS" endtime="20210202 14:48:33.328" starttime="20210202 14:47:56.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 14:48:33.329" starttime="20210202 14:48:33.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:48:33.329" starttime="20210202 14:48:33.329"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:48:33.329" critical="yes" starttime="20210202 14:47:56.093"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 14:48:33.331" starttime="20210202 14:47:13.463"></status>
</suite>
<status status="PASS" elapsedtime="202664" endtime="N/A" starttime="N/A"></status>
</suite>
<suite id="s1-s3" name="hadoop32">
<suite source="/opt/hadoop/smoketest/createmrenv.robot" id="s1-s3-s1" name="Createmrenv">
<test id="s1-s3-s1-t1" name="Create test volume, bucket and key">
<kw name="Execute And Ignore Error" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:20.799" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:32.814" level="INFO">${rc} = 255</msg>
<msg timestamp="20210202 14:51:32.814" level="INFO">${output} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:51:32.814" starttime="20210202 14:51:20.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:32.815" level="INFO">VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:51:32.815" starttime="20210202 14:51:32.814"></status>
</kw>
<msg timestamp="20210202 14:51:32.816" level="INFO">${result} = VOLUME_NOT_FOUND Volume volume1 is not found</msg>
<status status="PASS" endtime="20210202 14:51:32.816" starttime="20210202 14:51:20.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create volume</arg>
</arguments>
<kw name="Create volume">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh volume create /${volume} --user hadoop --space-quota 100TB --namespace-quota 100</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:32.821" level="INFO">Running command 'ozone sh volume create /volume1 --user hadoop --space-quota 100TB --namespace-quota 100 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:36.214" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:51:36.214" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:51:36.214" starttime="20210202 14:51:32.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:36.215" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:51:36.215" starttime="20210202 14:51:36.214"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:51:36.216" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:51:36.216" starttime="20210202 14:51:36.215"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:36.216" starttime="20210202 14:51:32.818"></status>
</kw>
<msg timestamp="20210202 14:51:36.216" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:51:36.216" starttime="20210202 14:51:32.818"></status>
</kw>
<msg timestamp="20210202 14:51:36.217" level="INFO">${result} = </msg>
<status status="PASS" endtime="20210202 14:51:36.217" starttime="20210202 14:51:32.817"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>Failed</arg>
</arguments>
<status status="PASS" endtime="20210202 14:51:36.217" starttime="20210202 14:51:36.217"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:36.217" starttime="20210202 14:51:32.816"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:36.218" starttime="20210202 14:51:32.816"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"VOLUME_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<kw name="Create bucket">
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket create /${volume}/${bucket}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:36.222" level="INFO">Running command 'ozone sh bucket create /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:39.105" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:51:39.105" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:51:39.105" starttime="20210202 14:51:36.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:39.106" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:51:39.107" starttime="20210202 14:51:39.106"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:51:39.107" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:51:39.107" starttime="20210202 14:51:39.107"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:39.108" starttime="20210202 14:51:36.220"></status>
</kw>
<msg timestamp="20210202 14:51:39.108" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:51:39.108" starttime="20210202 14:51:36.219"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:39.112" starttime="20210202 14:51:36.219"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:39.112" starttime="20210202 14:51:36.218"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:39.112" starttime="20210202 14:51:36.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"BUCKET_NOT_FOUND" in """${result}"""</arg>
<arg>Create bucket</arg>
</arguments>
<status status="PASS" endtime="20210202 14:51:39.113" starttime="20210202 14:51:39.113"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh bucket info /${volume}/${bucket}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:39.118" level="INFO">Running command 'ozone sh bucket info /volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:42.469" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:51:42.470" level="INFO">${output} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:51...</msg>
<status status="PASS" endtime="20210202 14:51:42.470" starttime="20210202 14:51:39.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:42.471" level="INFO">{
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:51:38.991Z",
  "modificationTime" : "2021-02-02T14:51:38.991Z",
  "encryptionKeyName" : null,
  "sourceVolume" : null,
  "sourceBucket" : null,
  "quotaInBytes" : -1,
  "quotaInNamespace" : -1
}</msg>
<status status="PASS" endtime="20210202 14:51:42.471" starttime="20210202 14:51:42.470"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:51:42.471" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:51:42.472" starttime="20210202 14:51:42.471"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:42.472" starttime="20210202 14:51:39.114"></status>
</kw>
<msg timestamp="20210202 14:51:42.472" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:51:42.472" starttime="20210202 14:51:39.114"></status>
</kw>
<msg timestamp="20210202 14:51:42.473" level="INFO">${result} = {
  "metadata" : { },
  "volumeName" : "volume1",
  "name" : "bucket1",
  "storageType" : "DISK",
  "versioning" : false,
  "usedBytes" : 0,
  "usedNamespace" : 0,
  "creationTime" : "2021-02-02T14:51...</msg>
<status status="PASS" endtime="20210202 14:51:42.473" starttime="20210202 14:51:39.113"></status>
</kw>
<kw name="Should Not Contain" library="BuiltIn">
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>NOT_FOUND</arg>
</arguments>
<status status="PASS" endtime="20210202 14:51:42.473" starttime="20210202 14:51:42.473"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:51:42.478" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:51:42.478" starttime="20210202 14:51:42.477"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:51:42.478" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:51:42.478" starttime="20210202 14:51:42.478"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:42.479" starttime="20210202 14:51:42.477"></status>
</kw>
<msg timestamp="20210202 14:51:42.479" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:51:42.479" starttime="20210202 14:51:42.476"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:42.479" starttime="20210202 14:51:42.475"></status>
</kw>
<msg timestamp="20210202 14:51:42.479" level="INFO">${url} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 14:51:42.479" starttime="20210202 14:51:42.474"></status>
</kw>
<msg timestamp="20210202 14:51:42.480" level="INFO">${dir} = o3fs://bucket1.volume1.om/input</msg>
<status status="PASS" endtime="20210202 14:51:42.480" starttime="20210202 14:51:42.473"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:42.483" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/input 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:45.752" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:51:45.752" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:51:45.753" starttime="20210202 14:51:42.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:45.754" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:51:45.754" starttime="20210202 14:51:45.753"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:51:45.755" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:51:45.755" starttime="20210202 14:51:45.754"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:45.755" starttime="20210202 14:51:42.481"></status>
</kw>
<msg timestamp="20210202 14:51:45.755" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:51:45.755" starttime="20210202 14:51:42.481"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:45.756" starttime="20210202 14:51:42.480"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key1 LICENSE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:45.760" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key1 LICENSE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:52.481" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:51:52.482" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:51:52.482" starttime="20210202 14:51:45.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:52.483" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:51:52.483" starttime="20210202 14:51:52.482"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:51:52.483" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:51:52.483" starttime="20210202 14:51:52.483"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:52.484" starttime="20210202 14:51:45.757"></status>
</kw>
<msg timestamp="20210202 14:51:52.484" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:51:52.484" starttime="20210202 14:51:45.757"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:52.484" starttime="20210202 14:51:45.756"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key2 NOTICE.txt</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:52.488" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key2 NOTICE.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:51:57.661" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:51:57.661" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:51:57.661" starttime="20210202 14:51:52.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:51:57.663" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:51:57.663" starttime="20210202 14:51:57.662"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:51:57.663" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:51:57.664" starttime="20210202 14:51:57.663"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:57.664" starttime="20210202 14:51:52.486"></status>
</kw>
<msg timestamp="20210202 14:51:57.664" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:51:57.664" starttime="20210202 14:51:52.485"></status>
</kw>
<status status="PASS" endtime="20210202 14:51:57.664" starttime="20210202 14:51:52.485"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone sh key put /${volume}/${bucket}/input/key3 README.md</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:51:57.668" level="INFO">Running command 'ozone sh key put /volume1/bucket1/input/key3 README.md 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:52:02.873" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:52:02.873" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:52:02.873" starttime="20210202 14:51:57.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:52:02.874" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:52:02.874" starttime="20210202 14:52:02.873"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:52:02.875" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:52:02.875" starttime="20210202 14:52:02.874"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:02.875" starttime="20210202 14:51:57.666"></status>
</kw>
<msg timestamp="20210202 14:52:02.875" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:52:02.875" starttime="20210202 14:51:57.665"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:02.876" starttime="20210202 14:51:57.665"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 14:52:02.876" critical="yes" starttime="20210202 14:51:20.793"></status>
</test>
<test id="s1-s3-s1-t2" name="Create user dir for hadoop">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>user</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:52:02.884" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:52:02.884" starttime="20210202 14:52:02.883"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:52:02.885" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:52:02.885" starttime="20210202 14:52:02.884"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:02.885" starttime="20210202 14:52:02.882"></status>
</kw>
<msg timestamp="20210202 14:52:02.885" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:52:02.885" starttime="20210202 14:52:02.881"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:02.886" starttime="20210202 14:52:02.880"></status>
</kw>
<msg timestamp="20210202 14:52:02.886" level="INFO">${url} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:52:02.886" starttime="20210202 14:52:02.880"></status>
</kw>
<msg timestamp="20210202 14:52:02.886" level="INFO">${dir} = o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:52:02.886" starttime="20210202 14:52:02.879"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:52:02.890" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:52:06.086" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:52:06.086" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:52:06.086" starttime="20210202 14:52:02.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:52:06.087" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:52:06.087" starttime="20210202 14:52:06.086"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:52:06.087" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:52:06.088" starttime="20210202 14:52:06.087"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:06.088" starttime="20210202 14:52:02.887"></status>
</kw>
<msg timestamp="20210202 14:52:06.088" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:52:06.088" starttime="20210202 14:52:02.887"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:06.088" starttime="20210202 14:52:02.886"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>ozone fs -mkdir ${dir}/hadoop</arg>
</arguments>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:52:06.093" level="INFO">Running command 'ozone fs -mkdir o3fs://bucket1.volume1.om/user/hadoop 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:52:09.347" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:52:09.347" level="INFO">${output} = </msg>
<status status="PASS" endtime="20210202 14:52:09.347" starttime="20210202 14:52:06.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:52:09.348" level="INFO"></msg>
<status status="PASS" endtime="20210202 14:52:09.348" starttime="20210202 14:52:09.347"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:52:09.349" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:52:09.349" starttime="20210202 14:52:09.348"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:09.349" starttime="20210202 14:52:06.090"></status>
</kw>
<msg timestamp="20210202 14:52:09.349" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:52:09.349" starttime="20210202 14:52:06.089"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:09.349" starttime="20210202 14:52:06.089"></status>
</kw>
<timeout value="2 minutes"></timeout>
<status status="PASS" endtime="20210202 14:52:09.350" critical="yes" starttime="20210202 14:52:02.878"></status>
</test>
<doc>Create directories required for MR test</doc>
<status status="PASS" endtime="20210202 14:52:09.351" starttime="20210202 14:51:20.723"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s2" name="hadoopfs-ofs">
<test id="s1-s3-s2-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:53:42.141" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:53:42.141" starttime="20210202 14:53:42.141"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:53:42.142" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:53:42.142" starttime="20210202 14:53:42.141"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:42.142" starttime="20210202 14:53:42.140"></status>
</kw>
<msg timestamp="20210202 14:53:42.142" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:53:42.142" starttime="20210202 14:53:42.140"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:53:42.143" starttime="20210202 14:53:42.143"></status>
</kw>
<msg timestamp="20210202 14:53:42.143" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:53:42.143" starttime="20210202 14:53:42.142"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:42.144" starttime="20210202 14:53:42.139"></status>
</kw>
<msg timestamp="20210202 14:53:42.144" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:53:42.144" starttime="20210202 14:53:42.138"></status>
</kw>
<msg timestamp="20210202 14:53:42.144" level="INFO">${dir} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:53:42.144" starttime="20210202 14:53:42.137"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:53:42.145" level="INFO">${random} = 84184</msg>
<status status="PASS" endtime="20210202 14:53:42.145" starttime="20210202 14:53:42.144"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:53:42.150" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt ofs://om/volume1/bucket1/ozone-84184 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:53:45.832" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:53:45.832" level="INFO">${output} = 2021-02-02 14:53:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:44 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 14:53:45.832" starttime="20210202 14:53:42.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:53:45.833" level="INFO">2021-02-02 14:53:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:44 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:53:44 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:53:44 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:53:44 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-458440944B03-&gt;882e6aa0-0436-4beb-aa42-b8909bc8dba8
2021-02-02 14:53:44 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210202 14:53:45.833" starttime="20210202 14:53:45.833"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:53:45.834" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:53:45.834" starttime="20210202 14:53:45.833"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:45.835" starttime="20210202 14:53:42.146"></status>
</kw>
<msg timestamp="20210202 14:53:45.835" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:53:45.835" starttime="20210202 14:53:42.145"></status>
</kw>
<msg timestamp="20210202 14:53:45.835" level="INFO">${result} = 2021-02-02 14:53:44 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:44 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 14:53:45.835" starttime="20210202 14:53:42.145"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:53:45.839" level="INFO">Running command 'hdfs dfs -ls ofs://om/volume1/bucket1 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:53:47.683" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:53:47.683" level="INFO">${output} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:52 ofs://om/volume1/bucket1/ozone-17370
-rw-...</msg>
<status status="PASS" endtime="20210202 14:53:47.683" starttime="20210202 14:53:45.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:53:47.684" level="INFO">Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:52 ofs://om/volume1/bucket1/ozone-17370
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:53 ofs://om/volume1/bucket1/ozone-84184
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:52 ofs://om/volume1/bucket1/user
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:53 ofs://om/volume1/bucket1/wordcount-reN6DTED.txt</msg>
<status status="PASS" endtime="20210202 14:53:47.684" starttime="20210202 14:53:47.683"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:53:47.685" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:53:47.685" starttime="20210202 14:53:47.684"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:47.685" starttime="20210202 14:53:45.837"></status>
</kw>
<msg timestamp="20210202 14:53:47.685" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:53:47.685" starttime="20210202 14:53:45.836"></status>
</kw>
<msg timestamp="20210202 14:53:47.686" level="INFO">${result} = Found 5 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:51 ofs://om/volume1/bucket1/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:52 ofs://om/volume1/bucket1/ozone-17370
-rw-...</msg>
<status status="PASS" endtime="20210202 14:53:47.686" starttime="20210202 14:53:45.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:53:47.686" starttime="20210202 14:53:47.686"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 14:53:47.687" critical="yes" starttime="20210202 14:53:42.136"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 14:53:47.689" starttime="20210202 14:53:42.074"></status>
</suite>
<suite source="/opt/ozone/smoketest/ozonefs/hadoopo3fs.robot" id="s1-s3-s3" name="hadoopfs-o3fs">
<test id="s1-s3-s3-t1" name="Test hadoop dfs">
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:52:14.074" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:52:14.074" starttime="20210202 14:52:14.074"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:52:14.075" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:52:14.075" starttime="20210202 14:52:14.075"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:14.075" starttime="20210202 14:52:14.073"></status>
</kw>
<msg timestamp="20210202 14:52:14.075" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:52:14.075" starttime="20210202 14:52:14.072"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:14.076" starttime="20210202 14:52:14.072"></status>
</kw>
<msg timestamp="20210202 14:52:14.076" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:52:14.076" starttime="20210202 14:52:14.071"></status>
</kw>
<msg timestamp="20210202 14:52:14.076" level="INFO">${dir} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:52:14.076" starttime="20210202 14:52:14.070"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:52:14.077" level="INFO">${random} = 17370</msg>
<status status="PASS" endtime="20210202 14:52:14.077" starttime="20210202 14:52:14.076"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -put /opt/hadoop/NOTICE.txt ${dir}/${PREFIX}-${random}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:52:14.081" level="INFO">Running command 'hdfs dfs -put /opt/hadoop/NOTICE.txt o3fs://bucket1.volume1.om//ozone-17370 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:52:17.741" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:52:17.741" level="INFO">${output} = 2021-02-02 14:52:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:52:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 14:52:17.741" starttime="20210202 14:52:14.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:52:17.744" level="INFO">2021-02-02 14:52:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:52:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:52:16 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:52:16 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:52:16 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-338B317DD405-&gt;882e6aa0-0436-4beb-aa42-b8909bc8dba8
2021-02-02 14:52:16 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.</msg>
<status status="PASS" endtime="20210202 14:52:17.744" starttime="20210202 14:52:17.742"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:52:17.745" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:52:17.745" starttime="20210202 14:52:17.744"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:17.745" starttime="20210202 14:52:14.078"></status>
</kw>
<msg timestamp="20210202 14:52:17.745" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:52:17.745" starttime="20210202 14:52:14.077"></status>
</kw>
<msg timestamp="20210202 14:52:17.746" level="INFO">${result} = 2021-02-02 14:52:16 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:52:16 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021...</msg>
<status status="PASS" endtime="20210202 14:52:17.746" starttime="20210202 14:52:14.077"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>hdfs dfs -ls ${dir}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:52:17.749" level="INFO">Running command 'hdfs dfs -ls o3fs://bucket1.volume1.om/ 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:52:19.488" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:52:19.488" level="INFO">${output} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:52 o3fs://bucket1.volume1.om/ozone-17370
dr...</msg>
<status status="PASS" endtime="20210202 14:52:19.488" starttime="20210202 14:52:17.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:52:19.490" level="INFO">Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:52 o3fs://bucket1.volume1.om/ozone-17370
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:52 o3fs://bucket1.volume1.om/user</msg>
<status status="PASS" endtime="20210202 14:52:19.490" starttime="20210202 14:52:19.489"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:52:19.491" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:52:19.491" starttime="20210202 14:52:19.490"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:19.491" starttime="20210202 14:52:17.747"></status>
</kw>
<msg timestamp="20210202 14:52:19.491" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:52:19.491" starttime="20210202 14:52:17.746"></status>
</kw>
<msg timestamp="20210202 14:52:19.492" level="INFO">${result} = Found 3 items
drwxrwxrwx   - hadoop hadoop          0 2021-02-02 14:51 o3fs://bucket1.volume1.om/input
-rw-rw-rw-   3 hadoop hadoop      21943 2021-02-02 14:52 o3fs://bucket1.volume1.om/ozone-17370
dr...</msg>
<status status="PASS" endtime="20210202 14:52:19.492" starttime="20210202 14:52:17.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${result}</arg>
<arg>${PREFIX}-${random}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:52:19.492" starttime="20210202 14:52:19.492"></status>
</kw>
<timeout value="5 minutes"></timeout>
<status status="PASS" endtime="20210202 14:52:19.493" critical="yes" starttime="20210202 14:52:14.068"></status>
</test>
<doc>Test ozone fs with hadoopfs</doc>
<status status="PASS" endtime="20210202 14:52:19.495" starttime="20210202 14:52:14.010"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s4" name="mapreduce-ofs">
<test id="s1-s3-s4-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:53:52.425" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:53:52.432" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:53:52.432" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:52.432" starttime="20210202 14:53:52.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:53:52.433" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:52.433" starttime="20210202 14:53:52.433"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:53:52.434" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:53:52.434" starttime="20210202 14:53:52.433"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:52.434" starttime="20210202 14:53:52.421"></status>
</kw>
<msg timestamp="20210202 14:53:52.434" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:53:52.434" starttime="20210202 14:53:52.421"></status>
</kw>
<msg timestamp="20210202 14:53:52.435" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:52.435" starttime="20210202 14:53:52.420"></status>
</kw>
<msg timestamp="20210202 14:53:52.435" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:52.435" starttime="20210202 14:53:52.420"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:53:52.440" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:53:52.440" starttime="20210202 14:53:52.440"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:53:52.441" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:53:52.441" starttime="20210202 14:53:52.440"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:52.441" starttime="20210202 14:53:52.439"></status>
</kw>
<msg timestamp="20210202 14:53:52.441" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:53:52.441" starttime="20210202 14:53:52.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:53:52.443" starttime="20210202 14:53:52.442"></status>
</kw>
<msg timestamp="20210202 14:53:52.443" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:53:52.443" starttime="20210202 14:53:52.442"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:52.443" starttime="20210202 14:53:52.437"></status>
</kw>
<msg timestamp="20210202 14:53:52.443" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:53:52.443" starttime="20210202 14:53:52.436"></status>
</kw>
<msg timestamp="20210202 14:53:52.444" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:53:52.444" starttime="20210202 14:53:52.435"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:53:52.447" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=ofs://om/volume1/bucket1 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:54:29.883" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:54:29.883" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:53:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:54 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 14:54:29.884" starttime="20210202 14:53:52.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:54:29.885" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:53:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:54 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:53:54 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:53:54 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:53:54 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-4C4A9BFCD1B1-&gt;882e6aa0-0436-4beb-aa42-b8909bc8dba8
2021-02-02 14:53:54 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
Wrote input for Map #1
2021-02-02 14:53:55 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A14BA159C313-&gt;39f02d01-e247-4ee5-b934-51fda59de106
2021-02-02 14:53:55 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #2
Starting Job
2021-02-02 14:53:55 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:53:55 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:53:56 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:53:56 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:53:56 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277456254_0003
2021-02-02 14:53:56 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:53:56 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 14:53:56 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 14:53:56 INFO  YarnClientImpl:329 - Submitted application application_1612277456254_0003
2021-02-02 14:53:56 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612277456254_0003/
2021-02-02 14:53:56 INFO  Job:1614 - Running job: job_1612277456254_0003
2021-02-02 14:54:04 INFO  Job:1635 - Job job_1612277456254_0003 running in uber mode : false
2021-02-02 14:54:04 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 14:54:10 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 14:54:16 INFO  Job:1642 -  map 67% reduce 0%
2021-02-02 14:54:21 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 14:54:28 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 14:54:29 INFO  Job:1653 - Job job_1612277456254_0003 completed successfully
2021-02-02 14:54:29 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091549
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=759
		OFS: Number of bytes written=215
		OFS: Number of read operations=22
		OFS: Number of large read operations=0
		OFS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=39864
		Total time spent by all reduces in occupied slots (ms)=26112
		Total time spent by all map tasks (ms)=9966
		Total time spent by all reduce tasks (ms)=6528
		Total vcore-milliseconds taken by all map tasks=9966
		Total vcore-milliseconds taken by all reduce tasks=6528
		Total megabyte-milliseconds taken by all map tasks=40820736
		Total megabyte-milliseconds taken by all reduce tasks=26738688
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=405
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=545
		CPU time spent (ms)=6840
		Physical memory (bytes) snapshot=1366020096
		Virtual memory (bytes) snapshot=15815909376
		Total committed heap usage (bytes)=1462763520
		Peak Map Physical memory (bytes)=372482048
		Peak Map Virtual memory (bytes)=3955236864
		Peak Reduce Physical memory (bytes)=396439552
		Peak Reduce Virtual memory (bytes)=3974393856
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.704 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210202 14:54:29.885" starttime="20210202 14:54:29.884"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:54:29.887" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:54:29.887" starttime="20210202 14:54:29.885"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.887" starttime="20210202 14:53:52.445"></status>
</kw>
<msg timestamp="20210202 14:54:29.888" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:54:29.888" starttime="20210202 14:53:52.445"></status>
</kw>
<msg timestamp="20210202 14:54:29.888" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:53:54 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:54 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 14:54:29.888" starttime="20210202 14:53:52.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:54:29.889" starttime="20210202 14:54:29.888"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:54:29.889" critical="yes" starttime="20210202 14:53:52.419"></status>
</test>
<test id="s1-s3-s4-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:54:29.895" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:54:29.900" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:54:29.900" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:54:29.900" starttime="20210202 14:54:29.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:54:29.901" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:54:29.901" starttime="20210202 14:54:29.900"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:54:29.902" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:54:29.902" starttime="20210202 14:54:29.901"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.902" starttime="20210202 14:54:29.892"></status>
</kw>
<msg timestamp="20210202 14:54:29.902" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:54:29.902" starttime="20210202 14:54:29.892"></status>
</kw>
<msg timestamp="20210202 14:54:29.903" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:54:29.903" starttime="20210202 14:54:29.891"></status>
</kw>
<msg timestamp="20210202 14:54:29.903" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:54:29.903" starttime="20210202 14:54:29.891"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:54:29.904" level="INFO">${random} = sZJvpy3X</msg>
<status status="PASS" endtime="20210202 14:54:29.904" starttime="20210202 14:54:29.903"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:54:29.908" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:54:29.908" starttime="20210202 14:54:29.907"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:54:29.909" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:54:29.909" starttime="20210202 14:54:29.908"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.909" starttime="20210202 14:54:29.907"></status>
</kw>
<msg timestamp="20210202 14:54:29.909" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:54:29.909" starttime="20210202 14:54:29.906"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${EMPTY}</arg>
</arguments>
<status status="PASS" endtime="20210202 14:54:29.910" starttime="20210202 14:54:29.910"></status>
</kw>
<msg timestamp="20210202 14:54:29.910" level="INFO">${path_with_leading} = </msg>
<status status="PASS" endtime="20210202 14:54:29.910" starttime="20210202 14:54:29.909"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.911" starttime="20210202 14:54:29.905"></status>
</kw>
<msg timestamp="20210202 14:54:29.911" level="INFO">${url} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:54:29.911" starttime="20210202 14:54:29.905"></status>
</kw>
<msg timestamp="20210202 14:54:29.911" level="INFO">${root} = ofs://om/volume1/bucket1</msg>
<status status="PASS" endtime="20210202 14:54:29.911" starttime="20210202 14:54:29.904"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:54:29.915" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:54:29.915" starttime="20210202 14:54:29.914"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:54:29.916" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:54:29.916" starttime="20210202 14:54:29.915"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.916" starttime="20210202 14:54:29.914"></status>
</kw>
<msg timestamp="20210202 14:54:29.916" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:54:29.916" starttime="20210202 14:54:29.913"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:54:29.918" level="INFO">${first} = i</msg>
<status status="PASS" endtime="20210202 14:54:29.918" starttime="20210202 14:54:29.917"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:54:29.918" level="INFO">${result} = /input/</msg>
<status status="PASS" endtime="20210202 14:54:29.919" starttime="20210202 14:54:29.918"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.919" starttime="20210202 14:54:29.917"></status>
</kw>
<msg timestamp="20210202 14:54:29.919" level="INFO">${path_with_leading} = /input/</msg>
<status status="PASS" endtime="20210202 14:54:29.919" starttime="20210202 14:54:29.916"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.919" starttime="20210202 14:54:29.913"></status>
</kw>
<msg timestamp="20210202 14:54:29.919" level="INFO">${url} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 14:54:29.919" starttime="20210202 14:54:29.912"></status>
</kw>
<msg timestamp="20210202 14:54:29.920" level="INFO">${dir} = ofs://om/volume1/bucket1/input/</msg>
<status status="PASS" endtime="20210202 14:54:29.920" starttime="20210202 14:54:29.911"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format ofs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Trailing</arg>
<arg>/</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_trailing}</var>
</assign>
<kw name="Ensure Trailing" library="string">
<arguments>
<arg>/</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>-1</arg>
</arguments>
<assign>
<var>${last}</var>
</assign>
<msg timestamp="20210202 14:54:29.923" level="INFO">${last} = m</msg>
<status status="PASS" endtime="20210202 14:54:29.923" starttime="20210202 14:54:29.923"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${last}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${string}${char}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:54:29.924" level="INFO">${result} = om/</msg>
<status status="PASS" endtime="20210202 14:54:29.924" starttime="20210202 14:54:29.923"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.924" starttime="20210202 14:54:29.922"></status>
</kw>
<msg timestamp="20210202 14:54:29.924" level="INFO">${om_with_trailing} = om/</msg>
<status status="PASS" endtime="20210202 14:54:29.924" starttime="20210202 14:54:29.922"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${path}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>/</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${path_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>/</arg>
<arg>${path}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:54:29.926" level="INFO">${first} = w</msg>
<status status="PASS" endtime="20210202 14:54:29.926" starttime="20210202 14:54:29.925"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:54:29.926" level="INFO">${result} = /wordcount-sZJvpy3X.txt</msg>
<status status="PASS" endtime="20210202 14:54:29.926" starttime="20210202 14:54:29.926"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.926" starttime="20210202 14:54:29.925"></status>
</kw>
<msg timestamp="20210202 14:54:29.927" level="INFO">${path_with_leading} = /wordcount-sZJvpy3X.txt</msg>
<status status="PASS" endtime="20210202 14:54:29.927" starttime="20210202 14:54:29.924"></status>
</kw>
<status status="PASS" endtime="20210202 14:54:29.927" starttime="20210202 14:54:29.921"></status>
</kw>
<msg timestamp="20210202 14:54:29.927" level="INFO">${url} = ofs://om/volume1/bucket1/wordcount-sZJvpy3X.txt</msg>
<status status="PASS" endtime="20210202 14:54:29.927" starttime="20210202 14:54:29.920"></status>
</kw>
<msg timestamp="20210202 14:54:29.927" level="INFO">${result} = ofs://om/volume1/bucket1/wordcount-sZJvpy3X.txt</msg>
<status status="PASS" endtime="20210202 14:54:29.927" starttime="20210202 14:54:29.920"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:54:29.931" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=ofs://om/volume1/bucket1 ofs://om/volume1/bucket1/input/ ofs://om/volume1/bucket1/wordcount-sZJvpy3X.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:55:06.490" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:55:06.490" level="INFO">${output} = 2021-02-02 14:54:31 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:54:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210202 14:55:06.490" starttime="20210202 14:54:29.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:55:06.491" level="INFO">2021-02-02 14:54:31 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:54:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:54:32 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:54:32 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:54:32 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:54:32 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:54:32 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-CA8054F6842F-&gt;39f02d01-e247-4ee5-b934-51fda59de106
2021-02-02 14:54:32 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:54:33 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:54:33 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-A62A161A2A8E-&gt;882e6aa0-0436-4beb-aa42-b8909bc8dba8
2021-02-02 14:54:33 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:54:36 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:54:36 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277456254_0004
2021-02-02 14:54:36 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:54:36 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 14:54:36 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 14:54:36 INFO  YarnClientImpl:329 - Submitted application application_1612277456254_0004
2021-02-02 14:54:36 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612277456254_0004/
2021-02-02 14:54:36 INFO  Job:1614 - Running job: job_1612277456254_0004
2021-02-02 14:54:43 INFO  Job:1635 - Job job_1612277456254_0004 running in uber mode : false
2021-02-02 14:54:43 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 14:54:50 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 14:54:55 INFO  Job:1642 -  map 67% reduce 0%
2021-02-02 14:55:00 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 14:55:05 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 14:55:06 INFO  Job:1653 - Job job_1612277456254_0004 completed successfully
2021-02-02 14:55:06 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154231
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		OFS: Number of bytes read=39714
		OFS: Number of bytes written=22203
		OFS: Number of read operations=19
		OFS: Number of large read operations=0
		OFS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40976
		Total time spent by all reduces in occupied slots (ms)=15136
		Total time spent by all map tasks (ms)=10244
		Total time spent by all reduce tasks (ms)=3784
		Total vcore-milliseconds taken by all map tasks=10244
		Total vcore-milliseconds taken by all reduce tasks=3784
		Total megabyte-milliseconds taken by all map tasks=41959424
		Total megabyte-milliseconds taken by all reduce tasks=15499264
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=300
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=591
		CPU time spent (ms)=7710
		Physical memory (bytes) snapshot=1262194688
		Virtual memory (bytes) snapshot=15815303168
		Total committed heap usage (bytes)=1207959552
		Peak Map Physical memory (bytes)=370585600
		Peak Map Virtual memory (bytes)=3949256704
		Peak Reduce Physical memory (bytes)=288411648
		Peak Reduce Virtual memory (bytes)=3968524288
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210202 14:55:06.492" starttime="20210202 14:55:06.491"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:55:06.492" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:55:06.492" starttime="20210202 14:55:06.492"></status>
</kw>
<status status="PASS" endtime="20210202 14:55:06.493" starttime="20210202 14:54:29.929"></status>
</kw>
<msg timestamp="20210202 14:55:06.493" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:55:06.493" starttime="20210202 14:54:29.928"></status>
</kw>
<msg timestamp="20210202 14:55:06.493" level="INFO">${output} = 2021-02-02 14:54:31 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:54:31 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210202 14:55:06.493" starttime="20210202 14:54:29.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 14:55:06.494" starttime="20210202 14:55:06.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:55:06.494" starttime="20210202 14:55:06.494"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:55:06.495" critical="yes" starttime="20210202 14:54:29.890"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 14:55:06.496" starttime="20210202 14:53:52.354"></status>
</suite>
<suite source="/opt/ozone/smoketest/mapreduce.robot" id="s1-s3-s5" name="mapreduce-o3fs">
<test id="s1-s3-s5-t1" name="Execute PI calculation">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:52:24.202" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:52:24.206" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:52:24.207" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:52:24.207" starttime="20210202 14:52:24.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:52:24.207" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:52:24.207" starttime="20210202 14:52:24.207"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:52:24.208" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:52:24.208" starttime="20210202 14:52:24.208"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:24.209" starttime="20210202 14:52:24.199"></status>
</kw>
<msg timestamp="20210202 14:52:24.209" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:52:24.209" starttime="20210202 14:52:24.198"></status>
</kw>
<msg timestamp="20210202 14:52:24.209" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:52:24.209" starttime="20210202 14:52:24.198"></status>
</kw>
<msg timestamp="20210202 14:52:24.210" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:52:24.210" starttime="20210202 14:52:24.197"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:52:24.215" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:52:24.215" starttime="20210202 14:52:24.214"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:52:24.215" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:52:24.215" starttime="20210202 14:52:24.215"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:24.215" starttime="20210202 14:52:24.213"></status>
</kw>
<msg timestamp="20210202 14:52:24.216" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:52:24.216" starttime="20210202 14:52:24.213"></status>
</kw>
<status status="PASS" endtime="20210202 14:52:24.216" starttime="20210202 14:52:24.212"></status>
</kw>
<msg timestamp="20210202 14:52:24.216" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:52:24.216" starttime="20210202 14:52:24.211"></status>
</kw>
<msg timestamp="20210202 14:52:24.216" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:52:24.216" starttime="20210202 14:52:24.210"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} pi -D fs.defaultFS=${root} 3 3</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:52:24.220" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar pi -D fs.defaultFS=o3fs://bucket1.volume1.om/ 3 3 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:53:01.353" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:53:01.353" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:52:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:52:26 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 14:53:01.353" starttime="20210202 14:52:24.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:53:01.354" level="INFO">Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:52:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:52:26 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:52:26 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:52:26 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:52:26 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-95ECEA20C59B-&gt;39f02d01-e247-4ee5-b934-51fda59de106
2021-02-02 14:52:26 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #0
2021-02-02 14:52:27 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-8461A36AB254-&gt;882e6aa0-0436-4beb-aa42-b8909bc8dba8
2021-02-02 14:52:27 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
Wrote input for Map #1
Wrote input for Map #2
Starting Job
2021-02-02 14:52:27 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:52:28 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:52:28 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:52:28 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277456254_0001
2021-02-02 14:52:28 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:52:28 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 14:52:28 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 14:52:29 INFO  YarnClientImpl:329 - Submitted application application_1612277456254_0001
2021-02-02 14:52:29 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612277456254_0001/
2021-02-02 14:52:29 INFO  Job:1614 - Running job: job_1612277456254_0001
2021-02-02 14:52:39 INFO  Job:1635 - Job job_1612277456254_0001 running in uber mode : false
2021-02-02 14:52:39 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 14:52:45 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 14:52:50 INFO  Job:1642 -  map 67% reduce 0%
2021-02-02 14:52:55 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 14:53:00 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 14:53:00 INFO  Job:1653 - Job job_1612277456254_0001 completed successfully
2021-02-02 14:53:00 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=72
		FILE: Number of bytes written=1091753
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=807
		O3FS: Number of bytes written=215
		O3FS: Number of read operations=22
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=3
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=40148
		Total time spent by all reduces in occupied slots (ms)=15704
		Total time spent by all map tasks (ms)=10037
		Total time spent by all reduce tasks (ms)=3926
		Total vcore-milliseconds taken by all map tasks=10037
		Total vcore-milliseconds taken by all reduce tasks=3926
		Total megabyte-milliseconds taken by all map tasks=41111552
		Total megabyte-milliseconds taken by all reduce tasks=16080896
	Map-Reduce Framework
		Map input records=3
		Map output records=6
		Map output bytes=54
		Map output materialized bytes=84
		Input split bytes=453
		Combine input records=0
		Combine output records=0
		Reduce input groups=2
		Reduce shuffle bytes=84
		Reduce input records=6
		Reduce output records=0
		Spilled Records=12
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=590
		CPU time spent (ms)=6520
		Physical memory (bytes) snapshot=1364512768
		Virtual memory (bytes) snapshot=15801913344
		Total committed heap usage (bytes)=1464860672
		Peak Map Physical memory (bytes)=364212224
		Peak Map Virtual memory (bytes)=3946151936
		Peak Reduce Physical memory (bytes)=401276928
		Peak Reduce Virtual memory (bytes)=3971112960
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=354
	File Output Format Counters 
		Bytes Written=97
Job Finished in 33.186 seconds
Estimated value of Pi is 3.55555555555555555556</msg>
<status status="PASS" endtime="20210202 14:53:01.354" starttime="20210202 14:53:01.353"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:53:01.354" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:53:01.355" starttime="20210202 14:53:01.354"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.355" starttime="20210202 14:52:24.217"></status>
</kw>
<msg timestamp="20210202 14:53:01.355" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:53:01.355" starttime="20210202 14:52:24.217"></status>
</kw>
<msg timestamp="20210202 14:53:01.356" level="INFO">${output} = Number of Maps  = 3
Samples per Map = 3
2021-02-02 14:52:26 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:52:26 INFO  MetricsSystemImpl:378 - Scheduled Metr...</msg>
<status status="PASS" endtime="20210202 14:53:01.356" starttime="20210202 14:52:24.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:53:01.356" starttime="20210202 14:53:01.356"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:53:01.356" critical="yes" starttime="20210202 14:52:24.197"></status>
</test>
<test id="s1-s3-s5-t2" name="Execute WordCount">
<kw name="Find example jar">
<assign>
<var>${exampleJar}</var>
</assign>
<kw name="Execute" library="os">
<arguments>
<arg>find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test</arg>
</arguments>
<assign>
<var>${jar}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:53:01.362" level="INFO">Running command 'find /opt/hadoop/share/hadoop/mapreduce/ -name "*.jar" | grep mapreduce-examples | grep -v sources | grep -v test 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:53:01.368" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:53:01.368" level="INFO">${output} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:01.368" starttime="20210202 14:53:01.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:53:01.369" level="INFO">/opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:01.369" starttime="20210202 14:53:01.369"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:53:01.370" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:53:01.370" starttime="20210202 14:53:01.369"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.370" starttime="20210202 14:53:01.360"></status>
</kw>
<msg timestamp="20210202 14:53:01.370" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:53:01.371" starttime="20210202 14:53:01.359"></status>
</kw>
<msg timestamp="20210202 14:53:01.371" level="INFO">${jar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:01.371" starttime="20210202 14:53:01.359"></status>
</kw>
<msg timestamp="20210202 14:53:01.371" level="INFO">${exampleJar} = /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar</msg>
<status status="PASS" endtime="20210202 14:53:01.371" starttime="20210202 14:53:01.358"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<assign>
<var>${random}</var>
</assign>
<msg timestamp="20210202 14:53:01.372" level="INFO">${random} = reN6DTED</msg>
<status status="PASS" endtime="20210202 14:53:01.372" starttime="20210202 14:53:01.371"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
</arguments>
<assign>
<var>${root}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:53:01.375" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:53:01.375" starttime="20210202 14:53:01.375"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:53:01.376" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:53:01.376" starttime="20210202 14:53:01.375"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.376" starttime="20210202 14:53:01.374"></status>
</kw>
<msg timestamp="20210202 14:53:01.376" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:53:01.377" starttime="20210202 14:53:01.374"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.377" starttime="20210202 14:53:01.373"></status>
</kw>
<msg timestamp="20210202 14:53:01.377" level="INFO">${url} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:53:01.377" starttime="20210202 14:53:01.373"></status>
</kw>
<msg timestamp="20210202 14:53:01.377" level="INFO">${root} = o3fs://bucket1.volume1.om/</msg>
<status status="PASS" endtime="20210202 14:53:01.377" starttime="20210202 14:53:01.372"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>input/</arg>
</arguments>
<assign>
<var>${dir}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:53:01.382" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:53:01.382" starttime="20210202 14:53:01.381"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:53:01.383" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:53:01.383" starttime="20210202 14:53:01.382"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.383" starttime="20210202 14:53:01.380"></status>
</kw>
<msg timestamp="20210202 14:53:01.383" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:53:01.383" starttime="20210202 14:53:01.380"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.384" starttime="20210202 14:53:01.379"></status>
</kw>
<msg timestamp="20210202 14:53:01.384" level="INFO">${url} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 14:53:01.384" starttime="20210202 14:53:01.378"></status>
</kw>
<msg timestamp="20210202 14:53:01.384" level="INFO">${dir} = o3fs://bucket1.volume1.om/input/</msg>
<status status="PASS" endtime="20210202 14:53:01.384" starttime="20210202 14:53:01.377"></status>
</kw>
<kw name="Format FS URL" library="fs">
<arguments>
<arg>${SCHEME}</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>wordcount-${random}.txt</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${scheme}' == 'o3fs'</arg>
<arg>Format o3fs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE IF</arg>
<arg>'${scheme}' == 'ofs'</arg>
<arg>Format ofs URL</arg>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
<arg>ELSE</arg>
<arg>Fail</arg>
<arg>Unsupported FS scheme: ${scheme}</arg>
</arguments>
<assign>
<var>${url}</var>
</assign>
<kw name="Format o3fs URL" library="fs">
<arguments>
<arg>${volume}</arg>
<arg>${bucket}</arg>
<arg>${path}</arg>
</arguments>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${om}' != '${EMPTY}'</arg>
<arg>Ensure Leading</arg>
<arg>.</arg>
<arg>${om}</arg>
<arg>ELSE</arg>
<arg>Set Variable</arg>
<arg>${EMPTY}</arg>
</arguments>
<assign>
<var>${om_with_leading}</var>
</assign>
<kw name="Ensure Leading" library="string">
<arguments>
<arg>.</arg>
<arg>${om}</arg>
</arguments>
<kw name="Get Substring" library="String">
<doc>Returns a substring from ``start`` index to ``end`` index.</doc>
<arguments>
<arg>${string}</arg>
<arg>0</arg>
<arg>1</arg>
</arguments>
<assign>
<var>${first}</var>
</assign>
<msg timestamp="20210202 14:53:01.388" level="INFO">${first} = o</msg>
<status status="PASS" endtime="20210202 14:53:01.388" starttime="20210202 14:53:01.388"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>'${first}' == '${char}'</arg>
<arg>${string}</arg>
<arg>${char}${string}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20210202 14:53:01.389" level="INFO">${result} = .om</msg>
<status status="PASS" endtime="20210202 14:53:01.389" starttime="20210202 14:53:01.388"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.389" starttime="20210202 14:53:01.387"></status>
</kw>
<msg timestamp="20210202 14:53:01.389" level="INFO">${om_with_leading} = .om</msg>
<status status="PASS" endtime="20210202 14:53:01.389" starttime="20210202 14:53:01.387"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:01.390" starttime="20210202 14:53:01.386"></status>
</kw>
<msg timestamp="20210202 14:53:01.390" level="INFO">${url} = o3fs://bucket1.volume1.om/wordcount-reN6DTED.txt</msg>
<status status="PASS" endtime="20210202 14:53:01.390" starttime="20210202 14:53:01.385"></status>
</kw>
<msg timestamp="20210202 14:53:01.390" level="INFO">${result} = o3fs://bucket1.volume1.om/wordcount-reN6DTED.txt</msg>
<status status="PASS" endtime="20210202 14:53:01.390" starttime="20210202 14:53:01.384"></status>
</kw>
<kw name="Execute" library="os">
<arguments>
<arg>yarn jar ${exampleJar} wordcount -D fs.defaultFS=${root} ${dir} ${result}</arg>
</arguments>
<assign>
<var>${output}</var>
</assign>
<kw name="Run Keyword And Return" library="BuiltIn">
<doc>Runs the specified keyword and returns from the enclosing user keyword.</doc>
<arguments>
<arg>Execute and checkrc</arg>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Execute and checkrc" library="os">
<arguments>
<arg>${command}</arg>
<arg>0</arg>
</arguments>
<kw name="Run And Return Rc And Output" library="OperatingSystem">
<doc>Runs the given command in the system and returns the RC and output.</doc>
<arguments>
<arg>${command}</arg>
</arguments>
<assign>
<var>${rc}</var>
<var>${output}</var>
</assign>
<msg timestamp="20210202 14:53:01.393" level="INFO">Running command 'yarn jar /opt/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-3.2.2.jar wordcount -D fs.defaultFS=o3fs://bucket1.volume1.om/ o3fs://bucket1.volume1.om/input/ o3fs://bucket1.volume1.om/wordcount-reN6DTED.txt 2&gt;&amp;1'.</msg>
<msg timestamp="20210202 14:53:37.403" level="INFO">${rc} = 0</msg>
<msg timestamp="20210202 14:53:37.403" level="INFO">${output} = 2021-02-02 14:53:03 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:53:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210202 14:53:37.403" starttime="20210202 14:53:01.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${output}</arg>
</arguments>
<msg timestamp="20210202 14:53:37.404" level="INFO">2021-02-02 14:53:03 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:53:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging are incorrect: rwxrwxrwx. Fixing permissions to correct value rwx------
2021-02-02 14:53:03 INFO  MetricsConfig:120 - Loaded properties from hadoop-metrics2.properties
2021-02-02 14:53:03 INFO  MetricsSystemImpl:378 - Scheduled Metric snapshot period at 10 second(s).
2021-02-02 14:53:03 INFO  MetricsSystemImpl:191 - XceiverClientMetrics metrics system started
2021-02-02 14:53:04 INFO  MetricRegistries:64 - Loaded MetricRegistries class org.apache.ratis.metrics.impl.MetricRegistriesImpl
2021-02-02 14:53:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-EAD299E73884-&gt;882e6aa0-0436-4beb-aa42-b8909bc8dba8
2021-02-02 14:53:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:53:04 INFO  FileInputFormat:292 - Total input files to process : 3
2021-02-02 14:53:04 INFO  RatisMetrics:36 - Creating Metrics Registry : ratis.client_message_metrics.client-1FD8FB6342B7-&gt;39f02d01-e247-4ee5-b934-51fda59de106
2021-02-02 14:53:04 WARN  MetricRegistriesImpl:65 - First MetricRegistry has been created without registering reporters. You may need to call MetricRegistries.global().addReporterRegistration(...) before.
2021-02-02 14:53:05 INFO  JobSubmitter:202 - number of splits:3
2021-02-02 14:53:05 INFO  JobSubmitter:298 - Submitting tokens for job: job_1612277456254_0002
2021-02-02 14:53:05 INFO  JobSubmitter:299 - Executing with tokens: []
2021-02-02 14:53:05 INFO  Configuration:2795 - resource-types.xml not found
2021-02-02 14:53:05 INFO  ResourceUtils:442 - Unable to find 'resource-types.xml'.
2021-02-02 14:53:05 INFO  YarnClientImpl:329 - Submitted application application_1612277456254_0002
2021-02-02 14:53:05 INFO  Job:1569 - The url to track the job: http://rm:8088/proxy/application_1612277456254_0002/
2021-02-02 14:53:05 INFO  Job:1614 - Running job: job_1612277456254_0002
2021-02-02 14:53:13 INFO  Job:1635 - Job job_1612277456254_0002 running in uber mode : false
2021-02-02 14:53:13 INFO  Job:1642 -  map 0% reduce 0%
2021-02-02 14:53:20 INFO  Job:1642 -  map 33% reduce 0%
2021-02-02 14:53:25 INFO  Job:1642 -  map 67% reduce 0%
2021-02-02 14:53:31 INFO  Job:1642 -  map 100% reduce 0%
2021-02-02 14:53:35 INFO  Job:1642 -  map 100% reduce 100%
2021-02-02 14:53:36 INFO  Job:1653 - Job job_1612277456254_0002 completed successfully
2021-02-02 14:53:37 INFO  Job:1660 - Counters: 53
	File System Counters
		FILE: Number of bytes read=32023
		FILE: Number of bytes written=1154315
		FILE: Number of read operations=0
		FILE: Number of large read operations=0
		FILE: Number of write operations=0
		O3FS: Number of bytes read=39717
		O3FS: Number of bytes written=22203
		O3FS: Number of read operations=19
		O3FS: Number of large read operations=0
		O3FS: Number of write operations=2
	Job Counters 
		Launched map tasks=3
		Launched reduce tasks=1
		Rack-local map tasks=3
		Total time spent by all maps in occupied slots (ms)=41180
		Total time spent by all reduces in occupied slots (ms)=15080
		Total time spent by all map tasks (ms)=10295
		Total time spent by all reduce tasks (ms)=3770
		Total vcore-milliseconds taken by all map tasks=10295
		Total vcore-milliseconds taken by all reduce tasks=3770
		Total megabyte-milliseconds taken by all map tasks=42168320
		Total megabyte-milliseconds taken by all reduce tasks=15441920
	Map-Reduce Framework
		Map input records=1052
		Map output records=4514
		Map output bytes=55079
		Map output materialized bytes=32035
		Input split bytes=303
		Combine input records=4514
		Combine output records=1803
		Reduce input groups=1539
		Reduce shuffle bytes=32035
		Reduce input records=1803
		Reduce output records=1539
		Spilled Records=3606
		Shuffled Maps =3
		Failed Shuffles=0
		Merged Map outputs=3
		GC time elapsed (ms)=571
		CPU time spent (ms)=7200
		Physical memory (bytes) snapshot=1216925696
		Virtual memory (bytes) snapshot=15812952064
		Total committed heap usage (bytes)=1072693248
		Peak Map Physical memory (bytes)=305184768
		Peak Map Virtual memory (bytes)=3949039616
		Peak Reduce Physical memory (bytes)=307912704
		Peak Reduce Virtual memory (bytes)=3971399680
	Shuffle Errors
		BAD_ID=0
		CONNECTION=0
		IO_ERROR=0
		WRONG_LENGTH=0
		WRONG_MAP=0
		WRONG_REDUCE=0
	File Input Format Counters 
		Bytes Read=39414
	File Output Format Counters 
		Bytes Written=22203</msg>
<status status="PASS" endtime="20210202 14:53:37.404" starttime="20210202 14:53:37.403"></status>
</kw>
<kw name="Should Be Equal As Integers" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to integers.</doc>
<arguments>
<arg>${rc}</arg>
<arg>${expected_error_code}</arg>
</arguments>
<msg timestamp="20210202 14:53:37.405" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;type 'unicode'&gt;</msg>
<status status="PASS" endtime="20210202 14:53:37.405" starttime="20210202 14:53:37.405"></status>
</kw>
<status status="PASS" endtime="20210202 14:53:37.406" starttime="20210202 14:53:01.391"></status>
</kw>
<msg timestamp="20210202 14:53:37.406" level="INFO">Returning from the enclosing user keyword.</msg>
<status status="PASS" endtime="20210202 14:53:37.406" starttime="20210202 14:53:01.391"></status>
</kw>
<msg timestamp="20210202 14:53:37.406" level="INFO">${output} = 2021-02-02 14:53:03 INFO  RMProxy:134 - Connecting to ResourceManager at rm/172.23.0.7:8032
2021-02-02 14:53:03 INFO  JobSubmissionFiles:156 - Permissions on staging directory /user/hadoop/.staging ar...</msg>
<status status="PASS" endtime="20210202 14:53:37.406" starttime="20210202 14:53:01.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>map tasks=3</arg>
</arguments>
<status status="PASS" endtime="20210202 14:53:37.407" starttime="20210202 14:53:37.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${output}</arg>
<arg>completed successfully</arg>
</arguments>
<status status="PASS" endtime="20210202 14:53:37.407" starttime="20210202 14:53:37.407"></status>
</kw>
<timeout value="4 minutes"></timeout>
<status status="PASS" endtime="20210202 14:53:37.408" critical="yes" starttime="20210202 14:53:01.357"></status>
</test>
<doc>Execute MR jobs</doc>
<status status="PASS" endtime="20210202 14:53:37.409" starttime="20210202 14:52:24.134"></status>
</suite>
<status status="PASS" elapsedtime="207145" endtime="N/A" starttime="N/A"></status>
</suite>
<status status="PASS" elapsedtime="597949" endtime="N/A" starttime="N/A"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="24">Critical Tests</stat>
<stat fail="0" pass="24">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="ozone-mr" pass="24">ozone-mr</stat>
<stat fail="0" id="s1-s1" name="hadoop27" pass="8">ozone-mr.hadoop27</stat>
<stat fail="0" id="s1-s1-s1" name="Createmrenv" pass="2">ozone-mr.hadoop27.Createmrenv</stat>
<stat fail="0" id="s1-s1-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop27.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s1-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop27.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s1-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop27.mapreduce-ofs</stat>
<stat fail="0" id="s1-s1-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop27.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s2" name="hadoop31" pass="8">ozone-mr.hadoop31</stat>
<stat fail="0" id="s1-s2-s1" name="Createmrenv" pass="2">ozone-mr.hadoop31.Createmrenv</stat>
<stat fail="0" id="s1-s2-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop31.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s2-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop31.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s2-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop31.mapreduce-ofs</stat>
<stat fail="0" id="s1-s2-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop31.mapreduce-o3fs</stat>
<stat fail="0" id="s1-s3" name="hadoop32" pass="8">ozone-mr.hadoop32</stat>
<stat fail="0" id="s1-s3-s1" name="Createmrenv" pass="2">ozone-mr.hadoop32.Createmrenv</stat>
<stat fail="0" id="s1-s3-s2" name="hadoopfs-ofs" pass="1">ozone-mr.hadoop32.hadoopfs-ofs</stat>
<stat fail="0" id="s1-s3-s3" name="hadoopfs-o3fs" pass="1">ozone-mr.hadoop32.hadoopfs-o3fs</stat>
<stat fail="0" id="s1-s3-s4" name="mapreduce-ofs" pass="2">ozone-mr.hadoop32.mapreduce-ofs</stat>
<stat fail="0" id="s1-s3-s5" name="mapreduce-o3fs" pass="2">ozone-mr.hadoop32.mapreduce-o3fs</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
